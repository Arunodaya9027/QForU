/*
Navicat MySQL Data Transfer

Source Server         : arunodaya
Source Server Version : 80033
Source Host           : localhost:3306
Source Database       : collections

Target Server Type    : MYSQL
Target Server Version : 80033
File Encoding         : 65001

Date: 2023-07-25 13:10:41
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `question_master_detail_coding_temp`
-- ----------------------------
DROP TABLE IF EXISTS `question_master_detail_coding_temp`;
CREATE TABLE `question_master_detail_coding_temp` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `Question_Id` bigint DEFAULT NULL,
  `ExampleNo` int DEFAULT NULL,
  `Input` longtext,
  `ExpectedOutput` longtext,
  `Explanation` longtext,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5319 DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of question_master_detail_coding_temp
-- ----------------------------
INSERT INTO `question_master_detail_coding_temp` VALUES ('1', '1', '1', 'nums = [2,7,11,15], target = 9', '[0,1]', 'Because nums[0] + nums[1] == 9, we return [0, 1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2', '1', '2', 'nums = [3,2,4], target = 6', '[1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3', '1', '3', 'nums = [3,3], target = 6', '[0,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4', '2', '1', 'l1 = [2,4,3], l2 = [5,6,4]', '[7,0,8]', '342 + 465 = 807.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5', '2', '2', 'l1 = [0], l2 = [0]', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('6', '2', '3', 'l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]', '[8,9,9,9,0,0,0,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('7', '3', '1', 's = \"abcabcbb\"', '3', 'The answer is \"abc\", with the length of 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('8', '3', '2', 's = \"bbbbb\"', '1', 'The answer is \"b\", with the length of 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('9', '3', '3', 's = \"pwwkew\"', '3', 'The answer is \"wke\", with the length of 3.\nNotice that the answer must be a substring, \"pwke\" is a subsequence and not a substring.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('10', '4', '1', 'nums1 = [1,3], nums2 = [2]', '2.00000', 'merged array = [1,2,3] and median is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('11', '4', '2', 'nums1 = [1,2], nums2 = [3,4]', '2.50000', 'merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('12', '5', '1', 's = \"babad\"', '\"bab\"', '\"aba\" is also a valid answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('13', '5', '2', 's = \"cbbd\"', '\"bb\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('14', '6', '1', 's = \"PAYPALISHIRING\", numRows = 3', '\"PAHNAPLSIIGYIR\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('15', '6', '2', 's = \"PAYPALISHIRING\", numRows = 4', '\"PINALSIGYAHRPI\"', 'P     I    N\nA   L S  I G\nY A   H R\nP     I');
INSERT INTO `question_master_detail_coding_temp` VALUES ('16', '6', '3', 's = \"A\", numRows = 1', '\"A\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('17', '7', '1', 'x = 123', '321', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('18', '7', '2', 'x = -123', '-321', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('19', '7', '3', 'x = 120', '21', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('20', '8', '1', 's = \"42\"', '42', 'The underlined characters are what is read in, the caret is the current reader position.\nStep 1: \"42\" (no characters read because there is no leading whitespace)\n         ^\nStep 2: \"42\" (no characters read because there is neither a \'-\' nor \'+\')\n         ^\nStep 3: \"<u>42</u>\" (\"42\" is read in)\n           ^\nThe parsed integer is 42.\nSince 42 is in the range [-2<sup>31</sup>, 2<sup>31</sup> - 1], the final result is 42.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('21', '8', '2', 's = \"   -42\"', '-42', 'Step 1: \"<u>   </u>-42\" (leading whitespace is read and ignored)\n            ^\nStep 2: \"   <u>-</u>42\" (\'-\' is read, so the result should be negative)\n             ^\nStep 3: \"   -<u>42</u>\" (\"42\" is read in)\n               ^\nThe parsed integer is -42.\nSince -42 is in the range [-2<sup>31</sup>, 2<sup>31</sup> - 1], the final result is -42.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('22', '8', '3', 's = \"4193 with words\"', '4193', 'Step 1: \"4193 with words\" (no characters read because there is no leading whitespace)\n         ^\nStep 2: \"4193 with words\" (no characters read because there is neither a \'-\' nor \'+\')\n         ^\nStep 3: \"<u>4193</u> with words\" (\"4193\" is read in; reading stops because the next character is a non-digit)\n             ^\nThe parsed integer is 4193.\nSince 4193 is in the range [-2<sup>31</sup>, 2<sup>31</sup> - 1], the final result is 4193.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('23', '9', '1', 'x = 121', 'true', '121 reads as 121 from left to right and from right to left.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('24', '9', '2', 'x = -121', 'false', 'From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('25', '9', '3', 'x = 10', 'false', 'Reads 01 from right to left. Therefore it is not a palindrome.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('26', '10', '1', 's = \"aa\", p = \"a\"', 'false', '\"a\" does not match the entire string \"aa\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('27', '10', '2', 's = \"aa\", p = \"a*\"', 'true', '\'*\' means zero or more of the preceding element, \'a\'. Therefore, by repeating \'a\' once, it becomes \"aa\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('28', '10', '3', 's = \"ab\", p = \".*\"', 'true', '\".*\" means \"zero or more (*) of any character (.)\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('29', '11', '1', 'height = [1,8,6,2,5,4,8,3,7]', '49', 'The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('30', '11', '2', 'height = [1,1]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('31', '12', '1', 'num = 3', '\"III\"', '3 is represented as 3 ones.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('32', '12', '2', 'num = 58', '\"LVIII\"', 'L = 50, V = 5, III = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('33', '12', '3', 'num = 1994', '\"MCMXCIV\"', 'M = 1000, CM = 900, XC = 90 and IV = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('34', '13', '1', 's = \"III\"', '3', 'III = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('35', '13', '2', 's = \"LVIII\"', '58', 'L = 50, V= 5, III = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('36', '13', '3', 's = \"MCMXCIV\"', '1994', 'M = 1000, CM = 900, XC = 90 and IV = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('37', '14', '1', 'strs = [\"flower\",\"flow\",\"flight\"]', '\"fl\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('38', '14', '2', 'strs = [\"dog\",\"racecar\",\"car\"]', '\"\"', 'There is no common prefix among the input strings.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('39', '15', '1', 'nums = [-1,0,1,2,-1,-4]', '[[-1,-1,2],[-1,0,1]]', 'nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.\nnums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.\nnums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.\nThe distinct triplets are [-1,0,1] and [-1,-1,2].\nNotice that the order of the output and the order of the triplets does not matter.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('40', '15', '2', 'nums = [0,1,1]', '[]', 'The only possible triplet does not sum up to 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('41', '15', '3', 'nums = [0,0,0]', '[[0,0,0]]', 'The only possible triplet sums up to 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('42', '16', '1', 'nums = [-1,2,1,-4], target = 1', '2', 'The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('43', '16', '2', 'nums = [0,0,0], target = 1', '0', 'The sum that is closest to the target is 0. (0 + 0 + 0 = 0).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('44', '17', '1', 'digits = \"23\"', '[\"ad\",\"ae\",\"af\",\"bd\",\"be\",\"bf\",\"cd\",\"ce\",\"cf\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('45', '17', '2', 'digits = \"\"', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('46', '17', '3', 'digits = \"2\"', '[\"a\",\"b\",\"c\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('47', '18', '1', 'nums = [1,0,-1,0,-2,2], target = 0', '[[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('48', '18', '2', 'nums = [2,2,2,2,2], target = 8', '[[2,2,2,2]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('49', '19', '1', 'head = [1,2,3,4,5], n = 2', '[1,2,3,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('50', '19', '2', 'head = [1], n = 1', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('51', '19', '3', 'head = [1,2], n = 1', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('52', '20', '1', 's = \"()\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('53', '20', '2', 's = \"()[]{}\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('54', '20', '3', 's = \"(]\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('55', '21', '1', 'list1 = [1,2,4], list2 = [1,3,4]', '[1,1,2,3,4,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('56', '21', '2', 'list1 = [], list2 = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('57', '21', '3', 'list1 = [], list2 = [0]', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('58', '22', '1', 'n = 3', '[\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('59', '22', '2', 'n = 1', '[\"()\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('60', '23', '1', 'lists = [[1,4,5],[1,3,4],[2,6]]', '[1,1,2,3,4,4,5,6]', 'The linked-lists are:\n[\n  1-&gt;4-&gt;5,\n  1-&gt;3-&gt;4,\n  2-&gt;6\n]\nmerging them into one sorted list:\n1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6');
INSERT INTO `question_master_detail_coding_temp` VALUES ('61', '23', '2', 'lists = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('62', '23', '3', 'lists = [[]]', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('63', '24', '1', 'head = [1,2,3,4]', '[2,1,4,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('64', '24', '2', 'head = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('65', '24', '3', 'head = [1]', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('66', '25', '1', 'head = [1,2,3,4,5], k = 2', '[2,1,4,3,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('67', '25', '2', 'head = [1,2,3,4,5], k = 3', '[3,2,1,4,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('68', '26', '1', 'nums = [1,1,2]', '2, nums = [1,2,_]', 'Your function should return k = 2, with the first two elements of nums being 1 and 2 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('69', '26', '2', 'nums = [0,0,1,1,1,2,2,3,3,4]', '5, nums = [0,1,2,3,4,_,_,_,_,_]', 'Your function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('70', '27', '1', 'nums = [3,2,2,3], val = 3', '2, nums = [2,2,_,_]', 'Your function should return k = 2, with the first two elements of nums being 2.\nIt does not matter what you leave beyond the returned k (hence they are underscores).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('71', '27', '2', 'nums = [0,1,2,2,3,0,4,2], val = 2', '5, nums = [0,1,4,0,3,_,_,_]', 'Your function should return k = 5, with the first five elements of nums containing 0, 0, 1, 3, and 4.\nNote that the five elements can be returned in any order.\nIt does not matter what you leave beyond the returned k (hence they are underscores).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('72', '28', '1', 'haystack = \"sadbutsad\", needle = \"sad\"', '0', '\"sad\" occurs at index 0 and 6.\nThe first occurrence is at index 0, so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('73', '28', '2', 'haystack = \"leetcode\", needle = \"leeto\"', '-1', '\"leeto\" did not occur in \"leetcode\", so we return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('74', '29', '1', 'dividend = 10, divisor = 3', '3', '10/3 = 3.33333.. which is truncated to 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('75', '29', '2', 'dividend = 7, divisor = -3', '-2', '7/-3 = -2.33333.. which is truncated to -2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('76', '30', '1', 's = \"barfoothefoobarman\", words = [\"foo\",\"bar\"]', '[0,9]', 'Since words.length == 2 and words[i].length == 3, the concatenated substring has to be of length 6.\nThe substring starting at 0 is \"barfoo\". It is the concatenation of [\"bar\",\"foo\"] which is a permutation of words.\nThe substring starting at 9 is \"foobar\". It is the concatenation of [\"foo\",\"bar\"] which is a permutation of words.\nThe output order does not matter. Returning [9,0] is fine too.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('77', '30', '2', 's = \"wordgoodgoodgoodbestword\", words = [\"word\",\"good\",\"best\",\"word\"]', '[]', 'Since words.length == 4 and words[i].length == 4, the concatenated substring has to be of length 16.\nThere is no substring of length 16 is s that is equal to the concatenation of any permutation of words.\nWe return an empty array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('78', '30', '3', 's = \"barfoofoobarthefoobarman\", words = [\"bar\",\"foo\",\"the\"]', '[6,9,12]', 'Since words.length == 3 and words[i].length == 3, the concatenated substring has to be of length 9.\nThe substring starting at 6 is \"foobarthe\". It is the concatenation of [\"foo\",\"bar\",\"the\"] which is a permutation of words.\nThe substring starting at 9 is \"barthefoo\". It is the concatenation of [\"bar\",\"the\",\"foo\"] which is a permutation of words.\nThe substring starting at 12 is \"thefoobar\". It is the concatenation of [\"the\",\"foo\",\"bar\"] which is a permutation of words.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('79', '31', '1', 'nums = [1,2,3]', '[1,3,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('80', '31', '2', 'nums = [3,2,1]', '[1,2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('81', '31', '3', 'nums = [1,1,5]', '[1,5,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('82', '32', '1', 's = \"(()\"', '2', 'The longest valid parentheses substring is \"()\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('83', '32', '2', 's = \")()())\"', '4', 'The longest valid parentheses substring is \"()()\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('84', '32', '3', 's = \"\"', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('85', '33', '1', 'nums = [4,5,6,7,0,1,2], target = 0', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('86', '33', '2', 'nums = [4,5,6,7,0,1,2], target = 3', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('87', '33', '3', 'nums = [1], target = 0', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('88', '34', '1', 'nums = [5,7,7,8,8,10], target = 8', '[3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('89', '34', '2', 'nums = [5,7,7,8,8,10], target = 6', '[-1,-1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('90', '34', '3', 'nums = [], target = 0', '[-1,-1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('91', '35', '1', 'nums = [1,3,5,6], target = 5', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('92', '35', '2', 'nums = [1,3,5,6], target = 2', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('93', '35', '3', 'nums = [1,3,5,6], target = 7', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('94', '36', '1', 'board = \n[[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"]\n,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"]\n,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"]\n,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"]\n,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"]\n,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"]\n,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"]\n,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"]\n,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('95', '36', '2', 'board = \n[[\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"]\n,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"]\n,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"]\n,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"]\n,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"]\n,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"]\n,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"]\n,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"]\n,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]', 'false', 'Same as Example 1, except with the <strong>5</strong> in the top left corner being modified to <strong>8</strong>. Since there are two 8\'s in the top left 3x3 sub-box, it is invalid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('96', '37', '1', 'board = [[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"],[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"],[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"],[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"],[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"],[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"],[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"],[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"],[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]', '[[\"5\",\"3\",\"4\",\"6\",\"7\",\"8\",\"9\",\"1\",\"2\"],[\"6\",\"7\",\"2\",\"1\",\"9\",\"5\",\"3\",\"4\",\"8\"],[\"1\",\"9\",\"8\",\"3\",\"4\",\"2\",\"5\",\"6\",\"7\"],[\"8\",\"5\",\"9\",\"7\",\"6\",\"1\",\"4\",\"2\",\"3\"],[\"4\",\"2\",\"6\",\"8\",\"5\",\"3\",\"7\",\"9\",\"1\"],[\"7\",\"1\",\"3\",\"9\",\"2\",\"4\",\"8\",\"5\",\"6\"],[\"9\",\"6\",\"1\",\"5\",\"3\",\"7\",\"2\",\"8\",\"4\"],[\"2\",\"8\",\"7\",\"4\",\"1\",\"9\",\"6\",\"3\",\"5\"],[\"3\",\"4\",\"5\",\"2\",\"8\",\"6\",\"1\",\"7\",\"9\"]]', 'The input board is shown above and the only valid solution is shown below:\n\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Sudoku-by-L2G-20050714_solution.svg/250px-Sudoku-by-L2G-20050714_solution.svg.png\" style=\"height:250px;width:250px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('97', '38', '1', 'n = 1', '\"1\"', 'This is the base case.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('98', '38', '2', 'n = 4', '\"1211\"', 'countAndSay(1) = \"1\"\ncountAndSay(2) = say \"1\" = one 1 = \"11\"\ncountAndSay(3) = say \"11\" = two 1\'s = \"21\"\ncountAndSay(4) = say \"21\" = one 2 + one 1 = \"12\" + \"11\" = \"1211\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('99', '39', '1', 'candidates = [2,3,6,7], target = 7', '[[2,2,3],[7]]', '2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.\n7 is a candidate, and 7 = 7.\nThese are the only two combinations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('100', '39', '2', 'candidates = [2,3,5], target = 8', '[[2,2,2,2],[2,3,3],[3,5]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('101', '39', '3', 'candidates = [2], target = 1', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('102', '40', '1', 'candidates = [10,1,2,7,6,1,5], target = 8', '[\n[1,1,6],\n[1,2,5],\n[1,7],\n[2,6]\n]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('103', '40', '2', 'candidates = [2,5,2,1,2], target = 5', '[\n[1,2,2],\n[5]\n]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('104', '41', '1', 'nums = [1,2,0]', '3', 'The numbers in the range [1,2] are all in the array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('105', '41', '2', 'nums = [3,4,-1,1]', '2', '1 is in the array but 2 is missing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('106', '41', '3', 'nums = [7,8,9,11,12]', '1', 'The smallest positive integer 1 is missing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('107', '42', '1', 'height = [0,1,0,2,1,0,1,3,2,1,2,1]', '6', 'The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('108', '42', '2', 'height = [4,2,0,3,2,5]', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('109', '43', '1', 'num1 = \"2\", num2 = \"3\"', '\"6\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('110', '43', '2', 'num1 = \"123\", num2 = \"456\"', '\"56088\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('111', '44', '1', 's = \"aa\", p = \"a\"', 'false', '\"a\" does not match the entire string \"aa\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('112', '44', '2', 's = \"aa\", p = \"*\"', 'true', '\'*\' matches any sequence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('113', '44', '3', 's = \"cb\", p = \"?a\"', 'false', '\'?\' matches \'c\', but the second letter is \'a\', which does not match \'b\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('114', '45', '1', 'nums = [2,3,1,1,4]', '2', 'The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('115', '45', '2', 'nums = [2,3,0,1,4]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('116', '46', '1', 'nums = [1,2,3]', '[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('117', '46', '2', 'nums = [0,1]', '[[0,1],[1,0]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('118', '46', '3', 'nums = [1]', '[[1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('119', '48', '1', 'matrix = [[1,2,3],[4,5,6],[7,8,9]]', '[[7,4,1],[8,5,2],[9,6,3]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('120', '48', '2', 'matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]', '[[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('121', '49', '1', 'strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]', '[[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('122', '49', '2', 'strs = [\"\"]', '[[\"\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('123', '49', '3', 'strs = [\"a\"]', '[[\"a\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('124', '50', '1', 'x = 2.00000, n = 10', '1024.00000', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('125', '50', '2', 'x = 2.10000, n = 3', '9.26100', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('126', '50', '3', 'x = 2.00000, n = -2', '0.25000', '2<sup>-2</sup> = 1/2<sup>2</sup> = 1/4 = 0.25');
INSERT INTO `question_master_detail_coding_temp` VALUES ('127', '51', '1', 'n = 4', '[[\".Q..\",\"...Q\",\"Q...\",\"..Q.\"],[\"..Q.\",\"Q...\",\"...Q\",\".Q..\"]]', 'There exist two distinct solutions to the 4-queens puzzle as shown above');
INSERT INTO `question_master_detail_coding_temp` VALUES ('128', '51', '2', 'n = 1', '[[\"Q\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('129', '52', '1', 'n = 4', '2', 'There are two distinct solutions to the 4-queens puzzle as shown.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('130', '52', '2', 'n = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('131', '53', '1', 'nums = [-2,1,-3,4,-1,2,1,-5,4]', '6', 'The subarray [4,-1,2,1] has the largest sum 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('132', '53', '2', 'nums = [1]', '1', 'The subarray [1] has the largest sum 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('133', '53', '3', 'nums = [5,4,-1,7,8]', '23', 'The subarray [5,4,-1,7,8] has the largest sum 23.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('134', '54', '1', 'matrix = [[1,2,3],[4,5,6],[7,8,9]]', '[1,2,3,6,9,8,7,4,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('135', '54', '2', 'matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]', '[1,2,3,4,8,12,11,10,9,5,6,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('136', '55', '1', 'nums = [2,3,1,1,4]', 'true', 'Jump 1 step from index 0 to 1, then 3 steps to the last index.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('137', '55', '2', 'nums = [3,2,1,0,4]', 'false', 'You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('138', '56', '1', 'intervals = [[1,3],[2,6],[8,10],[15,18]]', '[[1,6],[8,10],[15,18]]', 'Since intervals [1,3] and [2,6] overlap, merge them into [1,6].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('139', '56', '2', 'intervals = [[1,4],[4,5]]', '[[1,5]]', 'Intervals [1,4] and [4,5] are considered overlapping.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('140', '57', '1', 'intervals = [[1,3],[6,9]], newInterval = [2,5]', '[[1,5],[6,9]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('141', '57', '2', 'intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]', '[[1,2],[3,10],[12,16]]', 'Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('142', '58', '1', 's = \"Hello World\"', '5', 'The last word is \"World\" with length 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('143', '58', '2', 's = \"   fly me   to   the moon  \"', '4', 'The last word is \"moon\" with length 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('144', '58', '3', 's = \"luffy is still joyboy\"', '6', 'The last word is \"joyboy\" with length 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('145', '59', '1', 'n = 3', '[[1,2,3],[8,9,4],[7,6,5]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('146', '59', '2', 'n = 1', '[[1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('147', '60', '1', 'n = 3, k = 3', '\"213\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('148', '60', '2', 'n = 4, k = 9', '\"2314\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('149', '60', '3', 'n = 3, k = 1', '\"123\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('150', '61', '1', 'head = [1,2,3,4,5], k = 2', '[4,5,1,2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('151', '61', '2', 'head = [0,1,2], k = 4', '[2,0,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('152', '62', '1', 'm = 3, n = 7', '28', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('153', '62', '2', 'm = 3, n = 2', '3', 'From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -&gt; Down -&gt; Down\n2. Down -&gt; Down -&gt; Right\n3. Down -&gt; Right -&gt; Down');
INSERT INTO `question_master_detail_coding_temp` VALUES ('154', '63', '1', 'obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]', '2', 'There is one obstacle in the middle of the 3x3 grid above.\nThere are two ways to reach the bottom-right corner:\n1. Right -&gt; Right -&gt; Down -&gt; Down\n2. Down -&gt; Down -&gt; Right -&gt; Right');
INSERT INTO `question_master_detail_coding_temp` VALUES ('155', '63', '2', 'obstacleGrid = [[0,1],[0,0]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('156', '64', '2', 'grid = [[1,2,3],[4,5,6]]', '12', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('157', '65', '1', 's = \"0\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('158', '65', '2', 's = \"e\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('159', '65', '3', 's = \".\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('160', '66', '1', 'digits = [1,2,3]', '[1,2,4]', 'The array represents the integer 123.\nIncrementing by one gives 123 + 1 = 124.\nThus, the result should be [1,2,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('161', '66', '2', 'digits = [4,3,2,1]', '[4,3,2,2]', 'The array represents the integer 4321.\nIncrementing by one gives 4321 + 1 = 4322.\nThus, the result should be [4,3,2,2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('162', '66', '3', 'digits = [9]', '[1,0]', 'The array represents the integer 9.\nIncrementing by one gives 9 + 1 = 10.\nThus, the result should be [1,0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('163', '67', '1', 'a = \"11\", b = \"1\"', '\"100\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('164', '67', '2', 'a = \"1010\", b = \"1011\"', '\"10101\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('165', '68', '1', 'words = [\"This\", \"is\", \"an\", \"example\", \"of\", \"text\", \"justification.\"], maxWidth = 16', '[\n   \"This    is    an\",\n   \"example  of text\",\n   \"justification.  \"\n]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('166', '68', '2', 'words = [\"What\",\"must\",\"be\",\"acknowledgment\",\"shall\",\"be\"], maxWidth = 16', '[\n  \"What   must   be\",\n  \"acknowledgment  \",\n  \"shall be        \"\n]', 'Note that the last line is \"shall be    \" instead of \"shall     be\", because the last line must be left-justified instead of fully-justified.\nNote that the second line is also left-justified because it contains only one word.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('167', '68', '3', 'words = [\"Science\",\"is\",\"what\",\"we\",\"understand\",\"well\",\"enough\",\"to\",\"explain\",\"to\",\"a\",\"computer.\",\"Art\",\"is\",\"everything\",\"else\",\"we\",\"do\"], maxWidth = 20', '[\n  \"Science  is  what we\",\n  \"understand      well\",\n  \"enough to explain to\",\n  \"a  computer.  Art is\",\n  \"everything  else  we\",\n  \"do                  \"\n]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('168', '69', '1', 'x = 4', '2', 'The square root of 4 is 2, so we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('169', '69', '2', 'x = 8', '2', 'The square root of 8 is 2.82842..., and since we round it down to the nearest integer, 2 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('170', '70', '1', 'n = 2', '2', 'There are two ways to climb to the top.\n1. 1 step + 1 step\n2. 2 steps');
INSERT INTO `question_master_detail_coding_temp` VALUES ('171', '70', '2', 'n = 3', '3', 'There are three ways to climb to the top.\n1. 1 step + 1 step + 1 step\n2. 1 step + 2 steps\n3. 2 steps + 1 step');
INSERT INTO `question_master_detail_coding_temp` VALUES ('172', '71', '1', 'path = \"/home/\"', '\"/home\"', 'Note that there is no trailing slash after the last directory name.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('173', '71', '2', 'path = \"/../\"', '\"/\"', 'Going one level up from the root directory is a no-op, as the root level is the highest level you can go.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('174', '71', '3', 'path = \"/home//foo/\"', '\"/home/foo\"', 'In the canonical path, multiple consecutive slashes are replaced by a single one.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('175', '72', '1', 'word1 = \"horse\", word2 = \"ros\"', '3', 'horse -&gt; rorse (replace \'h\' with \'r\')\nrorse -&gt; rose (remove \'r\')\nrose -&gt; ros (remove \'e\')');
INSERT INTO `question_master_detail_coding_temp` VALUES ('176', '72', '2', 'word1 = \"intention\", word2 = \"execution\"', '5', 'intention -&gt; inention (remove \'t\')\ninention -&gt; enention (replace \'i\' with \'e\')\nenention -&gt; exention (replace \'n\' with \'x\')\nexention -&gt; exection (replace \'n\' with \'c\')\nexection -&gt; execution (insert \'u\')');
INSERT INTO `question_master_detail_coding_temp` VALUES ('177', '73', '1', 'matrix = [[1,1,1],[1,0,1],[1,1,1]]', '[[1,0,1],[0,0,0],[1,0,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('178', '73', '2', 'matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]', '[[0,0,0,0],[0,4,5,0],[0,3,1,0]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('179', '75', '1', 'nums = [2,0,2,1,1,0]', '[0,0,1,1,2,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('180', '75', '2', 'nums = [2,0,1]', '[0,1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('181', '76', '1', 's = \"ADOBECODEBANC\", t = \"ABC\"', '\"BANC\"', 'The minimum window substring \"BANC\" includes \'A\', \'B\', and \'C\' from string t.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('182', '76', '2', 's = \"a\", t = \"a\"', '\"a\"', 'The entire string s is the minimum window.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('183', '76', '3', 's = \"a\", t = \"aa\"', '\"\"', 'Both \'a\'s from t must be included in the window.\nSince the largest window of s only has one \'a\', return empty string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('184', '77', '1', 'n = 4, k = 2', '[[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]]', 'There are 4 choose 2 = 6 total combinations.\nNote that combinations are unordered, i.e., [1,2] and [2,1] are considered to be the same combination.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('185', '77', '2', 'n = 1, k = 1', '[[1]]', 'There is 1 choose 1 = 1 total combination.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('186', '78', '1', 'nums = [1,2,3]', '[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('187', '78', '2', 'nums = [0]', '[[],[0]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('188', '79', '1', 'board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('189', '79', '2', 'board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"SEE\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('190', '79', '3', 'board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCB\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('191', '80', '1', 'nums = [1,1,1,2,2,3]', '5, nums = [1,1,2,2,3,_]', 'Your function should return k = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('192', '80', '2', 'nums = [0,0,1,1,1,1,2,3,3]', '7, nums = [0,0,1,1,2,3,3,_,_]', 'Your function should return k = 7, with the first seven elements of nums being 0, 0, 1, 1, 2, 3 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('193', '81', '1', 'nums = [2,5,6,0,0,1,2], target = 0', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('194', '81', '2', 'nums = [2,5,6,0,0,1,2], target = 3', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('195', '82', '1', 'head = [1,2,3,3,4,4,5]', '[1,2,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('196', '82', '2', 'head = [1,1,1,2,3]', '[2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('197', '83', '1', 'head = [1,1,2]', '[1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('198', '83', '2', 'head = [1,1,2,3,3]', '[1,2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('199', '84', '1', 'heights = [2,1,5,6,2,3]', '10', 'The above is a histogram where width of each bar is 1.\nThe largest rectangle is shown in the red area, which has an area = 10 units.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('200', '84', '2', 'heights = [2,4]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('201', '85', '1', 'matrix = [[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]]', '6', 'The maximal rectangle is shown in the above picture.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('202', '85', '2', 'matrix = [[\"0\"]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('203', '85', '3', 'matrix = [[\"1\"]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('204', '86', '1', 'head = [1,4,3,2,5,2], x = 3', '[1,2,2,4,3,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('205', '86', '2', 'head = [2,1], x = 2', '[1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('206', '87', '1', 's1 = \"great\", s2 = \"rgeat\"', 'true', 'One possible scenario applied on s1 is:\n\"great\" --&gt; \"gr/eat\" // divide at random index.\n\"gr/eat\" --&gt; \"gr/eat\" // random decision is not to swap the two substrings and keep them in order.\n\"gr/eat\" --&gt; \"g/r / e/at\" // apply the same algorithm recursively on both substrings. divide at random index each of them.\n\"g/r / e/at\" --&gt; \"r/g / e/at\" // random decision was to swap the first substring and to keep the second substring in the same order.\n\"r/g / e/at\" --&gt; \"r/g / e/ a/t\" // again apply the algorithm recursively, divide \"at\" to \"a/t\".\n\"r/g / e/ a/t\" --&gt; \"r/g / e/ a/t\" // random decision is to keep both substrings in the same order.\nThe algorithm stops now, and the result string is \"rgeat\" which is s2.\nAs one possible scenario led s1 to be scrambled to s2, we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('207', '87', '2', 's1 = \"abcde\", s2 = \"caebd\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('208', '87', '3', 's1 = \"a\", s2 = \"a\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('209', '88', '1', 'nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3', '[1,2,2,3,5,6]', 'The arrays we are merging are [1,2,3] and [2,5,6].\nThe result of the merge is [<u>1</u>,<u>2</u>,2,<u>3</u>,5,6] with the underlined elements coming from nums1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('210', '88', '2', 'nums1 = [1], m = 1, nums2 = [], n = 0', '[1]', 'The arrays we are merging are [1] and [].\nThe result of the merge is [1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('211', '88', '3', 'nums1 = [0], m = 0, nums2 = [1], n = 1', '[1]', 'The arrays we are merging are [] and [1].\nThe result of the merge is [1].\nNote that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('212', '89', '1', 'n = 2', '[0,1,3,2]', 'The binary representation of [0,1,3,2] is [00,01,11,10].\n- 0<u>0</u> and 0<u>1</u> differ by one bit\n- <u>0</u>1 and <u>1</u>1 differ by one bit\n- 1<u>1</u> and 1<u>0</u> differ by one bit\n- <u>1</u>0 and <u>0</u>0 differ by one bit\n[0,2,3,1] is also a valid gray code sequence, whose binary representation is [00,10,11,01].\n- <u>0</u>0 and <u>1</u>0 differ by one bit\n- 1<u>0</u> and 1<u>1</u> differ by one bit\n- <u>1</u>1 and <u>0</u>1 differ by one bit\n- 0<u>1</u> and 0<u>0</u> differ by one bit');
INSERT INTO `question_master_detail_coding_temp` VALUES ('213', '89', '2', 'n = 1', '[0,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('214', '90', '1', 'nums = [1,2,2]', '[[],[1],[1,2],[1,2,2],[2],[2,2]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('215', '90', '2', 'nums = [0]', '[[],[0]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('216', '91', '1', 's = \"12\"', '2', '\"12\" could be decoded as \"AB\" (1 2) or \"L\" (12).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('217', '91', '2', 's = \"226\"', '3', '\"226\" could be decoded as \"BZ\" (2 26), \"VF\" (22 6), or \"BBF\" (2 2 6).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('218', '91', '3', 's = \"06\"', '0', '\"06\" cannot be mapped to \"F\" because of the leading zero (\"6\" is different from \"06\").');
INSERT INTO `question_master_detail_coding_temp` VALUES ('219', '92', '1', 'head = [1,2,3,4,5], left = 2, right = 4', '[1,4,3,2,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('220', '92', '2', 'head = [5], left = 1, right = 1', '[5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('221', '93', '1', 's = \"25525511135\"', '[\"255.255.11.135\",\"255.255.111.35\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('222', '93', '2', 's = \"0000\"', '[\"0.0.0.0\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('223', '93', '3', 's = \"101023\"', '[\"1.0.10.23\",\"1.0.102.3\",\"10.1.0.23\",\"10.10.2.3\",\"101.0.2.3\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('224', '94', '1', 'root = [1,null,2,3]', '[1,3,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('225', '94', '2', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('226', '94', '3', 'root = [1]', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('227', '95', '1', 'n = 3', '[[1,null,2,null,3],[1,null,3,2],[2,1,3],[3,1,null,null,2],[3,2,null,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('228', '95', '2', 'n = 1', '[[1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('229', '96', '1', 'n = 3', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('230', '96', '2', 'n = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('231', '97', '1', 's1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbcbcac\"', 'true', 'One way to obtain s3 is:\nSplit s1 into s1 = \"aa\" + \"bc\" + \"c\", and s2 into s2 = \"dbbc\" + \"a\".\nInterleaving the two splits, we get \"aa\" + \"dbbc\" + \"bc\" + \"a\" + \"c\" = \"aadbbcbcac\".\nSince s3 can be obtained by interleaving s1 and s2, we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('232', '97', '2', 's1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbbaccc\"', 'false', 'Notice how it is impossible to interleave s2 with any other string to obtain s3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('233', '97', '3', 's1 = \"\", s2 = \"\", s3 = \"\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('234', '98', '1', 'root = [2,1,3]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('235', '98', '2', 'root = [5,1,4,null,null,3,6]', 'false', 'The root node\'s value is 5 but its right child\'s value is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('236', '100', '1', 'p = [1,2,3], q = [1,2,3]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('237', '100', '2', 'p = [1,2], q = [1,null,2]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('238', '100', '3', 'p = [1,2,1], q = [1,1,2]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('239', '101', '1', 'root = [1,2,2,3,4,4,3]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('240', '101', '2', 'root = [1,2,2,null,3,null,3]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('241', '102', '1', 'root = [3,9,20,null,null,15,7]', '[[3],[9,20],[15,7]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('242', '102', '2', 'root = [1]', '[[1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('243', '102', '3', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('244', '103', '1', 'root = [3,9,20,null,null,15,7]', '[[3],[20,9],[15,7]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('245', '103', '2', 'root = [1]', '[[1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('246', '103', '3', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('247', '104', '1', 'root = [3,9,20,null,null,15,7]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('248', '104', '2', 'root = [1,null,2]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('249', '105', '1', 'preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]', '[3,9,20,null,null,15,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('250', '105', '2', 'preorder = [-1], inorder = [-1]', '[-1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('251', '106', '1', 'inorder = [9,3,15,20,7], postorder = [9,15,7,20,3]', '[3,9,20,null,null,15,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('252', '106', '2', 'inorder = [-1], postorder = [-1]', '[-1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('253', '107', '1', 'root = [3,9,20,null,null,15,7]', '[[15,7],[9,20],[3]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('254', '107', '2', 'root = [1]', '[[1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('255', '107', '3', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('256', '108', '1', 'nums = [-10,-3,0,5,9]', '[0,-3,9,-10,null,5]', '[0,-10,5,null,-3,null,9] is also accepted:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/18/btree2.jpg\" style=\"width:302px;height:222px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('257', '108', '2', 'nums = [1,3]', '[3,1]', '[1,null,3] and [3,1] are both height-balanced BSTs.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('258', '109', '1', 'head = [-10,-3,0,5,9]', '[0,-3,9,-10,null,5]', 'One possible answer is [0,-3,9,-10,null,5], which represents the shown height balanced BST.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('259', '109', '2', 'head = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('260', '110', '1', 'root = [3,9,20,null,null,15,7]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('261', '110', '2', 'root = [1,2,2,3,3,null,null,4,4]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('262', '110', '3', 'root = []', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('263', '111', '1', 'root = [3,9,20,null,null,15,7]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('264', '111', '2', 'root = [2,null,3,null,4,null,5,null,6]', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('265', '112', '1', 'root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22', 'true', 'The root-to-leaf path with the target sum is shown.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('266', '112', '2', 'root = [1,2,3], targetSum = 5', 'false', 'There two root-to-leaf paths in the tree:\n(1 --&gt; 2): The sum is 3.\n(1 --&gt; 3): The sum is 4.\nThere is no root-to-leaf path with sum = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('267', '112', '3', 'root = [], targetSum = 0', 'false', 'Since the tree is empty, there are no root-to-leaf paths.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('268', '113', '1', 'root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22', '[[5,4,11,2],[5,8,4,5]]', 'There are two paths whose sum equals targetSum:\n5 + 4 + 11 + 2 = 22\n5 + 8 + 4 + 5 = 22');
INSERT INTO `question_master_detail_coding_temp` VALUES ('269', '113', '2', 'root = [1,2,3], targetSum = 5', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('270', '113', '3', 'root = [1,2], targetSum = 0', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('271', '114', '1', 'root = [1,2,5,3,4,null,6]', '[1,null,2,null,3,null,4,null,5,null,6]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('272', '114', '2', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('273', '114', '3', 'root = [0]', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('274', '115', '1', 's = \"rabbbit\", t = \"rabbit\"', '3', 'As shown below, there are 3 ways you can generate \"rabbit\" from s.\n<code><strong><u>rabb</u></strong>b<strong><u>it</u></strong></code>\n<code><strong><u>ra</u></strong>b<strong><u>bbit</u></strong></code>\n<code><strong><u>rab</u></strong>b<strong><u>bit</u></strong></code>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('275', '115', '2', 's = \"babgbag\", t = \"bag\"', '5', 'As shown below, there are 5 ways you can generate \"bag\" from s.\n<code><strong><u>ba</u></strong>b<u><strong>g</strong></u>bag</code>\n<code><strong><u>ba</u></strong>bgba<strong><u>g</u></strong></code>\n<code><u><strong>b</strong></u>abgb<strong><u>ag</u></strong></code>\n<code>ba<u><strong>b</strong></u>gb<u><strong>ag</strong></u></code>\n<code>babg<strong><u>bag</u></strong></code>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('276', '116', '1', 'root = [1,2,3,4,5,6,7]', '[1,#,2,3,#,4,5,6,7,#]', 'Given the above perfect binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with \'#\' signifying the end of each level.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('277', '116', '2', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('278', '117', '1', 'root = [1,2,3,4,5,null,7]', '[1,#,2,3,#,4,5,7,#]', 'Given the above binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with \'#\' signifying the end of each level.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('279', '117', '2', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('280', '118', '1', 'numRows = 5', '[[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('281', '118', '2', 'numRows = 1', '[[1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('282', '119', '1', 'rowIndex = 3', '[1,3,3,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('283', '119', '2', 'rowIndex = 0', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('284', '119', '3', 'rowIndex = 1', '[1,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('285', '120', '1', 'triangle = [[2],[3,4],[6,5,7],[4,1,8,3]]', '11', 'The triangle looks like:\n   <u>2</u>\n  <u>3</u> 4\n 6 <u>5</u> 7\n4 <u>1</u> 8 3\nThe minimum path sum from top to bottom is 2 + 3 + 5 + 1 = 11 (underlined above).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('286', '120', '2', 'triangle = [[-10]]', '-10', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('287', '121', '1', 'prices = [7,1,5,3,6,4]', '5', 'Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\nNote that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('288', '121', '2', 'prices = [7,6,4,3,1]', '0', 'In this case, no transactions are done and the max profit = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('289', '122', '1', 'prices = [7,1,5,3,6,4]', '7', 'Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\nThen buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\nTotal profit is 4 + 3 = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('290', '122', '2', 'prices = [1,2,3,4,5]', '4', 'Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\nTotal profit is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('291', '122', '3', 'prices = [7,6,4,3,1]', '0', 'There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('292', '123', '1', 'prices = [3,3,5,0,0,3,1,4]', '6', 'Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\nThen buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('293', '123', '2', 'prices = [1,2,3,4,5]', '4', 'Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\nNote that you cannot buy on day 1, buy on day 2 and sell them later, as you are engaging multiple transactions at the same time. You must sell before buying again.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('294', '123', '3', 'prices = [7,6,4,3,1]', '0', 'In this case, no transaction is done, i.e. max profit = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('295', '124', '1', 'root = [1,2,3]', '6', 'The optimal path is 2 -&gt; 1 -&gt; 3 with a path sum of 2 + 1 + 3 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('296', '124', '2', 'root = [-10,9,20,null,null,15,7]', '42', 'The optimal path is 15 -&gt; 20 -&gt; 7 with a path sum of 15 + 20 + 7 = 42.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('297', '125', '1', 's = \"A man, a plan, a canal: Panama\"', 'true', '\"amanaplanacanalpanama\" is a palindrome.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('298', '125', '2', 's = \"race a car\"', 'false', '\"raceacar\" is not a palindrome.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('299', '125', '3', 's = \" \"', 'true', 's is an empty string \"\" after removing non-alphanumeric characters.\nSince an empty string reads the same forward and backward, it is a palindrome.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('300', '126', '1', 'beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]', '[[\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],[\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]]', 'There are 2 shortest transformation sequences:\n\"hit\" -&gt; \"hot\" -&gt; \"dot\" -&gt; \"dog\" -&gt; \"cog\"\n\"hit\" -&gt; \"hot\" -&gt; \"lot\" -&gt; \"log\" -&gt; \"cog\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('301', '126', '2', 'beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]', '[]', 'The endWord \"cog\" is not in wordList, therefore there is no valid transformation sequence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('302', '127', '1', 'beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]', '5', 'One shortest transformation sequence is \"hit\" -&gt; \"hot\" -&gt; \"dot\" -&gt; \"dog\" -&gt; cog\", which is 5 words long.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('303', '127', '2', 'beginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]', '0', 'The endWord \"cog\" is not in wordList, therefore there is no valid transformation sequence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('304', '128', '1', 'nums = [100,4,200,1,3,2]', '4', 'The longest consecutive elements sequence is <code>[1, 2, 3, 4]</code>. Therefore its length is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('305', '128', '2', 'nums = [0,3,7,2,5,8,4,6,0,1]', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('306', '129', '1', 'root = [1,2,3]', '25', 'The root-to-leaf path <code>1-&gt;2</code> represents the number <code>12</code>.\nThe root-to-leaf path <code>1-&gt;3</code> represents the number <code>13</code>.\nTherefore, sum = 12 + 13 = <code>25</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('307', '129', '2', 'root = [4,9,0,5,1]', '1026', 'The root-to-leaf path <code>4-&gt;9-&gt;5</code> represents the number 495.\nThe root-to-leaf path <code>4-&gt;9-&gt;1</code> represents the number 491.\nThe root-to-leaf path <code>4-&gt;0</code> represents the number 40.\nTherefore, sum = 495 + 491 + 40 = <code>1026</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('308', '130', '1', 'board = [[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"O\",\"X\"],[\"X\",\"X\",\"O\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]]', '[[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]]', 'Notice that an \'O\' should not be flipped if:\n- It is on the border, or\n- It is adjacent to an \'O\' that should not be flipped.\nThe bottom \'O\' is on the border, so it is not flipped.\nThe other three \'O\' form a surrounded region, so they are flipped.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('309', '130', '2', 'board = [[\"X\"]]', '[[\"X\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('310', '131', '1', 's = \"aab\"', '[[\"a\",\"a\",\"b\"],[\"aa\",\"b\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('311', '131', '2', 's = \"a\"', '[[\"a\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('312', '132', '1', 's = \"aab\"', '1', 'The palindrome partitioning [\"aa\",\"b\"] could be produced using 1 cut.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('313', '132', '2', 's = \"a\"', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('314', '132', '3', 's = \"ab\"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('315', '133', '1', 'adjList = [[2,4],[1,3],[2,4],[1,3]]', '[[2,4],[1,3],[2,4],[1,3]]', 'There are 4 nodes in the graph.\n1st node (val = 1)\'s neighbors are 2nd node (val = 2) and 4th node (val = 4).\n2nd node (val = 2)\'s neighbors are 1st node (val = 1) and 3rd node (val = 3).\n3rd node (val = 3)\'s neighbors are 2nd node (val = 2) and 4th node (val = 4).\n4th node (val = 4)\'s neighbors are 1st node (val = 1) and 3rd node (val = 3).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('316', '133', '2', 'adjList = [[]]', '[[]]', 'Note that the input contains one empty list. The graph consists of only one node with val = 1 and it does not have any neighbors.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('317', '133', '3', 'adjList = []', '[]', 'This an empty graph, it does not have any nodes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('318', '134', '1', 'gas = [1,2,3,4,5], cost = [3,4,5,1,2]', '3', 'Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 4. Your tank = 4 - 1 + 5 = 8\nTravel to station 0. Your tank = 8 - 2 + 1 = 7\nTravel to station 1. Your tank = 7 - 3 + 2 = 6\nTravel to station 2. Your tank = 6 - 4 + 3 = 5\nTravel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.\nTherefore, return 3 as the starting index.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('319', '134', '2', 'gas = [2,3,4], cost = [3,4,3]', '-1', 'You can\'t start at station 0 or 1, as there is not enough gas to travel to the next station.\nLet\'s start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 0. Your tank = 4 - 3 + 2 = 3\nTravel to station 1. Your tank = 3 - 3 + 3 = 3\nYou cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.\nTherefore, you can\'t travel around the circuit once no matter where you start.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('320', '135', '1', 'ratings = [1,0,2]', '5', 'You can allocate to the first, second and third child with 2, 1, 2 candies respectively.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('321', '135', '2', 'ratings = [1,2,2]', '4', 'You can allocate to the first, second and third child with 1, 2, 1 candies respectively.\nThe third child gets 1 candy because it satisfies the above two conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('322', '136', '1', 'nums = [2,2,1]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('323', '136', '2', 'nums = [4,1,2,1,2]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('324', '136', '3', 'nums = [1]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('325', '137', '1', 'nums = [2,2,3,2]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('326', '137', '2', 'nums = [0,1,0,1,0,1,99]', '99', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('327', '138', '1', 'head = [[7,null],[13,0],[11,4],[10,2],[1,0]]', '[[7,null],[13,0],[11,4],[10,2],[1,0]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('328', '138', '2', 'head = [[1,1],[2,1]]', '[[1,1],[2,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('329', '138', '3', 'head = [[3,null],[3,0],[3,null]]', '[[3,null],[3,0],[3,null]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('330', '139', '1', 's = \"leetcode\", wordDict = [\"leet\",\"code\"]', 'true', 'Return true because \"leetcode\" can be segmented as \"leet code\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('331', '139', '2', 's = \"applepenapple\", wordDict = [\"apple\",\"pen\"]', 'true', 'Return true because \"applepenapple\" can be segmented as \"apple pen apple\".\nNote that you are allowed to reuse a dictionary word.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('332', '139', '3', 's = \"catsandog\", wordDict = [\"cats\",\"dog\",\"sand\",\"and\",\"cat\"]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('333', '140', '1', 's = \"catsanddog\", wordDict = [\"cat\",\"cats\",\"and\",\"sand\",\"dog\"]', '[\"cats and dog\",\"cat sand dog\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('334', '140', '2', 's = \"pineapplepenapple\", wordDict = [\"apple\",\"pen\",\"applepen\",\"pine\",\"pineapple\"]', '[\"pine apple pen apple\",\"pineapple pen apple\",\"pine applepen apple\"]', 'Note that you are allowed to reuse a dictionary word.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('335', '140', '3', 's = \"catsandog\", wordDict = [\"cats\",\"dog\",\"sand\",\"and\",\"cat\"]', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('336', '141', '1', 'head = [3,2,0,-4], pos = 1', 'true', 'There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('337', '141', '2', 'head = [1,2], pos = 0', 'true', 'There is a cycle in the linked list, where the tail connects to the 0th node.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('338', '141', '3', 'head = [1], pos = -1', 'false', 'There is no cycle in the linked list.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('339', '142', '1', 'head = [3,2,0,-4], pos = 1', 'tail connects to node index 1', 'There is a cycle in the linked list, where tail connects to the second node.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('340', '142', '2', 'head = [1,2], pos = 0', 'tail connects to node index 0', 'There is a cycle in the linked list, where tail connects to the first node.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('341', '142', '3', 'head = [1], pos = -1', 'no cycle', 'There is no cycle in the linked list.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('342', '143', '1', 'head = [1,2,3,4]', '[1,4,2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('343', '143', '2', 'head = [1,2,3,4,5]', '[1,5,2,4,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('344', '144', '1', 'root = [1,null,2,3]', '[1,2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('345', '144', '2', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('346', '144', '3', 'root = [1]', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('347', '145', '1', 'root = [1,null,2,3]', '[3,2,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('348', '145', '2', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('349', '145', '3', 'root = [1]', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('350', '146', '1', '[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]', '[null, null, null, 1, null, -1, null, -1, 3, 4]', 'LRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // cache is {1=1}\nlRUCache.put(2, 2); // cache is {1=1, 2=2}\nlRUCache.get(1);    // return 1\nlRUCache.put(3, 3); // LRU key was 2, evicts key 2, cache is {1=1, 3=3}\nlRUCache.get(2);    // returns -1 (not found)\nlRUCache.put(4, 4); // LRU key was 1, evicts key 1, cache is {4=4, 3=3}\nlRUCache.get(1);    // return -1 (not found)\nlRUCache.get(3);    // return 3\nlRUCache.get(4);    // return 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('351', '147', '1', 'head = [4,2,1,3]', '[1,2,3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('352', '147', '2', 'head = [-1,5,3,4,0]', '[-1,0,3,4,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('353', '148', '1', 'head = [4,2,1,3]', '[1,2,3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('354', '148', '2', 'head = [-1,5,3,4,0]', '[-1,0,3,4,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('355', '148', '3', 'head = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('356', '149', '1', 'points = [[1,1],[2,2],[3,3]]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('357', '149', '2', 'points = [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('358', '150', '1', 'tokens = [\"2\",\"1\",\"+\",\"3\",\"*\"]', '9', '((2 + 1) * 3) = 9');
INSERT INTO `question_master_detail_coding_temp` VALUES ('359', '150', '2', 'tokens = [\"4\",\"13\",\"5\",\"/\",\"+\"]', '6', '(4 + (13 / 5)) = 6');
INSERT INTO `question_master_detail_coding_temp` VALUES ('360', '150', '3', 'tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]', '22', '((10 * (6 / ((9 + 3) * -11))) + 17) + 5\n= ((10 * (6 / (12 * -11))) + 17) + 5\n= ((10 * (6 / -132)) + 17) + 5\n= ((10 * 0) + 17) + 5\n= (0 + 17) + 5\n= 17 + 5\n= 22');
INSERT INTO `question_master_detail_coding_temp` VALUES ('361', '151', '1', 's = \"the sky is blue\"', '\"blue is sky the\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('362', '151', '2', 's = \"  hello world  \"', '\"world hello\"', 'Your reversed string should not contain leading or trailing spaces.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('363', '151', '3', 's = \"a good   example\"', '\"example good a\"', 'You need to reduce multiple spaces between two words to a single space in the reversed string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('364', '152', '1', 'nums = [2,3,-2,4]', '6', '[2,3] has the largest product 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('365', '152', '2', 'nums = [-2,0,-1]', '0', 'The result cannot be 2, because [-2,-1] is not a subarray.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('366', '153', '1', 'nums = [3,4,5,1,2]', '1', 'The original array was [1,2,3,4,5] rotated 3 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('367', '153', '2', 'nums = [4,5,6,7,0,1,2]', '0', 'The original array was [0,1,2,4,5,6,7] and it was rotated 4 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('368', '153', '3', 'nums = [11,13,15,17]', '11', 'The original array was [11,13,15,17] and it was rotated 4 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('369', '154', '1', 'nums = [1,3,5]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('370', '154', '2', 'nums = [2,2,2,0,1]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('371', '155', '1', '[\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"]\n[[],[-2],[0],[-3],[],[],[],[]]', '[null,null,null,null,-3,null,0,-2]', 'MinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin(); // return -3\nminStack.pop();\nminStack.top();    // return 0\nminStack.getMin(); // return -2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('372', '156', '1', 'intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3', 'Intersected at \'8\'', 'The intersected node\'s value is 8 (note that this must not be 0 if the two lists intersect).\nFrom the head of A, it reads as [4,1,8,4,5]. From the head of B, it reads as [5,6,1,8,4,5]. There are 2 nodes before the intersected node in A; There are 3 nodes before the intersected node in B.\n- Note that the intersected node\'s value is not 1 because the nodes with value 1 in A and B (2<sup>nd</sup> node in A and 3<sup>rd</sup> node in B) are different node references. In other words, they point to two different locations in memory, while the nodes with value 8 in A and B (3<sup>rd</sup> node in A and 4<sup>th</sup> node in B) point to the same location in memory.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('373', '156', '2', 'intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1', 'Intersected at \'2\'', 'The intersected node\'s value is 2 (note that this must not be 0 if the two lists intersect).\nFrom the head of A, it reads as [1,9,1,2,4]. From the head of B, it reads as [3,2,4]. There are 3 nodes before the intersected node in A; There are 1 node before the intersected node in B.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('374', '156', '3', 'intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2', 'No intersection', 'From the head of A, it reads as [2,6,4]. From the head of B, it reads as [1,5]. Since the two lists do not intersect, intersectVal must be 0, while skipA and skipB can be arbitrary values.\nExplanation: The two lists do not intersect, so return null.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('375', '157', '1', 'nums = [1,2,3,1]', '2', '3 is a peak element and your function should return the index number 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('376', '157', '2', 'nums = [1,2,1,3,5,6,4]', '5', 'Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('377', '158', '1', 'nums = [3,6,9,1]', '3', 'The sorted form of the array is [1,3,6,9], either (3,6) or (6,9) has the maximum difference 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('378', '158', '2', 'nums = [10]', '0', 'The array contains less than 2 elements, therefore return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('379', '159', '1', 'version1 = \"1.01\", version2 = \"1.001\"', '0', 'Ignoring leading zeroes, both \"01\" and \"001\" represent the same integer \"1\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('380', '159', '2', 'version1 = \"1.0\", version2 = \"1.0.0\"', '0', 'version1 does not specify revision 2, which means it is treated as \"0\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('381', '159', '3', 'version1 = \"0.1\", version2 = \"1.1\"', '-1', 'version1\'s revision 0 is \"0\", while version2\'s revision 0 is \"1\". 0 &lt; 1, so version1 &lt; version2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('382', '160', '1', 'numerator = 1, denominator = 2', '\"0.5\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('383', '160', '2', 'numerator = 2, denominator = 1', '\"2\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('384', '160', '3', 'numerator = 4, denominator = 333', '\"0.(012)\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('385', '161', '1', 'numbers = [<u>2</u>,<u>7</u>,11,15], target = 9', '[1,2]', 'The sum of 2 and 7 is 9. Therefore, index<sub>1</sub> = 1, index<sub>2</sub> = 2. We return [1, 2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('386', '161', '2', 'numbers = [<u>2</u>,3,<u>4</u>], target = 6', '[1,3]', 'The sum of 2 and 4 is 6. Therefore index<sub>1</sub> = 1, index<sub>2</sub> = 3. We return [1, 3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('387', '161', '3', 'numbers = [<u>-1</u>,<u>0</u>], target = -1', '[1,2]', 'The sum of -1 and 0 is -1. Therefore index<sub>1</sub> = 1, index<sub>2</sub> = 2. We return [1, 2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('388', '162', '1', 'columnNumber = 1', '\"A\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('389', '162', '2', 'columnNumber = 28', '\"AB\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('390', '162', '3', 'columnNumber = 701', '\"ZY\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('391', '163', '1', 'nums = [3,2,3]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('392', '163', '2', 'nums = [2,2,1,1,1,2,2]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('393', '164', '1', 'columnTitle = \"A\"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('394', '164', '2', 'columnTitle = \"AB\"', '28', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('395', '164', '3', 'columnTitle = \"ZY\"', '701', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('396', '165', '1', 'n = 3', '0', '3! = 6, no trailing zero.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('397', '165', '2', 'n = 5', '1', '5! = 120, one trailing zero.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('398', '165', '3', 'n = 0', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('399', '166', '1', '[\"BSTIterator\", \"next\", \"next\", \"hasNext\", \"next\", \"hasNext\", \"next\", \"hasNext\", \"next\", \"hasNext\"]\n[[[7, 3, 15, null, null, 9, 20]], [], [], [], [], [], [], [], [], []]', '[null, 3, 7, true, 9, true, 15, true, 20, false]', 'BSTIterator bSTIterator = new BSTIterator([7, 3, 15, null, null, 9, 20]);\nbSTIterator.next();    // return 3\nbSTIterator.next();    // return 7\nbSTIterator.hasNext(); // return True\nbSTIterator.next();    // return 9\nbSTIterator.hasNext(); // return True\nbSTIterator.next();    // return 15\nbSTIterator.hasNext(); // return True\nbSTIterator.next();    // return 20\nbSTIterator.hasNext(); // return False');
INSERT INTO `question_master_detail_coding_temp` VALUES ('400', '167', '1', 'dungeon = [[-2,-3,3],[-5,-10,1],[10,30,-5]]', '7', 'The initial health of the knight must be at least 7 if he follows the optimal path: RIGHT-&gt; RIGHT -&gt; DOWN -&gt; DOWN.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('401', '167', '2', 'dungeon = [[0]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('402', '168', '1', 'Person table:\n+----------+----------+-----------+\n| personId | lastName | firstName |\n+----------+----------+-----------+\n| 1        | Wang     | Allen     |\n| 2        | Alice    | Bob       |\n+----------+----------+-----------+\nAddress table:\n+-----------+----------+---------------+------------+\n| addressId | personId | city          | state      |\n+-----------+----------+---------------+------------+\n| 1         | 2        | New York City | New York   |\n| 2         | 3        | Leetcode      | California |\n+-----------+----------+---------------+------------+', '+-----------+----------+---------------+----------+\n| firstName | lastName | city          | state    |\n+-----------+----------+---------------+----------+\n| Allen     | Wang     | Null          | Null     |\n| Bob       | Alice    | New York City | New York |\n+-----------+----------+---------------+----------+', 'There is no address in the address table for the personId = 1 so we return null in their city and state.\naddressId = 1 contains information about the address of personId = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('403', '169', '1', 'Employee table:\n+----+--------+\n| id | salary |\n+----+--------+\n| 1  | 100    |\n| 2  | 200    |\n| 3  | 300    |\n+----+--------+', '+---------------------+\n| SecondHighestSalary |\n+---------------------+\n| 200                 |\n+---------------------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('404', '169', '2', 'Employee table:\n+----+--------+\n| id | salary |\n+----+--------+\n| 1  | 100    |\n+----+--------+', '+---------------------+\n| SecondHighestSalary |\n+---------------------+\n| null                |\n+---------------------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('405', '170', '1', 'Employee table:\n+----+--------+\n| id | salary |\n+----+--------+\n| 1  | 100    |\n| 2  | 200    |\n| 3  | 300    |\n+----+--------+\nn = 2', '+------------------------+\n| getNthHighestSalary(2) |\n+------------------------+\n| 200                    |\n+------------------------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('406', '170', '2', 'Employee table:\n+----+--------+\n| id | salary |\n+----+--------+\n| 1  | 100    |\n+----+--------+\nn = 2', '+------------------------+\n| getNthHighestSalary(2) |\n+------------------------+\n| null                   |\n+------------------------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('407', '171', '1', 'Scores table:\n+----+-------+\n| id | score |\n+----+-------+\n| 1  | 3.50  |\n| 2  | 3.65  |\n| 3  | 4.00  |\n| 4  | 3.85  |\n| 5  | 4.00  |\n| 6  | 3.65  |\n+----+-------+', '+-------+------+\n| score | rank |\n+-------+------+\n| 4.00  | 1    |\n| 4.00  | 1    |\n| 3.85  | 2    |\n| 3.65  | 3    |\n| 3.65  | 3    |\n| 3.50  | 4    |\n+-------+------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('408', '172', '1', 'nums = [10,2]', '\"210\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('409', '172', '2', 'nums = [3,30,34,5,9]', '\"9534330\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('410', '173', '1', 'Logs table:\n+----+-----+\n| id | num |\n+----+-----+\n| 1  | 1   |\n| 2  | 1   |\n| 3  | 1   |\n| 4  | 2   |\n| 5  | 1   |\n| 6  | 2   |\n| 7  | 2   |\n+----+-----+', '+-----------------+\n| ConsecutiveNums |\n+-----------------+\n| 1               |\n+-----------------+', '1 is the only number that appears consecutively for at least three times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('411', '174', '1', 'Employee table:\n+----+-------+--------+-----------+\n| id | name  | salary | managerId |\n+----+-------+--------+-----------+\n| 1  | Joe   | 70000  | 3         |\n| 2  | Henry | 80000  | 4         |\n| 3  | Sam   | 60000  | Null      |\n| 4  | Max   | 90000  | Null      |\n+----+-------+--------+-----------+', '+----------+\n| Employee |\n+----------+\n| Joe      |\n+----------+', 'Joe is the only employee who earns more than his manager.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('412', '175', '1', 'Person table:\n+----+---------+\n| id | email   |\n+----+---------+\n| 1  | a@b.com |\n| 2  | c@d.com |\n| 3  | a@b.com |\n+----+---------+', '+---------+\n| Email   |\n+---------+\n| a@b.com |\n+---------+', 'a@b.com is repeated two times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('413', '176', '1', 'Customers table:\n+----+-------+\n| id | name  |\n+----+-------+\n| 1  | Joe   |\n| 2  | Henry |\n| 3  | Sam   |\n| 4  | Max   |\n+----+-------+\nOrders table:\n+----+------------+\n| id | customerId |\n+----+------------+\n| 1  | 3          |\n| 2  | 1          |\n+----+------------+', '+-----------+\n| Customers |\n+-----------+\n| Henry     |\n| Max       |\n+-----------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('414', '177', '1', 'Employee table:\n+----+-------+--------+--------------+\n| id | name  | salary | departmentId |\n+----+-------+--------+--------------+\n| 1  | Joe   | 70000  | 1            |\n| 2  | Jim   | 90000  | 1            |\n| 3  | Henry | 80000  | 2            |\n| 4  | Sam   | 60000  | 2            |\n| 5  | Max   | 90000  | 1            |\n+----+-------+--------+--------------+\nDepartment table:\n+----+-------+\n| id | name  |\n+----+-------+\n| 1  | IT    |\n| 2  | Sales |\n+----+-------+', '+------------+----------+--------+\n| Department | Employee | Salary |\n+------------+----------+--------+\n| IT         | Jim      | 90000  |\n| Sales      | Henry    | 80000  |\n| IT         | Max      | 90000  |\n+------------+----------+--------+', 'Max and Jim both have the highest salary in the IT department and Henry has the highest salary in the Sales department.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('415', '178', '1', 'Employee table:\n+----+-------+--------+--------------+\n| id | name  | salary | departmentId |\n+----+-------+--------+--------------+\n| 1  | Joe   | 85000  | 1            |\n| 2  | Henry | 80000  | 2            |\n| 3  | Sam   | 60000  | 2            |\n| 4  | Max   | 90000  | 1            |\n| 5  | Janet | 69000  | 1            |\n| 6  | Randy | 85000  | 1            |\n| 7  | Will  | 70000  | 1            |\n+----+-------+--------+--------------+\nDepartment table:\n+----+-------+\n| id | name  |\n+----+-------+\n| 1  | IT    |\n| 2  | Sales |\n+----+-------+', '+------------+----------+--------+\n| Department | Employee | Salary |\n+------------+----------+--------+\n| IT         | Max      | 90000  |\n| IT         | Joe      | 85000  |\n| IT         | Randy    | 85000  |\n| IT         | Will     | 70000  |\n| Sales      | Henry    | 80000  |\n| Sales      | Sam      | 60000  |\n+------------+----------+--------+', 'In the IT department:\n- Max earns the highest unique salary\n- Both Randy and Joe earn the second-highest unique salary\n- Will earns the third-highest unique salary\n\nIn the Sales department:\n- Henry earns the highest salary\n- Sam earns the second-highest salary\n- There is no third-highest salary as there are only two employees');
INSERT INTO `question_master_detail_coding_temp` VALUES ('416', '47', '1', 'nums = [1,1,2]', '[[1,1,2],\n [1,2,1],\n [2,1,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('417', '47', '2', 'nums = [1,2,3]', '[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('418', '74', '1', 'matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('419', '74', '2', 'matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('420', '99', '1', 'root = [1,3,null,null,2]', '[3,1,null,null,2]', '3 cannot be a left child of 1 because 3 &gt; 1. Swapping 1 and 3 makes the BST valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('421', '99', '2', 'root = [3,1,4,null,null,2]', '[2,1,4,null,null,3]', '2 cannot be in the right subtree of 3 because 2 &lt; 3. Swapping 2 and 3 makes the BST valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('422', '180', '1', 'k = 2, prices = [2,4,1]', '2', 'Buy on day 1 (price = 2) and sell on day 2 (price = 4), profit = 4-2 = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('423', '180', '2', 'k = 2, prices = [3,2,6,5,0,3]', '7', 'Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6-2 = 4. Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('424', '181', '1', 'nums = [1,2,3,4,5,6,7], k = 3', '[5,6,7,1,2,3,4]', 'rotate 1 steps to the right: [7,1,2,3,4,5,6]\nrotate 2 steps to the right: [6,7,1,2,3,4,5]\nrotate 3 steps to the right: [5,6,7,1,2,3,4]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('425', '181', '2', 'nums = [-1,-100,3,99], k = 2', '[3,99,-1,-100]', 'rotate 1 steps to the right: [99,-1,-100,3]\nrotate 2 steps to the right: [3,99,-1,-100]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('426', '182', '1', 'n = 00000010100101000001111010011100', '964176192 (00111001011110000010100101000000)', 'The input binary string <strong>00000010100101000001111010011100</strong> represents the unsigned integer 43261596, so return 964176192 which its binary representation is <strong>00111001011110000010100101000000</strong>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('427', '182', '2', 'n = 11111111111111111111111111111101', '3221225471 (10111111111111111111111111111111)', 'The input binary string <strong>11111111111111111111111111111101</strong> represents the unsigned integer 4294967293, so return 3221225471 which its binary representation is <strong>10111111111111111111111111111111</strong>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('428', '183', '1', 'n = 00000000000000000000000000001011', '3', 'The input binary string <strong>00000000000000000000000000001011</strong> has a total of three \'1\' bits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('429', '183', '2', 'n = 00000000000000000000000010000000', '1', 'The input binary string <strong>00000000000000000000000010000000</strong> has a total of one \'1\' bit.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('430', '183', '3', 'n = 11111111111111111111111111111101', '31', 'The input binary string <strong>11111111111111111111111111111101</strong> has a total of thirty one \'1\' bits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('431', '188', '1', 'Person table:\n+----+------------------+\n| id | email            |\n+----+------------------+\n| 1  | john@example.com |\n| 2  | bob@example.com  |\n| 3  | john@example.com |\n+----+------------------+', '+----+------------------+\n| id | email            |\n+----+------------------+\n| 1  | john@example.com |\n| 2  | bob@example.com  |\n+----+------------------+', 'john@example.com is repeated two times. We keep the row with the smallest Id = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('432', '190', '1', 'nums = [1,2,3,1]', '4', 'Rob house 1 (money = 1) and then rob house 3 (money = 3).\nTotal amount you can rob = 1 + 3 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('433', '190', '2', 'nums = [2,7,9,3,1]', '12', 'Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).\nTotal amount you can rob = 2 + 9 + 1 = 12.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('434', '192', '1', 'grid = [\n  [\"1\",\"1\",\"1\",\"1\",\"0\"],\n  [\"1\",\"1\",\"0\",\"1\",\"0\"],\n  [\"1\",\"1\",\"0\",\"0\",\"0\"],\n  [\"0\",\"0\",\"0\",\"0\",\"0\"]\n]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('435', '192', '2', 'grid = [\n  [\"1\",\"1\",\"0\",\"0\",\"0\"],\n  [\"1\",\"1\",\"0\",\"0\",\"0\"],\n  [\"0\",\"0\",\"1\",\"0\",\"0\"],\n  [\"0\",\"0\",\"0\",\"1\",\"1\"]\n]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('436', '193', '1', 'left = 5, right = 7', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('437', '193', '2', 'left = 0, right = 0', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('438', '193', '3', 'left = 1, right = 2147483647', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('439', '179', '1', 's = \"AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT\"', '[\"AAAAACCCCC\",\"CCCCCAAAAA\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('440', '179', '2', 's = \"AAAAAAAAAAAAA\"', '[\"AAAAAAAAAA\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('441', '189', '1', 'Weather table:\n+----+------------+-------------+\n| id | recordDate | temperature |\n+----+------------+-------------+\n| 1  | 2015-01-01 | 10          |\n| 2  | 2015-01-02 | 25          |\n| 3  | 2015-01-03 | 20          |\n| 4  | 2015-01-04 | 30          |\n+----+------------+-------------+', '+----+\n| id |\n+----+\n| 2  |\n| 4  |\n+----+', 'In 2015-01-02, the temperature was higher than the previous day (10 -&gt; 25).\nIn 2015-01-04, the temperature was higher than the previous day (20 -&gt; 30).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('442', '191', '1', 'root = [1,2,3,null,5,null,4]', '[1,3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('443', '191', '2', 'root = [1,null,3]', '[1,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('444', '191', '3', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('445', '194', '1', 'n = 19', 'true', '1<sup>2</sup> + 9<sup>2</sup> = 82\n8<sup>2</sup> + 2<sup>2</sup> = 68\n6<sup>2</sup> + 8<sup>2</sup> = 100\n1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('446', '194', '2', 'n = 2', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('447', '195', '1', 'head = [1,2,6,3,4,5,6], val = 6', '[1,2,3,4,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('448', '195', '2', 'head = [], val = 1', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('449', '195', '3', 'head = [7,7,7,7], val = 7', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('450', '196', '1', 'n = 10', '4', 'There are 4 prime numbers less than 10, they are 2, 3, 5, 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('451', '196', '2', 'n = 0', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('452', '196', '3', 'n = 1', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('453', '197', '1', 's = \"egg\", t = \"add\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('454', '197', '2', 's = \"foo\", t = \"bar\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('455', '197', '3', 's = \"paper\", t = \"title\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('456', '198', '1', 'head = [1,2,3,4,5]', '[5,4,3,2,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('457', '198', '2', 'head = [1,2]', '[2,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('458', '198', '3', 'head = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('459', '199', '1', 'numCourses = 2, prerequisites = [[1,0]]', 'true', 'There are a total of 2 courses to take. \nTo take course 1 you should have finished course 0. So it is possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('460', '199', '2', 'numCourses = 2, prerequisites = [[1,0],[0,1]]', 'false', 'There are a total of 2 courses to take. \nTo take course 1 you should have finished course 0, and to take course 0 you should also have finished course 1. So it is impossible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('461', '200', '1', '[\"Trie\", \"insert\", \"search\", \"search\", \"startsWith\", \"insert\", \"search\"]\n[[], [\"apple\"], [\"apple\"], [\"app\"], [\"app\"], [\"app\"], [\"app\"]]', '[null, null, true, false, true, null, true]', 'Trie trie = new Trie();\ntrie.insert(\"apple\");\ntrie.search(\"apple\");   // return True\ntrie.search(\"app\");     // return False\ntrie.startsWith(\"app\"); // return True\ntrie.insert(\"app\");\ntrie.search(\"app\");     // return True');
INSERT INTO `question_master_detail_coding_temp` VALUES ('462', '201', '1', 'target = 7, nums = [2,3,1,2,4,3]', '2', 'The subarray [4,3] has the minimal length under the problem constraint.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('463', '201', '2', 'target = 4, nums = [1,4,4]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('464', '201', '3', 'target = 11, nums = [1,1,1,1,1,1,1,1]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('465', '202', '1', 'numCourses = 2, prerequisites = [[1,0]]', '[0,1]', 'There are a total of 2 courses to take. To take course 1 you should have finished course 0. So the correct course order is [0,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('466', '202', '2', 'numCourses = 4, prerequisites = [[1,0],[2,0],[3,1],[3,2]]', '[0,2,1,3]', 'There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0.\nSo one correct course order is [0,1,2,3]. Another correct ordering is [0,2,1,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('467', '202', '3', 'numCourses = 1, prerequisites = []', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('468', '203', '1', '[\"WordDictionary\",\"addWord\",\"addWord\",\"addWord\",\"search\",\"search\",\"search\",\"search\"]\n[[],[\"bad\"],[\"dad\"],[\"mad\"],[\"pad\"],[\"bad\"],[\".ad\"],[\"b..\"]]', '[null,null,null,null,false,true,true,true]', 'WordDictionary wordDictionary = new WordDictionary();\nwordDictionary.addWord(\"bad\");\nwordDictionary.addWord(\"dad\");\nwordDictionary.addWord(\"mad\");\nwordDictionary.search(\"pad\"); // return False\nwordDictionary.search(\"bad\"); // return True\nwordDictionary.search(\".ad\"); // return True\nwordDictionary.search(\"b..\"); // return True');
INSERT INTO `question_master_detail_coding_temp` VALUES ('469', '204', '1', 'board = [[\"o\",\"a\",\"a\",\"n\"],[\"e\",\"t\",\"a\",\"e\"],[\"i\",\"h\",\"k\",\"r\"],[\"i\",\"f\",\"l\",\"v\"]], words = [\"oath\",\"pea\",\"eat\",\"rain\"]', '[\"eat\",\"oath\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('470', '204', '2', 'board = [[\"a\",\"b\"],[\"c\",\"d\"]], words = [\"abcb\"]', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('471', '206', '1', 's = \"aacecaaa\"', '\"aaacecaaa\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('472', '206', '2', 's = \"abcd\"', '\"dcbabcd\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('473', '207', '1', 'nums = [3,2,1,5,6,4], k = 2', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('474', '207', '2', 'nums = [3,2,3,1,2,4,5,5,6], k = 4', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('475', '209', '1', 'nums = [1,2,3,1]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('476', '209', '2', 'nums = [1,2,3,4]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('477', '209', '3', 'nums = [1,1,1,3,3,4,3,2,4,2]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('478', '210', '1', 'buildings = [[2,9,10],[3,7,15],[5,12,12],[15,20,10],[19,24,8]]', '[[2,10],[3,15],[7,12],[12,0],[15,10],[20,8],[24,0]]', 'Figure A shows the buildings of the input.\nFigure B shows the skyline formed by those buildings. The red points in figure B represent the key points in the output list.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('479', '210', '2', 'buildings = [[0,2,3],[2,5,3]]', '[[0,3],[5,0]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('480', '211', '1', 'nums = [1,2,3,1], k = 3', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('481', '211', '2', 'nums = [1,0,1,1], k = 1', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('482', '211', '3', 'nums = [1,2,3,1,2,3], k = 2', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('483', '212', '1', 'nums = [1,2,3,1], indexDiff = 3, valueDiff = 0', 'true', 'We can choose (i, j) = (0, 3).\nWe satisfy the three conditions:\ni != j --&gt; 0 != 3\nabs(i - j) &lt;= indexDiff --&gt; abs(0 - 3) &lt;= 3\nabs(nums[i] - nums[j]) &lt;= valueDiff --&gt; abs(1 - 1) &lt;= 0');
INSERT INTO `question_master_detail_coding_temp` VALUES ('484', '212', '2', 'nums = [1,5,9,1,5,9], indexDiff = 2, valueDiff = 3', 'false', 'After trying all the possible pairs (i, j), we cannot satisfy the three conditions, so we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('485', '213', '1', 'matrix = [[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('486', '213', '2', 'matrix = [[\"0\",\"1\"],[\"1\",\"0\"]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('487', '213', '3', 'matrix = [[\"0\"]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('488', '214', '1', 'root = [1,2,3,4,5,6]', '6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('489', '214', '2', 'root = []', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('490', '214', '3', 'root = [1]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('491', '215', '1', 'ax1 = -3, ay1 = 0, ax2 = 3, ay2 = 4, bx1 = 0, by1 = -1, bx2 = 9, by2 = 2', '45', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('492', '215', '2', 'ax1 = -2, ay1 = -2, ax2 = 2, ay2 = 2, bx1 = -2, by1 = -2, bx2 = 2, by2 = 2', '16', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('493', '216', '1', 's = \"1 + 1\"', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('494', '216', '2', 's = \" 2-1 + 2 \"', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('495', '216', '3', 's = \"(1+(4+5+2)-3)+(6+8)\"', '23', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('496', '217', '1', '[\"MyStack\", \"push\", \"push\", \"top\", \"pop\", \"empty\"]\n[[], [1], [2], [], [], []]', '[null, null, null, 2, 2, false]', 'MyStack myStack = new MyStack();\nmyStack.push(1);\nmyStack.push(2);\nmyStack.top(); // return 2\nmyStack.pop(); // return 2\nmyStack.empty(); // return False');
INSERT INTO `question_master_detail_coding_temp` VALUES ('497', '218', '1', 'root = [4,2,7,1,3,6,9]', '[4,7,2,9,6,3,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('498', '218', '2', 'root = [2,1,3]', '[2,3,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('499', '218', '3', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('500', '219', '1', 's = \"3+2*2\"', '7', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('501', '219', '2', 's = \" 3/2 \"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('502', '219', '3', 's = \" 3+5 / 2 \"', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('503', '205', '1', 'nums = [2,3,2]', '3', 'You cannot rob house 1 (money = 2) and then rob house 3 (money = 2), because they are adjacent houses.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('504', '205', '2', 'nums = [1,2,3,1]', '4', 'Rob house 1 (money = 1) and then rob house 3 (money = 3).\nTotal amount you can rob = 1 + 3 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('505', '205', '3', 'nums = [1,2,3]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('506', '208', '1', 'k = 3, n = 7', '[[1,2,4]]', '1 + 2 + 4 = 7\nThere are no other valid combinations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('507', '208', '2', 'k = 3, n = 9', '[[1,2,6],[1,3,5],[2,3,4]]', '1 + 2 + 6 = 9\n1 + 3 + 5 = 9\n2 + 3 + 4 = 9\nThere are no other valid combinations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('508', '208', '3', 'k = 4, n = 1', '[]', 'There are no valid combinations.\nUsing 4 different numbers in the range [1,9], the smallest sum we can get is 1+2+3+4 = 10 and since 10 &gt; 1, there are no valid combination.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('509', '220', '1', 'nums = [0,1,2,4,5,7]', '[\"0-&gt;2\",\"4-&gt;5\",\"7\"]', 'The ranges are:\n[0,2] --&gt; \"0-&gt;2\"\n[4,5] --&gt; \"4-&gt;5\"\n[7,7] --&gt; \"7\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('510', '220', '2', 'nums = [0,2,3,4,6,8,9]', '[\"0\",\"2-&gt;4\",\"6\",\"8-&gt;9\"]', 'The ranges are:\n[0,0] --&gt; \"0\"\n[2,4] --&gt; \"2-&gt;4\"\n[6,6] --&gt; \"6\"\n[8,9] --&gt; \"8-&gt;9\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('511', '221', '1', 'nums = [3,2,3]', '[3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('512', '221', '2', 'nums = [1]', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('513', '221', '3', 'nums = [1,2]', '[1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('514', '222', '1', 'root = [3,1,4,null,2], k = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('515', '222', '2', 'root = [5,3,6,2,4,null,null,1], k = 3', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('516', '223', '1', 'n = 1', 'true', '2<sup>0</sup> = 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('517', '223', '2', 'n = 16', 'true', '2<sup>4</sup> = 16');
INSERT INTO `question_master_detail_coding_temp` VALUES ('518', '223', '3', 'n = 3', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('519', '224', '1', '[\"MyQueue\", \"push\", \"push\", \"peek\", \"pop\", \"empty\"]\n[[], [1], [2], [], [], []]', '[null, null, null, 1, 1, false]', 'MyQueue myQueue = new MyQueue();\nmyQueue.push(1); // queue is: [1]\nmyQueue.push(2); // queue is: [1, 2] (leftmost is front of the queue)\nmyQueue.peek(); // return 1\nmyQueue.pop(); // return 1, queue is [2]\nmyQueue.empty(); // return false');
INSERT INTO `question_master_detail_coding_temp` VALUES ('520', '225', '1', 'n = 13', '6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('521', '225', '2', 'n = 0', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('522', '226', '1', 'head = [1,2,2,1]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('523', '226', '2', 'head = [1,2]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('524', '227', '1', 'root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8', '6', 'The LCA of nodes 2 and 8 is 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('525', '227', '2', 'root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 4', '2', 'The LCA of nodes 2 and 4 is 2, since a node can be a descendant of itself according to the LCA definition.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('526', '227', '3', 'root = [2,1], p = 2, q = 1', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('527', '228', '1', 'root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1', '3', 'The LCA of nodes 5 and 1 is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('528', '228', '2', 'root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4', '5', 'The LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('529', '228', '3', 'root = [1,2], p = 1, q = 2', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('530', '229', '1', 'head = [4,5,1,9], node = 5', '[4,1,9]', 'You are given the second node with value 5, the linked list should become 4 -&gt; 1 -&gt; 9 after calling your function.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('531', '229', '2', 'head = [4,5,1,9], node = 1', '[4,5,9]', 'You are given the third node with value 1, the linked list should become 4 -&gt; 5 -&gt; 9 after calling your function.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('532', '230', '1', 'nums = [1,2,3,4]', '[24,12,8,6]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('533', '230', '2', 'nums = [-1,1,0,-3,3]', '[0,0,9,0,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('534', '231', '1', 'nums = [1,3,-1,-3,5,3,6,7], k = 3', '[3,3,5,5,6,7]', 'Window position                Max\n---------------               -----\n[1  3  -1] -3  5  3  6  7       <strong>3</strong>\n 1 [3  -1  -3] 5  3  6  7       <strong>3</strong>\n 1  3 [-1  -3  5] 3  6  7      <strong> 5</strong>\n 1  3  -1 [-3  5  3] 6  7       <strong>5</strong>\n 1  3  -1  -3 [5  3  6] 7       <strong>6</strong>\n 1  3  -1  -3  5 [3  6  7]      <strong>7</strong>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('535', '231', '2', 'nums = [1], k = 1', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('536', '232', '1', 'matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('537', '232', '2', 'matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 20', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('538', '233', '1', 'expression = \"2-1-1\"', '[0,2]', '((2-1)-1) = 0 \n(2-(1-1)) = 2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('539', '233', '2', 'expression = \"2*3-4*5\"', '[-34,-14,-10,-10,10]', '(2*(3-(4*5))) = -34 \n((2*3)-(4*5)) = -14 \n((2*(3-4))*5) = -10 \n(2*((3-4)*5)) = -10 \n(((2*3)-4)*5) = 10');
INSERT INTO `question_master_detail_coding_temp` VALUES ('540', '234', '1', 's = \"anagram\", t = \"nagaram\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('541', '234', '2', 's = \"rat\", t = \"car\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('542', '235', '1', 'root = [1,2,3,null,5]', '[\"1-&gt;2-&gt;5\",\"1-&gt;3\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('543', '235', '2', 'root = [1]', '[\"1\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('544', '236', '1', 'num = 38', '2', 'The process is\n38 --&gt; 3 + 8 --&gt; 11\n11 --&gt; 1 + 1 --&gt; 2 \nSince 2 has only one digit, return it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('545', '236', '2', 'num = 0', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('546', '237', '1', 'nums = [1,2,1,3,2,5]', '[3,5]', '[5, 3] is also a valid answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('547', '237', '2', 'nums = [-1,0]', '[-1,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('548', '237', '3', 'nums = [0,1]', '[1,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('549', '238', '1', 'Trips table:\n+----+-----------+-----------+---------+---------------------+------------+\n| id | client_id | driver_id | city_id | status              | request_at |\n+----+-----------+-----------+---------+---------------------+------------+\n| 1  | 1         | 10        | 1       | completed           | 2013-10-01 |\n| 2  | 2         | 11        | 1       | cancelled_by_driver | 2013-10-01 |\n| 3  | 3         | 12        | 6       | completed           | 2013-10-01 |\n| 4  | 4         | 13        | 6       | cancelled_by_client | 2013-10-01 |\n| 5  | 1         | 10        | 1       | completed           | 2013-10-02 |\n| 6  | 2         | 11        | 6       | completed           | 2013-10-02 |\n| 7  | 3         | 12        | 6       | completed           | 2013-10-02 |\n| 8  | 2         | 12        | 12      | completed           | 2013-10-03 |\n| 9  | 3         | 10        | 12      | completed           | 2013-10-03 |\n| 10 | 4         | 13        | 12      | cancelled_by_driver | 2013-10-03 |\n+----+-----------+-----------+---------+---------------------+------------+\nUsers table:\n+----------+--------+--------+\n| users_id | banned | role   |\n+----------+--------+--------+\n| 1        | No     | client |\n| 2        | Yes    | client |\n| 3        | No     | client |\n| 4        | No     | client |\n| 10       | No     | driver |\n| 11       | No     | driver |\n| 12       | No     | driver |\n| 13       | No     | driver |\n+----------+--------+--------+', '+------------+-------------------+\n| Day        | Cancellation Rate |\n+------------+-------------------+\n| 2013-10-01 | 0.33              |\n| 2013-10-02 | 0.00              |\n| 2013-10-03 | 0.50              |\n+------------+-------------------+', 'On 2013-10-01:\n  - There were 4 requests in total, 2 of which were canceled.\n  - However, the request with Id=2 was made by a banned client (User_Id=2), so it is ignored in the calculation.\n  - Hence there are 3 unbanned requests in total, 1 of which was canceled.\n  - The Cancellation Rate is (1 / 3) = 0.33\nOn 2013-10-02:\n  - There were 3 requests in total, 0 of which were canceled.\n  - The request with Id=6 was made by a banned client, so it is ignored.\n  - Hence there are 2 unbanned requests in total, 0 of which were canceled.\n  - The Cancellation Rate is (0 / 2) = 0.00\nOn 2013-10-03:\n  - There were 3 requests in total, 1 of which was canceled.\n  - The request with Id=8 was made by a banned client, so it is ignored.\n  - Hence there are 2 unbanned request in total, 1 of which were canceled.\n  - The Cancellation Rate is (1 / 2) = 0.50');
INSERT INTO `question_master_detail_coding_temp` VALUES ('550', '240', '1', 'n = 10', '12', '[1, 2, 3, 4, 5, 6, 8, 9, 10, 12] is the sequence of the first 10 ugly numbers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('551', '240', '2', 'n = 1', '1', '1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('552', '241', '1', 'nums = [3,0,1]', '2', 'n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('553', '241', '2', 'nums = [0,1]', '2', 'n = 2 since there are 2 numbers, so all numbers are in the range [0,2]. 2 is the missing number in the range since it does not appear in nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('554', '241', '3', 'nums = [9,6,4,2,3,5,7,0,1]', '8', 'n = 9 since there are 9 numbers, so all numbers are in the range [0,9]. 8 is the missing number in the range since it does not appear in nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('555', '242', '1', 'num = 123', '\"One Hundred Twenty Three\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('556', '242', '2', 'num = 12345', '\"Twelve Thousand Three Hundred Forty Five\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('557', '242', '3', 'num = 1234567', '\"One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('558', '243', '1', 'citations = [3,0,6,1,5]', '3', '[3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively.\nSince the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('559', '243', '2', 'citations = [1,3,1]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('560', '245', '1', 'n = 5, bad = 4', '4', 'call isBadVersion(3) -&gt; false\ncall isBadVersion(5) -&gt; true\ncall isBadVersion(4) -&gt; true\nThen 4 is the first bad version.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('561', '245', '2', 'n = 1, bad = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('562', '246', '1', 'n = 12', '3', '12 = 4 + 4 + 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('563', '246', '2', 'n = 13', '2', '13 = 4 + 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('564', '247', '1', 'num = \"123\", target = 6', '[\"1*2*3\",\"1+2+3\"]', 'Both \"1*2*3\" and \"1+2+3\" evaluate to 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('565', '247', '2', 'num = \"232\", target = 8', '[\"2*3+2\",\"2+3*2\"]', 'Both \"2*3+2\" and \"2+3*2\" evaluate to 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('566', '247', '3', 'num = \"3456237490\", target = 9191', '[]', 'There are no expressions that can be created from \"3456237490\" to evaluate to 9191.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('567', '248', '1', 'nums = [0,1,0,3,12]', '[1,3,12,0,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('568', '248', '2', 'nums = [0]', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('569', '249', '1', '[\"PeekingIterator\", \"next\", \"peek\", \"next\", \"next\", \"hasNext\"]\n[[[1, 2, 3]], [], [], [], [], []]', '[null, 1, 2, 2, 3, false]', 'PeekingIterator peekingIterator = new PeekingIterator([1, 2, 3]); // [<u><strong>1</strong></u>,2,3]\npeekingIterator.next();    // return 1, the pointer moves to the next element [1,<u><strong>2</strong></u>,3].\npeekingIterator.peek();    // return 2, the pointer does not move [1,<u><strong>2</strong></u>,3].\npeekingIterator.next();    // return 2, the pointer moves to the next element [1,2,<u><strong>3</strong></u>]\npeekingIterator.next();    // return 3, the pointer moves to the next element [1,2,3]\npeekingIterator.hasNext(); // return False');
INSERT INTO `question_master_detail_coding_temp` VALUES ('570', '250', '1', 'nums = [1,3,4,2,2]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('571', '250', '2', 'nums = [3,1,3,4,2]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('572', '251', '1', 'board = [[0,1,0],[0,0,1],[1,1,1],[0,0,0]]', '[[0,0,0],[1,0,1],[0,1,1],[0,1,0]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('573', '251', '2', 'board = [[1,1],[1,0]]', '[[1,1],[1,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('574', '252', '1', 'pattern = \"abba\", s = \"dog cat cat dog\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('575', '252', '2', 'pattern = \"abba\", s = \"dog cat cat fish\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('576', '252', '3', 'pattern = \"aaaa\", s = \"dog cat cat dog\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('577', '253', '1', 'n = 4', 'false', 'These are the possible outcomes:\n1. You remove 1 stone. Your friend removes 3 stones, including the last stone. Your friend wins.\n2. You remove 2 stones. Your friend removes 2 stones, including the last stone. Your friend wins.\n3. You remove 3 stones. Your friend removes the last stone. Your friend wins.\nIn all outcomes, your friend wins.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('578', '253', '2', 'n = 1', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('579', '253', '3', 'n = 2', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('580', '254', '1', '[\"MedianFinder\", \"addNum\", \"addNum\", \"findMedian\", \"addNum\", \"findMedian\"]\n[[], [1], [2], [], [3], []]', '[null, null, null, 1.5, null, 2.0]', 'MedianFinder medianFinder = new MedianFinder();\nmedianFinder.addNum(1);    // arr = [1]\nmedianFinder.addNum(2);    // arr = [1, 2]\nmedianFinder.findMedian(); // return 1.5 (i.e., (1 + 2) / 2)\nmedianFinder.addNum(3);    // arr[1, 2, 3]\nmedianFinder.findMedian(); // return 2.0');
INSERT INTO `question_master_detail_coding_temp` VALUES ('581', '255', '1', 'root = [1,2,3,null,null,4,5]', '[1,2,3,null,null,4,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('582', '255', '2', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('583', '256', '1', 'secret = \"1807\", guess = \"7810\"', '\"1A3B\"', 'Bulls are connected with a \'|\' and cows are underlined:\n\"1807\"\n  |\n\"<u>7</u>8<u>10</u>\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('584', '256', '2', 'secret = \"1123\", guess = \"0111\"', '\"1A1B\"', 'Bulls are connected with a \'|\' and cows are underlined:\n\"1123\"        \"1123\"\n  |      or     |\n\"01<u>1</u>1\"        \"011<u>1</u>\"\nNote that only one of the two unmatched 1s is counted as a cow since the non-bull digits can only be rearranged to allow one 1 to be a bull.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('585', '257', '1', 'nums = [10,9,2,5,3,7,101,18]', '4', 'The longest increasing subsequence is [2,3,7,101], therefore the length is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('586', '257', '2', 'nums = [0,1,0,3,2,3]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('587', '257', '3', 'nums = [7,7,7,7,7,7,7]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('588', '258', '1', 's = \"()())()\"', '[\"(())()\",\"()()()\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('589', '258', '2', 's = \"(a)())()\"', '[\"(a())()\",\"(a)()()\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('590', '258', '3', 's = \")(\"', '[\"\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('591', '259', '1', '[\"NumArray\", \"sumRange\", \"sumRange\", \"sumRange\"]\n[[[-2, 0, 3, -5, 2, -1]], [0, 2], [2, 5], [0, 5]]', '[null, 1, -1, -3]', 'NumArray numArray = new NumArray([-2, 0, 3, -5, 2, -1]);\nnumArray.sumRange(0, 2); // return (-2) + 0 + 3 = 1\nnumArray.sumRange(2, 5); // return 3 + (-5) + 2 + (-1) = -1\nnumArray.sumRange(0, 5); // return (-2) + 0 + 3 + (-5) + 2 + (-1) = -3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('592', '260', '1', '[\"NumMatrix\", \"sumRegion\", \"sumRegion\", \"sumRegion\"]\n[[[[3, 0, 1, 4, 2], [5, 6, 3, 2, 1], [1, 2, 0, 1, 5], [4, 1, 0, 1, 7], [1, 0, 3, 0, 5]]], [2, 1, 4, 3], [1, 1, 2, 2], [1, 2, 2, 4]]', '[null, 8, 11, 12]', 'NumMatrix numMatrix = new NumMatrix([[3, 0, 1, 4, 2], [5, 6, 3, 2, 1], [1, 2, 0, 1, 5], [4, 1, 0, 1, 7], [1, 0, 3, 0, 5]]);\nnumMatrix.sumRegion(2, 1, 4, 3); // return 8 (i.e sum of the red rectangle)\nnumMatrix.sumRegion(1, 1, 2, 2); // return 11 (i.e sum of the green rectangle)\nnumMatrix.sumRegion(1, 2, 2, 4); // return 12 (i.e sum of the blue rectangle)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('593', '261', '1', '\"112358\"', 'true', 'The digits can form an additive sequence: 1, 1, 2, 3, 5, 8. \n1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8');
INSERT INTO `question_master_detail_coding_temp` VALUES ('594', '261', '2', '\"199100199\"', 'true', 'The additive sequence is: 1, 99, 100, 199. \n1 + 99 = 100, 99 + 100 = 199');
INSERT INTO `question_master_detail_coding_temp` VALUES ('595', '262', '1', '[\"NumArray\", \"sumRange\", \"update\", \"sumRange\"]\n[[[1, 3, 5]], [0, 2], [1, 2], [0, 2]]', '[null, 9, null, 8]', 'NumArray numArray = new NumArray([1, 3, 5]);\nnumArray.sumRange(0, 2); // return 1 + 3 + 5 = 9\nnumArray.update(1, 2);   // nums = [1, 2, 5]\nnumArray.sumRange(0, 2); // return 1 + 2 + 5 = 8');
INSERT INTO `question_master_detail_coding_temp` VALUES ('596', '263', '1', 'prices = [1,2,3,0,2]', '3', 'transactions = [buy, sell, cooldown, buy, sell]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('597', '263', '2', 'prices = [1]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('598', '264', '1', 'n = 4, edges = [[1,0],[1,2],[1,3]]', '[1]', 'As shown, the height of the tree is 1 when the root is the node with label 1 which is the only MHT.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('599', '264', '2', 'n = 6, edges = [[3,0],[3,1],[3,2],[3,4],[5,4]]', '[3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('600', '265', '1', 'nums = [3,1,5,8]', '167', 'nums = [3,1,5,8] --&gt; [3,5,8] --&gt; [3,8] --&gt; [8] --&gt; []\ncoins =  3*1*5    +   3*5*8   +  1*3*8  + 1*8*1 = 167');
INSERT INTO `question_master_detail_coding_temp` VALUES ('601', '265', '2', 'nums = [1,5]', '10', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('602', '266', '1', 'n = 12, primes = [2,7,13,19]', '32', '[1,2,4,7,8,13,14,16,19,26,28,32] is the sequence of the first 12 super ugly numbers given primes = [2,7,13,19].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('603', '266', '2', 'n = 1, primes = [2,3,5]', '1', '1 has no prime factors, therefore all of its prime factors are in the array primes = [2,3,5].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('604', '267', '1', 'nums = [5,2,6,1]', '[2,1,1,0]', 'To the right of 5 there are <b>2</b> smaller elements (2 and 1).\nTo the right of 2 there is only <b>1</b> smaller element (1).\nTo the right of 6 there is <b>1</b> smaller element (1).\nTo the right of 1 there is <b>0</b> smaller element.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('605', '267', '2', 'nums = [-1]', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('606', '267', '3', 'nums = [-1,-1]', '[0,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('607', '268', '1', 's = \"bcabc\"', '\"abc\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('608', '268', '2', 's = \"cbacdcbc\"', '\"acdb\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('609', '269', '1', 'words = [\"abcw\",\"baz\",\"foo\",\"bar\",\"xtfn\",\"abcdef\"]', '16', 'The two words can be \"abcw\", \"xtfn\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('610', '269', '2', 'words = [\"a\",\"ab\",\"abc\",\"d\",\"cd\",\"bcd\",\"abcd\"]', '4', 'The two words can be \"ab\", \"cd\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('611', '269', '3', 'words = [\"a\",\"aa\",\"aaa\",\"aaaa\"]', '0', 'No such pair of words.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('612', '270', '1', 'n = 3', '1', 'At first, the three bulbs are [off, off, off].\nAfter the first round, the three bulbs are [on, on, on].\nAfter the second round, the three bulbs are [on, off, on].\nAfter the third round, the three bulbs are [on, off, off]. \nSo you should return 1 because there is only one bulb is on.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('613', '270', '2', 'n = 0', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('614', '270', '3', 'n = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('615', '271', '1', 'nums1 = [3,4,6,5], nums2 = [9,1,2,5,8,3], k = 5', '[9,8,6,5,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('616', '271', '2', 'nums1 = [6,7], nums2 = [6,0,4], k = 5', '[6,7,6,0,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('617', '271', '3', 'nums1 = [3,9], nums2 = [8,9], k = 3', '[9,8,9]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('618', '272', '1', 'coins = [1,2,5], amount = 11', '3', '11 = 5 + 5 + 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('619', '272', '2', 'coins = [2], amount = 3', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('620', '272', '3', 'coins = [1], amount = 0', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('621', '273', '1', 'nums = [1,5,1,1,6,4]', '[1,6,1,5,1,4]', '[1,4,1,5,1,6] is also accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('622', '273', '2', 'nums = [1,3,2,2,3,1]', '[2,3,1,3,1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('623', '274', '1', 'n = 27', 'true', '27 = 3<sup>3</sup>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('624', '274', '2', 'n = 0', 'false', 'There is no x where 3<sup>x</sup> = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('625', '274', '3', 'n = -1', 'false', 'There is no x where 3<sup>x</sup> = (-1).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('626', '275', '1', 'nums = [-2,5,-1], lower = -2, upper = 2', '3', 'The three ranges are: [0,0], [2,2], and [0,2] and their respective sums are: -2, -1, 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('627', '275', '2', 'nums = [0], lower = 0, upper = 0', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('628', '276', '1', 'head = [1,2,3,4,5]', '[1,3,5,2,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('629', '276', '2', 'head = [2,1,3,5,6,4,7]', '[2,3,6,7,1,5,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('630', '277', '1', 'matrix = [[9,9,4],[6,6,8],[2,1,1]]', '4', 'The longest increasing path is <code>[1, 2, 6, 9]</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('631', '277', '2', 'matrix = [[3,4,5],[3,2,6],[2,2,1]]', '4', 'The longest increasing path is <code>[3, 4, 5, 6]</code>. Moving diagonally is not allowed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('632', '277', '3', 'matrix = [[1]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('633', '278', '1', 'nums = [1,3], n = 6', '1', 'Combinations of nums are [1], [3], [1,3], which form possible sums of: 1, 3, 4.\nNow if we add/patch 2 to nums, the combinations are: [1], [2], [3], [1,3], [2,3], [1,2,3].\nPossible sums are 1, 2, 3, 4, 5, 6, which now covers the range [1, 6].\nSo we only need 1 patch.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('634', '278', '2', 'nums = [1,5,10], n = 20', '2', 'The two patches can be [2, 4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('635', '278', '3', 'nums = [1,2,2], n = 5', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('636', '279', '1', 'preorder = \"9,3,4,#,#,1,#,#,2,#,6,#,#\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('637', '279', '2', 'preorder = \"1,#\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('638', '279', '3', 'preorder = \"9,#,#,1\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('639', '280', '1', 'tickets = [[\"MUC\",\"LHR\"],[\"JFK\",\"MUC\"],[\"SFO\",\"SJC\"],[\"LHR\",\"SFO\"]]', '[\"JFK\",\"MUC\",\"LHR\",\"SFO\",\"SJC\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('640', '280', '2', 'tickets = [[\"JFK\",\"SFO\"],[\"JFK\",\"ATL\"],[\"SFO\",\"ATL\"],[\"ATL\",\"JFK\"],[\"ATL\",\"SFO\"]]', '[\"JFK\",\"ATL\",\"JFK\",\"SFO\",\"ATL\",\"SFO\"]', 'Another possible reconstruction is [\"JFK\",\"SFO\",\"ATL\",\"JFK\",\"ATL\",\"SFO\"] but it is larger in lexical order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('641', '281', '1', 'nums = [1,2,3,4,5]', 'true', 'Any triplet where i &lt; j &lt; k is valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('642', '281', '2', 'nums = [5,4,3,2,1]', 'false', 'No triplet exists.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('643', '281', '3', 'nums = [2,1,5,0,4,6]', 'true', 'The triplet (3, 4, 5) is valid because nums[3] == 0 &lt; nums[4] == 4 &lt; nums[5] == 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('644', '282', '1', 'distance = [2,1,1,2]', 'true', 'The path crosses itself at the point (0, 1).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('645', '282', '2', 'distance = [1,2,3,4]', 'false', 'The path does not cross itself at any point.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('646', '282', '3', 'distance = [1,1,1,2,1]', 'true', 'The path crosses itself at the point (0, 0).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('647', '283', '1', 'words = [\"abcd\",\"dcba\",\"lls\",\"s\",\"sssll\"]', '[[0,1],[1,0],[3,2],[2,4]]', 'The palindromes are [\"abcddcba\",\"dcbaabcd\",\"slls\",\"llssssll\"]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('648', '283', '2', 'words = [\"bat\",\"tab\",\"cat\"]', '[[0,1],[1,0]]', 'The palindromes are [\"battab\",\"tabbat\"]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('649', '283', '3', 'words = [\"a\",\"\"]', '[[0,1],[1,0]]', 'The palindromes are [\"a\",\"a\"]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('650', '284', '1', 'root = [3,2,3,null,3,null,1]', '7', 'Maximum amount of money the thief can rob = 3 + 3 + 1 = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('651', '284', '2', 'root = [3,4,5,1,3,null,1]', '9', 'Maximum amount of money the thief can rob = 4 + 5 = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('652', '285', '1', 'n = 2', '[0,1,1]', '0 --&gt; 0\n1 --&gt; 1\n2 --&gt; 10');
INSERT INTO `question_master_detail_coding_temp` VALUES ('653', '285', '2', 'n = 5', '[0,1,1,2,1,2]', '0 --&gt; 0\n1 --&gt; 1\n2 --&gt; 10\n3 --&gt; 11\n4 --&gt; 100\n5 --&gt; 101');
INSERT INTO `question_master_detail_coding_temp` VALUES ('654', '286', '1', 'nestedList = [[1,1],2,[1,1]]', '[1,1,2,1,1]', 'By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,1,2,1,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('655', '286', '2', 'nestedList = [1,[4,[6]]]', '[1,4,6]', 'By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,4,6].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('656', '287', '1', 'n = 16', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('657', '287', '2', 'n = 5', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('658', '287', '3', 'n = 1', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('659', '288', '1', 'n = 2', '1', '2 = 1 + 1, 1 × 1 = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('660', '288', '2', 'n = 10', '36', '10 = 3 + 3 + 4, 3 × 3 × 4 = 36.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('661', '289', '1', 's = [\"h\",\"e\",\"l\",\"l\",\"o\"]', '[\"o\",\"l\",\"l\",\"e\",\"h\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('662', '289', '2', 's = [\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]', '[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('663', '290', '1', 's = \"hello\"', '\"holle\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('664', '290', '2', 's = \"leetcode\"', '\"leotcede\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('665', '291', '1', 'nums = [1,1,1,2,2,3], k = 2', '[1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('666', '291', '2', 'nums = [1], k = 1', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('667', '292', '1', 'nums1 = [1,2,2,1], nums2 = [2,2]', '[2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('668', '292', '2', 'nums1 = [4,9,5], nums2 = [9,4,9,8,4]', '[9,4]', '[4,9] is also accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('669', '293', '1', 'nums1 = [1,2,2,1], nums2 = [2,2]', '[2,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('670', '293', '2', 'nums1 = [4,9,5], nums2 = [9,4,9,8,4]', '[4,9]', '[9,4] is also accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('671', '294', '1', '[\"SummaryRanges\", \"addNum\", \"getIntervals\", \"addNum\", \"getIntervals\", \"addNum\", \"getIntervals\", \"addNum\", \"getIntervals\", \"addNum\", \"getIntervals\"]\n[[], [1], [], [3], [], [7], [], [2], [], [6], []]', '[null, null, [[1, 1]], null, [[1, 1], [3, 3]], null, [[1, 1], [3, 3], [7, 7]], null, [[1, 3], [7, 7]], null, [[1, 3], [6, 7]]]', 'SummaryRanges summaryRanges = new SummaryRanges();\nsummaryRanges.addNum(1);      // arr = [1]\nsummaryRanges.getIntervals(); // return [[1, 1]]\nsummaryRanges.addNum(3);      // arr = [1, 3]\nsummaryRanges.getIntervals(); // return [[1, 1], [3, 3]]\nsummaryRanges.addNum(7);      // arr = [1, 3, 7]\nsummaryRanges.getIntervals(); // return [[1, 1], [3, 3], [7, 7]]\nsummaryRanges.addNum(2);      // arr = [1, 2, 3, 7]\nsummaryRanges.getIntervals(); // return [[1, 3], [7, 7]]\nsummaryRanges.addNum(6);      // arr = [1, 2, 3, 6, 7]\nsummaryRanges.getIntervals(); // return [[1, 3], [6, 7]]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('672', '295', '1', 'envelopes = [[5,4],[6,4],[6,7],[2,3]]', '3', 'The maximum number of envelopes you can Russian doll is <code>3</code> ([2,3] =&gt; [5,4] =&gt; [6,7]).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('673', '295', '2', 'envelopes = [[1,1],[1,1],[1,1]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('674', '296', '1', '[\"Twitter\", \"postTweet\", \"getNewsFeed\", \"follow\", \"postTweet\", \"getNewsFeed\", \"unfollow\", \"getNewsFeed\"]\n[[], [1, 5], [1], [1, 2], [2, 6], [1], [1, 2], [1]]', '[null, null, [5], null, null, [6, 5], null, [5]]', 'Twitter twitter = new Twitter();\ntwitter.postTweet(1, 5); // User 1 posts a new tweet (id = 5).\ntwitter.getNewsFeed(1);  // User 1\'s news feed should return a list with 1 tweet id -&gt; [5]. return [5]\ntwitter.follow(1, 2);    // User 1 follows user 2.\ntwitter.postTweet(2, 6); // User 2 posts a new tweet (id = 6).\ntwitter.getNewsFeed(1);  // User 1\'s news feed should return a list with 2 tweet ids -&gt; [6, 5]. Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.\ntwitter.unfollow(1, 2);  // User 1 unfollows user 2.\ntwitter.getNewsFeed(1);  // User 1\'s news feed should return a list with 1 tweet id -&gt; [5], since user 1 is no longer following user 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('675', '297', '2', 'n = 0', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('676', '298', '1', 'matrix = [[1,0,1],[0,-2,3]], k = 2', '2', 'Because the sum of the blue rectangle [[0, 1], [-2, 3]] is 2, and 2 is the max number no larger than k (k = 2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('677', '298', '2', 'matrix = [[2,2,-1]], k = 3', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('678', '299', '1', 'jug1Capacity = 3, jug2Capacity = 5, targetCapacity = 4', 'true', 'The famous <a href=\"https://www.youtube.com/watch?v=BVtQNK_ZUJg&amp;ab_channel=notnek01\" target=\"_blank\">Die Hard</a> example');
INSERT INTO `question_master_detail_coding_temp` VALUES ('679', '299', '2', 'jug1Capacity = 2, jug2Capacity = 6, targetCapacity = 5', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('680', '299', '3', 'jug1Capacity = 1, jug2Capacity = 2, targetCapacity = 3', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('681', '300', '1', 'num = 16', 'true', 'We return true because 4 * 4 = 16 and 4 is an integer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('682', '300', '2', 'num = 14', 'false', 'We return false because 3.742 * 3.742 = 14 and 3.742 is not an integer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('683', '301', '1', 'nums = [1,2,3]', '[1,2]', '[1,3] is also accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('684', '301', '2', 'nums = [1,2,4,8]', '[1,2,4,8]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('685', '302', '1', 'a = 1, b = 2', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('686', '302', '2', 'a = 2, b = 3', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('687', '303', '1', 'a = 2, b = [3]', '8', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('688', '303', '2', 'a = 2, b = [1,0]', '1024', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('689', '303', '3', 'a = 1, b = [4,3,3,8,5,2]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('690', '304', '1', 'nums1 = [1,7,11], nums2 = [2,4,6], k = 3', '[[1,2],[1,4],[1,6]]', 'The first 3 pairs are returned from the sequence: [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('691', '304', '2', 'nums1 = [1,1,2], nums2 = [1,2,3], k = 2', '[[1,1],[1,1]]', 'The first 2 pairs are returned from the sequence: [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('692', '304', '3', 'nums1 = [1,2], nums2 = [3], k = 3', '[[1,3],[2,3]]', 'All possible pairs are returned from the sequence: [1,3],[2,3]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('693', '305', '1', 'n = 10, pick = 6', '6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('694', '305', '2', 'n = 1, pick = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('695', '305', '3', 'n = 2, pick = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('696', '306', '1', 'n = 10', '16', 'The winning strategy is as follows:\n- The range is [1,10]. Guess 7.\n    - If this is my number, your total is $0. Otherwise, you pay $7.\n    - If my number is higher, the range is [8,10]. Guess 9.\n        - If this is my number, your total is $7. Otherwise, you pay $9.\n        - If my number is higher, it must be 10. Guess 10. Your total is $7 + $9 = $16.\n        - If my number is lower, it must be 8. Guess 8. Your total is $7 + $9 = $16.\n    - If my number is lower, the range is [1,6]. Guess 3.\n        - If this is my number, your total is $7. Otherwise, you pay $3.\n        - If my number is higher, the range is [4,6]. Guess 5.\n            - If this is my number, your total is $7 + $3 = $10. Otherwise, you pay $5.\n            - If my number is higher, it must be 6. Guess 6. Your total is $7 + $3 + $5 = $15.\n            - If my number is lower, it must be 4. Guess 4. Your total is $7 + $3 + $5 = $15.\n        - If my number is lower, the range is [1,2]. Guess 1.\n            - If this is my number, your total is $7 + $3 = $10. Otherwise, you pay $1.\n            - If my number is higher, it must be 2. Guess 2. Your total is $7 + $3 + $1 = $11.\nThe worst case in all these scenarios is that you pay $16. Hence, you only need $16 to guarantee a win.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('697', '306', '2', 'n = 1', '0', 'There is only one possible number, so you can guess 1 and not have to pay anything.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('698', '306', '3', 'n = 2', '1', 'There are two possible numbers, 1 and 2.\n- Guess 1.\n    - If this is my number, your total is $0. Otherwise, you pay $1.\n    - If my number is higher, it must be 2. Guess 2. Your total is $1.\nThe worst case is that you pay $1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('699', '307', '1', 'nums = [1,7,4,9,2,5]', '6', 'The entire sequence is a wiggle sequence with differences (6, -3, 5, -7, 3).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('700', '307', '2', 'nums = [1,17,5,10,13,15,10,5,16,8]', '7', 'There are several subsequences that achieve this length.\nOne is [1, 17, 10, 13, 10, 16, 8] with differences (16, -7, 3, -3, 6, -8).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('701', '307', '3', 'nums = [1,2,3,4,5,6,7,8,9]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('702', '308', '1', 'nums = [1,2,3], target = 4', '7', 'The possible combination ways are:\n(1, 1, 1, 1)\n(1, 1, 2)\n(1, 2, 1)\n(1, 3)\n(2, 1, 1)\n(2, 2)\n(3, 1)\nNote that different sequences are counted as different combinations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('703', '308', '2', 'nums = [9], target = 3', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('704', '309', '1', 'matrix = [[1,5,9],[10,11,13],[12,13,15]], k = 8', '13', 'The elements in the matrix are [1,5,9,10,11,12,13,<u><strong>13</strong></u>,15], and the 8<sup>th</sup> smallest number is 13');
INSERT INTO `question_master_detail_coding_temp` VALUES ('705', '309', '2', 'matrix = [[-5]], k = 1', '-5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('706', '310', '1', '[\"RandomizedSet\", \"insert\", \"remove\", \"insert\", \"getRandom\", \"remove\", \"insert\", \"getRandom\"]\n[[], [1], [2], [2], [], [1], [2], []]', '[null, true, false, true, 2, true, false, 2]', 'RandomizedSet randomizedSet = new RandomizedSet();\nrandomizedSet.insert(1); // Inserts 1 to the set. Returns true as 1 was inserted successfully.\nrandomizedSet.remove(2); // Returns false as 2 does not exist in the set.\nrandomizedSet.insert(2); // Inserts 2 to the set, returns true. Set now contains [1,2].\nrandomizedSet.getRandom(); // getRandom() should return either 1 or 2 randomly.\nrandomizedSet.remove(1); // Removes 1 from the set, returns true. Set now contains [2].\nrandomizedSet.insert(2); // 2 was already in the set, so return false.\nrandomizedSet.getRandom(); // Since 2 is the only number in the set, getRandom() will always return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('707', '312', '1', '[\"Solution\", \"getRandom\", \"getRandom\", \"getRandom\", \"getRandom\", \"getRandom\"]\n[[[1, 2, 3]], [], [], [], [], []]', '[null, 1, 3, 2, 2, 3]', 'Solution solution = new Solution([1, 2, 3]);\nsolution.getRandom(); // return 1\nsolution.getRandom(); // return 3\nsolution.getRandom(); // return 2\nsolution.getRandom(); // return 2\nsolution.getRandom(); // return 3\n// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('708', '313', '1', 'ransomNote = \"a\", magazine = \"b\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('709', '313', '2', 'ransomNote = \"aa\", magazine = \"ab\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('710', '313', '3', 'ransomNote = \"aa\", magazine = \"aab\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('711', '314', '1', '[\"Solution\", \"shuffle\", \"reset\", \"shuffle\"]\n[[[1, 2, 3]], [], [], []]', '[null, [3, 1, 2], [1, 2, 3], [1, 3, 2]]', 'Solution solution = new Solution([1, 2, 3]);\nsolution.shuffle();    // Shuffle the array [1,2,3] and return its result.\n                       // Any permutation of [1,2,3] must be equally likely to be returned.\n                       // Example: return [3, 1, 2]\nsolution.reset();      // Resets the array back to its original configuration [1,2,3]. Return [1, 2, 3]\nsolution.shuffle();    // Returns the random shuffling of array [1,2,3]. Example: return [1, 3, 2]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('712', '315', '1', 's = \"324\"', '324', 'You should return a NestedInteger object which contains a single integer 324.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('713', '315', '2', 's = \"[123,[456,[789]]]\"', '[123,[456,[789]]]', 'Return a NestedInteger object containing a nested list with 2 elements:\n1. An integer containing value 123.\n2. A nested list containing two elements:\n    i.  An integer containing value 456.\n    ii. A nested list with one element:\n         a. An integer containing value 789');
INSERT INTO `question_master_detail_coding_temp` VALUES ('714', '316', '1', 'n = 13', '[1,10,11,12,13,2,3,4,5,6,7,8,9]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('715', '316', '2', 'n = 2', '[1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('716', '317', '1', 's = \"leetcode\"', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('717', '317', '2', 's = \"loveleetcode\"', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('718', '317', '3', 's = \"aabb\"', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('719', '318', '1', 'input = \"dir\\n\\tsubdir1\\n\\tsubdir2\\n\\t\\tfile.ext\"', '20', 'We have only one file, and the absolute path is \"dir/subdir2/file.ext\" of length 20.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('720', '318', '2', 'input = \"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\"', '32', 'We have two files:\n\"dir/subdir1/file1.ext\" of length 21\n\"dir/subdir2/subsubdir2/file2.ext\" of length 32.\nWe return 32 since it is the longest absolute path to a file.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('721', '318', '3', 'input = \"a\"', '0', 'We do not have any files, just a single directory named \"a\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('722', '319', '1', 's = \"abcd\", t = \"abcde\"', '\"e\"', '\'e\' is the letter that was added.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('723', '319', '2', 's = \"\", t = \"y\"', '\"y\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('724', '320', '1', 'n = 9', '6', 'arr = [<u>1</u>, 2, <u>3</u>, 4, <u>5</u>, 6, <u>7</u>, 8, <u>9</u>]\narr = [2, <u>4</u>, 6, <u>8</u>]\narr = [<u>2</u>, 6]\narr = [6]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('725', '320', '2', 'n = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('726', '321', '1', 'rectangles = [[1,1,3,3],[3,1,4,2],[3,2,4,4],[1,3,2,4],[2,3,3,4]]', 'true', 'All 5 rectangles together form an exact cover of a rectangular region.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('727', '321', '2', 'rectangles = [[1,1,2,3],[1,3,2,4],[3,1,4,2],[3,2,4,4]]', 'false', 'Because there is a gap between the two rectangular regions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('728', '321', '3', 'rectangles = [[1,1,3,3],[3,1,4,2],[1,3,2,4],[2,2,4,4]]', 'false', 'Because two of the rectangles overlap with each other.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('729', '322', '1', 's = \"abc\", t = \"ahbgdc\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('730', '322', '2', 's = \"axc\", t = \"ahbgdc\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('731', '323', '1', 'data = [197,130,1]', 'true', 'data represents the octet sequence: 11000101 10000010 00000001.\nIt is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('732', '323', '2', 'data = [235,140,4]', 'false', 'data represented the octet sequence: 11101011 10001100 00000100.\nThe first 3 bits are all one\'s and the 4th bit is 0 means it is a 3-bytes character.\nThe next byte is a continuation byte which starts with 10 and that\'s correct.\nBut the second continuation byte does not start with 10, so it is invalid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('733', '324', '1', 's = \"3[a]2[bc]\"', '\"aaabcbc\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('734', '324', '2', 's = \"3[a2[c]]\"', '\"accaccacc\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('735', '324', '3', 's = \"2[abc]3[cd]ef\"', '\"abcabccdcdcdef\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('736', '325', '1', 's = \"aaabb\", k = 3', '3', 'The longest substring is \"aaa\", as \'a\' is repeated 3 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('737', '325', '2', 's = \"ababbc\", k = 2', '5', 'The longest substring is \"ababb\", as \'a\' is repeated 2 times and \'b\' is repeated 3 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('738', '326', '1', 'nums = [4,3,2,6]', '26', 'F(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('739', '326', '2', 'nums = [100]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('740', '327', '1', 'n = 8', '3', '8 -&gt; 4 -&gt; 2 -&gt; 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('741', '327', '2', 'n = 7', '4', '7 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1\nor 7 -&gt; 6 -&gt; 3 -&gt; 2 -&gt; 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('742', '327', '3', 'n = 4', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('743', '328', '1', '[\"Solution\", \"pick\", \"pick\", \"pick\"]\n[[[1, 2, 3, 3, 3]], [3], [1], [3]]', '[null, 4, 0, 2]', 'Solution solution = new Solution([1, 2, 3, 3, 3]);\nsolution.pick(3); // It should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\nsolution.pick(1); // It should return 0. Since in the array only nums[0] is equal to 1.\nsolution.pick(3); // It should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('744', '329', '1', 'equations = [[\"a\",\"b\"],[\"b\",\"c\"]], values = [2.0,3.0], queries = [[\"a\",\"c\"],[\"b\",\"a\"],[\"a\",\"e\"],[\"a\",\"a\"],[\"x\",\"x\"]]', '[6.00000,0.50000,-1.00000,1.00000,-1.00000]', 'Given: <em>a / b = 2.0</em>, <em>b / c = 3.0</em>\nqueries are: <em>a / c = ?</em>, <em>b / a = ?</em>, <em>a / e = ?</em>, <em>a / a = ?</em>, <em>x / x = ?</em>\nreturn: [6.0, 0.5, -1.0, 1.0, -1.0 ]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('745', '329', '2', 'equations = [[\"a\",\"b\"],[\"b\",\"c\"],[\"bc\",\"cd\"]], values = [1.5,2.5,5.0], queries = [[\"a\",\"c\"],[\"c\",\"b\"],[\"bc\",\"cd\"],[\"cd\",\"bc\"]]', '[3.75000,0.40000,5.00000,0.20000]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('746', '329', '3', 'equations = [[\"a\",\"b\"]], values = [0.5], queries = [[\"a\",\"b\"],[\"b\",\"a\"],[\"a\",\"c\"],[\"x\",\"y\"]]', '[0.50000,2.00000,-1.00000,-1.00000]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('747', '330', '1', 'n = 3', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('748', '330', '2', 'n = 11', '0', 'The 11<sup>th</sup> digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('749', '331', '1', 'turnedOn = 1', '[\"0:01\",\"0:02\",\"0:04\",\"0:08\",\"0:16\",\"0:32\",\"1:00\",\"2:00\",\"4:00\",\"8:00\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('750', '331', '2', 'turnedOn = 9', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('751', '332', '1', 'num = \"1432219\", k = 3', '\"1219\"', 'Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('752', '332', '2', 'num = \"10200\", k = 1', '\"200\"', 'Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('753', '332', '3', 'num = \"10\", k = 2', '\"0\"', 'Remove all the digits from the number and it is left with nothing which is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('754', '333', '1', 'stones = [0,1,3,5,6,8,12,17]', 'true', 'The frog can jump to the last stone by jumping 1 unit to the 2nd stone, then 2 units to the 3rd stone, then 2 units to the 4th stone, then 3 units to the 6th stone, 4 units to the 7th stone, and 5 units to the 8th stone.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('755', '333', '2', 'stones = [0,1,2,3,4,8,9,11]', 'false', 'There is no way to jump to the last stone as the gap between the 5th and 6th stone is too large.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('756', '334', '1', 'root = [3,9,20,null,null,15,7]', '24', 'There are two left leaves in the binary tree, with values 9 and 15 respectively.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('757', '334', '2', 'root = [1]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('758', '335', '1', 'num = 26', '\"1a\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('759', '335', '2', 'num = -1', '\"ffffffff\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('760', '336', '1', 'people = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]', '[[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]', 'Person 0 has height 5 with no other people taller or the same height in front.\nPerson 1 has height 7 with no other people taller or the same height in front.\nPerson 2 has height 5 with two persons taller or the same height in front, which is person 0 and 1.\nPerson 3 has height 6 with one person taller or the same height in front, which is person 1.\nPerson 4 has height 4 with four people taller or the same height in front, which are people 0, 1, 2, and 3.\nPerson 5 has height 7 with one person taller or the same height in front, which is person 1.\nHence [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] is the reconstructed queue.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('761', '336', '2', 'people = [[6,0],[5,0],[4,0],[3,2],[2,2],[1,4]]', '[[4,0],[5,0],[2,2],[3,2],[1,4],[6,0]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('762', '337', '1', 'heightMap = [[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]', '4', 'After the rain, water is trapped between the blocks.\nWe have two small ponds 1 and 3 units trapped.\nThe total volume of water trapped is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('763', '337', '2', 'heightMap = [[3,3,3,3,3],[3,2,2,2,3],[3,2,1,2,3],[3,2,2,2,3],[3,3,3,3,3]]', '10', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('764', '338', '1', 's = \"abccccdd\"', '7', 'One longest palindrome that can be built is \"dccaccd\", whose length is 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('765', '338', '2', 's = \"a\"', '1', 'The longest palindrome that can be built is \"a\", whose length is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('766', '339', '1', 'nums = [7,2,5,10,8], k = 2', '18', 'There are four ways to split nums into two subarrays.\nThe best way is to split it into [7,2,5] and [10,8], where the largest sum among the two subarrays is only 18.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('767', '339', '2', 'nums = [1,2,3,4,5], k = 2', '9', 'There are four ways to split nums into two subarrays.\nThe best way is to split it into [1,2,3] and [4,5], where the largest sum among the two subarrays is only 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('768', '340', '1', 'n = 3', '[\"1\",\"2\",\"Fizz\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('769', '340', '2', 'n = 5', '[\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('770', '340', '3', 'n = 15', '[\"1\",\"2\",\"Fizz\",\"4\",\"Buzz\",\"Fizz\",\"7\",\"8\",\"Fizz\",\"Buzz\",\"11\",\"Fizz\",\"13\",\"14\",\"FizzBuzz\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('771', '341', '1', 'nums = [1,2,3,4]', '3', 'We have 3 arithmetic slices in nums: [1, 2, 3], [2, 3, 4] and [1,2,3,4] itself.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('772', '341', '2', 'nums = [1]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('773', '342', '1', 'nums = [3,2,1]', '1', 'The first distinct maximum is 3.\nThe second distinct maximum is 2.\nThe third distinct maximum is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('774', '342', '2', 'nums = [1,2]', '2', 'The first distinct maximum is 2.\nThe second distinct maximum is 1.\nThe third distinct maximum does not exist, so the maximum (2) is returned instead.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('775', '342', '3', 'nums = [2,2,3,1]', '1', 'The first distinct maximum is 3.\nThe second distinct maximum is 2 (both 2\'s are counted together since they have the same value).\nThe third distinct maximum is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('776', '343', '1', 'num1 = \"11\", num2 = \"123\"', '\"134\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('777', '343', '2', 'num1 = \"456\", num2 = \"77\"', '\"533\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('778', '343', '3', 'num1 = \"0\", num2 = \"0\"', '\"0\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('779', '344', '1', 'nums = [1,5,11,5]', 'true', 'The array can be partitioned as [1, 5, 5] and [11].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('780', '344', '2', 'nums = [1,2,3,5]', 'false', 'The array cannot be partitioned into equal sum subsets.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('781', '345', '1', 'heights = [[1,2,2,3,5],[3,2,3,4,4],[2,4,5,3,1],[6,7,1,4,5],[5,1,1,2,4]]', '[[0,4],[1,3],[1,4],[2,2],[3,0],[3,1],[4,0]]', 'The following cells can flow to the Pacific and Atlantic oceans, as shown below:\n[0,4]: [0,4] -&gt; Pacific Ocean \n       [0,4] -&gt; Atlantic Ocean\n[1,3]: [1,3] -&gt; [0,3] -&gt; Pacific Ocean \n       [1,3] -&gt; [1,4] -&gt; Atlantic Ocean\n[1,4]: [1,4] -&gt; [1,3] -&gt; [0,3] -&gt; Pacific Ocean \n       [1,4] -&gt; Atlantic Ocean\n[2,2]: [2,2] -&gt; [1,2] -&gt; [0,2] -&gt; Pacific Ocean \n       [2,2] -&gt; [2,3] -&gt; [2,4] -&gt; Atlantic Ocean\n[3,0]: [3,0] -&gt; Pacific Ocean \n       [3,0] -&gt; [4,0] -&gt; Atlantic Ocean\n[3,1]: [3,1] -&gt; [3,0] -&gt; Pacific Ocean \n       [3,1] -&gt; [4,1] -&gt; Atlantic Ocean\n[4,0]: [4,0] -&gt; Pacific Ocean \n       [4,0] -&gt; Atlantic Ocean\nNote that there are other possible paths for these cells to flow to the Pacific and Atlantic oceans.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('782', '345', '2', 'heights = [[1]]', '[[0,0]]', 'The water can flow from the only cell to the Pacific and Atlantic oceans.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('783', '346', '1', 'board = [[\"X\",\".\",\".\",\"X\"],[\".\",\".\",\".\",\"X\"],[\".\",\".\",\".\",\"X\"]]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('784', '346', '2', 'board = [[\".\"]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('785', '347', '1', 'password = \"a\"', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('786', '347', '2', 'password = \"aA1\"', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('787', '347', '3', 'password = \"1337C0d3\"', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('788', '348', '1', 'nums = [3,10,5,25,2,8]', '28', 'The maximum result is 5 XOR 25 = 28.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('789', '348', '2', 'nums = [14,70,53,83,49,91,36,80,92,51,66,70]', '127', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('790', '349', '1', 's = \"owoztneoer\"', '\"012\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('791', '349', '2', 's = \"fviefuro\"', '\"45\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('792', '350', '1', 's = \"ABAB\", k = 2', '4', 'Replace the two \'A\'s with two \'B\'s or vice versa.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('793', '350', '2', 's = \"AABABBA\", k = 1', '4', 'Replace the one \'A\' in the middle with \'B\' and form \"AABBBBA\".\nThe substring \"BBBB\" has the longest repeating letters, which is 4.\nThere may exists other ways to achive this answer too.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('794', '351', '1', 'grid = [[0,1],[1,0]]', '[[0,1],[1,0],[1,1],[1,1],[1,0]]', 'The explanation of this example is shown below:\nNotice that 0 represnts False and 1 represents True in the photo representing the Quad-Tree.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/12/e1tree.png\" style=\"width:777px;height:186px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('795', '351', '2', 'grid = [[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0]]', '[[0,1],[1,1],[0,1],[1,1],[1,0],null,null,null,null,[1,0],[1,0],[1,1],[1,1]]', 'All values in the grid are not the same. We divide the grid into four sub-grids.\nThe topLeft, bottomLeft and bottomRight each has the same value.\nThe topRight have different values so we divide it into 4 sub-grids where each has the same value.\nExplanation is shown in the photo below:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/12/e2tree.png\" style=\"width:777px;height:328px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('796', '352', '1', 'root = [1,null,3,2,4,null,5,6]', '[[1],[3,2,4],[5,6]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('797', '352', '2', 'root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]', '[[1],[2,3,4,5],[6,7,8,9,10],[11,12,13],[14]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('798', '353', '1', 'head = [1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]', '[1,2,3,7,8,11,12,9,10,4,5,6]', 'The multilevel linked list in the input is shown.\nAfter flattening the multilevel linked list it becomes:\n<img src=\"https://assets.leetcode.com/uploads/2021/11/09/flatten12.jpg\" style=\"width:1000px;height:69px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('799', '353', '2', 'head = [1,2,null,3]', '[1,3,2]', 'The multilevel linked list in the input is shown.\nAfter flattening the multilevel linked list it becomes:\n<img src=\"https://assets.leetcode.com/uploads/2021/11/24/list.jpg\" style=\"width:300px;height:87px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('800', '353', '3', 'head = []', '[]', 'There could be empty list in the input.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('801', '354', '1', '[\"AllOne\", \"inc\", \"inc\", \"getMaxKey\", \"getMinKey\", \"inc\", \"getMaxKey\", \"getMinKey\"]\n[[], [\"hello\"], [\"hello\"], [], [], [\"leet\"], [], []]', '[null, null, null, \"hello\", \"hello\", null, \"hello\", \"leet\"]', 'AllOne allOne = new AllOne();\nallOne.inc(\"hello\");\nallOne.inc(\"hello\");\nallOne.getMaxKey(); // return \"hello\"\nallOne.getMinKey(); // return \"hello\"\nallOne.inc(\"leet\");\nallOne.getMaxKey(); // return \"hello\"\nallOne.getMinKey(); // return \"leet\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('802', '355', '1', 'startGene = \"AACCGGTT\", endGene = \"AACCGGTA\", bank = [\"AACCGGTA\"]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('803', '355', '2', 'startGene = \"AACCGGTT\", endGene = \"AAACGGTA\", bank = [\"AACCGGTA\",\"AACCGCTA\",\"AAACGGTA\"]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('804', '356', '1', 's = \"Hello, my name is John\"', '5', 'The five segments are [\"Hello,\", \"my\", \"name\", \"is\", \"John\"]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('805', '356', '2', 's = \"Hello\"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('806', '357', '1', 'intervals = [[1,2],[2,3],[3,4],[1,3]]', '1', '[1,3] can be removed and the rest of the intervals are non-overlapping.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('807', '357', '2', 'intervals = [[1,2],[1,2],[1,2]]', '2', 'You need to remove two [1,2] to make the rest of the intervals non-overlapping.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('808', '357', '3', 'intervals = [[1,2],[2,3]]', '0', 'You don\'t need to remove any of the intervals since they\'re already non-overlapping.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('809', '358', '1', 'intervals = [[1,2]]', '[-1]', 'There is only one interval in the collection, so it outputs -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('810', '358', '2', 'intervals = [[3,4],[2,3],[1,2]]', '[-1,0,1]', 'There is no right interval for [3,4].\nThe right interval for [2,3] is [3,4] since start<sub>0</sub> = 3 is the smallest start that is &gt;= end<sub>1</sub> = 3.\nThe right interval for [1,2] is [2,3] since start<sub>1</sub> = 2 is the smallest start that is &gt;= end<sub>2</sub> = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('811', '358', '3', 'intervals = [[1,4],[2,3],[3,4]]', '[-1,2,-1]', 'There is no right interval for [1,4] and [3,4].\nThe right interval for [2,3] is [3,4] since start<sub>2</sub> = 3 is the smallest start that is &gt;= end<sub>1</sub> = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('812', '360', '1', 's = \"cbaebabacd\", p = \"abc\"', '[0,6]', 'The substring with start index = 0 is \"cba\", which is an anagram of \"abc\".\nThe substring with start index = 6 is \"bac\", which is an anagram of \"abc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('813', '360', '2', 's = \"abab\", p = \"ab\"', '[0,1,2]', 'The substring with start index = 0 is \"ab\", which is an anagram of \"ab\".\nThe substring with start index = 1 is \"ba\", which is an anagram of \"ab\".\nThe substring with start index = 2 is \"ab\", which is an anagram of \"ab\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('814', '361', '1', 'n = 13, k = 2', '10', 'The lexicographical order is [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9], so the second smallest number is 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('815', '361', '2', 'n = 1, k = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('816', '362', '1', 'n = 5', '2', 'Because the 3<sup>rd</sup> row is incomplete, we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('817', '362', '2', 'n = 8', '3', 'Because the 4<sup>th</sup> row is incomplete, we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('818', '363', '1', 'nums = [4,3,2,7,8,2,3,1]', '[2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('819', '363', '2', 'nums = [1,1,2]', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('820', '363', '3', 'nums = [1]', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('821', '364', '1', 'chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]', 'Return 6, and the first 6 characters of the input array should be: [\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]', 'The groups are \"aa\", \"bb\", and \"ccc\". This compresses to \"a2b2c3\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('822', '364', '2', 'chars = [\"a\"]', 'Return 1, and the first character of the input array should be: [\"a\"]', 'The only group is \"a\", which remains uncompressed since it\'s a single character.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('823', '364', '3', 'chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]', 'Return 4, and the first 4 characters of the input array should be: [\"a\",\"b\",\"1\",\"2\"].', 'The groups are \"a\" and \"bbbbbbbbbbbb\". This compresses to \"ab12\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('824', '365', '1', 'l1 = [7,2,4,3], l2 = [5,6,4]', '[7,8,0,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('825', '365', '2', 'l1 = [2,4,3], l2 = [5,6,4]', '[8,0,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('826', '365', '3', 'l1 = [0], l2 = [0]', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('827', '366', '1', 'nums = [2,4,6,8,10]', '7', 'All arithmetic subsequence slices are:\n[2,4,6]\n[4,6,8]\n[6,8,10]\n[2,4,6,8]\n[4,6,8,10]\n[2,4,6,8,10]\n[2,6,10]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('828', '366', '2', 'nums = [7,7,7,7,7]', '16', 'Any subsequence of this array is arithmetic.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('829', '367', '1', 'points = [[0,0],[1,0],[2,0]]', '2', 'The two boomerangs are [[1,0],[0,0],[2,0]] and [[1,0],[2,0],[0,0]].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('830', '367', '2', 'points = [[1,1],[2,2],[3,3]]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('831', '367', '3', 'points = [[1,1]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('832', '368', '1', 'nums = [4,3,2,7,8,2,3,1]', '[5,6]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('833', '368', '2', 'nums = [1,1]', '[2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('834', '369', '1', 'root = [2,1,3]', '[2,1,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('835', '369', '2', 'root = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('836', '370', '1', 'root = [5,3,6,2,4,null,7], key = 3', '[5,4,6,2,null,null,7]', 'Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is [5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is [5,2,6,null,4,null,7] and it\'s also accepted.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg\" style=\"width:350px;height:255px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('837', '370', '2', 'root = [5,3,6,2,4,null,7], key = 0', '[5,3,6,2,4,null,7]', 'The tree does not contain a node with value = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('838', '370', '3', 'root = [], key = 0', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('839', '371', '1', 's = \"tree\"', '\"eert\"', '\'e\' appears twice while \'r\' and \'t\' both appear once.\nSo \'e\' must appear before both \'r\' and \'t\'. Therefore \"eetr\" is also a valid answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('840', '371', '2', 's = \"cccaaa\"', '\"aaaccc\"', 'Both \'c\' and \'a\' appear three times, so both \"cccaaa\" and \"aaaccc\" are valid answers.\nNote that \"cacaca\" is incorrect, as the same characters must be together.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('841', '371', '3', 's = \"Aabb\"', '\"bbAa\"', '\"bbaA\" is also a valid answer, but \"Aabb\" is incorrect.\nNote that \'A\' and \'a\' are treated as two different characters.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('842', '372', '1', 'points = [[10,16],[2,8],[1,6],[7,12]]', '2', 'The balloons can be burst by 2 arrows:\n- Shoot an arrow at x = 6, bursting the balloons [2,8] and [1,6].\n- Shoot an arrow at x = 11, bursting the balloons [10,16] and [7,12].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('843', '372', '2', 'points = [[1,2],[3,4],[5,6],[7,8]]', '4', 'One arrow needs to be shot for each balloon for a total of 4 arrows.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('844', '372', '3', 'points = [[1,2],[2,3],[3,4],[4,5]]', '2', 'The balloons can be burst by 2 arrows:\n- Shoot an arrow at x = 2, bursting the balloons [1,2] and [2,3].\n- Shoot an arrow at x = 4, bursting the balloons [3,4] and [4,5].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('845', '373', '1', 'nums = [1,2,3]', '3', 'Only three moves are needed (remember each move increments two elements):\n[1,2,3]  =&gt;  [2,3,3]  =&gt;  [3,4,3]  =&gt;  [4,4,4]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('846', '373', '2', 'nums = [1,1,1]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('847', '374', '1', 'nums1 = [1,2], nums2 = [-2,-1], nums3 = [-1,2], nums4 = [0,2]', '2', 'The two tuples are:\n1. (0, 0, 0, 1) -&gt; nums1[0] + nums2[0] + nums3[0] + nums4[1] = 1 + (-2) + (-1) + 2 = 0\n2. (1, 1, 0, 0) -&gt; nums1[1] + nums2[1] + nums3[0] + nums4[0] = 2 + (-1) + (-1) + 0 = 0');
INSERT INTO `question_master_detail_coding_temp` VALUES ('848', '374', '2', 'nums1 = [0], nums2 = [0], nums3 = [0], nums4 = [0]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('849', '375', '1', 'g = [1,2,3], s = [1,1]', '1', 'You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. \nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.\nYou need to output 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('850', '375', '2', 'g = [1,2], s = [1,2,3]', '2', 'You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. \nYou have 3 cookies and their sizes are big enough to gratify all of the children, \nYou need to output 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('851', '376', '1', 'nums = [1,2,3,4]', 'false', 'There is no 132 pattern in the sequence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('852', '376', '2', 'nums = [3,1,4,2]', 'true', 'There is a 132 pattern in the sequence: [1, 4, 2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('853', '376', '3', 'nums = [-1,3,2,0]', 'true', 'There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('854', '377', '1', 'nums = [2,-1,1,2,2]', 'true', 'The graph shows how the indices are connected. White nodes are jumping forward, while red is jumping backward.\nWe can see the cycle 0 --&gt; 2 --&gt; 3 --&gt; 0 --&gt; ..., and all of its nodes are white (jumping in the same direction).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('855', '377', '2', 'nums = [-1,-2,-3,-4,-5,6]', 'false', 'The graph shows how the indices are connected. White nodes are jumping forward, while red is jumping backward.\nThe only cycle is of size 1, so we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('856', '377', '3', 'nums = [1,-1,5,1,4]', 'true', 'The graph shows how the indices are connected. White nodes are jumping forward, while red is jumping backward.\nWe can see the cycle 0 --&gt; 1 --&gt; 0 --&gt; ..., and while it is of size &gt; 1, it has a node jumping forward and a node jumping backward, so <strong>it is not a cycle</strong>.\nWe can see the cycle 3 --&gt; 4 --&gt; 3 --&gt; ..., and all of its nodes are white (jumping in the same direction).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('857', '378', '1', 'buckets = 4, minutesToDie = 15, minutesToTest = 15', '2', 'We can determine the poisonous bucket as follows:\nAt time 0, feed the first pig buckets 1 and 2, and feed the second pig buckets 2 and 3.\nAt time 15, there are 4 possible outcomes:\n- If only the first pig dies, then bucket 1 must be poisonous.\n- If only the second pig dies, then bucket 3 must be poisonous.\n- If both pigs die, then bucket 2 must be poisonous.\n- If neither pig dies, then bucket 4 must be poisonous.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('858', '378', '2', 'buckets = 4, minutesToDie = 15, minutesToTest = 30', '2', 'We can determine the poisonous bucket as follows:\nAt time 0, feed the first pig bucket 1, and feed the second pig bucket 2.\nAt time 15, there are 2 possible outcomes:\n- If either pig dies, then the poisonous bucket is the one it was fed.\n- If neither pig dies, then feed the first pig bucket 3, and feed the second pig bucket 4.\nAt time 30, one of the two pigs must die, and the poisonous bucket is the one it was fed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('859', '379', '1', 's = \"abab\"', 'true', 'It is the substring \"ab\" twice.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('860', '379', '2', 's = \"aba\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('861', '379', '3', 's = \"abcabcabcabc\"', 'true', 'It is the substring \"abc\" four times or the substring \"abcabc\" twice.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('862', '381', '2', 'x = 3, y = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('863', '382', '1', 'nums = [1,2,3]', '2', 'Only two moves are needed (remember each move increments or decrements one element):\n[<u>1</u>,2,3]  =&gt;  [2,2,<u>3</u>]  =&gt;  [2,2,2]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('864', '382', '2', 'nums = [1,10,2,9]', '16', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('865', '383', '1', 'grid = [[0,1,0,0],[1,1,1,0],[0,1,0,0],[1,1,0,0]]', '16', 'The perimeter is the 16 yellow stripes in the image above.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('866', '383', '2', 'grid = [[1]]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('867', '383', '3', 'grid = [[1,0]]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('868', '384', '1', 'maxChoosableInteger = 10, desiredTotal = 11', 'false', 'No matter which integer the first player choose, the first player will lose.\nThe first player can choose an integer from 1 up to 10.\nIf the first player choose 1, the second player can only choose integers from 2 up to 10.\nThe second player will win by choosing 10 and get a total = 11, which is &gt;= desiredTotal.\nSame with other integers chosen by the first player, the second player will always win.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('869', '384', '2', 'maxChoosableInteger = 10, desiredTotal = 0', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('870', '384', '3', 'maxChoosableInteger = 10, desiredTotal = 1', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('871', '385', '1', 's1 = \"acb\", n1 = 4, s2 = \"ab\", n2 = 2', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('872', '385', '2', 's1 = \"acb\", n1 = 1, s2 = \"acb\", n2 = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('873', '386', '1', 's = \"a\"', '1', 'Only the substring \"a\" of s is in base.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('874', '386', '2', 's = \"cac\"', '2', 'There are two substrings (\"a\", \"c\") of s in base.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('875', '386', '3', 's = \"zab\"', '6', 'There are six substrings (\"z\", \"a\", \"b\", \"za\", \"ab\", and \"zab\") of s in base.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('876', '387', '1', 'queryIP = \"172.16.254.1\"', '\"IPv4\"', 'This is a valid IPv4 address, return \"IPv4\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('877', '387', '2', 'queryIP = \"2001:0db8:85a3:0:0:8A2E:0370:7334\"', '\"IPv6\"', 'This is a valid IPv6 address, return \"IPv6\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('878', '387', '3', 'queryIP = \"256.256.256.256\"', '\"Neither\"', 'This is neither a IPv4 address nor a IPv6 address.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('879', '388', '1', 'n = 1', '[2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('880', '388', '2', 'n = 2', '[2,8]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('881', '388', '3', 'n = 3', '[3,8,10]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('882', '389', '1', 'words = [\"cat\",\"cats\",\"catsdogcats\",\"dog\",\"dogcatsdog\",\"hippopotamuses\",\"rat\",\"ratcatdogcat\"]', '[\"catsdogcats\",\"dogcatsdog\",\"ratcatdogcat\"]', '\"catsdogcats\" can be concatenated by \"cats\", \"dog\" and \"cats\"; \n\"dogcatsdog\" can be concatenated by \"dog\", \"cats\" and \"dog\"; \n\"ratcatdogcat\" can be concatenated by \"rat\", \"cat\", \"dog\" and \"cat\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('883', '389', '2', 'words = [\"cat\",\"dog\",\"catdog\"]', '[\"catdog\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('884', '390', '1', 'matchsticks = [1,1,2,2,2]', 'true', 'You can form a square with length 2, one side of the square came two sticks with length 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('885', '390', '2', 'matchsticks = [3,3,3,3,4]', 'false', 'You cannot find a way to form a square with all the matchsticks.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('886', '391', '1', 'strs = [\"10\",\"0001\",\"111001\",\"1\",\"0\"], m = 5, n = 3', '4', 'The largest subset with at most 5 0\'s and 3 1\'s is {\"10\", \"0001\", \"1\", \"0\"}, so the answer is 4.\nOther valid but smaller subsets include {\"0001\", \"1\"} and {\"10\", \"1\", \"0\"}.\n{\"111001\"} is an invalid subset because it contains 4 1\'s, greater than the maximum of 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('887', '391', '2', 'strs = [\"10\",\"0\",\"1\"], m = 1, n = 1', '2', 'The largest subset is {\"0\", \"1\"}, so the answer is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('888', '393', '1', 'num = 5', '2', 'The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('889', '393', '2', 'num = 1', '0', 'The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('890', '394', '1', 'nums = [4,14,2]', '6', 'In binary representation, the 4 is 0100, 14 is 1110, and 2 is 0010 (just\nshowing the four bits relevant in this case).\nThe answer will be:\nHammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('891', '394', '2', 'nums = [4,14,4]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('892', '395', '1', '[\"Solution\", \"randPoint\", \"randPoint\", \"randPoint\"]\n[[1.0, 0.0, 0.0], [], [], []]', '[null, [-0.02493, -0.38077], [0.82314, 0.38945], [0.36572, 0.17248]]', 'Solution solution = new Solution(1.0, 0.0, 0.0);\nsolution.randPoint(); // return [-0.02493, -0.38077]\nsolution.randPoint(); // return [0.82314, 0.38945]\nsolution.randPoint(); // return [0.36572, 0.17248]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('893', '396', '1', 'n = 2', '987', '99 x 91 = 9009, 9009 % 1337 = 987');
INSERT INTO `question_master_detail_coding_temp` VALUES ('894', '396', '2', 'n = 1', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('895', '397', '1', 'nums = [1,3,-1,-3,5,3,6,7], k = 3', '[1.00000,-1.00000,-1.00000,3.00000,5.00000,6.00000]', 'Window position                Median\n---------------                -----\n[<strong>1  3  -1</strong>] -3  5  3  6  7        1\n 1 [<strong>3  -1  -3</strong>] 5  3  6  7       -1\n 1  3 [<strong>-1  -3  5</strong>] 3  6  7       -1\n 1  3  -1 [<strong>-3  5  3</strong>] 6  7        3\n 1  3  -1  -3 [<strong>5  3  6</strong>] 7        5\n 1  3  -1  -3  5 [<strong>3  6  7</strong>]       6');
INSERT INTO `question_master_detail_coding_temp` VALUES ('896', '397', '2', 'nums = [1,2,3,4,2,3,1,4,2], k = 3', '[2.00000,3.00000,3.00000,3.00000,2.00000,3.00000,2.00000]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('897', '398', '1', 'n = 6', '3', 'The first 6 elements of magical string s is \"122112\" and it contains three 1\'s, so return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('898', '398', '2', 'n = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('899', '399', '1', 's = \"5F3Z-2e-9-w\", k = 4', '\"5F3Z-2E9W\"', 'The string s has been split into two parts, each part has 4 characters.\nNote that the two extra dashes are not needed and can be removed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('900', '399', '2', 's = \"2-5g-3-J\", k = 2', '\"2-5G-3J\"', 'The string s has been split into three parts, each part has 2 characters except the first part as it could be shorter as mentioned above.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('901', '400', '1', 'n = \"13\"', '\"3\"', '13 base 3 is 111.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('902', '400', '2', 'n = \"4681\"', '\"8\"', '4681 base 8 is 11111.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('903', '400', '3', 'n = \"1000000000000000000\"', '\"999999999999999999\"', '1000000000000000000 base 999999999999999999 is 11.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('904', '401', '1', 'nums = [1,1,0,1,1,1]', '3', 'The first two digits or the last three digits are consecutive 1s. The maximum number of consecutive 1s is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('905', '401', '2', 'nums = [1,0,1,1,0,1]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('906', '402', '1', 'nums = [1,5,2]', 'false', 'Initially, player 1 can choose between 1 and 2. \nIf he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). \nSo, final score of player 1 is 1 + 2 = 3, and player 2 is 5. \nHence, player 1 will never be the winner and you need to return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('907', '402', '2', 'nums = [1,5,233,7]', 'true', 'Player 1 first chooses 1. Then player 2 has to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.\nFinally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('908', '403', '1', 'board = \"WRRBBW\", hand = \"RB\"', '-1', 'It is impossible to clear all the balls. The best you can do is:\n- Insert \'R\' so the board becomes WRR<u>R</u>BBW. W<u>RRR</u>BBW -&gt; WBBW.\n- Insert \'B\' so the board becomes WBB<u>B</u>W. W<u>BBB</u>W -&gt; WW.\nThere are still balls remaining on the board, and you are out of balls to insert.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('909', '403', '2', 'board = \"WWRRBBWW\", hand = \"WRBRW\"', '2', 'To make the board empty:\n- Insert \'R\' so the board becomes WWRR<u>R</u>BBWW. WW<u>RRR</u>BBWW -&gt; WWBBWW.\n- Insert \'B\' so the board becomes WWBB<u>B</u>WW. WW<u>BBB</u>WW -&gt; <u>WWWW</u> -&gt; empty.\n2 balls from your hand were needed to clear the board.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('910', '403', '3', 'board = \"G\", hand = \"GGGGG\"', '2', 'To make the board empty:\n- Insert \'G\' so the board becomes G<u>G</u>.\n- Insert \'G\' so the board becomes GG<u>G</u>. <u>GGG</u> -&gt; empty.\n2 balls from your hand were needed to clear the board.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('911', '404', '1', 'nums = [4,6,7,7]', '[[4,6],[4,6,7],[4,6,7,7],[4,7],[4,7,7],[6,7],[6,7,7],[7,7]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('912', '404', '2', 'nums = [4,4,3,2,1]', '[[4,4]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('913', '405', '1', 'area = 4', '[2,2]', 'The target area is 4, and all the possible ways to construct it are [1,4], [2,2], [4,1]. \nBut according to requirement 2, [1,4] is illegal; according to requirement 3,  [4,1] is not optimal compared to [2,2]. So the length L is 2, and the width W is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('914', '405', '2', 'area = 37', '[37,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('915', '405', '3', 'area = 122122', '[427,286]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('916', '406', '1', 'nums = [1,3,2,3,1]', '2', 'The reverse pairs are:\n(1, 4) --&gt; nums[1] = 3, nums[4] = 1, 3 &gt; 2 * 1\n(3, 4) --&gt; nums[3] = 3, nums[4] = 1, 3 &gt; 2 * 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('917', '406', '2', 'nums = [2,4,3,5,1]', '3', 'The reverse pairs are:\n(1, 4) --&gt; nums[1] = 4, nums[4] = 1, 4 &gt; 2 * 1\n(2, 4) --&gt; nums[2] = 3, nums[4] = 1, 3 &gt; 2 * 1\n(3, 4) --&gt; nums[3] = 5, nums[4] = 1, 5 &gt; 2 * 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('918', '407', '1', 'nums = [1,1,1,1,1], target = 3', '5', 'There are 5 ways to assign symbols to make the sum of nums be target 3.\n-1 + 1 + 1 + 1 + 1 = 3\n+1 - 1 + 1 + 1 + 1 = 3\n+1 + 1 - 1 + 1 + 1 = 3\n+1 + 1 + 1 - 1 + 1 = 3\n+1 + 1 + 1 + 1 - 1 = 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('919', '407', '2', 'nums = [1], target = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('920', '408', '1', 'timeSeries = [1,4], duration = 2', '4', 'Teemo\'s attacks on Ashe go as follows:\n- At second 1, Teemo attacks, and Ashe is poisoned for seconds 1 and 2.\n- At second 4, Teemo attacks, and Ashe is poisoned for seconds 4 and 5.\nAshe is poisoned for seconds 1, 2, 4, and 5, which is 4 seconds in total.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('921', '408', '2', 'timeSeries = [1,2], duration = 2', '3', 'Teemo\'s attacks on Ashe go as follows:\n- At second 1, Teemo attacks, and Ashe is poisoned for seconds 1 and 2.\n- At second 2 however, Teemo attacks again and resets the poison timer. Ashe is poisoned for seconds 2 and 3.\nAshe is poisoned for seconds 1, 2, and 3, which is 3 seconds in total.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('922', '409', '1', 'nums1 = [4,1,2], nums2 = [1,3,4,2]', '[-1,3,-1]', 'The next greater element for each value of nums1 is as follows:\n- 4 is underlined in nums2 = [1,3,<u>4</u>,2]. There is no next greater element, so the answer is -1.\n- 1 is underlined in nums2 = [<u>1</u>,3,4,2]. The next greater element is 3.\n- 2 is underlined in nums2 = [1,3,4,<u>2</u>]. There is no next greater element, so the answer is -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('923', '409', '2', 'nums1 = [2,4], nums2 = [1,2,3,4]', '[3,-1]', 'The next greater element for each value of nums1 is as follows:\n- 2 is underlined in nums2 = [1,<u>2</u>,3,4]. The next greater element is 3.\n- 4 is underlined in nums2 = [1,2,3,<u>4</u>]. There is no next greater element, so the answer is -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('924', '410', '1', '[\"Solution\", \"pick\", \"pick\", \"pick\", \"pick\", \"pick\"]\n[[[[-2, -2, 1, 1], [2, 2, 4, 6]]], [], [], [], [], []]', '[null, [1, -2], [1, -1], [-1, -2], [-2, -2], [0, 0]]', 'Solution solution = new Solution([[-2, -2, 1, 1], [2, 2, 4, 6]]);\nsolution.pick(); // return [1, -2]\nsolution.pick(); // return [1, -1]\nsolution.pick(); // return [-1, -2]\nsolution.pick(); // return [-2, -2]\nsolution.pick(); // return [0, 0]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('925', '411', '1', 'mat = [[1,2,3],[4,5,6],[7,8,9]]', '[1,2,4,7,5,3,6,8,9]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('926', '411', '2', 'mat = [[1,2],[3,4]]', '[1,2,3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('927', '412', '1', 'words = [\"Hello\",\"Alaska\",\"Dad\",\"Peace\"]', '[\"Alaska\",\"Dad\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('928', '412', '2', 'words = [\"omk\"]', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('929', '412', '3', 'words = [\"adsdf\",\"sfd\"]', '[\"adsdf\",\"sfd\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('930', '413', '1', 'root = [1,null,2,2]', '[2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('931', '413', '2', 'root = [0]', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('932', '414', '1', 'k = 2, w = 0, profits = [1,2,3], capital = [0,1,1]', '4', 'Since your initial capital is 0, you can only start the project indexed 0.\nAfter finishing it you will obtain profit 1 and your capital becomes 1.\nWith capital 1, you can either start the project indexed 1 or the project indexed 2.\nSince you can choose at most 2 projects, you need to finish the project indexed 2 to get the maximum capital.\nTherefore, output the final maximized capital, which is 0 + 1 + 3 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('933', '414', '2', 'k = 3, w = 0, profits = [1,2,3], capital = [0,1,2]', '6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('934', '415', '1', 'nums = [1,2,1]', '[2,-1,2]', 'The first 1\'s next greater number is 2; \nThe number 2 can\'t find next greater number. \nThe second 1\'s next greater number needs to search circularly, which is also 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('935', '415', '2', 'nums = [1,2,3,4,3]', '[2,3,4,-1,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('936', '416', '1', 'num = 100', '\"202\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('937', '416', '2', 'num = -7', '\"-10\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('938', '417', '1', 'score = [5,4,3,2,1]', '[\"Gold Medal\",\"Silver Medal\",\"Bronze Medal\",\"4\",\"5\"]', 'The placements are [1<sup>st</sup>, 2<sup>nd</sup>, 3<sup>rd</sup>, 4<sup>th</sup>, 5<sup>th</sup>].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('939', '417', '2', 'score = [10,3,8,9,4]', '[\"Gold Medal\",\"5\",\"Bronze Medal\",\"Silver Medal\",\"4\"]', 'The placements are [1<sup>st</sup>, 5<sup>th</sup>, 3<sup>rd</sup>, 2<sup>nd</sup>, 4<sup>th</sup>].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('940', '418', '1', 'num = 28', 'true', '28 = 1 + 2 + 4 + 7 + 14\n1, 2, 4, 7, and 14 are all divisors of 28.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('941', '418', '2', 'num = 7', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('942', '419', '1', 'root = [5,2,-3]', '[2,-3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('943', '419', '2', 'root = [5,2,-5]', '[2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('944', '420', '1', 'n = 2', '1', 'F(2) = F(1) + F(0) = 1 + 0 = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('945', '420', '2', 'n = 3', '2', 'F(3) = F(2) + F(1) = 1 + 1 = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('946', '420', '3', 'n = 4', '3', 'F(4) = F(3) + F(2) = 2 + 1 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('947', '421', '1', 'Activity table:\n+-----------+-----------+------------+--------------+\n| player_id | device_id | event_date | games_played |\n+-----------+-----------+------------+--------------+\n| 1         | 2         | 2016-03-01 | 5            |\n| 1         | 2         | 2016-05-02 | 6            |\n| 2         | 3         | 2017-06-25 | 1            |\n| 3         | 1         | 2016-03-02 | 0            |\n| 3         | 4         | 2018-07-03 | 5            |\n+-----------+-----------+------------+--------------+', '+-----------+-------------+\n| player_id | first_login |\n+-----------+-------------+\n| 1         | 2016-03-01  |\n| 2         | 2017-06-25  |\n| 3         | 2016-03-02  |\n+-----------+-------------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('948', '422', '1', 'root = [2,1,3]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('949', '422', '2', 'root = [1,2,3,4,null,5,6,null,null,7]', '7', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('950', '423', '1', 'ring = \"godding\", key = \"gd\"', '4', 'For the first key character \'g\', since it is already in place, we just need 1 step to spell this character. \nFor the second key character \'d\', we need to rotate the ring \"godding\" anticlockwise by two steps to make it become \"ddinggo\".\nAlso, we need 1 more step for spelling.\nSo the final output is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('951', '423', '2', 'ring = \"godding\", key = \"godding\"', '13', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('952', '424', '1', 'root = [1,3,2,5,3,null,9]', '[1,3,9]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('953', '424', '2', 'root = [1,2,3]', '[1,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('954', '425', '1', 's = \"bbbab\"', '4', 'One possible longest palindromic subsequence is \"bbbb\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('955', '425', '2', 's = \"cbbd\"', '2', 'One possible longest palindromic subsequence is \"bb\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('956', '426', '1', 'machines = [1,0,5]', '3', '1st move:    1     0 &lt;-- 5    =&gt;    1     1     4\n2nd move:    1 &lt;-- 1 &lt;-- 4    =&gt;    2     1     3\n3rd move:    2     1 &lt;-- 3    =&gt;    2     2     2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('957', '426', '2', 'machines = [0,3,0]', '2', '1st move:    0 &lt;-- 3     0    =&gt;    1     2     0\n2nd move:    1     2 --&gt; 0    =&gt;    1     1     1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('958', '426', '3', 'machines = [0,2,0]', '-1', 'It\'s impossible to make all three washing machines have the same number of dresses.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('959', '427', '1', 'amount = 5, coins = [1,2,5]', '4', 'there are four ways to make up the amount:\n5=5\n5=2+2+1\n5=2+1+1+1\n5=1+1+1+1+1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('960', '427', '2', 'amount = 3, coins = [2]', '0', 'the amount of 3 cannot be made up just with coins of 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('961', '427', '3', 'amount = 10, coins = [10]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('962', '428', '1', '[\"Solution\", \"flip\", \"flip\", \"flip\", \"reset\", \"flip\"]\n[[3, 1], [], [], [], [], []]', '[null, [1, 0], [2, 0], [0, 0], null, [2, 0]]', 'Solution solution = new Solution(3, 1);\nsolution.flip();  // return [1, 0], [0,0], [1,0], and [2,0] should be equally likely to be returned.\nsolution.flip();  // return [2, 0], Since [1,0] was returned, [2,0] and [0,0]\nsolution.flip();  // return [0, 0], Based on the previously returned indices, only [0,0] can be returned.\nsolution.reset(); // All the values are reset to 0 and can be returned.\nsolution.flip();  // return [2, 0], [0,0], [1,0], and [2,0] should be equally likely to be returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('963', '429', '1', 'word = \"USA\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('964', '429', '2', 'word = \"FlaG\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('965', '430', '1', 'a = \"aba\", b = \"cdc\"', '3', 'One longest uncommon subsequence is \"aba\" because \"aba\" is a subsequence of \"aba\" but not \"cdc\".\nNote that \"cdc\" is also a longest uncommon subsequence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('966', '430', '2', 'a = \"aaa\", b = \"bbb\"', '3', 'The longest uncommon subsequences are \"aaa\" and \"bbb\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('967', '430', '3', 'a = \"aaa\", b = \"aaa\"', '-1', 'Every subsequence of string a is also a subsequence of string b. Similarly, every subsequence of string b is also a subsequence of string a.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('968', '431', '1', 'strs = [\"aba\",\"cdc\",\"eae\"]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('969', '431', '2', 'strs = [\"aaa\",\"aaa\",\"aa\"]', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('970', '432', '1', 'nums = [23,<u>2,4</u>,6,7], k = 6', 'true', '[2, 4] is a continuous subarray of size 2 whose elements sum up to 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('971', '432', '2', 'nums = [<u>23,2,6,4,7</u>], k = 6', 'true', '[23, 2, 6, 4, 7] is an continuous subarray of size 5 whose elements sum up to 42.\n42 is a multiple of 6 because 42 = 7 * 6 and 7 is an integer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('972', '432', '3', 'nums = [23,2,6,4,7], k = 13', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('973', '433', '1', 's = \"abpcplea\", dictionary = [\"ale\",\"apple\",\"monkey\",\"plea\"]', '\"apple\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('974', '433', '2', 's = \"abpcplea\", dictionary = [\"a\",\"b\",\"c\"]', '\"a\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('975', '434', '1', 'nums = [0,1]', '2', '[0, 1] is the longest contiguous subarray with an equal number of 0 and 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('976', '434', '2', 'nums = [0,1,0]', '2', '[0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('977', '435', '1', 'n = 2', '2', 'The first beautiful arrangement is [1,2]:\n    - perm[1] = 1 is divisible by i = 1\n    - perm[2] = 2 is divisible by i = 2\nThe second beautiful arrangement is [2,1]:\n    - perm[1] = 2 is divisible by i = 1\n    - i = 2 is divisible by perm[2] = 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('978', '435', '2', 'n = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('979', '436', '1', '[\"Solution\",\"pickIndex\"]\n[[[1]],[]]', '[null,0]', 'Solution solution = new Solution([1]);\nsolution.pickIndex(); // return 0. The only option is to return 0 since there is only one element in w.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('980', '436', '2', '[\"Solution\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\"]\n[[[1,3]],[],[],[],[],[]]', '[null,1,1,1,1,0]', 'Solution solution = new Solution([1, 3]);\nsolution.pickIndex(); // return 1. It is returning the second element (index = 1) that has a probability of 3/4.\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 0. It is returning the first element (index = 0) that has a probability of 1/4.\n\nSince this is a randomization problem, multiple answers are allowed.\nAll of the following outputs can be considered correct:\n[null,1,1,1,1,0]\n[null,1,1,1,1,1]\n[null,1,1,1,0,0]\n[null,1,1,1,0,1]\n[null,1,0,1,0,0]\n......\nand so on.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('981', '437', '1', 'board = [[\"E\",\"E\",\"E\",\"E\",\"E\"],[\"E\",\"E\",\"M\",\"E\",\"E\"],[\"E\",\"E\",\"E\",\"E\",\"E\"],[\"E\",\"E\",\"E\",\"E\",\"E\"]], click = [3,0]', '[[\"B\",\"1\",\"E\",\"1\",\"B\"],[\"B\",\"1\",\"M\",\"1\",\"B\"],[\"B\",\"1\",\"1\",\"1\",\"B\"],[\"B\",\"B\",\"B\",\"B\",\"B\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('982', '437', '2', 'board = [[\"B\",\"1\",\"E\",\"1\",\"B\"],[\"B\",\"1\",\"M\",\"1\",\"B\"],[\"B\",\"1\",\"1\",\"1\",\"B\"],[\"B\",\"B\",\"B\",\"B\",\"B\"]], click = [1,2]', '[[\"B\",\"1\",\"E\",\"1\",\"B\"],[\"B\",\"1\",\"X\",\"1\",\"B\"],[\"B\",\"1\",\"1\",\"1\",\"B\"],[\"B\",\"B\",\"B\",\"B\",\"B\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('983', '438', '1', 'root = [4,2,6,1,3]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('984', '438', '2', 'root = [1,0,48,null,null,12,49]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('985', '439', '1', 'nums = [3,1,4,1,5], k = 2', '2', 'There are two 2-diff pairs in the array, (1, 3) and (3, 5).\nAlthough we have two 1s in the input, we should only return the number of <strong>unique</strong> pairs.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('986', '439', '2', 'nums = [1,2,3,4,5], k = 1', '4', 'There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('987', '439', '3', 'nums = [1,3,1,5,4], k = 0', '1', 'There is one 0-diff pair in the array, (1, 1).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('988', '440', '1', 'url = \"https://leetcode.com/problems/design-tinyurl\"', '\"https://leetcode.com/problems/design-tinyurl\"', 'Solution obj = new Solution();\nstring tiny = obj.encode(url); // returns the encoded tiny url.\nstring ans = obj.decode(tiny); // returns the original url after decoding it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('989', '441', '1', 'num1 = \"1+1i\", num2 = \"1+1i\"', '\"0+2i\"', '(1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i, and you need convert it to the form of 0+2i.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('990', '441', '2', 'num1 = \"1+-1i\", num2 = \"1+-1i\"', '\"0+-2i\"', '(1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i, and you need convert it to the form of 0+-2i.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('991', '443', '1', 'timePoints = [\"23:59\",\"00:00\"]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('992', '443', '2', 'timePoints = [\"00:00\",\"23:59\",\"00:00\"]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('993', '444', '1', 'nums = [1,1,2,3,3,4,4,8,8]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('994', '444', '2', 'nums = [3,3,7,7,10,11,11]', '10', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('995', '445', '1', 's = \"abcdefg\", k = 2', '\"bacdfeg\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('996', '445', '2', 's = \"abcd\", k = 2', '\"bacd\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('997', '446', '1', 'mat = [[0,0,0],[0,1,0],[0,0,0]]', '[[0,0,0],[0,1,0],[0,0,0]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('998', '446', '2', 'mat = [[0,0,0],[0,1,0],[1,1,1]]', '[[0,0,0],[0,1,0],[1,2,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('999', '447', '1', 'root = [1,2,3,4,5]', '3', '3 is the length of the path [4,2,1,3] or [5,2,1,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1000', '447', '2', 'root = [1,2]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1001', '448', '1', 'boxes = [1,3,2,2,2,3,4,3,1]', '23', '[1, 3, 2, 2, 2, 3, 4, 3, 1] \n----&gt; [1, 3, 3, 4, 3, 1] (3*3=9 points) \n----&gt; [1, 3, 3, 3, 1] (1*1=1 points) \n----&gt; [1, 1] (3*3=9 points) \n----&gt; [] (2*2=4 points)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1002', '448', '2', 'boxes = [1,1,1]', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1003', '448', '3', 'boxes = [1]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1004', '449', '1', 'isConnected = [[1,1,0],[1,1,0],[0,0,1]]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1005', '449', '2', 'isConnected = [[1,0,0],[0,1,0],[0,0,1]]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1006', '450', '1', 'Activity table:\n+-----------+-----------+------------+--------------+\n| player_id | device_id | event_date | games_played |\n+-----------+-----------+------------+--------------+\n| 1         | 2         | 2016-03-01 | 5            |\n| 1         | 2         | 2016-03-02 | 6            |\n| 2         | 3         | 2017-06-25 | 1            |\n| 3         | 1         | 2016-03-02 | 0            |\n| 3         | 4         | 2018-07-03 | 5            |\n+-----------+-----------+------------+--------------+', '+-----------+\n| fraction  |\n+-----------+\n| 0.33      |\n+-----------+', 'Only the player with id 1 logged back in after the first day he had logged in so the answer is 1/3 = 0.33');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1007', '451', '1', 's = \"PPALLP\"', 'true', 'The student has fewer than 2 absences and was never late 3 or more consecutive days.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1008', '451', '2', 's = \"PPALLL\"', 'false', 'The student was late 3 consecutive days in the last 3 days, so is not eligible for the award.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1009', '452', '1', 'n = 2', '8', 'There are 8 records with length 2 that are eligible for an award:\n\"PP\", \"AP\", \"PA\", \"LP\", \"PL\", \"AL\", \"LA\", \"LL\"\nOnly \"AA\" is not eligible because there are 2 absences (there need to be fewer than 2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1010', '452', '2', 'n = 1', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1011', '452', '3', 'n = 10101', '183236316', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1012', '453', '1', 'nums = [1000,100,10,2]', '\"1000/(100/10/2)\"', '1000/(100/10/2) = 1000/((100/10)/2) = 200\nHowever, the bold parenthesis in \"1000/(<strong>(</strong>100/10<strong>)</strong>/2)\" are redundant since they do not influence the operation priority.\nSo you should return \"1000/(100/10/2)\".\nOther cases:\n1000/(100/10)/2 = 50\n1000/(100/(10/2)) = 50\n1000/100/10/2 = 0.5\n1000/100/(10/2) = 2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1013', '453', '2', 'nums = [2,3,4]', '\"2/(3/4)\"', '(2/(3/4)) = 8/3 = 2.667\nIt can be shown that after trying all possibilities, we cannot get an expression with evaluation greater than 2.667');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1014', '454', '1', 'wall = [[1,2,2,1],[3,1,2],[1,3,2],[2,4],[3,1,2],[1,3,1,1]]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1015', '454', '2', 'wall = [[1],[1],[1]]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1016', '455', '1', 'n = 12', '21', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1017', '455', '2', 'n = 21', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1018', '456', '1', 's = \"Let\'s take LeetCode contest\"', '\"s\'teL ekat edoCteeL tsetnoc\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1019', '456', '2', 's = \"God Ding\"', '\"doG gniD\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1020', '457', '1', 'quadTree1 = [[0,1],[1,1],[1,1],[1,0],[1,0]]\n, quadTree2 = [[0,1],[1,1],[0,1],[1,1],[1,0],null,null,null,null,[1,0],[1,0],[1,1],[1,1]]', '[[0,0],[1,1],[1,1],[1,1],[1,0]]', 'quadTree1 and quadTree2 are shown above. You can see the binary matrix which is represented by each Quad-Tree.\nIf we apply logical bitwise OR on the two binary matrices we get the binary matrix below which is represented by the result Quad-Tree.\nNotice that the binary matrices shown are only for illustration, you don\'t have to construct the binary matrix to get the result tree.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/02/11/qtr.png\" style=\"width:777px;height:222px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1021', '457', '2', 'quadTree1 = [[1,0]], quadTree2 = [[1,0]]', '[[1,0]]', 'Each tree represents a binary matrix of size 1*1. Each matrix contains only zero.\nThe resulting matrix is of size 1*1 with also zero.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1022', '458', '1', 'root = [1,null,3,2,4,null,5,6]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1023', '458', '2', 'root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1024', '459', '1', 'nums = [1,1,1], k = 2', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1025', '459', '2', 'nums = [1,2,3], k = 3', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1026', '460', '1', 'nums = [1,4,3,2]', '4', 'All possible pairings (ignoring the ordering of elements) are:\n1. (1, 4), (2, 3) -&gt; min(1, 4) + min(2, 3) = 1 + 2 = 3\n2. (1, 3), (2, 4) -&gt; min(1, 3) + min(2, 4) = 1 + 2 = 3\n3. (1, 2), (3, 4) -&gt; min(1, 2) + min(3, 4) = 1 + 3 = 4\nSo the maximum possible sum is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1027', '460', '2', 'nums = [6,2,6,5,1,2]', '9', 'The optimal pairing is (2, 1), (2, 5), (6, 6). min(2, 1) + min(2, 5) + min(6, 6) = 1 + 2 + 6 = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1028', '461', '1', 'root = [1,2,3]', '1', 'Tilt of node 2 : |0-0| = 0 (no children)\nTilt of node 3 : |0-0| = 0 (no children)\nTilt of node 1 : |2-3| = 1 (left subtree is just left child, so sum is 2; right subtree is just right child, so sum is 3)\nSum of every tilt : 0 + 0 + 1 = 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1029', '461', '2', 'root = [4,2,9,3,5,null,7]', '15', 'Tilt of node 3 : |0-0| = 0 (no children)\nTilt of node 5 : |0-0| = 0 (no children)\nTilt of node 7 : |0-0| = 0 (no children)\nTilt of node 2 : |3-5| = 2 (left subtree is just left child, so sum is 3; right subtree is just right child, so sum is 5)\nTilt of node 9 : |0-7| = 7 (no left child, so sum is 0; right subtree is just right child, so sum is 7)\nTilt of node 4 : |(3+5+2)-(9+7)| = |10-16| = 6 (left subtree values are 3, 5, and 2, which sums to 10; right subtree values are 9 and 7, which sums to 16)\nSum of every tilt : 0 + 0 + 0 + 2 + 7 + 6 = 15');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1030', '461', '3', 'root = [21,7,14,1,1,2,2,3,3]', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1031', '462', '1', 'n = \"123\"', '\"121\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1032', '462', '2', 'n = \"1\"', '\"0\"', '0 and 2 are the closest palindromes but we return the smallest which is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1033', '463', '1', 'nums = [5,4,0,3,1,6,2]', '4', 'nums[0] = 5, nums[1] = 4, nums[2] = 0, nums[3] = 3, nums[4] = 1, nums[5] = 6, nums[6] = 2.\nOne of the longest sets s[k]:\ns[0] = {nums[0], nums[5], nums[6], nums[2]} = {5, 6, 2, 0}');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1034', '463', '2', 'nums = [0,1,2]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1035', '464', '1', 'mat = [[1,2],[3,4]], r = 1, c = 4', '[[1,2,3,4]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1036', '464', '2', 'mat = [[1,2],[3,4]], r = 2, c = 4', '[[1,2],[3,4]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1037', '465', '1', 's1 = \"ab\", s2 = \"eidbaooo\"', 'true', 's2 contains one permutation of s1 (\"ba\").');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1038', '465', '2', 's1 = \"ab\", s2 = \"eidboaoo\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1039', '466', '1', 'Employee table:\n+-----+-------+------------+-----------+\n| id  | name  | department | managerId |\n+-----+-------+------------+-----------+\n| 101 | John  | A          | None      |\n| 102 | Dan   | A          | 101       |\n| 103 | James | A          | 101       |\n| 104 | Amy   | A          | 101       |\n| 105 | Anne  | A          | 101       |\n| 106 | Ron   | B          | 101       |\n+-----+-------+------------+-----------+', '+------+\n| name |\n+------+\n| John |\n+------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1040', '467', '1', 'root = [3,4,5,1,2], subRoot = [4,1,2]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1041', '467', '2', 'root = [3,4,5,1,2,null,null,null,null,0], subRoot = [4,1,2]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1042', '468', '1', 'candyType = [1,1,2,2,3,3]', '3', 'Alice can only eat 6 / 2 = 3 candies. Since there are only 3 types, she can eat one of each type.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1043', '468', '2', 'candyType = [1,1,2,3]', '2', 'Alice can only eat 4 / 2 = 2 candies. Whether she eats types [1,2], [1,3], or [2,3], she still can only eat 2 different types.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1044', '468', '3', 'candyType = [6,6,6,6]', '1', 'Alice can only eat 4 / 2 = 2 candies. Even though she can eat 2 candies, she only has 1 type.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1045', '469', '1', 'm = 2, n = 2, maxMove = 2, startRow = 0, startColumn = 0', '6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1046', '469', '2', 'm = 1, n = 3, maxMove = 3, startRow = 0, startColumn = 1', '12', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1047', '470', '1', 'Employee table:\n+-------+--------+------------+--------+\n| empId | name   | supervisor | salary |\n+-------+--------+------------+--------+\n| 3     | Brad   | null       | 4000   |\n| 1     | John   | 3          | 1000   |\n| 2     | Dan    | 3          | 2000   |\n| 4     | Thomas | 3          | 4000   |\n+-------+--------+------------+--------+\nBonus table:\n+-------+-------+\n| empId | bonus |\n+-------+-------+\n| 2     | 500   |\n| 4     | 2000  |\n+-------+-------+', '+------+-------+\n| name | bonus |\n+------+-------+\n| Brad | null  |\n| John | null  |\n| Dan  | 500   |\n+------+-------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1048', '472', '1', 'word1 = \"sea\", word2 = \"eat\"', '2', 'You need one step to make \"sea\" to \"ea\" and another step to make \"eat\" to \"ea\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1049', '472', '2', 'word1 = \"leetcode\", word2 = \"etco\"', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1050', '473', '1', 'Customer table:\n+----+------+------------+\n| id | name | referee_id |\n+----+------+------------+\n| 1  | Will | null       |\n| 2  | Jane | null       |\n| 3  | Alex | 2          |\n| 4  | Bill | null       |\n| 5  | Zack | 1          |\n| 6  | Mark | 2          |\n+----+------+------------+', '+------+\n| name |\n+------+\n| Will |\n| Jane |\n| Bill |\n| Zack |\n+------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1051', '474', '1', 'Insurance table:\n+-----+----------+----------+-----+-----+\n| pid | tiv_2015 | tiv_2016 | lat | lon |\n+-----+----------+----------+-----+-----+\n| 1   | 10       | 5        | 10  | 10  |\n| 2   | 20       | 20       | 20  | 20  |\n| 3   | 10       | 30       | 20  | 20  |\n| 4   | 10       | 40       | 40  | 40  |\n+-----+----------+----------+-----+-----+', '+----------+\n| tiv_2016 |\n+----------+\n| 45.00    |\n+----------+', 'The first record in the table, like the last record, meets both of the two criteria.\nThe tiv_2015 value 10 is the same as the third and fourth records, and its location is unique.\n\nThe second record does not meet any of the two criteria. Its tiv_2015 is not like any other policyholders and its location is the same as the third record, which makes the third record fail, too.\nSo, the result is the sum of tiv_2016 of the first and last record, which is 45.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1052', '475', '1', 'Orders table:\n+--------------+-----------------+\n| order_number | customer_number |\n+--------------+-----------------+\n| 1            | 1               |\n| 2            | 2               |\n| 3            | 3               |\n| 4            | 3               |\n+--------------+-----------------+', '+-----------------+\n| customer_number |\n+-----------------+\n| 3               |\n+-----------------+', 'The customer with number 3 has two orders, which is greater than either customer 1 or 2 because each of them only has one order. \nSo the result is customer_number 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1053', '476', '1', 'trees = [[1,1],[2,2],[2,0],[2,4],[3,3],[4,2]]', '[[1,1],[2,0],[4,2],[3,3],[2,4]]', 'All the trees will be on the perimeter of the fence except the tree at [2, 2], which will be inside the fence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1054', '476', '2', 'trees = [[1,2],[2,2],[4,2]]', '[[4,2],[2,2],[1,2]]', 'The fence forms a line that passes through all the trees.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1055', '477', '1', 'root = [1,null,3,2,4,null,5,6]', '[1,3,5,6,2,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1056', '477', '2', 'root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]', '[1,2,3,6,7,11,14,4,8,12,5,9,13,10]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1057', '478', '1', 'root = [1,null,3,2,4,null,5,6]', '[5,6,3,2,4,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1058', '478', '2', 'root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]', '[2,6,14,11,7,3,12,8,4,13,9,10,5,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1059', '479', '1', 'code = \"&lt;DIV&gt;This is the first line &lt;![CDATA[&lt;div&gt;]]&gt;&lt;/DIV&gt;\"', 'true', 'The code is wrapped in a closed tag : &lt;DIV&gt; and &lt;/DIV&gt;. \nThe TAG_NAME is valid, the TAG_CONTENT consists of some characters and cdata. \nAlthough CDATA_CONTENT has an unmatched start tag with invalid TAG_NAME, it should be considered as plain text, not parsed as a tag.\nSo TAG_CONTENT is valid, and then the code is valid. Thus return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1060', '479', '2', 'code = \"&lt;DIV&gt;&gt;&gt;  ![cdata[]] &lt;![CDATA[&lt;div&gt;]&gt;]]&gt;]]&gt;&gt;]&lt;/DIV&gt;\"', 'true', 'We first separate the code into : start_tag|tag_content|end_tag.\nstart_tag -&gt; <b>\"&lt;DIV&gt;\"</b>\nend_tag -&gt; <b>\"&lt;/DIV&gt;\"</b>\ntag_content could also be separated into : text1|cdata|text2.\ntext1 -&gt; <b>\"&gt;&gt;  ![cdata[]] \"</b>\ncdata -&gt; <b>\"&lt;![CDATA[&lt;div&gt;]&gt;]]&gt;\"</b>, where the CDATA_CONTENT is <b>\"&lt;div&gt;]&gt;\"</b>\ntext2 -&gt; <b>\"]]&gt;&gt;]\"</b>\nThe reason why start_tag is NOT <b>\"&lt;DIV&gt;&gt;&gt;\"</b> is because of the rule 6.\nThe reason why cdata is NOT <b>\"&lt;![CDATA[&lt;div&gt;]&gt;]]&gt;]]&gt;\"</b> is because of the rule 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1061', '479', '3', 'code = \"&lt;A&gt;  &lt;B&gt; &lt;/A&gt;   &lt;/B&gt;\"', 'false', 'Unbalanced. If \"&lt;A&gt;\" is closed, then \"&lt;B&gt;\" must be unmatched, and vice versa.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1062', '480', '1', 'expression = \"-1/2+1/2\"', '\"0/1\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1063', '480', '2', 'expression = \"-1/2+1/2+1/3\"', '\"1/3\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1064', '480', '3', 'expression = \"1/3-1/2\"', '\"-1/6\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1065', '481', '1', 'p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1066', '481', '2', 'p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,12]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1067', '481', '3', 'p1 = [1,0], p2 = [-1,0], p3 = [0,1], p4 = [0,-1]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1068', '482', '1', 'nums = [1,3,2,2,5,2,3,7]', '5', 'The longest harmonious subsequence is [3,2,2,2,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1069', '482', '2', 'nums = [1,2,3,4]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1070', '482', '3', 'nums = [1,1,1,1]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1071', '483', '1', 'World table:\n+-------------+-----------+---------+------------+--------------+\n| name        | continent | area    | population | gdp          |\n+-------------+-----------+---------+------------+--------------+\n| Afghanistan | Asia      | 652230  | 25500100   | 20343000000  |\n| Albania     | Europe    | 28748   | 2831741    | 12960000000  |\n| Algeria     | Africa    | 2381741 | 37100000   | 188681000000 |\n| Andorra     | Europe    | 468     | 78115      | 3712000000   |\n| Angola      | Africa    | 1246700 | 20609294   | 100990000000 |\n+-------------+-----------+---------+------------+--------------+', '+-------------+------------+---------+\n| name        | population | area    |\n+-------------+------------+---------+\n| Afghanistan | 25500100   | 652230  |\n| Algeria     | 37100000   | 2381741 |\n+-------------+------------+---------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1072', '484', '1', 'Courses table:\n+---------+----------+\n| student | class    |\n+---------+----------+\n| A       | Math     |\n| B       | English  |\n| C       | Math     |\n| D       | Biology  |\n| E       | Math     |\n| F       | Computer |\n| G       | Math     |\n| H       | Math     |\n| I       | Math     |\n+---------+----------+', '+---------+\n| class   |\n+---------+\n| Math    |\n+---------+', '- Math has 6 students, so we include it.\n- English has 1 student, so we do not include it.\n- Biology has 1 student, so we do not include it.\n- Computer has 1 student, so we do not include it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1073', '485', '1', 'm = 3, n = 3, ops = [[2,2],[3,3]]', '4', 'The maximum integer in M is 2, and there are four of it in M. So return 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1074', '485', '2', 'm = 3, n = 3, ops = [[2,2],[3,3],[3,3],[3,3],[2,2],[3,3],[3,3],[3,3],[2,2],[3,3],[3,3],[3,3]]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1075', '485', '3', 'm = 3, n = 3, ops = []', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1076', '486', '1', 'list1 = [\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"], list2 = [\"Piatti\",\"The Grill at Torrey Pines\",\"Hungry Hunter Steakhouse\",\"Shogun\"]', '[\"Shogun\"]', 'The only common string is \"Shogun\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1077', '486', '2', 'list1 = [\"Shogun\",\"Tapioca Express\",\"Burger King\",\"KFC\"], list2 = [\"KFC\",\"Shogun\",\"Burger King\"]', '[\"Shogun\"]', 'The common string with the least index sum is \"Shogun\" with index sum = (0 + 1) = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1078', '486', '3', 'list1 = [\"happy\",\"sad\",\"good\"], list2 = [\"sad\",\"happy\",\"good\"]', '[\"sad\",\"happy\"]', 'There are three common strings:\n\"happy\" with index sum = (0 + 1) = 1.\n\"sad\" with index sum = (1 + 0) = 1.\n\"good\" with index sum = (2 + 2) = 4.\nThe strings with the least index sum are \"sad\" and \"happy\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1079', '487', '1', 'n = 5', '5', 'Here are the non-negative integers &lt;= 5 with their corresponding binary representations:\n0 : 0\n1 : 1\n2 : 10\n3 : 11\n4 : 100\n5 : 101\nAmong them, only integer 3 disobeys the rule (two consecutive ones) and the other 5 satisfy the rule.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1080', '487', '2', 'n = 1', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1081', '487', '3', 'n = 2', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1082', '488', '1', 'Stadium table:\n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 1    | 2017-01-01 | 10        |\n| 2    | 2017-01-02 | 109       |\n| 3    | 2017-01-03 | 150       |\n| 4    | 2017-01-04 | 99        |\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-09 | 188       |\n+------+------------+-----------+', '+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-09 | 188       |\n+------+------------+-----------+', 'The four rows with ids 5, 6, 7, and 8 have consecutive ids and each of them has &gt;= 100 people attended. Note that row 8 was included even though the visit_date was not the next day after row 7.\nThe rows with ids 2 and 3 are not included because we need at least three consecutive ids.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1083', '489', '1', 'RequestAccepted table:\n+--------------+-------------+-------------+\n| requester_id | accepter_id | accept_date |\n+--------------+-------------+-------------+\n| 1            | 2           | 2016/06/03  |\n| 1            | 3           | 2016/06/08  |\n| 2            | 3           | 2016/06/08  |\n| 3            | 4           | 2016/06/09  |\n+--------------+-------------+-------------+', '+----+-----+\n| id | num |\n+----+-----+\n| 3  | 3   |\n+----+-----+', 'The person with id 3 is a friend of people 1, 2, and 4, so he has three friends in total, which is the most number than any others.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1084', '490', '1', 'flowerbed = [1,0,0,0,1], n = 1', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1085', '490', '2', 'flowerbed = [1,0,0,0,1], n = 2', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1086', '491', '1', 'root = [1,2,3,4]', '\"1(2(4))(3)\"', 'Originally, it needs to be \"1(2(4)())(3()())\", but you need to omit all the unnecessary empty parenthesis pairs. And it will be \"1(2(4))(3)\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1087', '491', '2', 'root = [1,2,3,null,4]', '\"1(2()(4))(3)\"', 'Almost the same as the first example, except we cannot omit the first parenthesis pair to break the one-to-one mapping relationship between the input and the output.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1088', '492', '1', 'SalesPerson table:\n+----------+------+--------+-----------------+------------+\n| sales_id | name | salary | commission_rate | hire_date  |\n+----------+------+--------+-----------------+------------+\n| 1        | John | 100000 | 6               | 4/1/2006   |\n| 2        | Amy  | 12000  | 5               | 5/1/2010   |\n| 3        | Mark | 65000  | 12              | 12/25/2008 |\n| 4        | Pam  | 25000  | 25              | 1/1/2005   |\n| 5        | Alex | 5000   | 10              | 2/3/2007   |\n+----------+------+--------+-----------------+------------+\nCompany table:\n+--------+--------+----------+\n| com_id | name   | city     |\n+--------+--------+----------+\n| 1      | RED    | Boston   |\n| 2      | ORANGE | New York |\n| 3      | YELLOW | Boston   |\n| 4      | GREEN  | Austin   |\n+--------+--------+----------+\nOrders table:\n+----------+------------+--------+----------+--------+\n| order_id | order_date | com_id | sales_id | amount |\n+----------+------------+--------+----------+--------+\n| 1        | 1/1/2014   | 3      | 4        | 10000  |\n| 2        | 2/1/2014   | 4      | 5        | 5000   |\n| 3        | 3/1/2014   | 1      | 1        | 50000  |\n| 4        | 4/1/2014   | 1      | 4        | 25000  |\n+----------+------------+--------+----------+--------+', '+------+\n| name |\n+------+\n| Amy  |\n| Mark |\n| Alex |\n+------+', 'According to orders 3 and 4 in the Orders table, it is easy to tell that only salesperson John and Pam have sales to company RED, so we report all the other names in the table salesperson.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1089', '493', '1', 'Tree table:\n+----+------+\n| id | p_id |\n+----+------+\n| 1  | null |\n| 2  | 1    |\n| 3  | 1    |\n| 4  | 2    |\n| 5  | 2    |\n+----+------+', '+----+-------+\n| id | type  |\n+----+-------+\n| 1  | Root  |\n| 2  | Inner |\n| 3  | Leaf  |\n| 4  | Leaf  |\n| 5  | Leaf  |\n+----+-------+', 'Node 1 is the root node because its parent node is null and it has child nodes 2 and 3.\nNode 2 is an inner node because it has parent node 1 and child node 4 and 5.\nNodes 3, 4, and 5 are leaf nodes because they have parent nodes and they do not have child nodes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1090', '493', '2', 'Tree table:\n+----+------+\n| id | p_id |\n+----+------+\n| 1  | null |\n+----+------+', '+----+-------+\n| id | type  |\n+----+-------+\n| 1  | Root  |\n+----+-------+', 'If there is only one node on the tree, you only need to output its root attributes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1091', '495', '1', 'Triangle table:\n+----+----+----+\n| x  | y  | z  |\n+----+----+----+\n| 13 | 15 | 30 |\n| 10 | 20 | 15 |\n+----+----+----+', '+----+----+----+----------+\n| x  | y  | z  | triangle |\n+----+----+----+----------+\n| 13 | 15 | 30 | No       |\n| 10 | 20 | 15 | Yes      |\n+----+----+----+----------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1092', '496', '1', 'nums = [2,2,3,4]', '3', 'Valid combinations are: \n2,3,4 (using the first 2)\n2,3,4 (using the second 2)\n2,2,3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1093', '496', '2', 'nums = [4,2,3,4]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1094', '497', '1', 'root1 = [1,3,2,5], root2 = [2,1,3,null,4,null,7]', '[3,4,5,5,4,null,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1095', '497', '2', 'root1 = [1], root2 = [1,2]', '[2,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1096', '498', '1', 'MyNumbers table:\n+-----+\n| num |\n+-----+\n| 8   |\n| 8   |\n| 3   |\n| 3   |\n| 1   |\n| 4   |\n| 5   |\n| 6   |\n+-----+', '+-----+\n| num |\n+-----+\n| 6   |\n+-----+', 'The single numbers are 1, 4, 5, and 6.\nSince 6 is the largest single number, we return it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1097', '498', '2', 'MyNumbers table:\n+-----+\n| num |\n+-----+\n| 8   |\n| 8   |\n| 7   |\n| 7   |\n| 3   |\n| 3   |\n| 3   |\n+-----+', '+------+\n| num  |\n+------+\n| null |\n+------+', 'There are no single numbers in the input table so we return null.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1098', '500', '1', 'tasks = [\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"], n = 2', '8', 'A -&gt; B -&gt; idle -&gt; A -&gt; B -&gt; idle -&gt; A -&gt; B\nThere is at least 2 units of time between any two same tasks.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1099', '500', '2', 'tasks = [\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"], n = 0', '6', 'On this case any permutation of size 6 would work since n = 0.\n[\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"]\n[\"A\",\"B\",\"A\",\"B\",\"A\",\"B\"]\n[\"B\",\"B\",\"B\",\"A\",\"A\",\"A\"]\n...\nAnd so on.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1100', '500', '3', 'tasks = [\"A\",\"A\",\"A\",\"A\",\"A\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\"], n = 2', '16', 'One possible solution is\nA -&gt; B -&gt; C -&gt; A -&gt; D -&gt; E -&gt; A -&gt; F -&gt; G -&gt; A -&gt; idle -&gt; idle -&gt; A -&gt; idle -&gt; idle -&gt; A');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1101', '501', '1', '[\"MyCircularQueue\", \"enQueue\", \"enQueue\", \"enQueue\", \"enQueue\", \"Rear\", \"isFull\", \"deQueue\", \"enQueue\", \"Rear\"]\n[[3], [1], [2], [3], [4], [], [], [], [4], []]', '[null, true, true, true, false, 3, true, true, true, 4]', 'MyCircularQueue myCircularQueue = new MyCircularQueue(3);\nmyCircularQueue.enQueue(1); // return True\nmyCircularQueue.enQueue(2); // return True\nmyCircularQueue.enQueue(3); // return True\nmyCircularQueue.enQueue(4); // return False\nmyCircularQueue.Rear();     // return 3\nmyCircularQueue.isFull();   // return True\nmyCircularQueue.deQueue();  // return True\nmyCircularQueue.enQueue(4); // return True\nmyCircularQueue.Rear();     // return 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1102', '502', '1', 'root = [4,2,6,3,1,5], val = 1, depth = 2', '[4,1,1,2,null,null,6,3,1,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1103', '502', '2', 'root = [4,2,null,3,1], val = 1, depth = 3', '[4,2,null,1,1,3,null,null,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1104', '503', '1', 'Seat table:\n+----+---------+\n| id | student |\n+----+---------+\n| 1  | Abbot   |\n| 2  | Doris   |\n| 3  | Emerson |\n| 4  | Green   |\n| 5  | Jeames  |\n+----+---------+', '+----+---------+\n| id | student |\n+----+---------+\n| 1  | Doris   |\n| 2  | Abbot   |\n| 3  | Green   |\n| 4  | Emerson |\n| 5  | Jeames  |\n+----+---------+', 'Note that if the number of students is odd, there is no need to change the last one\'s seat.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1105', '504', '1', 'Salary table:\n+----+------+-----+--------+\n| id | name | sex | salary |\n+----+------+-----+--------+\n| 1  | A    | m   | 2500   |\n| 2  | B    | f   | 1500   |\n| 3  | C    | m   | 5500   |\n| 4  | D    | f   | 500    |\n+----+------+-----+--------+', '+----+------+-----+--------+\n| id | name | sex | salary |\n+----+------+-----+--------+\n| 1  | A    | f   | 2500   |\n| 2  | B    | m   | 1500   |\n| 3  | C    | f   | 5500   |\n| 4  | D    | m   | 500    |\n+----+------+-----+--------+', '(1, A) and (3, C) were changed from \'m\' to \'f\'.\n(2, B) and (4, D) were changed from \'f\' to \'m\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1106', '505', '1', 'nums = [1,2,3]', '6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1107', '505', '2', 'nums = [1,2,3,4]', '24', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1108', '505', '3', 'nums = [-1,-2,-3]', '-6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1109', '506', '1', 'n = 3, k = 0', '1', 'Only the array [1,2,3] which consists of numbers from 1 to 3 has exactly 0 inverse pairs.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1110', '506', '2', 'n = 3, k = 1', '2', 'The array [1,3,2] and [2,1,3] have exactly 1 inverse pair.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1111', '508', '1', 'nums = [[4,10,15,24,26],[0,9,12,20],[5,18,22,30]]', '[20,24]', 'List 1: [4, 10, 15, 24,26], 24 is in range [20,24].\nList 2: [0, 9, 12, 20], 20 is in range [20,24].\nList 3: [5, 18, 22, 30], 22 is in range [20,24].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1112', '508', '2', 'nums = [[1,2,3],[1,2,3],[1,2,3]]', '[1,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1113', '509', '1', 'c = 5', 'true', '1 * 1 + 2 * 2 = 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1114', '509', '2', 'c = 3', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1115', '510', '1', 'n = 2, logs = [\"0:start:0\",\"1:start:2\",\"1:end:5\",\"0:end:6\"]', '[3,4]', 'Function 0 starts at the beginning of time 0, then it executes 2 for units of time and reaches the end of time 1.\nFunction 1 starts at the beginning of time 2, executes for 4 units of time, and ends at the end of time 5.\nFunction 0 resumes execution at the beginning of time 6 and executes for 1 unit of time.\nSo function 0 spends 2 + 1 = 3 units of total time executing, and function 1 spends 4 units of total time executing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1116', '510', '2', 'n = 1, logs = [\"0:start:0\",\"0:start:2\",\"0:end:5\",\"0:start:6\",\"0:end:6\",\"0:end:7\"]', '[8]', 'Function 0 starts at the beginning of time 0, executes for 2 units of time, and recursively calls itself.\nFunction 0 (recursive call) starts at the beginning of time 2 and executes for 4 units of time.\nFunction 0 (initial call) resumes execution then immediately calls itself again.\nFunction 0 (2nd recursive call) starts at the beginning of time 6 and executes for 1 unit of time.\nFunction 0 (initial call) resumes execution at the beginning of time 7 and executes for 1 unit of time.\nSo function 0 spends 2 + 4 + 1 + 1 = 8 units of total time executing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1117', '510', '3', 'n = 2, logs = [\"0:start:0\",\"0:start:2\",\"0:end:5\",\"1:start:6\",\"1:end:6\",\"0:end:7\"]', '[7,1]', 'Function 0 starts at the beginning of time 0, executes for 2 units of time, and recursively calls itself.\nFunction 0 (recursive call) starts at the beginning of time 2 and executes for 4 units of time.\nFunction 0 (initial call) resumes execution then immediately calls function 1.\nFunction 1 starts at the beginning of time 6, executes 1 unit of time, and ends at the end of time 6.\nFunction 0 resumes execution at the beginning of time 6 and executes for 2 units of time.\nSo function 0 spends 2 + 4 + 1 = 7 units of total time executing, and function 1 spends 1 unit of total time executing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1118', '511', '1', 'root = [3,9,20,null,null,15,7]', '[3.00000,14.50000,11.00000]', 'The average value of nodes on level 0 is 3, on level 1 is 14.5, and on level 2 is 11.\nHence return [3, 14.5, 11].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1119', '511', '2', 'root = [3,9,20,15,7]', '[3.00000,14.50000,11.00000]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1120', '512', '1', 'price = [2,5], special = [[3,0,5],[1,2,10]], needs = [3,2]', '14', 'There are two kinds of items, A and B. Their prices are $2 and $5 respectively. \nIn special offer 1, you can pay $5 for 3A and 0B\nIn special offer 2, you can pay $10 for 1A and 2B. \nYou need to buy 3A and 2B, so you may pay $10 for 1A and 2B (special offer #2), and $4 for 2A.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1121', '512', '2', 'price = [2,3,4], special = [[1,1,0,4],[2,2,1,9]], needs = [1,2,1]', '11', 'The price of A is $2, and $3 for B, $4 for C. \nYou may pay $4 for 1A and 1B, and $9 for 2A ,2B and 1C. \nYou need to buy 1A ,2B and 1C, so you may pay $4 for 1A and 1B (special offer #1), and $3 for 1B, $4 for 1C. \nYou cannot add more items, though only $9 for 2A ,2B and 1C.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1122', '513', '1', 's = \"*\"', '9', 'The encoded message can represent any of the encoded messages \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", or \"9\".\nEach of these can be decoded to the strings \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", and \"I\" respectively.\nHence, there are a total of 9 ways to decode \"*\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1123', '513', '2', 's = \"1*\"', '18', 'The encoded message can represent any of the encoded messages \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", or \"19\".\nEach of these encoded messages have 2 ways to be decoded (e.g. \"11\" can be decoded to \"AA\" or \"K\").\nHence, there are a total of 9 * 2 = 18 ways to decode \"1*\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1124', '513', '3', 's = \"2*\"', '15', 'The encoded message can represent any of the encoded messages \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", or \"29\".\n\"21\", \"22\", \"23\", \"24\", \"25\", and \"26\" have 2 ways of being decoded, but \"27\", \"28\", and \"29\" only have 1 way.\nHence, there are a total of (6 * 2) + (3 * 1) = 12 + 3 = 15 ways to decode \"2*\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1125', '514', '1', 'equation = \"x+5-3+x=6+x-2\"', '\"x=2\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1126', '514', '2', 'equation = \"x=x\"', '\"Infinite solutions\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1127', '514', '3', 'equation = \"2x=x\"', '\"x=0\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1128', '515', '1', '[\"MyCircularDeque\", \"insertLast\", \"insertLast\", \"insertFront\", \"insertFront\", \"getRear\", \"isFull\", \"deleteLast\", \"insertFront\", \"getFront\"]\n[[3], [1], [2], [3], [4], [], [], [], [4], []]', '[null, true, true, true, false, 2, true, true, true, 4]', 'MyCircularDeque myCircularDeque = new MyCircularDeque(3);\nmyCircularDeque.insertLast(1);  // return True\nmyCircularDeque.insertLast(2);  // return True\nmyCircularDeque.insertFront(3); // return True\nmyCircularDeque.insertFront(4); // return False, the queue is full.\nmyCircularDeque.getRear();      // return 2\nmyCircularDeque.isFull();       // return True\nmyCircularDeque.deleteLast();   // return True\nmyCircularDeque.insertFront(4); // return True\nmyCircularDeque.getFront();     // return 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1129', '516', '1', 'nums = [1,12,-5,-6,50,3], k = 4', '12.75000', 'Maximum average is (12 - 5 - 6 + 50) / 4 = 51 / 4 = 12.75');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1130', '516', '2', 'nums = [5], k = 1', '5.00000', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1131', '517', '1', 'nums = [1,2,2,4]', '[2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1132', '517', '2', 'nums = [1,1]', '[1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1133', '518', '1', 'pairs = [[1,2],[2,3],[3,4]]', '2', 'The longest chain is [1,2] -&gt; [3,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1134', '518', '2', 'pairs = [[1,2],[7,8],[4,5]]', '3', 'The longest chain is [1,2] -&gt; [4,5] -&gt; [7,8].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1135', '519', '1', 's = \"abc\"', '3', 'Three palindromic strings: \"a\", \"b\", \"c\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1136', '519', '2', 's = \"aaa\"', '6', 'Six palindromic strings: \"a\", \"a\", \"a\", \"aa\", \"aa\", \"aaa\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1137', '520', '1', 'dictionary = [\"cat\",\"bat\",\"rat\"], sentence = \"the cattle was rattled by the battery\"', '\"the cat was rat by the bat\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1138', '520', '2', 'dictionary = [\"a\",\"b\",\"c\"], sentence = \"aadsfasf absbs bbab cadsfafs\"', '\"a a b c\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1139', '521', '1', 'senate = \"RD\"', '\"Radiant\"', 'The first senator comes from Radiant and he can just ban the next senator\'s right in round 1. \nAnd the second senator can\'t exercise any rights anymore since his right has been banned. \nAnd in round 2, the first senator can just announce the victory since he is the only guy in the senate who can vote.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1140', '521', '2', 'senate = \"RDD\"', '\"Dire\"', 'The first senator comes from Radiant and he can just ban the next senator\'s right in round 1. \nAnd the second senator can\'t exercise any rights anymore since his right has been banned. \nAnd the third senator comes from Dire and he can ban the first senator\'s right in round 1. \nAnd in round 2, the third senator can just announce the victory since he is the only guy in the senate who can vote.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1141', '522', '1', 'n = 3', '3', 'Initially, we have one character \'A\'.\nIn step 1, we use Copy All operation.\nIn step 2, we use Paste operation to get \'AA\'.\nIn step 3, we use Paste operation to get \'AAA\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1142', '522', '2', 'n = 1', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1143', '523', '1', 'root = [1,2,3,4,null,2,4,null,null,4]', '[[2,4],[4]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1144', '523', '2', 'root = [2,1,1]', '[[1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1145', '523', '3', 'root = [2,2,2,3,null,3,null]', '[[2,3],[3]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1146', '524', '1', 'root = [5,3,6,2,4,null,7], k = 9', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1147', '524', '2', 'root = [5,3,6,2,4,null,7], k = 28', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1148', '525', '1', 'nums = [3,2,1,6,0,5]', '[6,3,5,null,2,0,null,null,1]', 'The recursive calls are as follow:\n- The largest value in [3,2,1,6,0,5] is 6. Left prefix is [3,2,1] and right suffix is [0,5].\n    - The largest value in [3,2,1] is 3. Left prefix is [] and right suffix is [2,1].\n        - Empty array, so no child.\n        - The largest value in [2,1] is 2. Left prefix is [] and right suffix is [1].\n            - Empty array, so no child.\n            - Only one element, so child is a node with value 1.\n    - The largest value in [0,5] is 5. Left prefix is [0] and right suffix is [].\n        - Only one element, so child is a node with value 0.\n        - Empty array, so no child.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1149', '525', '2', 'nums = [3,2,1]', '[3,null,2,null,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1150', '526', '1', 'root = [1,2]', '[[\"\",\"1\",\"\"],\n [\"2\",\"\",\"\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1151', '526', '2', 'root = [1,2,3,null,4]', '[[\"\",\"\",\"\",\"1\",\"\",\"\",\"\"],\n [\"\",\"2\",\"\",\"\",\"\",\"3\",\"\"],\n [\"\",\"\",\"4\",\"\",\"\",\"\",\"\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1152', '529', '1', 'nums = [1,2,3,3,4,5]', 'true', 'nums can be split into the following subsequences:\n[<strong><u>1</u></strong>,<strong><u>2</u></strong>,<strong><u>3</u></strong>,3,4,5] --&gt; 1, 2, 3\n[1,2,3,<strong><u>3</u></strong>,<strong><u>4</u></strong>,<strong><u>5</u></strong>] --&gt; 3, 4, 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1153', '529', '2', 'nums = [1,2,3,3,4,4,5,5]', 'true', 'nums can be split into the following subsequences:\n[<strong><u>1</u></strong>,<strong><u>2</u></strong>,<strong><u>3</u></strong>,3,<strong><u>4</u></strong>,4,<strong><u>5</u></strong>,5] --&gt; 1, 2, 3, 4, 5\n[1,2,3,<strong><u>3</u></strong>,4,<strong><u>4</u></strong>,5,<strong><u>5</u></strong>] --&gt; 3, 4, 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1154', '529', '3', 'nums = [1,2,3,4,4,5]', 'false', 'It is impossible to split nums into consecutive increasing subsequences of length 3 or more.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1155', '530', '1', 'img = [[1,1,1],[1,0,1],[1,1,1]]', '[[0,0,0],[0,0,0],[0,0,0]]', 'For the points (0,0), (0,2), (2,0), (2,2): floor(3/4) = floor(0.75) = 0\nFor the points (0,1), (1,0), (1,2), (2,1): floor(5/6) = floor(0.83333333) = 0\nFor the point (1,1): floor(8/9) = floor(0.88888889) = 0');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1156', '530', '2', 'img = [[100,200,100],[200,50,200],[100,200,100]]', '[[137,141,137],[141,138,141],[137,141,137]]', 'For the points (0,0), (0,2), (2,0), (2,2): floor((100+200+200+50)/4) = floor(137.5) = 137\nFor the points (0,1), (1,0), (1,2), (2,1): floor((200+200+50+200+100+100)/6) = floor(141.666667) = 141\nFor the point (1,1): floor((50+200+200+200+200+100+100+100+100)/9) = floor(138.888889) = 138');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1157', '531', '1', 'root = [1,3,2,5,3,null,9]', '4', 'The maximum width exists in the third level with length 4 (5,3,null,9).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1158', '531', '2', 'root = [1,3,2,5,null,null,9,6,null,7]', '7', 'The maximum width exists in the fourth level with length 7 (6,null,null,null,null,null,7).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1159', '531', '3', 'root = [1,3,2,5]', '2', 'The maximum width exists in the second level with length 2 (3,2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1160', '532', '1', 's = \"aaabbb\"', '2', 'Print \"aaa\" first and then print \"bbb\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1161', '532', '2', 's = \"aba\"', '2', 'Print \"aaa\" first and then print \"b\" from the second place of the string, which will cover the existing character \'a\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1162', '533', '1', 'nums = [4,2,3]', 'true', 'You could modify the first 4 to 1 to get a non-decreasing array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1163', '533', '2', 'nums = [4,2,1]', 'false', 'You cannot get a non-decreasing array by modifying at most one element.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1164', '534', '1', 'n = 3, k = 1', '[1,2,3]', 'The [1,2,3] has three different positive integers ranging from 1 to 3, and the [1,1] has exactly 1 distinct integer: 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1165', '534', '2', 'n = 3, k = 2', '[1,3,2]', 'The [1,3,2] has three different positive integers ranging from 1 to 3, and the [2,1] has exactly 2 distinct integers: 1 and 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1166', '535', '1', 'm = 3, n = 3, k = 5', '3', 'The 5<sup>th</sup> smallest number is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1167', '535', '2', 'm = 2, n = 3, k = 6', '6', 'The 6<sup>th</sup> smallest number is 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1168', '239', '1', 'n = 6', 'true', '6 = 2 × 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1169', '239', '2', 'n = 1', 'true', '1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1170', '239', '3', 'n = 14', 'false', '14 is not ugly since it includes the prime factor 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1171', '244', '1', 'citations = [0,1,3,5,6]', '3', '[0,1,3,5,6] means the researcher has 5 papers in total and each of them had received 0, 1, 3, 5, 6 citations respectively.\nSince the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1172', '244', '2', 'citations = [1,2,100]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1173', '311', '1', '[\"RandomizedCollection\", \"insert\", \"insert\", \"insert\", \"getRandom\", \"remove\", \"getRandom\"]\n[[], [1], [1], [2], [], [1], []]', '[null, true, false, true, 2, true, 1]', 'RandomizedCollection randomizedCollection = new RandomizedCollection();\nrandomizedCollection.insert(1);   // return true since the collection does not contain 1.\n                                  // Inserts 1 into the collection.\nrandomizedCollection.insert(1);   // return false since the collection contains 1.\n                                  // Inserts another 1 into the collection. Collection now contains [1,1].\nrandomizedCollection.insert(2);   // return true since the collection does not contain 2.\n                                  // Inserts 2 into the collection. Collection now contains [1,1,2].\nrandomizedCollection.getRandom(); // getRandom should:\n                                  // - return 1 with probability 2/3, or\n                                  // - return 2 with probability 1/3.\nrandomizedCollection.remove(1);   // return true since the collection contains 1.\n                                  // Removes 1 from the collection. Collection now contains [1,2].\nrandomizedCollection.getRandom(); // getRandom should return 1 or 2, both equally likely.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1174', '359', '1', 'root = [10,5,-3,3,2,null,11,3,-2,null,1], targetSum = 8', '3', 'The paths that sum to 8 are shown.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1175', '359', '2', 'root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1176', '380', '1', '[\"LFUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [3], [4, 4], [1], [3], [4]]', '[null, null, null, 1, null, -1, 3, null, -1, 3, 4]', '// cnt(x) = the use counter for key x\n// cache=[] will show the last used order for tiebreakers (leftmost element is  most recent)\nLFUCache lfu = new LFUCache(2);\nlfu.put(1, 1);   // cache=[1,_], cnt(1)=1\nlfu.put(2, 2);   // cache=[2,1], cnt(2)=1, cnt(1)=1\nlfu.get(1);      // return 1\n                 // cache=[1,2], cnt(2)=1, cnt(1)=2\nlfu.put(3, 3);   // 2 is the LFU key because cnt(2)=1 is the smallest, invalidate 2.\n                 // cache=[3,1], cnt(3)=1, cnt(1)=2\nlfu.get(2);      // return -1 (not found)\nlfu.get(3);      // return 3\n                 // cache=[3,1], cnt(3)=2, cnt(1)=2\nlfu.put(4, 4);   // Both 1 and 3 have the same cnt, but 1 is LRU, invalidate 1.\n                 // cache=[4,3], cnt(4)=1, cnt(3)=2\nlfu.get(1);      // return -1 (not found)\nlfu.get(3);      // return 3\n                 // cache=[3,4], cnt(4)=1, cnt(3)=3\nlfu.get(4);      // return 4\n                 // cache=[4,3], cnt(4)=2, cnt(3)=3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1177', '392', '1', 'houses = [1,2,3], heaters = [2]', '1', 'The only heater was placed in the position 2, and if we use the radius 1 standard, then all the houses can be warmed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1178', '392', '2', 'houses = [1,2,3,4], heaters = [1,4]', '1', 'The two heater was placed in the position 1 and 4. We need to use radius 1 standard, then all the houses can be warmed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1179', '392', '3', 'houses = [1,5], heaters = [2]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1180', '442', '1', 'root = [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]', '[30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1181', '442', '2', 'root = [0,null,1]', '[1,null,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1182', '471', '1', 'nums = [2,6,4,8,10,9,15]', '5', 'You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1183', '471', '2', 'nums = [1,2,3,4]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1184', '471', '3', 'nums = [1]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1185', '494', '1', 'paths = [\"root/a 1.txt(abcd) 2.txt(efgh)\",\"root/c 3.txt(abcd)\",\"root/c/d 4.txt(efgh)\",\"root 4.txt(efgh)\"]', '[[\"root/a/2.txt\",\"root/c/d/4.txt\",\"root/4.txt\"],[\"root/a/1.txt\",\"root/c/3.txt\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1186', '494', '2', 'paths = [\"root/a 1.txt(abcd) 2.txt(efgh)\",\"root/c 3.txt(abcd)\",\"root/c/d 4.txt(efgh)\"]', '[[\"root/a/2.txt\",\"root/c/d/4.txt\"],[\"root/a/1.txt\",\"root/c/3.txt\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1187', '499', '1', 'Cinema table:\n+----+------------+-------------+--------+\n| id | movie      | description | rating |\n+----+------------+-------------+--------+\n| 1  | War        | great 3D    | 8.9    |\n| 2  | Science    | fiction     | 8.5    |\n| 3  | irish      | boring      | 6.2    |\n| 4  | Ice song   | Fantacy     | 8.6    |\n| 5  | House card | Interesting | 9.1    |\n+----+------------+-------------+--------+', '+----+------------+-------------+--------+\n| id | movie      | description | rating |\n+----+------------+-------------+--------+\n| 5  | House card | Interesting | 9.1    |\n| 1  | War        | great 3D    | 8.9    |\n+----+------------+-------------+--------+', 'We have three movies with odd-numbered IDs: 1, 3, and 5. The movie with ID = 3 is boring so we do not include it in the answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1188', '507', '1', 'courses = [[100,200],[200,1300],[1000,1250],[2000,3200]]', '3', 'There are totally 4 courses, but you can take 3 courses at most:\nFirst, take the 1<sup>st</sup> course, it costs 100 days so you will finish it on the 100<sup>th</sup> day, and ready to take the next course on the 101<sup>st</sup> day.\nSecond, take the 3<sup>rd</sup> course, it costs 1000 days so you will finish it on the 1100<sup>th</sup> day, and ready to take the next course on the 1101<sup>st</sup> day. \nThird, take the 2<sup>nd</sup> course, it costs 200 days so you will finish it on the 1300<sup>th</sup> day. \nThe 4<sup>th</sup> course cannot be taken now, since you will finish it on the 3300<sup>th</sup> day, which exceeds the closed date.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1189', '507', '2', 'courses = [[1,2]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1190', '507', '3', 'courses = [[3,2],[4,3]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1191', '527', '1', 'moves = \"UD\"', 'true', ': The robot moves up once, and then down once. All moves have the same magnitude, so it ended up at the origin where it started. Therefore, we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1192', '527', '2', 'moves = \"LL\"', 'false', ': The robot moves left twice. It ends up two \"moves\" to the left of the origin. We return false because it is not at the origin at the end of its moves.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1193', '528', '1', 'arr = [1,2,3,4,5], k = 4, x = 3', '[1,2,3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1194', '528', '2', 'arr = [1,2,3,4,5], k = 4, x = -1', '[1,2,3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1195', '536', '1', 'root = [1,0,2], low = 1, high = 2', '[1,null,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1196', '536', '2', 'root = [3,0,4,null,2,null,null,1], low = 1, high = 3', '[3,2,null,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1197', '537', '1', 'num = 2736', '7236', 'Swap the number 2 and the number 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1198', '537', '2', 'num = 9973', '9973', 'No swap.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1199', '539', '1', 'n = 1, presses = 1', '2', 'Status can be:\n- [off] by pressing button 1\n- [on] by pressing button 2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1200', '539', '2', 'n = 2, presses = 1', '3', 'Status can be:\n- [off, off] by pressing button 1\n- [on, off] by pressing button 2\n- [off, on] by pressing button 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1201', '539', '3', 'n = 3, presses = 1', '4', 'Status can be:\n- [off, off, off] by pressing button 1\n- [off, on, off] by pressing button 2\n- [on, off, on] by pressing button 3\n- [off, on, on] by pressing button 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1202', '540', '1', 'nums = [1,3,5,4,7]', '2', 'The two longest increasing subsequences are [1, 3, 4, 7] and [1, 3, 5, 7].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1203', '540', '2', 'nums = [2,2,2,2,2]', '5', 'The length of the longest increasing subsequence is 1, and there are 5 increasing subsequences of length 1, so output 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1204', '541', '1', 'nums = [1,3,5,4,7]', '3', 'The longest continuous increasing subsequence is [1,3,5] with length 3.\nEven though [1,3,5,7] is an increasing subsequence, it is not continuous as elements 5 and 7 are separated by element\n4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1205', '541', '2', 'nums = [2,2,2,2,2]', '1', 'The longest continuous increasing subsequence is [2] with length 1. Note that it must be strictly\nincreasing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1206', '542', '1', 'forest = [[1,2,3],[0,0,4],[7,6,5]]', '6', 'Following the path above allows you to cut off the trees from shortest to tallest in 6 steps.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1207', '542', '2', 'forest = [[1,2,3],[0,0,0],[7,6,5]]', '-1', 'The trees in the bottom row cannot be accessed as the middle row is blocked.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1208', '542', '3', 'forest = [[2,3,4],[0,0,5],[8,7,6]]', '6', 'You can follow the same path as Example 1 to cut off all the trees.\nNote that you can cut off the first tree at (0, 0) before making any steps.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1209', '543', '1', '[\"MagicDictionary\", \"buildDict\", \"search\", \"search\", \"search\", \"search\"]\n[[], [[\"hello\", \"leetcode\"]], [\"hello\"], [\"hhllo\"], [\"hell\"], [\"leetcoded\"]]', '[null, null, false, true, false, false]', 'MagicDictionary magicDictionary = new MagicDictionary();\nmagicDictionary.buildDict([\"hello\", \"leetcode\"]);\nmagicDictionary.search(\"hello\"); // return False\nmagicDictionary.search(\"hhllo\"); // We can change the second \'h\' to \'e\' to match \"hello\" so we return True\nmagicDictionary.search(\"hell\"); // return False\nmagicDictionary.search(\"leetcoded\"); // return False');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1210', '544', '1', '[\"MapSum\", \"insert\", \"sum\", \"insert\", \"sum\"]\n[[], [\"apple\", 3], [\"ap\"], [\"app\", 2], [\"ap\"]]', '[null, null, 3, null, 5]', 'MapSum mapSum = new MapSum();\nmapSum.insert(\"apple\", 3);  \nmapSum.sum(\"ap\");           // return 3 (<u>ap</u>ple = 3)\nmapSum.insert(\"app\", 2);    \nmapSum.sum(\"ap\");           // return 5 (<u>ap</u>ple + <u>ap</u>p = 3 + 2 = 5)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1211', '545', '1', 's = \"()\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1212', '545', '2', 's = \"(*)\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1213', '545', '3', 's = \"(*))\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1214', '546', '1', 'cards = [4,1,8,7]', 'true', '(8-4) * (7-1) = 24');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1215', '546', '2', 'cards = [1,2,1,2]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1216', '547', '1', 's = \"aba\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1217', '547', '2', 's = \"abca\"', 'true', 'You could delete the character \'c\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1218', '547', '3', 's = \"abc\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1219', '548', '1', 'ops = [\"5\",\"2\",\"C\",\"D\",\"+\"]', '30', '\"5\" - Add 5 to the record, record is now [5].\n\"2\" - Add 2 to the record, record is now [5, 2].\n\"C\" - Invalidate and remove the previous score, record is now [5].\n\"D\" - Add 2 * 5 = 10 to the record, record is now [5, 10].\n\"+\" - Add 5 + 10 = 15 to the record, record is now [5, 10, 15].\nThe total sum is 5 + 10 + 15 = 30.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1220', '548', '2', 'ops = [\"5\",\"-2\",\"4\",\"C\",\"D\",\"9\",\"+\",\"+\"]', '27', '\"5\" - Add 5 to the record, record is now [5].\n\"-2\" - Add -2 to the record, record is now [5, -2].\n\"4\" - Add 4 to the record, record is now [5, -2, 4].\n\"C\" - Invalidate and remove the previous score, record is now [5, -2].\n\"D\" - Add 2 * -2 = -4 to the record, record is now [5, -2, -4].\n\"9\" - Add 9 to the record, record is now [5, -2, -4, 9].\n\"+\" - Add -4 + 9 = 5 to the record, record is now [5, -2, -4, 9, 5].\n\"+\" - Add 9 + 5 = 14 to the record, record is now [5, -2, -4, 9, 5, 14].\nThe total sum is 5 + -2 + -4 + 9 + 5 + 14 = 27.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1221', '548', '3', 'ops = [\"1\",\"C\"]', '0', '\"1\" - Add 1 to the record, record is now [1].\n\"C\" - Invalidate and remove the previous score, record is now [].\nSince the record is empty, the total sum is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1222', '549', '1', 'edges = [[1,2],[1,3],[2,3]]', '[2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1223', '549', '2', 'edges = [[1,2],[2,3],[3,4],[1,4],[1,5]]', '[1,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1224', '550', '1', 'edges = [[1,2],[1,3],[2,3]]', '[2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1225', '550', '2', 'edges = [[1,2],[2,3],[3,4],[4,1],[1,5]]', '[4,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1226', '551', '1', 'a = \"abcd\", b = \"cdabcdab\"', '3', 'We return 3 because by repeating a three times \"ab<strong>cdabcdab</strong>cd\", b is a substring of it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1227', '551', '2', 'a = \"a\", b = \"aa\"', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1228', '552', '1', 'root = [5,4,5,1,1,null,5]', '2', 'The shown image shows that the longest path of the same value (i.e. 5).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1229', '552', '2', 'root = [1,4,5,4,4,null,5]', '2', 'The shown image shows that the longest path of the same value (i.e. 4).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1230', '554', '1', 'nums = [1,2,1,2,6,7,5,1], k = 2', '[0,3,5]', 'Subarrays [1, 2], [2, 6], [7, 5] correspond to the starting indices [0, 3, 5].\nWe could have also taken [2, 1], but an answer of [1, 3, 5] would be lexicographically larger.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1231', '554', '2', 'nums = [1,2,1,2,1,2,1,2,1], k = 2', '[0,2,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1232', '555', '1', 'employees = [[1,5,[2,3]],[2,3,[]],[3,3,[]]], id = 1', '11', 'Employee 1 has an importance value of 5 and has two direct subordinates: employee 2 and employee 3.\nThey both have an importance value of 3.\nThus, the total importance value of employee 1 is 5 + 3 + 3 = 11.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1233', '555', '2', 'employees = [[1,2,[5]],[5,-3,[]]], id = 5', '-3', 'Employee 5 has an importance value of -3 and has no direct subordinates.\nThus, the total importance value of employee 5 is -3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1234', '556', '1', 'stickers = [\"with\",\"example\",\"science\"], target = \"thehat\"', '3', 'We can use 2 \"with\" stickers, and 1 \"example\" sticker.\nAfter cutting and rearrange the letters of those stickers, we can form the target \"thehat\".\nAlso, this is the minimum number of stickers necessary to form the target string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1235', '556', '2', 'stickers = [\"notice\",\"possible\"], target = \"basicbasic\"', '-1', 'We cannot form the target \"basicbasic\" from cutting letters from the given stickers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1236', '557', '1', 'words = [\"i\",\"love\",\"leetcode\",\"i\",\"love\",\"coding\"], k = 2', '[\"i\",\"love\"]', '\"i\" and \"love\" are the two most frequent words.\nNote that \"i\" comes before \"love\" due to a lower alphabetical order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1237', '557', '2', 'words = [\"the\",\"day\",\"is\",\"sunny\",\"the\",\"the\",\"the\",\"sunny\",\"is\",\"is\"], k = 4', '[\"the\",\"is\",\"sunny\",\"day\"]', '\"the\", \"is\", \"sunny\" and \"day\" are the four most frequent words, with the number of occurrence being 4, 3, 2 and 1 respectively.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1238', '558', '1', 'n = 5', 'true', 'The binary representation of 5 is: 101');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1239', '558', '2', 'n = 7', 'false', 'The binary representation of 7 is: 111.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1240', '558', '3', 'n = 11', 'false', 'The binary representation of 11 is: 1011.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1241', '559', '1', 'grid = [[0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,1,1,0,0,1,0,1,0,0],[0,1,0,0,1,1,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0]]', '6', 'The answer is not 11, because the island must be connected 4-directionally.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1242', '559', '2', 'grid = [[0,0,0,0,0,0,0,0]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1243', '560', '1', 's = \"00110011\"', '6', 'There are 6 substrings that have equal number of consecutive 1\'s and 0\'s: \"0011\", \"01\", \"1100\", \"10\", \"0011\", and \"01\".\nNotice that some of these substrings repeat and are counted the number of times they occur.\nAlso, \"00110011\" is not a valid substring because all the 0\'s (and 1\'s) are not grouped together.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1244', '560', '2', 's = \"10101\"', '4', 'There are 4 substrings: \"10\", \"01\", \"10\", \"01\" that have equal number of consecutive 1\'s and 0\'s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1245', '561', '1', 'nums = [1,2,2,3,1]', '2', 'The input array has a degree of 2 because both elements 1 and 2 appear twice.\nOf the subarrays that have the same degree:\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\nThe shortest length is 2. So return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1246', '561', '2', 'nums = [1,2,2,3,1,4,2]', '6', 'The degree is 3 because the element 2 is repeated 3 times.\nSo [2,2,3,1,4,2] is the shortest subarray, therefore returning 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1247', '562', '1', 'nums = [4,3,2,3,5,2,1], k = 4', 'true', 'It is possible to divide it into 4 subsets (5), (1, 4), (2,3), (2,3) with equal sums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1248', '562', '2', 'nums = [1,2,3,4], k = 3', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1249', '563', '1', 'positions = [[1,2],[2,3],[6,1]]', '[2,5,5]', 'After the first drop, the tallest stack is square 1 with a height of 2.\nAfter the second drop, the tallest stack is squares 1 and 2 with a height of 5.\nAfter the third drop, the tallest stack is still squares 1 and 2 with a height of 5.\nThus, we return an answer of [2, 5, 5].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1250', '563', '2', 'positions = [[100,100],[200,100]]', '[100,100]', 'After the first drop, the tallest stack is square 1 with a height of 100.\nAfter the second drop, the tallest stack is either square 1 or square 2, both with heights of 100.\nThus, we return an answer of [100, 100].\nNote that square 2 only brushes the right side of square 1, which does not count as landing on it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1251', '564', '1', 'root = [4,2,7,1,3], val = 2', '[2,1,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1252', '564', '2', 'root = [4,2,7,1,3], val = 5', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1253', '565', '1', 'root = [4,2,7,1,3], val = 5', '[4,2,7,1,3,5]', 'Another accepted tree is:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/05/bst.jpg\" style=\"width:352px;height:301px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1254', '565', '2', 'root = [40,20,60,10,30,50,70], val = 25', '[40,20,60,10,30,50,70,null,null,25]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1255', '565', '3', 'root = [4,2,7,1,3,null,null,null,null,null,null], val = 5', '[4,2,7,1,3,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1256', '566', '1', '[\"KthLargest\", \"add\", \"add\", \"add\", \"add\", \"add\"]\n[[3, [4, 5, 8, 2]], [3], [5], [10], [9], [4]]', '[null, 4, 5, 5, 8, 8]', 'KthLargest kthLargest = new KthLargest(3, [4, 5, 8, 2]);\nkthLargest.add(3);   // return 4\nkthLargest.add(5);   // return 5\nkthLargest.add(10);  // return 5\nkthLargest.add(9);   // return 8\nkthLargest.add(4);   // return 8');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1257', '567', '1', 'nums = [-1,0,3,5,9,12], target = 9', '4', '9 exists in nums and its index is 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1258', '567', '2', 'nums = [-1,0,3,5,9,12], target = 2', '-1', '2 does not exist in nums so return -1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1259', '568', '1', '[\"MyHashSet\", \"add\", \"add\", \"contains\", \"contains\", \"add\", \"contains\", \"remove\", \"contains\"]\n[[], [1], [2], [1], [3], [2], [2], [2], [2]]', '[null, null, null, true, false, null, true, null, false]', 'MyHashSet myHashSet = new MyHashSet();\nmyHashSet.add(1);      // set = [1]\nmyHashSet.add(2);      // set = [1, 2]\nmyHashSet.contains(1); // return True\nmyHashSet.contains(3); // return False, (not found)\nmyHashSet.add(2);      // set = [1, 2]\nmyHashSet.contains(2); // return True\nmyHashSet.remove(2);   // set = [1]\nmyHashSet.contains(2); // return False, (already removed)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1260', '569', '1', '[\"MyHashMap\", \"put\", \"put\", \"get\", \"get\", \"put\", \"get\", \"remove\", \"get\"]\n[[], [1, 1], [2, 2], [1], [3], [2, 1], [2], [2], [2]]', '[null, null, null, 1, -1, null, 1, null, -1]', 'MyHashMap myHashMap = new MyHashMap();\nmyHashMap.put(1, 1); // The map is now [[1,1]]\nmyHashMap.put(2, 2); // The map is now [[1,1], [2,2]]\nmyHashMap.get(1);    // return 1, The map is now [[1,1], [2,2]]\nmyHashMap.get(3);    // return -1 (i.e., not found), The map is now [[1,1], [2,2]]\nmyHashMap.put(2, 1); // The map is now [[1,1], [2,1]] (i.e., update the existing value)\nmyHashMap.get(2);    // return 1, The map is now [[1,1], [2,1]]\nmyHashMap.remove(2); // remove the mapping for 2, The map is now [[1,1]]\nmyHashMap.get(2);    // return -1 (i.e., not found), The map is now [[1,1]]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1261', '570', '1', '[\"MyLinkedList\", \"addAtHead\", \"addAtTail\", \"addAtIndex\", \"get\", \"deleteAtIndex\", \"get\"]\n[[], [1], [3], [1, 2], [1], [1], [1]]', '[null, null, null, null, 2, null, 3]', 'MyLinkedList myLinkedList = new MyLinkedList();\nmyLinkedList.addAtHead(1);\nmyLinkedList.addAtTail(3);\nmyLinkedList.addAtIndex(1, 2);    // linked list becomes 1-&gt;2-&gt;3\nmyLinkedList.get(1);              // return 2\nmyLinkedList.deleteAtIndex(1);    // now the linked list is 1-&gt;3\nmyLinkedList.get(1);              // return 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1262', '571', '1', 's = \"Hello\"', '\"hello\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1263', '571', '2', 's = \"here\"', '\"here\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1264', '571', '3', 's = \"LOVELY\"', '\"lovely\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1265', '572', '1', '[\"Solution\", \"pick\", \"pick\", \"pick\", \"pick\", \"pick\", \"pick\", \"pick\"]\n[[7, [2, 3, 5]], [], [], [], [], [], [], []]', '[null, 0, 4, 1, 6, 1, 0, 4]', 'Solution solution = new Solution(7, [2, 3, 5]);\nsolution.pick(); // return 0, any integer from [0,1,4,6] should be ok. Note that for every call of pick,\n                 // 0, 1, 4, and 6 must be equally likely to be returned (i.e., with probability 1/4).\nsolution.pick(); // return 4\nsolution.pick(); // return 1\nsolution.pick(); // return 6\nsolution.pick(); // return 1\nsolution.pick(); // return 0\nsolution.pick(); // return 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1266', '573', '1', 's1 = \"sea\", s2 = \"eat\"', '231', 'Deleting \"s\" from \"sea\" adds the ASCII value of \"s\" (115) to the sum.\nDeleting \"t\" from \"eat\" adds 116 to the sum.\nAt the end, both strings are equal, and 115 + 116 = 231 is the minimum sum possible to achieve this.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1267', '573', '2', 's1 = \"delete\", s2 = \"leet\"', '403', 'Deleting \"dee\" from \"delete\" to turn the string into \"let\",\nadds 100[d] + 101[e] + 101[e] to the sum.\nDeleting \"e\" from \"leet\" adds 101[e] to the sum.\nAt the end, both strings are equal to \"let\", and the answer is 100+101+101+101 = 403.\nIf instead we turned both strings into \"lee\" or \"eet\", we would get answers of 433 or 417, which are higher.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1268', '574', '1', 'nums = [10,5,2,6], k = 100', '8', 'The 8 subarrays that have product less than 100 are:\n[10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6]\nNote that [10, 5, 2] is not included as the product of 100 is not strictly less than k.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1269', '574', '2', 'nums = [1,2,3], k = 0', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1270', '575', '1', 'prices = [1,3,2,8,4,9], fee = 2', '8', 'The maximum profit can be achieved by:\n- Buying at prices[0] = 1\n- Selling at prices[3] = 8\n- Buying at prices[4] = 4\n- Selling at prices[5] = 9\nThe total profit is ((8 - 1) - 2) + ((9 - 4) - 2) = 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1271', '575', '2', 'prices = [1,3,7,5,10,3], fee = 3', '6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1272', '576', '1', '[\"RangeModule\", \"addRange\", \"removeRange\", \"queryRange\", \"queryRange\", \"queryRange\"]\n[[], [10, 20], [14, 16], [10, 14], [13, 15], [16, 17]]', '[null, null, null, true, false, true]', 'RangeModule rangeModule = new RangeModule();\nrangeModule.addRange(10, 20);\nrangeModule.removeRange(14, 16);\nrangeModule.queryRange(10, 14); // return True,(Every number in [10, 14) is being tracked)\nrangeModule.queryRange(13, 15); // return False,(Numbers like 14, 14.03, 14.17 in [13, 15) are not being tracked)\nrangeModule.queryRange(16, 17); // return True, (The number 16 in [16, 17) is still being tracked, despite the remove operation)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1273', '577', '1', 'bits = [1,0,0]', 'true', 'The only way to decode it is two-bit character and one-bit character.\nSo the last character is one-bit character.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1274', '577', '2', 'bits = [1,1,1,0]', 'false', 'The only way to decode it is two-bit character and two-bit character.\nSo the last character is not one-bit character.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1275', '578', '1', 'nums1 = [1,2,3,2,1], nums2 = [3,2,1,4,7]', '3', 'The repeated subarray with maximum length is [3,2,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1276', '578', '2', 'nums1 = [0,0,0,0,0], nums2 = [0,0,0,0,0]', '5', 'The repeated subarray with maximum length is [0,0,0,0,0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1277', '579', '1', 'nums = [1,3,1], k = 1', '0', 'Here are all the pairs:\n(1,3) -&gt; 2\n(1,1) -&gt; 0\n(3,1) -&gt; 2\nThen the 1<sup>st</sup> smallest distance pair is (1,1), and its distance is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1278', '579', '2', 'nums = [1,1,1], k = 2', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1279', '579', '3', 'nums = [1,6,1], k = 3', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1280', '580', '1', 'words = [\"w\",\"wo\",\"wor\",\"worl\",\"world\"]', '\"world\"', 'The word \"world\" can be built one character at a time by \"w\", \"wo\", \"wor\", and \"worl\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1281', '580', '2', 'words = [\"a\",\"banana\",\"app\",\"appl\",\"ap\",\"apply\",\"apple\"]', '\"apple\"', 'Both \"apply\" and \"apple\" can be built from other words in the dictionary. However, \"apple\" is lexicographically smaller than \"apply\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1282', '581', '1', 'accounts = [[\"John\",\"johnsmith@mail.com\",\"john_newyork@mail.com\"],[\"John\",\"johnsmith@mail.com\",\"john00@mail.com\"],[\"Mary\",\"mary@mail.com\"],[\"John\",\"johnnybravo@mail.com\"]]', '[[\"John\",\"john00@mail.com\",\"john_newyork@mail.com\",\"johnsmith@mail.com\"],[\"Mary\",\"mary@mail.com\"],[\"John\",\"johnnybravo@mail.com\"]]', 'The first and second John\'s are the same person as they have the common email \"johnsmith@mail.com\".\nThe third John and Mary are different people as none of their email addresses are used by other accounts.\nWe could return these lists in any order, for example the answer [[\'Mary\', \'mary@mail.com\'], [\'John\', \'johnnybravo@mail.com\'], \n[\'John\', \'john00@mail.com\', \'john_newyork@mail.com\', \'johnsmith@mail.com\']] would still be accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1283', '581', '2', 'accounts = [[\"Gabe\",\"Gabe0@m.co\",\"Gabe3@m.co\",\"Gabe1@m.co\"],[\"Kevin\",\"Kevin3@m.co\",\"Kevin5@m.co\",\"Kevin0@m.co\"],[\"Ethan\",\"Ethan5@m.co\",\"Ethan4@m.co\",\"Ethan0@m.co\"],[\"Hanzo\",\"Hanzo3@m.co\",\"Hanzo1@m.co\",\"Hanzo0@m.co\"],[\"Fern\",\"Fern5@m.co\",\"Fern1@m.co\",\"Fern0@m.co\"]]', '[[\"Ethan\",\"Ethan0@m.co\",\"Ethan4@m.co\",\"Ethan5@m.co\"],[\"Gabe\",\"Gabe0@m.co\",\"Gabe1@m.co\",\"Gabe3@m.co\"],[\"Hanzo\",\"Hanzo0@m.co\",\"Hanzo1@m.co\",\"Hanzo3@m.co\"],[\"Kevin\",\"Kevin0@m.co\",\"Kevin3@m.co\",\"Kevin5@m.co\"],[\"Fern\",\"Fern0@m.co\",\"Fern1@m.co\",\"Fern5@m.co\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1284', '582', '1', 'source = [\"/*Test program */\", \"int main()\", \"{ \", \"  // variable declaration \", \"int a, b, c;\", \"/* This is a test\", \"   multiline  \", \"   comment for \", \"   testing */\", \"a = b + c;\", \"}\"]', '[\"int main()\",\"{ \",\"  \",\"int a, b, c;\",\"a = b + c;\",\"}\"]', 'The line by line code is visualized as below:\n/*Test program */\nint main()\n{ \n  // variable declaration \nint a, b, c;\n/* This is a test\n   multiline  \n   comment for \n   testing */\na = b + c;\n}\nThe string /* denotes a block comment, including line 1 and lines 6-9. The string // denotes line 4 as comments.\nThe line by line output code is visualized as below:\nint main()\n{ \n  \nint a, b, c;\na = b + c;\n}');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1285', '582', '2', 'source = [\"a/*comment\", \"line\", \"more_comment*/b\"]', '[\"ab\"]', 'The original source string is \"a/*comment\\nline\\nmore_comment*/b\", where we have bolded the newline characters.  After deletion, the implicit newline characters are deleted, leaving the string \"ab\", which when delimited by newline characters becomes [\"ab\"].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1286', '583', '1', 'nums = [1,7,3,6,5,6]', '3', 'The pivot index is 3.\nLeft sum = nums[0] + nums[1] + nums[2] = 1 + 7 + 3 = 11\nRight sum = nums[4] + nums[5] = 5 + 6 = 11');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1287', '583', '2', 'nums = [1,2,3]', '-1', 'There is no index that satisfies the conditions in the problem statement.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1288', '583', '3', 'nums = [2,1,-1]', '0', 'The pivot index is 0.\nLeft sum = 0 (no elements to the left of index 0)\nRight sum = nums[1] + nums[2] = 1 + -1 = 0');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1289', '584', '1', 'head = [1,2,3], k = 5', '[[1],[2],[3],[],[]]', 'The first element output[0] has output[0].val = 1, output[0].next = null.\nThe last element output[4] is null, but its string representation as a ListNode is [].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1290', '584', '2', 'head = [1,2,3,4,5,6,7,8,9,10], k = 3', '[[1,2,3,4],[5,6,7],[8,9,10]]', 'The input has been split into consecutive parts with size difference at most 1, and earlier parts are a larger size than the later parts.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1291', '585', '1', 'formula = \"H2O\"', '\"H2O\"', 'The count of elements are {\'H\': 2, \'O\': 1}.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1292', '585', '2', 'formula = \"Mg(OH)2\"', '\"H2MgO2\"', 'The count of elements are {\'H\': 2, \'Mg\': 1, \'O\': 2}.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1293', '585', '3', 'formula = \"K4(ON(SO3)2)2\"', '\"K4N2O14S4\"', 'The count of elements are {\'K\': 4, \'N\': 2, \'O\': 14, \'S\': 4}.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1294', '586', '1', 'left = 1, right = 22', '[1,2,3,4,5,6,7,8,9,11,12,15,22]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1295', '586', '2', 'left = 47, right = 85', '[48,55,66,77]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1296', '587', '1', '[\"MyCalendar\", \"book\", \"book\", \"book\"]\n[[], [10, 20], [15, 25], [20, 30]]', '[null, true, false, true]', 'MyCalendar myCalendar = new MyCalendar();\nmyCalendar.book(10, 20); // return True\nmyCalendar.book(15, 25); // return False, It can not be booked because time 15 is already booked by another event.\nmyCalendar.book(20, 30); // return True, The event can be booked, as the first event takes every time less than 20, but not including 20.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1297', '588', '1', 's = \"bccb\"', '6', 'The 6 different non-empty palindromic subsequences are \'b\', \'c\', \'bb\', \'cc\', \'bcb\', \'bccb\'.\nNote that \'bcb\' is counted only once, even though it occurs twice.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1298', '588', '2', 's = \"abcdabcdabcdabcdabcdabcdabcdabcddcbadcbadcbadcbadcbadcbadcbadcba\"', '104860361', 'There are 3104860382 different non-empty palindromic subsequences, which is 104860361 modulo 10<sup>9</sup> + 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1299', '589', '1', '[\"MyCalendarTwo\", \"book\", \"book\", \"book\", \"book\", \"book\", \"book\"]\n[[], [10, 20], [50, 60], [10, 40], [5, 15], [5, 10], [25, 55]]', '[null, true, true, true, false, true, true]', 'MyCalendarTwo myCalendarTwo = new MyCalendarTwo();\nmyCalendarTwo.book(10, 20); // return True, The event can be booked. \nmyCalendarTwo.book(50, 60); // return True, The event can be booked. \nmyCalendarTwo.book(10, 40); // return True, The event can be double booked. \nmyCalendarTwo.book(5, 15);  // return False, The event cannot be booked, because it would result in a triple booking.\nmyCalendarTwo.book(5, 10); // return True, The event can be booked, as it does not use time 10 which is already double booked.\nmyCalendarTwo.book(25, 55); // return True, The event can be booked, as the time in [25, 40) will be double booked with the third event, the time [40, 50) will be single booked, and the time [50, 55) will be double booked with the second event.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1300', '538', '1', 'root = [2,2,5,null,null,5,7]', '5', 'The smallest value is 2, the second smallest value is 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1301', '538', '2', 'root = [2,2,2]', '-1', 'The smallest value is 2, but there isn\'t any second smallest value.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1302', '553', '1', 'n = 3, k = 2, row = 0, column = 0', '0.06250', 'There are two moves (to (1,2), (2,1)) that will keep the knight on the board.\nFrom each of those positions, there are also two moves that will keep the knight on the board.\nThe total probability the knight stays on the board is 0.0625.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1303', '553', '2', 'n = 1, k = 0, row = 0, column = 0', '1.00000', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1304', '590', '1', '[\"MyCalendarThree\", \"book\", \"book\", \"book\", \"book\", \"book\", \"book\"]\n[[], [10, 20], [50, 60], [10, 40], [5, 15], [5, 10], [25, 55]]', '[null, 1, 1, 2, 3, 3, 3]', 'MyCalendarThree myCalendarThree = new MyCalendarThree();\nmyCalendarThree.book(10, 20); // return 1\nmyCalendarThree.book(50, 60); // return 1\nmyCalendarThree.book(10, 40); // return 2\nmyCalendarThree.book(5, 15); // return 3\nmyCalendarThree.book(5, 10); // return 3\nmyCalendarThree.book(25, 55); // return 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1305', '591', '1', 'image = [[1,1,1],[1,1,0],[1,0,1]], sr = 1, sc = 1, color = 2', '[[2,2,2],[2,2,0],[2,0,1]]', 'From the center of the image with position (sr, sc) = (1, 1) (i.e., the red pixel), all pixels connected by a path of the same color as the starting pixel (i.e., the blue pixels) are colored with the new color.\nNote the bottom corner is not colored 2, because it is not 4-directionally connected to the starting pixel.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1306', '591', '2', 'image = [[0,0,0],[0,0,0]], sr = 0, sc = 0, color = 0', '[[0,0,0],[0,0,0]]', 'The starting pixel is already colored 0, so no changes are made to the image.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1307', '592', '1', 'asteroids = [5,10,-5]', '[5,10]', 'The 10 and -5 collide resulting in 10. The 5 and 10 never collide.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1308', '592', '2', 'asteroids = [8,-8]', '[]', 'The 8 and -8 collide exploding each other.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1309', '592', '3', 'asteroids = [10,2,-5]', '[10]', 'The 2 and -5 collide resulting in -5. The 10 and -5 collide resulting in 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1310', '593', '1', 'expression = \"(let x 2 (mult x (let x 3 y 4 (add x y))))\"', '14', 'In the expression (add x y), when checking for the value of the variable x,\nwe check from the innermost scope to the outermost in the context of the variable we are trying to evaluate.\nSince x = 3 is found first, the value of x is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1311', '593', '2', 'expression = \"(let x 3 x 2 x)\"', '2', 'Assignment in let statements is processed sequentially.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1312', '593', '3', 'expression = \"(let x 1 y 2 x (add x y) (add x y))\"', '5', 'The first (add x y) evaluates as 3, and is assigned to x.\nThe second (add x y) evaluates as 3+2 = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1313', '594', '1', 'n = 10', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1314', '594', '2', 'n = 1234', '1234', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1315', '594', '3', 'n = 332', '299', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1316', '595', '1', 'temperatures = [73,74,75,71,69,72,76,73]', '[1,1,4,2,1,1,0,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1317', '595', '2', 'temperatures = [30,40,50,60]', '[1,1,1,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1318', '595', '3', 'temperatures = [30,60,90]', '[1,1,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1319', '596', '1', 'nums = [3,4,2]', '6', 'You can perform the following operations:\n- Delete 4 to earn 4 points. Consequently, 3 is also deleted. nums = [2].\n- Delete 2 to earn 2 points. nums = [].\nYou earn a total of 6 points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1320', '596', '2', 'nums = [2,2,3,3,3,4]', '9', 'You can perform the following operations:\n- Delete a 3 to earn 3 points. All 2\'s and 4\'s are also deleted. nums = [3,3].\n- Delete a 3 again to earn 3 points. nums = [3].\n- Delete a 3 once more to earn 3 points. nums = [].\nYou earn a total of 9 points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1321', '597', '1', 'grid = [[0,1,-1],[1,0,-1],[1,1,1]]', '5', 'The player started at (0, 0) and went down, down, right right to reach (2, 2).\n4 cherries were picked up during this single trip, and the matrix becomes [[0,1,-1],[0,0,-1],[0,0,0]].\nThen, the player went left, up, up, left to return home, picking up one more cherry.\nThe total number of cherries picked up is 5, and this is the maximum possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1322', '597', '2', 'grid = [[1,1,-1],[1,-1,1],[-1,1,1]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1323', '598', '1', 'times = [[2,1,1],[2,3,1],[3,4,1]], n = 4, k = 2', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1324', '598', '2', 'times = [[1,2,1]], n = 2, k = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1325', '598', '3', 'times = [[1,2,1]], n = 2, k = 2', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1326', '599', '1', 'letters = [\"c\",\"f\",\"j\"], target = \"a\"', '\"c\"', 'The smallest character that is lexicographically greater than \'a\' in letters is \'c\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1327', '599', '2', 'letters = [\"c\",\"f\",\"j\"], target = \"c\"', '\"f\"', 'The smallest character that is lexicographically greater than \'c\' in letters is \'f\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1328', '599', '3', 'letters = [\"x\",\"x\",\"y\",\"y\"], target = \"z\"', '\"x\"', 'There are no characters in letters that is lexicographically greater than \'z\' so we return letters[0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1329', '600', '1', '[\"WordFilter\", \"f\"]\n[[[\"apple\"]], [\"a\", \"e\"]]', '[null, 0]', 'WordFilter wordFilter = new WordFilter([\"apple\"]);\nwordFilter.f(\"a\", \"e\"); // return 0, because the word at index 0 has prefix = \"a\" and suffix = \"e\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1330', '601', '1', 'cost = [10,<u>15</u>,20]', '15', 'You will start at index 1.\n- Pay 15 and climb two steps to reach the top.\nThe total cost is 15.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1331', '601', '2', 'cost = [<u>1</u>,100,<u>1</u>,1,<u>1</u>,100,<u>1</u>,<u>1</u>,100,<u>1</u>]', '6', 'You will start at index 0.\n- Pay 1 and climb two steps to reach index 2.\n- Pay 1 and climb two steps to reach index 4.\n- Pay 1 and climb two steps to reach index 6.\n- Pay 1 and climb one step to reach index 7.\n- Pay 1 and climb two steps to reach index 9.\n- Pay 1 and climb one step to reach the top.\nThe total cost is 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1332', '602', '1', 'nums = [3,6,1,0]', '1', '6 is the largest integer.\nFor every other number in the array x, 6 is at least twice as big as x.\nThe index of value 6 is 1, so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1333', '602', '2', 'nums = [1,2,3,4]', '-1', '4 is less than twice the value of 3, so we return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1334', '603', '1', 'licensePlate = \"1s3 PSt\", words = [\"step\",\"steps\",\"stripe\",\"stepple\"]', '\"steps\"', 'licensePlate contains letters \'s\', \'p\', \'s\' (ignoring case), and \'t\'.\n\"step\" contains \'t\' and \'p\', but only contains 1 \'s\'.\n\"steps\" contains \'t\', \'p\', and both \'s\' characters.\n\"stripe\" is missing an \'s\'.\n\"stepple\" is missing an \'s\'.\nSince \"steps\" is the only word containing all the letters, that is the answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1335', '603', '2', 'licensePlate = \"1s3 456\", words = [\"looks\",\"pest\",\"stew\",\"show\"]', '\"pest\"', 'licensePlate only contains the letter \'s\'. All the words contain \'s\', but among these \"pest\", \"stew\", and \"show\" are shortest. The answer is \"pest\" because it is the word that appears earliest of the 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1336', '604', '1', 'isInfected = [[0,1,0,0,0,0,0,1],[0,1,0,0,0,0,0,1],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0]]', '10', 'There are 2 contaminated regions.\nOn the first day, add 5 walls to quarantine the viral region on the left. The board after the virus spreads is:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/06/01/virus12edited-grid.jpg\" style=\"width:500px;height:257px\"/>\nOn the second day, add 5 walls to quarantine the viral region on the right. The virus is fully contained.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/06/01/virus13edited-grid.jpg\" style=\"width:500px;height:261px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1337', '604', '2', 'isInfected = [[1,1,1],[1,0,1],[1,1,1]]', '4', 'Even though there is only one cell saved, there are 4 walls built.\nNotice that walls are only built on the shared boundary of two different cells.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1338', '604', '3', 'isInfected = [[1,1,1,0,0,0,0,0,0],[1,0,1,0,1,1,1,1,1],[1,1,1,0,0,0,0,0,0]]', '13', 'The region on the left only builds two new walls.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1339', '605', '1', 'deadends = [\"0201\",\"0101\",\"0102\",\"1212\",\"2002\"], target = \"0202\"', '6', 'A sequence of valid moves would be \"0000\" -&gt; \"1000\" -&gt; \"1100\" -&gt; \"1200\" -&gt; \"1201\" -&gt; \"1202\" -&gt; \"0202\".\nNote that a sequence like \"0000\" -&gt; \"0001\" -&gt; \"0002\" -&gt; \"0102\" -&gt; \"0202\" would be invalid,\nbecause the wheels of the lock become stuck after the display becomes the dead end \"0102\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1340', '605', '2', 'deadends = [\"8888\"], target = \"0009\"', '1', 'We can turn the last wheel in reverse to move from \"0000\" -&gt; \"0009\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1341', '605', '3', 'deadends = [\"8887\",\"8889\",\"8878\",\"8898\",\"8788\",\"8988\",\"7888\",\"9888\"], target = \"8888\"', '-1', 'We cannot reach the target without getting stuck.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1342', '606', '1', 'n = 1, k = 2', '\"10\"', 'The password is a single digit, so enter each digit. \"01\" would also unlock the safe.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1343', '606', '2', 'n = 2, k = 2', '\"01100\"', 'For each possible password:\n- \"00\" is typed in starting from the 4<sup>th</sup> digit.\n- \"01\" is typed in starting from the 1<sup>st</sup> digit.\n- \"10\" is typed in starting from the 3<sup>rd</sup> digit.\n- \"11\" is typed in starting from the 2<sup>nd</sup> digit.\nThus \"01100\" will unlock the safe. \"10011\", and \"11001\" would also unlock the safe.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1344', '607', '1', 'target = 2', '3', 'On the 1<sup>st</sup> move, we step from 0 to 1 (1 step).\nOn the 2<sup>nd</sup> move, we step from 1 to -1 (2 steps).\nOn the 3<sup>rd</sup> move, we step from -1 to 2 (3 steps).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1345', '607', '2', 'target = 3', '2', 'On the 1<sup>st</sup> move, we step from 0 to 1 (1 step).\nOn the 2<sup>nd</sup> move, we step from 1 to 3 (2 steps).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1346', '608', '1', 'bottom = \"BCD\", allowed = [\"BCC\",\"CDE\",\"CEA\",\"FFF\"]', 'true', 'The allowed triangular patterns are shown on the right.\nStarting from the bottom (level 3), we can build \"CE\" on level 2 and then build \"A\" on level 1.\nThere are three triangular patterns in the pyramid, which are \"BCC\", \"CDE\", and \"CEA\". All are allowed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1347', '608', '2', 'bottom = \"AAAA\", allowed = [\"AAB\",\"AAC\",\"BCD\",\"BBE\",\"DEF\"]', 'false', 'The allowed triangular patterns are shown on the right.\nStarting from the bottom (level 4), there are multiple ways to build level 3, but trying all the possibilites, you will get always stuck before building level 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1348', '609', '1', 'intervals = [[1,3],[3,7],[8,9]]', '5', 'let nums = [2, 3, 4, 8, 9].\nIt can be shown that there cannot be any containing array of size 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1349', '609', '2', 'intervals = [[1,3],[1,4],[2,5],[3,5]]', '3', 'let nums = [2, 3, 4].\nIt can be shown that there cannot be any containing array of size 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1350', '609', '3', 'intervals = [[1,2],[2,3],[2,4],[4,5]]', '5', 'let nums = [1, 2, 3, 4, 5].\nIt can be shown that there cannot be any containing array of size 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1351', '610', '1', 's = \"11011000\"', '\"11100100\"', 'The strings \"10\" [occuring at s[1]] and \"1100\" [at s[3]] are swapped.\nThis is the lexicographically largest string possible after some number of swaps.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1352', '610', '2', 's = \"10\"', '\"10\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1353', '611', '1', 'left = 6, right = 10', '4', '6  -&gt; 110 (2 set bits, 2 is prime)\n7  -&gt; 111 (3 set bits, 3 is prime)\n8  -&gt; 1000 (1 set bit, 1 is not prime)\n9  -&gt; 1001 (2 set bits, 2 is prime)\n10 -&gt; 1010 (2 set bits, 2 is prime)\n4 numbers have a prime number of set bits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1354', '611', '2', 'left = 10, right = 15', '5', '10 -&gt; 1010 (2 set bits, 2 is prime)\n11 -&gt; 1011 (3 set bits, 3 is prime)\n12 -&gt; 1100 (2 set bits, 2 is prime)\n13 -&gt; 1101 (3 set bits, 3 is prime)\n14 -&gt; 1110 (3 set bits, 3 is prime)\n15 -&gt; 1111 (4 set bits, 4 is not prime)\n5 numbers have a prime number of set bits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1355', '612', '1', 's = \"ababcbacadefegdehijhklij\"', '[9,7,8]', 'The partition is \"ababcbaca\", \"defegde\", \"hijhklij\".\nThis is a partition so that each letter appears in at most one part.\nA partition like \"ababcbacadefegde\", \"hijhklij\" is incorrect, because it splits s into less parts.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1356', '612', '2', 's = \"eccbbbbdec\"', '[10]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1357', '613', '1', 'n = 5, mines = [[4,2]]', '2', 'In the above grid, the largest plus sign can only be of order 2. One of them is shown.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1358', '613', '2', 'n = 1, mines = [[0,0]]', '0', 'There is no plus sign, so return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1359', '614', '1', 'row = [0,2,1,3]', '1', 'We only need to swap the second (row[1]) and third (row[2]) person.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1360', '614', '2', 'row = [3,2,0,1]', '0', 'All couples are already seated side by side.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1361', '615', '1', 'matrix = [[1,2,3,4],[5,1,2,3],[9,5,1,2]]', 'true', 'In the above grid, the diagonals are:\n\"[9]\", \"[5, 5]\", \"[1, 1, 1]\", \"[2, 2, 2]\", \"[3, 3]\", \"[4]\".\nIn each diagonal all elements are the same, so the answer is True.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1362', '615', '2', 'matrix = [[1,2],[2,2]]', 'false', 'The diagonal \"[1, 2]\" has different elements.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1363', '616', '1', 's = \"aab\"', '\"aba\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1364', '616', '2', 's = \"aaab\"', '\"\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1365', '617', '1', 'arr = [5,4,3,2,1]', '1', 'Splitting into two or more chunks will not return the required result.\nFor example, splitting into [5, 4], [3, 2, 1] will result in [4, 5, 1, 2, 3], which isn\'t sorted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1366', '617', '2', 'arr = [2,1,3,4,4]', '4', 'We can split into two chunks, such as [2, 1], [3, 4, 4].\nHowever, splitting into [2, 1], [3], [4], [4] is the highest number of chunks possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1367', '618', '1', 'arr = [4,3,2,1,0]', '1', 'Splitting into two or more chunks will not return the required result.\nFor example, splitting into [4, 3], [2, 1, 0] will result in [3, 4, 0, 1, 2], which isn\'t sorted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1368', '618', '2', 'arr = [1,0,2,3,4]', '4', 'We can split into two chunks, such as [1, 0], [2, 3, 4].\nHowever, splitting into [1, 0], [2], [3], [4] is the highest number of chunks possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1369', '619', '1', 'expression = \"e + 8 - a + 5\", evalvars = [\"e\"], evalints = [1]', '[\"-1*a\",\"14\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1370', '619', '2', 'expression = \"e - 8 + temperature - pressure\", evalvars = [\"e\", \"temperature\"], evalints = [1, 12]', '[\"-1*pressure\",\"5\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1371', '619', '3', 'expression = \"(e + 8) * (e - 8)\", evalvars = [], evalints = []', '[\"1*e*e\",\"-64\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1372', '620', '1', 'jewels = \"aA\", stones = \"aAAbbbb\"', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1373', '620', '2', 'jewels = \"z\", stones = \"ZZ\"', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1374', '621', '1', 'board = [[1,2,3],[4,0,5]]', '1', 'Swap the 0 and the 5 in one move.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1375', '621', '2', 'board = [[1,2,3],[5,4,0]]', '-1', 'No number of moves will make the board solved.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1376', '621', '3', 'board = [[4,1,2],[5,0,3]]', '5', '5 is the smallest number of moves that solves the board.\nAn example path:\nAfter move 0: [[4,1,2],[5,0,3]]\nAfter move 1: [[4,1,2],[0,5,3]]\nAfter move 2: [[0,1,2],[4,5,3]]\nAfter move 3: [[1,0,2],[4,5,3]]\nAfter move 4: [[1,2,0],[4,5,3]]\nAfter move 5: [[1,2,3],[4,5,0]]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1377', '622', '1', 'nums = [1,0,2]', 'true', 'There is 1 global inversion and 1 local inversion.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1378', '622', '2', 'nums = [1,2,0]', 'false', 'There are 2 global inversions and 1 local inversion.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1379', '623', '1', 'start = \"RXXLRXRXL\", end = \"XRLXXRRLX\"', 'true', 'We can transform start to end following these steps:\nRXXLRXRXL -&gt;\nXRXLRXRXL -&gt;\nXRLXRXRXL -&gt;\nXRLXXRRXL -&gt;\nXRLXXRRLX');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1380', '623', '2', 'start = \"X\", end = \"L\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1381', '624', '1', 'grid = [[0,2],[1,3]]', '3', 'At time 0, you are in grid location (0, 0).\nYou cannot go anywhere else because 4-directionally adjacent neighbors have a higher elevation than t = 0.\nYou cannot reach point (1, 1) until time 3.\nWhen the depth of water is 3, we can swim anywhere inside the grid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1382', '624', '2', 'grid = [[0,1,2,3,4],[24,23,22,21,5],[12,13,14,15,16],[11,17,18,19,20],[10,9,8,7,6]]', '16', 'The final route is shown.\nWe need to wait until time 16 so that (0, 0) and (4, 4) are connected.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1383', '625', '1', 'n = 1, k = 1', '0', 'row 1: <u>0</u>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1384', '625', '2', 'n = 2, k = 1', '0', 'row 1: 0\nrow 2: <u>0</u>1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1385', '625', '3', 'n = 2, k = 2', '1', 'row 1: 0\nrow 2: 0<u>1</u>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1386', '626', '1', 'sx = 1, sy = 1, tx = 3, ty = 5', 'true', 'One series of moves that transforms the starting point to the target is:\n(1, 1) -&gt; (1, 2)\n(1, 2) -&gt; (3, 2)\n(3, 2) -&gt; (3, 5)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1387', '626', '2', 'sx = 1, sy = 1, tx = 2, ty = 2', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1388', '626', '3', 'sx = 1, sy = 1, tx = 1, ty = 1', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1389', '627', '1', 'answers = [1,1,2]', '5', 'The two rabbits that answered \"1\" could both be the same color, say red.\nThe rabbit that answered \"2\" can\'t be red or the answers would be inconsistent.\nSay the rabbit that answered \"2\" was blue.\nThen there should be 2 other blue rabbits in the forest that didn\'t answer into the array.\nThe smallest possible number of rabbits in the forest is therefore 5: 3 that answered plus 2 that didn\'t.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1390', '627', '2', 'answers = [10,10,10]', '11', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1391', '628', '1', 'board = [[0,1,1,0],[0,1,1,0],[1,0,0,1],[1,0,0,1]]', '2', 'One potential sequence of moves is shown.\nThe first move swaps the first and second column.\nThe second move swaps the second and third row.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1392', '628', '2', 'board = [[0,1],[1,0]]', '0', 'Also note that the board with 0 in the top left corner, is also a valid chessboard.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1393', '628', '3', 'board = [[1,0],[1,0]]', '-1', 'No matter what sequence of moves you make, you cannot end with a valid chessboard.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1394', '629', '1', 'root = [4,2,6,1,3]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1395', '629', '2', 'root = [1,0,48,null,null,12,49]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1396', '630', '1', 's = \"a1b2\"', '[\"a1b2\",\"a1B2\",\"A1b2\",\"A1B2\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1397', '630', '2', 's = \"3z4\"', '[\"3z4\",\"3Z4\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1398', '631', '1', 'graph = [[1,2,3],[0,2],[0,1,3],[0,2]]', 'false', 'There is no way to partition the nodes into two independent sets such that every edge connects a node in one and a node in the other.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1399', '631', '2', 'graph = [[1,3],[0,2],[1,3],[0,2]]', 'true', 'We can partition the nodes into two sets: {0, 2} and {1, 3}.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1400', '632', '1', 'arr = [1,2,3,5], k = 3', '[2,5]', 'The fractions to be considered in sorted order are:\n1/5, 1/3, 2/5, 1/2, 3/5, and 2/3.\nThe third fraction is 2/5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1401', '632', '2', 'arr = [1,7], k = 1', '[1,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1402', '633', '1', 'n = 4, flights = [[0,1,100],[1,2,100],[2,0,100],[1,3,600],[2,3,200]], src = 0, dst = 3, k = 1', '700', 'The graph is shown above.\nThe optimal path with at most 1 stop from city 0 to 3 is marked in red and has cost 100 + 600 = 700.\nNote that the path through cities [0,1,2,3] is cheaper but is invalid because it uses 2 stops.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1403', '633', '2', 'n = 3, flights = [[0,1,100],[1,2,100],[0,2,500]], src = 0, dst = 2, k = 1', '200', 'The graph is shown above.\nThe optimal path with at most 1 stop from city 0 to 2 is marked in red and has cost 100 + 100 = 200.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1404', '633', '3', 'n = 3, flights = [[0,1,100],[1,2,100],[0,2,500]], src = 0, dst = 2, k = 0', '500', 'The graph is shown above.\nThe optimal path with no stops from city 0 to 2 is marked in red and has cost 500.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1405', '634', '1', 'n = 10', '4', 'There are four good numbers in the range [1, 10] : 2, 5, 6, 9.\nNote that 1 and 10 are not good numbers, since they remain unchanged after rotating.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1406', '634', '2', 'n = 1', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1407', '634', '3', 'n = 2', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1408', '635', '1', 'ghosts = [[1,0],[0,3]], target = [0,1]', 'true', 'You can reach the destination (0, 1) after 1 turn, while the ghosts located at (1, 0) and (0, 3) cannot catch up with you.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1409', '635', '2', 'ghosts = [[1,0]], target = [2,0]', 'false', 'You need to reach the destination (2, 0), but the ghost at (1, 0) lies between you and the destination.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1410', '635', '3', 'ghosts = [[2,0]], target = [1,0]', 'false', 'The ghost can reach the target at the same time as you.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1411', '636', '1', 'n = 3', '5', 'The five different ways are show above.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1412', '636', '2', 'n = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1413', '637', '1', 'order = \"cba\", s = \"abcd\"', '\"cbad\"', '\"a\", \"b\", \"c\" appear in order, so the order of \"a\", \"b\", \"c\" should be \"c\", \"b\", and \"a\". \nSince \"d\" does not appear in order, it can be at any position in the returned string. \"dcba\", \"cdba\", \"cbda\" are also valid outputs.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1414', '637', '2', 'order = \"cbafg\", s = \"abcd\"', '\"cbad\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1415', '638', '1', 's = \"abcde\", words = [\"a\",\"bb\",\"acd\",\"ace\"]', '3', 'There are three strings in words that are a subsequence of s: \"a\", \"acd\", \"ace\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1416', '638', '2', 's = \"dsahjpjauf\", words = [\"ahjpjau\",\"ja\",\"ahbwzgqnuk\",\"tnmlanowax\"]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1417', '639', '1', 'k = 0', '5', '0!, 1!, 2!, 3!, and 4! end with k = 0 zeroes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1418', '639', '2', 'k = 5', '0', 'There is no x such that x! ends in k = 5 zeroes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1419', '639', '3', 'k = 3', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1420', '640', '1', 'board = [\"O  \",\"   \",\"   \"]', 'false', 'The first player always plays \"X\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1421', '640', '2', 'board = [\"XOX\",\" X \",\"   \"]', 'false', 'Players take turns making moves.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1422', '640', '3', 'board = [\"XOX\",\"O O\",\"XOX\"]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1423', '641', '1', 'nums = [2,1,4,3], left = 2, right = 3', '3', 'There are three subarrays that meet the requirements: [2], [2, 1], [3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1424', '641', '2', 'nums = [2,9,2,5,6], left = 2, right = 8', '7', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1425', '642', '1', 's = \"abcde\", goal = \"cdeab\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1426', '642', '2', 's = \"abcde\", goal = \"abced\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1427', '643', '1', 'graph = [[1,2],[3],[3],[]]', '[[0,1,3],[0,2,3]]', 'There are two paths: 0 -&gt; 1 -&gt; 3 and 0 -&gt; 2 -&gt; 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1428', '643', '2', 'graph = [[4,3,1],[3,2,4],[3],[4],[]]', '[[0,4],[0,3,4],[0,1,3,4],[0,1,2,3,4],[0,1,4]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1429', '644', '1', 'nums = [2,3,1,4,0]', '3', 'Scores for each k are listed below: \nk = 0,  nums = [2,3,1,4,0],    score 2\nk = 1,  nums = [3,1,4,0,2],    score 3\nk = 2,  nums = [1,4,0,2,3],    score 3\nk = 3,  nums = [4,0,2,3,1],    score 4\nk = 4,  nums = [0,2,3,1,4],    score 3\nSo we should choose k = 3, which has the highest score.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1430', '644', '2', 'nums = [1,3,0,2,4]', '0', 'nums will always have 3 points no matter how it shifts.\nSo we will choose the smallest k, which is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1431', '645', '1', 'poured = 1, query_row = 1, query_glass = 1', '0.00000', 'We poured 1 cup of champange to the top glass of the tower (which is indexed as (0, 0)). There will be no excess liquid so all the glasses under the top glass will remain empty.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1432', '645', '2', 'poured = 2, query_row = 1, query_glass = 1', '0.50000', 'We poured 2 cups of champange to the top glass of the tower (which is indexed as (0, 0)). There is one cup of excess liquid. The glass indexed as (1, 0) and the glass indexed as (1, 1) will share the excess liquid equally, and each will get half cup of champange.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1433', '645', '3', 'poured = 100000009, query_row = 33, query_glass = 17', '1.00000', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1434', '646', '1', 'nums1 = [1,3,5,4], nums2 = [1,2,3,7]', '1', 'Swap nums1[3] and nums2[3]. Then the sequences are:\nnums1 = [1, 3, 5, 7] and nums2 = [1, 2, 3, 4]\nwhich are both strictly increasing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1435', '646', '2', 'nums1 = [0,3,5,8,9], nums2 = [2,1,4,6,9]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1436', '647', '1', 'graph = [[1,2],[2,3],[5],[0],[5],[],[]]', '[2,4,5,6]', 'The given graph is shown above.\nNodes 5 and 6 are terminal nodes as there are no outgoing edges from either of them.\nEvery path starting at nodes 2, 4, 5, and 6 all lead to either node 5 or 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1437', '647', '2', 'graph = [[1,2,3,4],[1,2],[3,4],[0,4],[]]', '[4]', 'Only node 4 is a terminal node, and every path starting at node 4 leads to node 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1438', '648', '1', 'grid = [[1,0,0,0],[1,1,1,0]], hits = [[1,0]]', '[2]', 'Starting with the grid:\n[[1,0,0,0],\n [<u>1</u>,1,1,0]]\nWe erase the underlined brick at (1,0), resulting in the grid:\n[[1,0,0,0],\n [0,<u>1</u>,<u>1</u>,0]]\nThe two underlined bricks are no longer stable as they are no longer connected to the top nor adjacent to another stable brick, so they will fall. The resulting grid is:\n[[1,0,0,0],\n [0,0,0,0]]\nHence the result is [2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1439', '648', '2', 'grid = [[1,0,0,0],[1,1,0,0]], hits = [[1,1],[1,0]]', '[0,0]', 'Starting with the grid:\n[[1,0,0,0],\n [1,<u>1</u>,0,0]]\nWe erase the underlined brick at (1,1), resulting in the grid:\n[[1,0,0,0],\n [1,0,0,0]]\nAll remaining bricks are still stable, so no bricks fall. The grid remains the same:\n[[1,0,0,0],\n [<u>1</u>,0,0,0]]\nNext, we erase the underlined brick at (1,0), resulting in the grid:\n[[1,0,0,0],\n [0,0,0,0]]\nOnce again, all remaining bricks are still stable, so no bricks fall.\nHence the result is [0,0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1440', '649', '1', 'words = [\"gin\",\"zen\",\"gig\",\"msg\"]', '2', 'The transformation of each word is:\n\"gin\" -&gt; \"--...-.\"\n\"zen\" -&gt; \"--...-.\"\n\"gig\" -&gt; \"--...--.\"\n\"msg\" -&gt; \"--...--.\"\nThere are 2 different transformations: \"--...-.\" and \"--...--.\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1441', '649', '2', 'words = [\"a\"]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1442', '650', '1', 'nums = [1,2,3,4,5,6,7,8]', 'true', 'We can split the array into [1,4,5,8] and [2,3,6,7], and both of them have an average of 4.5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1443', '650', '2', 'nums = [3,1]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1444', '651', '1', 'widths = [10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10], s = \"abcdefghijklmnopqrstuvwxyz\"', '[3,60]', 'You can write s as follows:\nabcdefghij  // 100 pixels wide\nklmnopqrst  // 100 pixels wide\nuvwxyz      // 60 pixels wide\nThere are a total of 3 lines, and the last line is 60 pixels wide.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1445', '651', '2', 'widths = [4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10], s = \"bbbcccdddaaa\"', '[2,4]', 'You can write s as follows:\nbbbcccdddaa  // 98 pixels wide\na            // 4 pixels wide\nThere are a total of 2 lines, and the last line is 4 pixels wide.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1446', '652', '1', 'grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]', '35', 'The building heights are shown in the center of the above image.\nThe skylines when viewed from each cardinal direction are drawn in red.\nThe grid after increasing the height of buildings without affecting skylines is:\ngridNew = [ [8, 4, 8, 7],\n            [7, 4, 7, 7],\n            [9, 4, 8, 7],\n            [3, 3, 3, 3] ]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1447', '652', '2', 'grid = [[0,0,0],[0,0,0],[0,0,0]]', '0', 'Increasing the height of any building will result in the skyline changing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1448', '653', '1', 'n = 50', '0.62500', 'If we choose the first two operations, A will become empty first.\nFor the third operation, A and B will become empty at the same time.\nFor the fourth operation, B will become empty first.\nSo the total probability of A becoming empty first plus half the probability that A and B become empty at the same time, is 0.25 * (1 + 1 + 0.5 + 0) = 0.625.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1449', '653', '2', 'n = 100', '0.71875', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1450', '654', '1', 's = \"heeellooo\", words = [\"hello\", \"hi\", \"helo\"]', '1', 'We can extend \"e\" and \"o\" in the word \"hello\" to get \"heeellooo\".\nWe can\'t extend \"helo\" to get \"heeellooo\" because the group \"ll\" is not size 3 or more.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1451', '654', '2', 's = \"zzzzzyyyyy\", words = [\"zzyy\",\"zy\",\"zyy\"]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1452', '655', '1', 'nums = [1,1,2]', 'false', 'Alice has two choices: erase 1 or erase 2. \nIf she erases 1, the nums array becomes [1, 2]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 2 = 3. Now Bob can remove any element he wants, because Alice will be the one to erase the last element and she will lose. \nIf Alice erases 2 first, now nums become [1, 1]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 1 = 0. Alice will lose.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1453', '655', '2', 'nums = [0,1]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1454', '655', '3', 'nums = [1,2,3]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1455', '656', '1', 'cpdomains = [\"9001 discuss.leetcode.com\"]', '[\"9001 leetcode.com\",\"9001 discuss.leetcode.com\",\"9001 com\"]', 'We only have one website domain: \"discuss.leetcode.com\".\nAs discussed above, the subdomain \"leetcode.com\" and \"com\" will also be visited. So they will all be visited 9001 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1456', '656', '2', 'cpdomains = [\"900 google.mail.com\", \"50 yahoo.com\", \"1 intel.mail.com\", \"5 wiki.org\"]', '[\"901 mail.com\",\"50 yahoo.com\",\"900 google.mail.com\",\"5 wiki.org\",\"5 org\",\"1 intel.mail.com\",\"951 com\"]', 'We will visit \"google.mail.com\" 900 times, \"yahoo.com\" 50 times, \"intel.mail.com\" once and \"wiki.org\" 5 times.\nFor the subdomains, we will visit \"mail.com\" 900 + 1 = 901 times, \"com\" 900 + 50 + 1 = 951 times, and \"org\" 5 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1457', '657', '1', 'points = [[0,0],[0,1],[1,0],[0,2],[2,0]]', '2.00000', 'The five points are shown in the above figure. The red triangle is the largest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1458', '657', '2', 'points = [[1,0],[0,0],[0,1]]', '0.50000', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1459', '658', '1', 'nums = [9,1,2,3,9], k = 3', '20.00000', 'The best choice is to partition nums into [9], [1, 2, 3], [9]. The answer is 9 + (1 + 2 + 3) / 3 + 9 = 20.\nWe could have also partitioned nums into [9, 1], [2], [3, 9], for example.\nThat partition would lead to a score of 5 + 2 + 6 = 13, which is worse.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1460', '658', '2', 'nums = [1,2,3,4,5,6,7], k = 4', '20.50000', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1461', '659', '1', 'root = [1,null,0,0,1]', '[1,null,0,null,1]', 'Only the red nodes satisfy the property \"every subtree not containing a 1\".\nThe diagram on the right represents the answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1462', '659', '2', 'root = [1,0,1,0,0,0,1]', '[1,null,1,null,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1463', '659', '3', 'root = [1,1,0,1,1,0,1,0]', '[1,1,0,1,1,null,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1464', '660', '1', 'routes = [[1,2,7],[3,6,7]], source = 1, target = 6', '2', 'The best strategy is take the first bus to the bus stop 7, then take the second bus to the bus stop 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1465', '660', '2', 'routes = [[7,12],[4,5,15],[6],[15,19],[9,12,13]], source = 15, target = 12', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1466', '661', '1', 's = \"(123)\"', '[\"(1, 2.3)\",\"(1, 23)\",\"(1.2, 3)\",\"(12, 3)\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1467', '661', '2', 's = \"(0123)\"', '[\"(0, 1.23)\",\"(0, 12.3)\",\"(0, 123)\",\"(0.1, 2.3)\",\"(0.1, 23)\",\"(0.12, 3)\"]', '0.0, 00, 0001 or 00.01 are not allowed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1468', '661', '3', 's = \"(00011)\"', '[\"(0, 0.011)\",\"(0.001, 1)\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1469', '662', '1', 'head = [0,1,2,3], nums = [0,1,3]', '2', '0 and 1 are connected, so [0, 1] and [3] are the two connected components.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1470', '662', '2', 'head = [0,1,2,3,4], nums = [0,3,1,4]', '2', '0 and 1 are connected, 3 and 4 are connected, so [0, 1] and [3, 4] are the two connected components.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1471', '663', '1', 'target = 3', '2', 'The shortest instruction sequence is \"AA\".\nYour position goes from 0 --&gt; 1 --&gt; 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1472', '663', '2', 'target = 6', '5', 'The shortest instruction sequence is \"AAARA\".\nYour position goes from 0 --&gt; 1 --&gt; 3 --&gt; 7 --&gt; 7 --&gt; 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1473', '664', '1', 'paragraph = \"Bob hit a ball, the hit BALL flew far after it was hit.\", banned = [\"hit\"]', '\"ball\"', '\"hit\" occurs 3 times, but it is a banned word.\n\"ball\" occurs twice (and no other word does), so it is the most frequent non-banned word in the paragraph. \nNote that words in the paragraph are not case sensitive,\nthat punctuation is ignored (even if adjacent to words, such as \"ball,\"), \nand that \"hit\" isn\'t the answer even though it occurs more because it is banned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1474', '664', '2', 'paragraph = \"a.\", banned = []', '\"a\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1475', '665', '1', 'words = [\"time\", \"me\", \"bell\"]', '10', 'A valid encoding would be s = <code>\"time#bell#\" and indices = [0, 2, 5</code>].\nwords[0] = \"time\", the substring of s starting from indices[0] = 0 to the next \'#\' is underlined in \"<u>time</u>#bell#\"\nwords[1] = \"me\", the substring of s starting from indices[1] = 2 to the next \'#\' is underlined in \"ti<u>me</u>#bell#\"\nwords[2] = \"bell\", the substring of s starting from indices[2] = 5 to the next \'#\' is underlined in \"time#<u>bell</u>#\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1476', '665', '2', 'words = [\"t\"]', '2', 'A valid encoding would be s = \"t#\" and indices = [0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1477', '666', '1', 's = \"loveleetcode\", c = \"e\"', '[3,2,1,0,1,0,0,1,2,2,1,0]', 'The character \'e\' appears at indices 3, 5, 6, and 11 (0-indexed).\nThe closest occurrence of \'e\' for index 0 is at index 3, so the distance is abs(0 - 3) = 3.\nThe closest occurrence of \'e\' for index 1 is at index 3, so the distance is abs(1 - 3) = 2.\nFor index 4, there is a tie between the \'e\' at index 3 and the \'e\' at index 5, but the distance is still the same: abs(4 - 3) == abs(4 - 5) = 1.\nThe closest occurrence of \'e\' for index 8 is at index 6, so the distance is abs(8 - 6) = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1478', '666', '2', 's = \"aaab\", c = \"b\"', '[3,2,1,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1479', '667', '1', 'fronts = [1,2,4,4,7], backs = [1,3,4,1,3]', '2', 'If we flip the second card, the face up numbers are [1,3,4,4,7] and the face down are [1,2,4,1,3].\n2 is the minimum good integer as it appears facing down but not facing up.\nIt can be shown that 2 is the minimum possible good integer obtainable after flipping some cards.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1480', '667', '2', 'fronts = [1], backs = [1]', '0', 'There are no good integers no matter how we flip the cards, so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1481', '668', '1', 'arr = [2,4]', '3', 'We can make these trees: <code>[2], [4], [4, 2, 2]</code>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1482', '668', '2', 'arr = [2,4,5,10]', '7', 'We can make these trees: <code>[2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2]</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1483', '669', '1', 'sentence = \"I speak Goat Latin\"', '\"Imaa peaksmaaa oatGmaaaa atinLmaaaaa\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1484', '669', '2', 'sentence = \"The quick brown fox jumped over the lazy dog\"', '\"heTmaa uickqmaaa rownbmaaaa oxfmaaaaa umpedjmaaaaaa overmaaaaaaa hetmaaaaaaaa azylmaaaaaaaaa ogdmaaaaaaaaaa\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1485', '670', '1', 'ages = [16,16]', '2', '2 people friend request each other.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1486', '670', '2', 'ages = [16,17,18]', '2', 'Friend requests are made 17 -&gt; 16, 18 -&gt; 17.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1487', '670', '3', 'ages = [20,30,100,110,120]', '3', 'Friend requests are made 110 -&gt; 100, 120 -&gt; 110, 120 -&gt; 100.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1488', '671', '1', 'difficulty = [2,4,6,8,10], profit = [10,20,30,40,50], worker = [4,5,6,7]', '100', 'Workers are assigned jobs of difficulty [4,4,6,6] and they get a profit of [20,20,30,30] separately.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1489', '671', '2', 'difficulty = [85,47,57], profit = [24,66,99], worker = [40,25,25]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1490', '672', '1', 'grid = [[1,0],[0,1]]', '3', 'Change one 0 to 1 and connect two 1s, then we get an island with area = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1491', '672', '2', 'grid = [[1,1],[1,0]]', '4', 'Change the 0 to 1 and make the island bigger, only one island with area = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1492', '672', '3', 'grid = [[1,1],[1,1]]', '4', 'Can\'t change any 0 to 1, only one island with area = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1493', '673', '1', 's = \"ABC\"', '10', 'All possible substrings are: \"A\",\"B\",\"C\",\"AB\",\"BC\" and \"ABC\".\nEvery substring is composed with only unique letters.\nSum of lengths of all substring is 1 + 1 + 1 + 2 + 2 + 3 = 10');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1494', '673', '2', 's = \"ABA\"', '8', 'The same as example 1, except <code>countUniqueChars</code>(\"ABA\") = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1495', '673', '3', 's = \"LEETCODE\"', '92', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1496', '674', '1', 'n = 5', '2', '5 = 2 + 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1497', '674', '2', 'n = 9', '3', '9 = 4 + 5 = 2 + 3 + 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1498', '674', '3', 'n = 15', '4', '15 = 8 + 7 = 4 + 5 + 6 = 1 + 2 + 3 + 4 + 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1499', '675', '1', 's = \"abbxxxxzzy\"', '[[3,6]]', '<code>\"xxxx\" is the only </code>large group with start index 3 and end index 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1500', '675', '2', 's = \"abc\"', '[]', 'We have groups \"a\", \"b\", and \"c\", none of which are large groups.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1501', '675', '3', 's = \"abcdddeeeeaabbbcd\"', '[[3,5],[6,9],[12,14]]', 'The large groups are \"ddd\", \"eeee\", and \"bbb\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1502', '676', '1', 's = \"LeetCode@LeetCode.com\"', '\"l*****e@leetcode.com\"', 's is an email address.\nThe name and domain are converted to lowercase, and the middle of the name is replaced by 5 asterisks.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1503', '676', '2', 's = \"AB@qq.com\"', '\"a*****b@qq.com\"', 's is an email address.\nThe name and domain are converted to lowercase, and the middle of the name is replaced by 5 asterisks.\nNote that even though \"ab\" is 2 characters, it still must have 5 asterisks in the middle.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1504', '676', '3', 's = \"1(234)567-890\"', '\"***-***-7890\"', 's is a phone number.\nThere are 10 digits, so the local number is 10 digits and the country code is 0 digits.\nThus, the resulting masked number is \"***-***-7890\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1505', '677', '1', 'image = [[1,1,0],[1,0,1],[0,0,0]]', '[[1,0,0],[0,1,0],[1,1,1]]', 'First reverse each row: [[0,1,1],[1,0,1],[0,0,0]].\nThen, invert the image: [[1,0,0],[0,1,0],[1,1,1]]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1506', '677', '2', 'image = [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]', '[[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]', 'First reverse each row: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]].\nThen invert the image: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1507', '678', '1', 's = \"abcd\", indices = [0, 2], sources = [\"a\", \"cd\"], targets = [\"eee\", \"ffff\"]', '\"eeebffff\"', '\"a\" occurs at index 0 in s, so we replace it with \"eee\".\n\"cd\" occurs at index 2 in s, so we replace it with \"ffff\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1508', '678', '2', 's = \"abcd\", indices = [0, 2], sources = [\"ab\",\"ec\"], targets = [\"eee\",\"ffff\"]', '\"eeecd\"', '\"ab\" occurs at index 0 in s, so we replace it with \"eee\".\n\"ec\" does not occur at index 2 in s, so we do nothing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1509', '679', '1', 'n = 6, edges = [[0,1],[0,2],[2,3],[2,4],[2,5]]', '[8,12,6,10,10,10]', 'The tree is shown above.\nWe can see that dist(0,1) + dist(0,2) + dist(0,3) + dist(0,4) + dist(0,5)\nequals 1 + 1 + 2 + 2 + 2 = 8.\nHence, answer[0] = 8, and so on.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1510', '679', '2', 'n = 1, edges = []', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1511', '679', '3', 'n = 2, edges = [[1,0]]', '[1,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1512', '680', '1', 'img1 = [[1,1,0],[0,1,0],[0,1,0]], img2 = [[0,0,0],[0,1,1],[0,0,1]]', '3', 'We translate img1 to right by 1 unit and down by 1 unit.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/09/overlap_step1.jpg\" style=\"width:450px;height:105px\"/>\nThe number of positions that have a 1 in both images is 3 (shown in red).\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/09/overlap_step2.jpg\" style=\"width:450px;height:231px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1513', '680', '2', 'img1 = [[1]], img2 = [[1]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1514', '680', '3', 'img1 = [[0]], img2 = [[0]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1515', '681', '1', 'rec1 = [0,0,2,2], rec2 = [1,1,3,3]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1516', '681', '2', 'rec1 = [0,0,1,1], rec2 = [1,0,2,1]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1517', '681', '3', 'rec1 = [0,0,1,1], rec2 = [2,2,3,3]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1518', '682', '1', 'n = 10, k = 1, maxPts = 10', '1.00000', 'Alice gets a single card, then stops.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1519', '682', '2', 'n = 6, k = 1, maxPts = 10', '0.60000', 'Alice gets a single card, then stops.\nIn 6 out of 10 possibilities, she is at or below 6 points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1520', '682', '3', 'n = 21, k = 17, maxPts = 10', '0.73278', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1521', '683', '1', 'dominoes = \"RR.L\"', '\"RR.L\"', 'The first domino expends no additional force on the second domino.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1522', '683', '2', 'dominoes = \".L.R...LR..L..\"', '\"LL.RR.LLRRLL..\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1523', '684', '1', 'strs = [\"tars\",\"rats\",\"arts\",\"star\"]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1524', '684', '2', 'strs = [\"omv\",\"ovm\"]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1525', '685', '1', 'grid = [[4,3,8,4],[9,5,1,9],[2,7,6,2]]', '1', 'The following subgrid is a 3 x 3 magic square:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/11/magic_valid.jpg\" style=\"width:242px;height:242px\"/>\nwhile this one is not:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/11/magic_invalid.jpg\" style=\"width:242px;height:242px\"/>\nIn total, there is only one magic square inside the given grid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1526', '685', '2', 'grid = [[8]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1527', '686', '1', 'rooms = [[1],[2],[3],[]]', 'true', 'We visit room 0 and pick up key 1.\nWe then visit room 1 and pick up key 2.\nWe then visit room 2 and pick up key 3.\nWe then visit room 3.\nSince we were able to visit every room, we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1528', '686', '2', 'rooms = [[1,3],[3,0,1],[2],[0]]', 'false', 'We can not enter room number 2 since the only key that unlocks it is in that room.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1529', '687', '1', 'num = \"1101111\"', '[11,0,11,11]', 'The output [110, 1, 111] would also be accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1530', '687', '2', 'num = \"112358130\"', '[]', 'The task is impossible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1531', '687', '3', 'num = \"0123\"', '[]', 'Leading zeroes are not allowed, so \"01\", \"2\", \"3\" is not valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1532', '688', '1', 'secret = \"acckzz\", words = [\"acckzz\",\"ccbazz\",\"eiowzz\",\"abcczz\"], allowedGuesses = 10', 'You guessed the secret word correctly.', 'master.guess(\"aaaaaa\") returns -1, because \"aaaaaa\" is not in wordlist.\nmaster.guess(\"acckzz\") returns 6, because \"acckzz\" is secret and has all 6 matches.\nmaster.guess(\"ccbazz\") returns 3, because \"ccbazz\" has 3 matches.\nmaster.guess(\"eiowzz\") returns 2, because \"eiowzz\" has 2 matches.\nmaster.guess(\"abcczz\") returns 4, because \"abcczz\" has 4 matches.\nWe made 5 calls to master.guess, and one of them was the secret, so we pass the test case.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1533', '688', '2', 'secret = \"hamada\", words = [\"hamada\",\"khaled\"], allowedGuesses = 10', 'You guessed the secret word correctly.', 'Since there are two words, you can guess both.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1534', '690', '1', 'arr = [2,1,4,7,3,2,5]', '5', 'The largest mountain is [1,4,7,3,2] which has length 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1535', '690', '2', 'arr = [2,2,2]', '0', 'There is no mountain.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1536', '692', '1', 'graph = [[1,2,3],[0],[0],[0]]', '4', 'One possible path is [1,0,2,0,3]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1537', '692', '2', 'graph = [[1],[0,2,4],[1,3,4],[2],[1,2]]', '4', 'One possible path is [0,1,4,2,3]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1538', '693', '1', 's = \"abc\", shifts = [3,5,9]', '\"rpl\"', 'We start with \"abc\".\nAfter shifting the first 1 letters of s by 3, we have \"dbc\".\nAfter shifting the first 2 letters of s by 5, we have \"igc\".\nAfter shifting the first 3 letters of s by 9, we have \"rpl\", the answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1539', '693', '2', 's = \"aaa\", shifts = [1,2,3]', '\"gfd\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1540', '694', '1', 'seats = [1,0,0,0,1,0,1]', '2', 'If Alex sits in the second open seat (i.e. seats[2]), then the closest person has distance 2.\nIf Alex sits in any other open seat, the closest person has distance 1.\nThus, the maximum distance to the closest person is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1541', '694', '2', 'seats = [1,0,0,0]', '3', 'If Alex sits in the last seat (i.e. seats[3]), the closest person is 3 seats away.\nThis is the maximum distance possible, so the answer is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1542', '694', '3', 'seats = [0,1]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1543', '695', '1', 'rectangles = [[0,0,2,2],[1,0,2,3],[1,0,3,1]]', '6', 'A total area of 6 is covered by all three rectangles, as illustrated in the picture.\nFrom (1,1) to (2,2), the green and red rectangles overlap.\nFrom (1,0) to (2,3), all three rectangles overlap.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1544', '695', '2', 'rectangles = [[0,0,1000000000,1000000000]]', '49', 'The answer is 10<sup>18</sup> modulo (10<sup>9</sup> + 7), which is 49.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1545', '696', '1', 'richer = [[1,0],[2,1],[3,1],[3,7],[4,3],[5,3],[6,3]], quiet = [3,2,5,4,6,1,7,0]', '[5,5,2,5,4,5,6,7]', 'answer[0] = 5.\nPerson 5 has more money than 3, which has more money than 1, which has more money than 0.\nThe only person who is quieter (has lower quiet[x]) is person 7, but it is not clear if they have more money than person 0.\nanswer[7] = 7.\nAmong all people that definitely have equal to or more money than person 7 (which could be persons 3, 4, 5, 6, or 7), the person who is the quietest (has lower quiet[x]) is person 7.\nThe other answers can be filled out with similar reasoning.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1546', '696', '2', 'richer = [], quiet = [0]', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1547', '697', '1', 'arr = [0,1,0]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1548', '697', '2', 'arr = [0,2,1,0]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1549', '697', '3', 'arr = [0,10,5,2]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1550', '698', '1', 'target = 12, position = [10,8,0,5,3], speed = [2,4,1,1,3]', '3', 'The cars starting at 10 (speed 2) and 8 (speed 4) become a fleet, meeting each other at 12.\nThe car starting at 0 does not catch up to any other car, so it is a fleet by itself.\nThe cars starting at 5 (speed 1) and 3 (speed 3) become a fleet, meeting each other at 6. The fleet moves at speed 1 until it reaches target.\nNote that no other cars meet these fleets before the destination, so the answer is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1551', '698', '2', 'target = 10, position = [3], speed = [3]', '1', 'There is only one car, hence there is only one fleet.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1552', '698', '3', 'target = 100, position = [0,2,4], speed = [4,2,1]', '1', 'The cars starting at 0 (speed 4) and 2 (speed 2) become a fleet, meeting each other at 4. The fleet moves at speed 2.\nThen, the fleet (speed 2) and the car starting at 4 (speed 1) become one fleet, meeting each other at 6. The fleet moves at speed 1 until it reaches target.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1553', '699', '1', 's1 = \"ab\", s2 = \"ba\"', '1', 'The two string are 1-similar because we can use one swap to change s1 to s2: \"ab\" --&gt; \"ba\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1554', '699', '2', 's1 = \"abc\", s2 = \"bca\"', '2', 'The two strings are 2-similar because we can use two swaps to change s1 to s2: \"abc\" --&gt; \"bac\" --&gt; \"bca\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1555', '700', '1', '[\"ExamRoom\", \"seat\", \"seat\", \"seat\", \"seat\", \"leave\", \"seat\"]\n[[10], [], [], [], [], [4], []]', '[null, 0, 9, 4, 2, null, 5]', 'ExamRoom examRoom = new ExamRoom(10);\nexamRoom.seat(); // return 0, no one is in the room, then the student sits at seat number 0.\nexamRoom.seat(); // return 9, the student sits at the last seat number 9.\nexamRoom.seat(); // return 4, the student sits at the last seat number 4.\nexamRoom.seat(); // return 2, the student sits at the last seat number 2.\nexamRoom.leave(4);\nexamRoom.seat(); // return 5, the student sits at the last seat number 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1556', '701', '1', 's = \"()\"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1557', '701', '2', 's = \"(())\"', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1558', '701', '3', 's = \"()()\"', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1559', '702', '1', 'quality = [10,20,5], wage = [70,50,30], k = 2', '105.00000', 'We pay 70 to 0<sup>th</sup> worker and 35 to 2<sup>nd</sup> worker.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1560', '702', '2', 'quality = [3,1,10,10,1], wage = [4,8,2,2,7], k = 3', '30.66667', 'We pay 4 to 0<sup>th</sup> worker, 13.33333 to 2<sup>nd</sup> and 3<sup>rd</sup> workers separately.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1561', '704', '1', 's = \"ab\", goal = \"ba\"', 'true', 'You can swap s[0] = \'a\' and s[1] = \'b\' to get \"ba\", which is equal to goal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1562', '704', '2', 's = \"ab\", goal = \"ab\"', 'false', 'The only letters you can swap are s[0] = \'a\' and s[1] = \'b\', which results in \"ba\" != goal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1563', '704', '3', 's = \"aa\", goal = \"aa\"', 'true', 'You can swap s[0] = \'a\' and s[1] = \'a\' to get \"aa\", which is equal to goal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1564', '705', '1', 'bills = [5,5,5,10,20]', 'true', 'From the first 3 customers, we collect three $5 bills in order.\nFrom the fourth customer, we collect a $10 bill and give back a $5.\nFrom the fifth customer, we give a $10 bill and a $5 bill.\nSince all customers got correct change, we output true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1565', '705', '2', 'bills = [5,5,10,10,20]', 'false', 'From the first two customers in order, we collect two $5 bills.\nFor the next two customers in order, we collect a $10 bill and give back a $5 bill.\nFor the last customer, we can not give the change of $15 back because we only have two $10 bills.\nSince not every customer received the correct change, the answer is false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1566', '706', '1', 'grid = [[0,0,1,1],[1,0,1,0],[1,1,0,0]]', '39', '0b1111 + 0b1001 + 0b1111 = 15 + 9 + 15 = 39');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1567', '706', '2', 'grid = [[0]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1568', '707', '1', 'nums = [1], k = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1569', '707', '2', 'nums = [1,2], k = 4', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1570', '707', '3', 'nums = [2,-1,2], k = 3', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1571', '708', '1', 'root = [3,5,1,6,2,0,8,null,null,7,4], target = 5, k = 2', '[7,4,1]', 'The nodes that are a distance 2 from the target node (with value 5) have values 7, 4, and 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1572', '708', '2', 'root = [1], target = 1, k = 3', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1573', '709', '1', 'grid = [\"@.a..\",\"###.#\",\"b.A.B\"]', '8', 'Note that the goal is to obtain all the keys not to open all the locks.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1574', '709', '2', 'grid = [\"@..aA\",\"..B#.\",\"....b\"]', '6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1575', '709', '3', 'grid = [\"@Aa\"]', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1576', '710', '1', 'root = [3,5,1,6,2,0,8,null,null,7,4]', '[2,7,4]', 'We return the node with value 2, colored in yellow in the diagram.\nThe nodes coloured in blue are the deepest nodes of the tree.\nNotice that nodes 5, 3 and 2 contain the deepest nodes in the tree but node 2 is the smallest subtree among them, so we return it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1577', '710', '2', 'root = [1]', '[1]', 'The root is the deepest node in the tree.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1578', '710', '3', 'root = [0,1,3,null,2]', '[2]', 'The deepest node in the tree is 2, the valid subtrees are the subtrees of nodes 2, 1 and 0 but the subtree of node 2 is the smallest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1579', '711', '1', 'n = 6', '7', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1580', '711', '2', 'n = 8', '11', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1581', '711', '3', 'n = 13', '101', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1582', '712', '1', 'matrix = [[1,2,3],[4,5,6],[7,8,9]]', '[[1,4,7],[2,5,8],[3,6,9]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1583', '712', '2', 'matrix = [[1,2,3],[4,5,6]]', '[[1,4],[2,5],[3,6]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1584', '713', '1', 'n = 22', '2', '22 in binary is \"10110\".\nThe first adjacent pair of 1\'s is \"<u>1</u>0<u>1</u>10\" with a distance of 2.\nThe second adjacent pair of 1\'s is \"10<u>11</u>0\" with a distance of 1.\nThe answer is the largest of these two distances, which is 2.\nNote that \"<u>1</u>01<u>1</u>0\" is not a valid pair since there is a 1 separating the two 1\'s underlined.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1585', '713', '2', 'n = 8', '0', '8 in binary is \"1000\".\nThere are not any adjacent pairs of 1\'s in the binary representation of 8, so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1586', '713', '3', 'n = 5', '2', '5 in binary is \"101\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1587', '714', '1', 'n = 1', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1588', '714', '2', 'n = 10', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1589', '715', '1', 'nums1 = [2,7,11,15], nums2 = [1,10,4,11]', '[2,11,7,15]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1590', '715', '2', 'nums1 = [12,24,8,32], nums2 = [13,25,32,11]', '[24,32,8,12]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1591', '716', '1', 'target = 1, startFuel = 1, stations = []', '0', 'We can reach the target without refueling.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1592', '716', '2', 'target = 100, startFuel = 1, stations = [[10,100]]', '-1', 'We can not reach the target (or even the first gas station).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1593', '716', '3', 'target = 100, startFuel = 10, stations = [[10,60],[20,30],[30,30],[60,40]]', '2', 'We start with 10 liters of fuel.\nWe drive to position 10, expending 10 liters of fuel.  We refuel from 0 liters to 60 liters of gas.\nThen, we drive from position 10 to position 60 (expending 50 liters of fuel),\nand refuel from 10 liters to 50 liters of gas.  We then drive to and reach the target.\nWe made 2 refueling stops along the way, so we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1594', '717', '1', 'root1 = [3,5,1,6,2,9,8,null,null,7,4], root2 = [3,5,1,6,7,4,2,null,null,null,null,null,null,9,8]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1595', '717', '2', 'root1 = [1,2,3], root2 = [1,3,2]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1596', '718', '1', 'arr = [1,2,3,4,5,6,7,8]', '5', 'The longest subsequence that is fibonacci-like: [1,2,3,5,8].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1597', '718', '2', 'arr = [1,3,7,11,12,14,18]', '3', ':<strong> </strong>The longest subsequence that is fibonacci-like: [1,11,12], [3,11,14] or [7,11,18].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1598', '719', '1', 'commands = [4,-1,3], obstacles = []', '25', 'The robot starts at (0, 0):\n1. Move north 4 units to (0, 4).\n2. Turn right.\n3. Move east 3 units to (3, 4).\nThe furthest point the robot ever gets from the origin is (3, 4), which squared is 3<sup>2</sup> + 4<sup>2</sup> = 25 units away.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1599', '719', '2', 'commands = [4,-1,4,-2,4], obstacles = [[2,4]]', '65', 'The robot starts at (0, 0):\n1. Move north 4 units to (0, 4).\n2. Turn right.\n3. Move east 1 unit and get blocked by the obstacle at (2, 4), robot is at (1, 4).\n4. Turn left.\n5. Move north 4 units to (1, 8).\nThe furthest point the robot ever gets from the origin is (1, 8), which squared is 1<sup>2</sup> + 8<sup>2</sup> = 65 units away.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1600', '719', '3', 'commands = [6,-1,-1,6], obstacles = []', '36', 'The robot starts at (0, 0):\n1. Move north 6 units to (0, 6).\n2. Turn right.\n3. Turn right.\n4. Move south 6 units to (0, 0).\nThe furthest point the robot ever gets from the origin is (0, 6), which squared is 6<sup>2</sup> = 36 units away.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1601', '720', '1', 'piles = [3,6,7,11], h = 8', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1602', '720', '2', 'piles = [30,11,23,4,20], h = 5', '30', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1603', '720', '3', 'piles = [30,11,23,4,20], h = 6', '23', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1604', '721', '1', 'head = [1,2,3,4,5]', '[3,4,5]', 'The middle node of the list is node 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1605', '721', '2', 'head = [1,2,3,4,5,6]', '[4,5,6]', 'Since the list has two middle nodes with values 3 and 4, we return the second one.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1606', '722', '1', 'piles = [5,3,4,5]', 'true', 'Alice starts first, and can only take the first 5 or the last 5.\nSay she takes the first 5, so that the row becomes [3, 4, 5].\nIf Bob takes 3, then the board is [4, 5], and Alice takes 5 to win with 10 points.\nIf Bob takes the last 5, then the board is [3, 4], and Alice takes 4 to win with 9 points.\nThis demonstrated that taking the first 5 was a winning move for Alice, so we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1607', '722', '2', 'piles = [3,7,2,3]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1608', '723', '1', 'n = 1, a = 2, b = 3', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1609', '723', '2', 'n = 4, a = 2, b = 3', '6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1610', '724', '1', 'n = 5, minProfit = 3, group = [2,2], profit = [2,3]', '2', 'To make a profit of at least 3, the group could either commit crimes 0 and 1, or just crime 1.\nIn total, there are 2 schemes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1611', '724', '2', 'n = 10, minProfit = 5, group = [2,3,5], profit = [6,7,8]', '7', 'To make a profit of at least 5, the group could commit any crimes, as long as they commit one.\nThere are 7 possible schemes: (0), (1), (2), (0,1), (0,2), (1,2), and (0,1,2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1612', '725', '1', 's = \"leet2code3\", k = 10', '\"o\"', 'The decoded string is \"leetleetcodeleetleetcodeleetleetcode\".\nThe 10<sup>th</sup> letter in the string is \"o\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1613', '725', '2', 's = \"ha22\", k = 5', '\"h\"', 'The decoded string is \"hahahaha\".\nThe 5<sup>th</sup> letter is \"h\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1614', '725', '3', 's = \"a2345678999999999999999\", k = 1', '\"a\"', 'The decoded string is \"a\" repeated 8301530446056247680 times.\nThe 1<sup>st</sup> letter is \"a\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1615', '726', '1', 'people = [1,2], limit = 3', '1', '1 boat (1, 2)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1616', '726', '2', 'people = [3,2,2,1], limit = 3', '3', '3 boats (1, 2), (2) and (3)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1617', '726', '3', 'people = [3,5,3,4], limit = 5', '4', '4 boats (3), (3), (4), (5)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1618', '727', '1', 'edges = [[0,1,10],[0,2,1],[1,2,2]], maxMoves = 6, n = 3', '13', 'The edge subdivisions are shown in the image above.\nThe nodes that are reachable are highlighted in yellow.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1619', '727', '2', 'edges = [[0,1,4],[1,2,6],[0,2,8],[1,3,1]], maxMoves = 10, n = 4', '23', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1620', '727', '3', 'edges = [[1,2,4],[1,4,5],[1,3,1],[2,3,4],[3,4,5]], maxMoves = 17, n = 5', '1', 'Node 0 is disconnected from the rest of the graph, so only node 0 is reachable.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1621', '728', '1', 'grid = [[1,2],[3,4]]', '17', 'Here are the three projections (\"shadows\") of the shape made with each axis-aligned plane.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1622', '728', '2', 'grid = [[2]]', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1623', '728', '3', 'grid = [[1,0],[0,2]]', '8', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1624', '729', '1', 's1 = \"this apple is sweet\", s2 = \"this apple is sour\"', '[\"sweet\",\"sour\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1625', '729', '2', 's1 = \"apple apple\", s2 = \"banana\"', '[\"banana\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1626', '730', '1', 'rows = 1, cols = 4, rStart = 0, cStart = 0', '[[0,0],[0,1],[0,2],[0,3]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1627', '730', '2', 'rows = 5, cols = 6, rStart = 1, cStart = 4', '[[1,4],[1,5],[2,5],[2,4],[2,3],[1,3],[0,3],[0,4],[0,5],[3,5],[3,4],[3,3],[3,2],[2,2],[1,2],[0,2],[4,5],[4,4],[4,3],[4,2],[4,1],[3,1],[2,1],[1,1],[0,1],[4,0],[3,0],[2,0],[1,0],[0,0]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1628', '731', '1', 'n = 4, dislikes = [[1,2],[1,3],[2,4]]', 'true', 'The first group has [1,4], and the second group has [2,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1629', '731', '2', 'n = 3, dislikes = [[1,2],[1,3],[2,3]]', 'false', 'We need at least 3 groups to divide them. We cannot put them in two groups.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1630', '732', '1', 'k = 1, n = 2', '2', 'Drop the egg from floor 1. If it breaks, we know that f = 0.\nOtherwise, drop the egg from floor 2. If it breaks, we know that f = 1.\nIf it does not break, then we know f = 2.\nHence, we need at minimum 2 moves to determine with certainty what the value of f is.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1631', '732', '2', 'k = 2, n = 6', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1632', '732', '3', 'k = 3, n = 14', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1633', '733', '1', 'aliceSizes = [1,1], bobSizes = [2,2]', '[1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1634', '733', '2', 'aliceSizes = [1,2], bobSizes = [2,3]', '[1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1635', '733', '3', 'aliceSizes = [2], bobSizes = [1,3]', '[2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1636', '734', '1', 'preorder = [1,2,4,5,3,6,7], postorder = [4,5,2,6,7,3,1]', '[1,2,3,4,5,6,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1637', '734', '2', 'preorder = [1], postorder = [1]', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1638', '735', '1', 'words = [\"abc\",\"deq\",\"mee\",\"aqq\",\"dkd\",\"ccc\"], pattern = \"abb\"', '[\"mee\",\"aqq\"]', '\"mee\" matches the pattern because there is a permutation {a -&gt; m, b -&gt; e, ...}. \n\"ccc\" does not match the pattern because {a -&gt; c, b -&gt; c, ...} is not a permutation, since a and b map to the same letter.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1639', '735', '2', 'words = [\"a\",\"b\",\"c\"], pattern = \"a\"', '[\"a\",\"b\",\"c\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1640', '736', '1', 'nums = [2,1,3]', '6', 'The subsequences are [1], [2], [3], [2,1], [2,3], [1,3], [2,1,3].\nThe corresponding widths are 0, 0, 0, 1, 1, 2, 2.\nThe sum of these widths is 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1641', '736', '2', 'nums = [2]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1642', '737', '1', 'grid = [[1,2],[3,4]]', '34', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1643', '737', '2', 'grid = [[1,1,1],[1,0,1],[1,1,1]]', '32', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1644', '737', '3', 'grid = [[2,2,2],[2,1,2],[2,2,2]]', '46', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1645', '738', '1', 'words = [\"abcd\",\"cdab\",\"cbad\",\"xyzz\",\"zzxy\",\"zzyx\"]', '3', 'One group is [\"abcd\", \"cdab\", \"cbad\"], since they are all pairwise special equivalent, and none of the other strings is all pairwise special equivalent to these.\nThe other two groups are [\"xyzz\", \"zzxy\"] and [\"zzyx\"].\nNote that in particular, \"zzxy\" is not special equivalent to \"zzyx\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1646', '738', '2', 'words = [\"abc\",\"acb\",\"bac\",\"bca\",\"cab\",\"cba\"]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1647', '739', '1', 'n = 7', '[[0,0,0,null,null,0,0,null,null,0,0],[0,0,0,null,null,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,null,null,null,null,0,0],[0,0,0,0,0,null,null,0,0]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1648', '739', '2', 'n = 3', '[[0,0,0]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1649', '740', '1', '[\"FreqStack\", \"push\", \"push\", \"push\", \"push\", \"push\", \"push\", \"pop\", \"pop\", \"pop\", \"pop\"]\n[[], [5], [7], [5], [7], [4], [5], [], [], [], []]', '[null, null, null, null, null, null, null, 5, 7, 5, 4]', 'FreqStack freqStack = new FreqStack();\nfreqStack.push(5); // The stack is [5]\nfreqStack.push(7); // The stack is [5,7]\nfreqStack.push(5); // The stack is [5,7,5]\nfreqStack.push(7); // The stack is [5,7,5,7]\nfreqStack.push(4); // The stack is [5,7,5,7,4]\nfreqStack.push(5); // The stack is [5,7,5,7,4,5]\nfreqStack.pop();   // return 5, as 5 is the most frequent. The stack becomes [5,7,5,7,4].\nfreqStack.pop();   // return 7, as 5 and 7 is the most frequent, but 7 is closest to the top. The stack becomes [5,7,5,4].\nfreqStack.pop();   // return 5, as 5 is the most frequent. The stack becomes [5,7,4].\nfreqStack.pop();   // return 4, as 4, 5 and 7 is the most frequent, but 4 is closest to the top. The stack becomes [5,7].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1650', '741', '1', 'nums = [1,2,2,3]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1651', '741', '2', 'nums = [6,5,4,4]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1652', '741', '3', 'nums = [1,3,2]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1653', '742', '1', 'root = [5,3,6,2,4,null,8,1,null,null,null,7,9]', '[1,null,2,null,3,null,4,null,5,null,6,null,7,null,8,null,9]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1654', '742', '2', 'root = [5,1,7]', '[1,null,5,null,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1655', '743', '1', 'arr = [0]', '1', 'There is only one possible result: 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1656', '743', '2', 'arr = [1,1,2]', '3', 'The possible subarrays are [1], [1], [2], [1, 1], [1, 2], [1, 1, 2].\nThese yield the results 1, 1, 2, 1, 3, 3.\nThere are 3 unique values, so the answer is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1657', '743', '3', 'arr = [1,2,4]', '6', 'The possible results are 1, 2, 3, 4, 6, and 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1658', '744', '1', 's = \"cba\", k = 1', '\"acb\"', 'In the first move, we move the 1<sup>st</sup> character \'c\' to the end, obtaining the string \"bac\".\nIn the second move, we move the 1<sup>st</sup> character \'b\' to the end, obtaining the final result \"acb\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1659', '744', '2', 's = \"baaca\", k = 3', '\"aaabc\"', 'In the first move, we move the 1<sup>st</sup> character \'b\' to the end, obtaining the string \"aacab\".\nIn the second move, we move the 3<sup>rd</sup> character \'c\' to the end, obtaining the final result \"aaabc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1660', '745', '1', '[\"RLEIterator\", \"next\", \"next\", \"next\", \"next\"]\n[[[3, 8, 0, 9, 2, 5]], [2], [1], [1], [2]]', '[null, 8, 8, 5, -1]', 'RLEIterator rLEIterator = new RLEIterator([3, 8, 0, 9, 2, 5]); // This maps to the sequence [8,8,8,5,5].\nrLEIterator.next(2); // exhausts 2 terms of the sequence, returning 8. The remaining sequence is now [8, 5, 5].\nrLEIterator.next(1); // exhausts 1 term of the sequence, returning 8. The remaining sequence is now [5, 5].\nrLEIterator.next(1); // exhausts 1 term of the sequence, returning 5. The remaining sequence is now [5].\nrLEIterator.next(2); // exhausts 2 terms, returning -1. This is because the first term exhausted was 5,\nbut the second term did not exist. Since the last term exhausted does not exist, we return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1661', '746', '1', '[\"StockSpanner\", \"next\", \"next\", \"next\", \"next\", \"next\", \"next\", \"next\"]\n[[], [100], [80], [60], [70], [60], [75], [85]]', '[null, 1, 1, 1, 2, 1, 4, 6]', 'StockSpanner stockSpanner = new StockSpanner();\nstockSpanner.next(100); // return 1\nstockSpanner.next(80);  // return 1\nstockSpanner.next(60);  // return 1\nstockSpanner.next(70);  // return 2\nstockSpanner.next(60);  // return 1\nstockSpanner.next(75);  // return 4, because the last 4 prices (including today\'s price of 75) were less than or equal to today\'s price.\nstockSpanner.next(85);  // return 6');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1662', '747', '1', 'digits = [\"1\",\"3\",\"5\",\"7\"], n = 100', '20', 'The 20 numbers that can be written are:\n1, 3, 5, 7, 11, 13, 15, 17, 31, 33, 35, 37, 51, 53, 55, 57, 71, 73, 75, 77.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1663', '747', '2', 'digits = [\"1\",\"4\",\"9\"], n = 1000000000', '29523', 'We can write 3 one digit numbers, 9 two digit numbers, 27 three digit numbers,\n81 four digit numbers, 243 five digit numbers, 729 six digit numbers,\n2187 seven digit numbers, 6561 eight digit numbers, and 19683 nine digit numbers.\nIn total, this is 29523 integers that can be written using the digits array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1664', '747', '3', 'digits = [\"7\"], n = 8', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1665', '748', '1', 's = \"DID\"', '5', 'The 5 valid permutations of (0, 1, 2, 3) are:\n(1, 0, 3, 2)\n(2, 0, 3, 1)\n(2, 1, 3, 0)\n(3, 0, 2, 1)\n(3, 1, 2, 0)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1666', '748', '2', 's = \"D\"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1667', '749', '1', 'fruits = [<u>1,2,1</u>]', '3', 'We can pick from all 3 trees.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1668', '749', '2', 'fruits = [0,<u>1,2,2</u>]', '3', 'We can pick from trees [1,2,2].\nIf we had started at the first tree, we would only pick from trees [0,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1669', '749', '3', 'fruits = [1,<u>2,3,2,2</u>]', '4', 'We can pick from trees [2,3,2,2].\nIf we had started at the first tree, we would only pick from trees [1,2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1670', '750', '1', 'nums = [3,1,2,4]', '[2,4,3,1]', 'The outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1671', '750', '2', 'nums = [0]', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1672', '751', '1', 'left = \"4\", right = \"1000\"', '4', ': 4, 9, 121, and 484 are superpalindromes.\nNote that 676 is not a superpalindrome: 26 * 26 = 676, but 26 is not a palindrome.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1673', '751', '2', 'left = \"1\", right = \"2\"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1674', '752', '1', 'arr = [3,1,2,4]', '17', 'Subarrays are [3], [1], [2], [4], [3,1], [1,2], [2,4], [3,1,2], [1,2,4], [3,1,2,4]. \nMinimums are 3, 1, 2, 4, 1, 1, 2, 1, 1, 1.\nSum is 17.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1675', '752', '2', 'arr = [11,81,94,43,3]', '444', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1676', '753', '1', 'nums = [1], k = 0', '0', 'The score is max(nums) - min(nums) = 1 - 1 = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1677', '753', '2', 'nums = [0,10], k = 2', '6', 'Change nums to be [2, 8]. The score is max(nums) - min(nums) = 8 - 2 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1678', '753', '3', 'nums = [1,3,6], k = 3', '0', 'Change nums to be [4, 4, 4]. The score is max(nums) - min(nums) = 4 - 4 = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1679', '754', '1', 'board = [[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,35,-1,-1,13,-1],[-1,-1,-1,-1,-1,-1],[-1,15,-1,-1,-1,-1]]', '4', 'In the beginning, you start at square 1 (at row 5, column 0).\nYou decide to move to square 2 and must take the ladder to square 15.\nYou then decide to move to square 17 and must take the snake to square 13.\nYou then decide to move to square 14 and must take the ladder to square 35.\nYou then decide to move to square 36, ending the game.\nThis is the lowest possible number of moves to reach the last square, so return 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1680', '754', '2', 'board = [[-1,-1],[-1,3]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1681', '755', '1', 'nums = [1], k = 0', '0', 'The score is max(nums) - min(nums) = 1 - 1 = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1682', '755', '2', 'nums = [0,10], k = 2', '6', 'Change nums to be [2, 8]. The score is max(nums) - min(nums) = 8 - 2 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1683', '755', '3', 'nums = [1,3,6], k = 3', '3', 'Change nums to be [4, 6, 3]. The score is max(nums) - min(nums) = 6 - 3 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1684', '756', '1', '[\"TopVotedCandidate\", \"q\", \"q\", \"q\", \"q\", \"q\", \"q\"]\n[[[0, 1, 1, 0, 0, 1, 0], [0, 5, 10, 15, 20, 25, 30]], [3], [12], [25], [15], [24], [8]]', '[null, 0, 1, 1, 0, 0, 1]', 'TopVotedCandidate topVotedCandidate = new TopVotedCandidate([0, 1, 1, 0, 0, 1, 0], [0, 5, 10, 15, 20, 25, 30]);\ntopVotedCandidate.q(3); // return 0, At time 3, the votes are [0], and 0 is leading.\ntopVotedCandidate.q(12); // return 1, At time 12, the votes are [0,1,1], and 1 is leading.\ntopVotedCandidate.q(25); // return 1, At time 25, the votes are [0,1,1,0,0,1], and 1 is leading (as ties go to the most recent vote.)\ntopVotedCandidate.q(15); // return 0\ntopVotedCandidate.q(24); // return 0\ntopVotedCandidate.q(8); // return 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1685', '757', '1', 'nums = [5,2,3,1]', '[1,2,3,5]', 'After sorting the array, the positions of some numbers are not changed (for example, 2 and 3), while the positions of other numbers are changed (for example, 1 and 5).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1686', '757', '2', 'nums = [5,1,1,2,0,0]', '[0,0,1,1,2,5]', 'Note that the values of nums are not necessairly unique.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1687', '758', '1', 'graph = [[2,5],[3],[0,4,5],[1,4,5],[2,3],[0,2,3]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1688', '758', '2', 'graph = [[1,3],[0],[3],[0,2]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1689', '759', '1', 'deck = [1,2,3,4,4,3,2,1]', 'true', ': Possible partition [1,1],[2,2],[3,3],[4,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1690', '759', '2', 'deck = [1,1,1,2,2,2,3,3]', 'false', ': No possible partition.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1691', '760', '1', 'nums = [5,0,3,8,6]', '3', 'left = [5,0,3], right = [8,6]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1692', '760', '2', 'nums = [1,1,1,0,6,12]', '4', 'left = [1,1,1,0], right = [6,12]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1693', '761', '1', 'words1 = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], words2 = [\"e\",\"o\"]', '[\"facebook\",\"google\",\"leetcode\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1694', '761', '2', 'words1 = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], words2 = [\"l\",\"e\"]', '[\"apple\",\"google\",\"leetcode\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1695', '762', '1', 's = \"ab-cd\"', '\"dc-ba\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1696', '762', '2', 's = \"a-bC-dEf-ghIj\"', '\"j-Ih-gfE-dCba\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1697', '762', '3', 's = \"Test1ng-Leet=code-Q!\"', '\"Qedo1ct-eeLg=ntse-T!\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1698', '763', '1', 'nums = [1,-2,3,-2]', '3', 'Subarray [3] has maximum sum 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1699', '763', '2', 'nums = [5,-3,5]', '10', 'Subarray [5,5] has maximum sum 5 + 5 = 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1700', '763', '3', 'nums = [-3,-2,-3]', '-2', 'Subarray [-2] has maximum sum -2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1701', '764', '1', '[\"CBTInserter\", \"insert\", \"insert\", \"get_root\"]\n[[[1, 2]], [3], [4], []]', '[null, 1, 2, [1, 2, 3, 4]]', 'CBTInserter cBTInserter = new CBTInserter([1, 2]);\ncBTInserter.insert(3);  // return 1\ncBTInserter.insert(4);  // return 2\ncBTInserter.get_root(); // return [1, 2, 3, 4]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1702', '765', '1', 'n = 3, goal = 3, k = 1', '6', 'There are 6 possible playlists: [1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], and [3, 2, 1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1703', '765', '2', 'n = 2, goal = 3, k = 0', '6', 'There are 6 possible playlists: [1, 1, 2], [1, 2, 1], [2, 1, 1], [2, 2, 1], [2, 1, 2], and [1, 2, 2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1704', '765', '3', 'n = 2, goal = 3, k = 1', '2', 'There are 2 possible playlists: [1, 2, 1] and [2, 1, 2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1705', '766', '1', 's = \"())\"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1706', '766', '2', 's = \"(((\"', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1707', '767', '1', 'nums = [4,2,5,7]', '[4,5,2,7]', '[4,7,2,5], [2,5,4,7], [2,7,4,5] would also have been accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1708', '767', '2', 'nums = [2,3]', '[2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1709', '768', '1', 'arr = [1,1,2,2,3,3,4,4,5,5], target = 8', '20', 'Enumerating by the values (arr[i], arr[j], arr[k]):\n(1, 2, 5) occurs 8 times;\n(1, 3, 4) occurs 8 times;\n(2, 2, 4) occurs 2 times;\n(2, 3, 3) occurs 2 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1710', '768', '2', 'arr = [1,1,2,2,2,2], target = 5', '12', 'arr[i] = 1, arr[j] = arr[k] = 2 occurs 12 times:\nWe choose one 1 from [1,1] in 2 ways,\nand two 2s from [2,2,2,2] in 6 ways.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1711', '768', '3', 'arr = [2,1,3], target = 6', '1', '(1, 2, 3) occured one time in the array so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1712', '769', '1', 'graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1713', '769', '2', 'graph = [[1,0,0],[0,1,0],[0,0,1]], initial = [0,2]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1714', '769', '3', 'graph = [[1,1,1],[1,1,1],[1,1,1]], initial = [1,2]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1715', '770', '1', 'name = \"alex\", typed = \"aaleex\"', 'true', '\'a\' and \'e\' in \'alex\' were long pressed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1716', '770', '2', 'name = \"saeed\", typed = \"ssaaedd\"', 'false', '\'e\' must have been pressed twice, but it was not in the typed output.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1717', '771', '1', 's = \"00110\"', '1', 'We flip the last digit to get 00111.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1718', '771', '2', 's = \"010110\"', '2', 'We flip to get 011111, or alternatively 000111.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1719', '771', '3', 's = \"00011000\"', '2', 'We flip to get 00000000.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1720', '772', '1', 'arr = [1,0,1,0,1]', '[0,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1721', '772', '2', 'arr = [1,1,0,1,1]', '[-1,-1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1722', '772', '3', 'arr = [1,1,0,0,1]', '[0,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1723', '773', '1', 'graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1724', '773', '2', 'graph = [[1,1,0],[1,1,1],[0,1,1]], initial = [0,1]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1725', '773', '3', 'graph = [[1,1,0,0],[1,1,1,0],[0,1,1,1],[0,0,1,1]], initial = [0,1]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1726', '774', '1', 'emails = [\"test.email+alex@leetcode.com\",\"test.e.mail+bob.cathy@leetcode.com\",\"testemail+david@lee.tcode.com\"]', '2', '\"testemail@leetcode.com\" and \"testemail@lee.tcode.com\" actually receive mails.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1727', '774', '2', 'emails = [\"a@leetcode.com\",\"b@leetcode.com\",\"c@leetcode.com\"]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1728', '775', '1', 'nums = [1,0,1,0,1], goal = 2', '4', 'The 4 subarrays are bolded and underlined below:\n[<u><strong>1,0,1</strong></u>,0,1]\n[<u><strong>1,0,1,0</strong></u>,1]\n[1,<u><strong>0,1,0,1</strong></u>]\n[1,0,<u><strong>1,0,1</strong></u>]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1729', '775', '2', 'nums = [0,0,0,0,0], goal = 0', '15', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1730', '776', '1', 'matrix = [[2,1,3],[6,5,4],[7,8,9]]', '13', 'There are two falling paths with a minimum sum as shown.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1731', '776', '2', 'matrix = [[-19,57],[-40,-5]]', '-59', 'The falling path with a minimum sum is shown.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1732', '777', '1', 'n = 4', '[2,1,4,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1733', '777', '2', 'n = 5', '[3,1,2,5,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1734', '778', '1', '[\"RecentCounter\", \"ping\", \"ping\", \"ping\", \"ping\"]\n[[], [1], [100], [3001], [3002]]', '[null, 1, 2, 3, 3]', 'RecentCounter recentCounter = new RecentCounter();\nrecentCounter.ping(1);     // requests = [<u>1</u>], range is [-2999,1], return 1\nrecentCounter.ping(100);   // requests = [<u>1</u>, <u>100</u>], range is [-2900,100], return 2\nrecentCounter.ping(3001);  // requests = [<u>1</u>, <u>100</u>, <u>3001</u>], range is [1,3001], return 3\nrecentCounter.ping(3002);  // requests = [1, <u>100</u>, <u>3001</u>, <u>3002</u>], range is [2,3002], return 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1735', '779', '1', 'grid = [[0,1],[1,0]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1736', '779', '2', 'grid = [[0,1,0],[0,0,0],[0,0,1]]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1737', '779', '3', 'grid = [[1,1,1,1,1],[1,0,0,0,1],[1,0,1,0,1],[1,0,0,0,1],[1,1,1,1,1]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1738', '780', '1', 'n = 1', '10', 'We need to dial a number of length 1, so placing the knight over any numeric cell of the 10 cells is sufficient.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1739', '780', '2', 'n = 2', '20', 'All the valid number we can dial are [04, 06, 16, 18, 27, 29, 34, 38, 40, 43, 49, 60, 61, 67, 72, 76, 81, 83, 92, 94]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1740', '780', '3', 'n = 3131', '136006598', 'Please take care of the mod.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1741', '781', '1', 'stamp = \"abc\", target = \"ababc\"', '[0,2]', 'Initially s = \"?????\".\n- Place stamp at index 0 to get \"abc??\".\n- Place stamp at index 2 to get \"ababc\".\n[1,0,2] would also be accepted as an answer, as well as some other answers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1742', '781', '2', 'stamp = \"abca\", target = \"aabcaca\"', '[3,0,1]', 'Initially s = \"???????\".\n- Place stamp at index 3 to get \"???abca\".\n- Place stamp at index 0 to get \"abcabca\".\n- Place stamp at index 1 to get \"aabcaca\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1743', '782', '1', 'logs = [\"dig1 8 1 5 1\",\"let1 art can\",\"dig2 3 6\",\"let2 own kit dig\",\"let3 art zero\"]', '[\"let1 art can\",\"let3 art zero\",\"let2 own kit dig\",\"dig1 8 1 5 1\",\"dig2 3 6\"]', 'The letter-log contents are all different, so their ordering is \"art can\", \"art zero\", \"own kit dig\".\nThe digit-logs have a relative order of \"dig1 8 1 5 1\", \"dig2 3 6\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1744', '782', '2', 'logs = [\"a1 9 2 3 1\",\"g1 act car\",\"zo4 4 7\",\"ab1 off key dog\",\"a8 act zoo\"]', '[\"g1 act car\",\"a8 act zoo\",\"ab1 off key dog\",\"a1 9 2 3 1\",\"zo4 4 7\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1745', '783', '1', 'root = [10,5,15,3,7,null,18], low = 7, high = 15', '32', 'Nodes 7, 10, and 15 are in the range [7, 15]. 7 + 10 + 15 = 32.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1746', '783', '2', 'root = [10,5,15,3,7,13,18,1,null,6], low = 6, high = 10', '23', 'Nodes 6, 7, and 10 are in the range [6, 10]. 6 + 7 + 10 = 23.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1747', '784', '1', 'points = [[1,1],[1,3],[3,1],[3,3],[2,2]]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1748', '784', '2', 'points = [[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1749', '785', '1', 's = \"abc\"', '7', 'The 7 distinct subsequences are \"a\", \"b\", \"c\", \"ab\", \"ac\", \"bc\", and \"abc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1750', '785', '2', 's = \"aba\"', '6', 'The 6 distinct subsequences are \"a\", \"b\", \"ab\", \"aa\", \"ba\", and \"aba\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1751', '785', '3', 's = \"aaa\"', '3', 'The 3 distinct subsequences are \"a\", \"aa\" and \"aaa\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1752', '786', '1', 'arr = [2,1]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1753', '786', '2', 'arr = [3,5,5]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1754', '786', '3', 'arr = [0,3,2,1]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1755', '787', '1', 's = \"IDID\"', '[0,4,1,3,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1756', '787', '2', 's = \"III\"', '[0,1,2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1757', '787', '3', 's = \"DDI\"', '[3,2,0,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1758', '789', '1', 'strs = [\"cba\",\"daf\",\"ghi\"]', '1', 'The grid looks as follows:\n  cba\n  daf\n  ghi\nColumns 0 and 2 are sorted, but column 1 is not, so you only need to delete 1 column.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1759', '789', '2', 'strs = [\"a\",\"b\"]', '0', 'The grid looks as follows:\n  a\n  b\nColumn 0 is the only column and is sorted, so you will not delete any columns.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1760', '789', '3', 'strs = [\"zyx\",\"wvu\",\"tsr\"]', '3', 'The grid looks as follows:\n  zyx\n  wvu\n  tsr\nAll 3 columns are not sorted, so you will delete all 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1761', '790', '1', 'nums = [1,2,2]', '1', 'After 1 move, the array could be [1, 2, 3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1762', '790', '2', 'nums = [3,2,1,2,1,7]', '6', 'After 6 moves, the array could be [3, 4, 1, 2, 5, 7].\nIt can be shown with 5 or less moves that it is impossible for the array to have all unique values.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1763', '792', '1', 'stones = [[0,0],[0,1],[1,0],[1,2],[2,1],[2,2]]', '5', 'One way to remove 5 stones is as follows:\n1. Remove stone [2,2] because it shares the same row as [2,1].\n2. Remove stone [2,1] because it shares the same column as [0,1].\n3. Remove stone [1,2] because it shares the same row as [1,0].\n4. Remove stone [1,0] because it shares the same column as [0,0].\n5. Remove stone [0,1] because it shares the same row as [0,0].\nStone [0,0] cannot be removed since it does not share a row/column with another stone still on the plane.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1764', '792', '2', 'stones = [[0,0],[0,2],[1,1],[2,0],[2,2]]', '3', 'One way to make 3 moves is as follows:\n1. Remove stone [2,2] because it shares the same row as [2,0].\n2. Remove stone [2,0] because it shares the same column as [0,0].\n3. Remove stone [0,2] because it shares the same row as [0,0].\nStones [0,0] and [1,1] cannot be removed since they do not share a row/column with another stone still on the plane.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1765', '792', '3', 'stones = [[0,0]]', '0', '[0,0] is the only stone on the plane, so you cannot remove it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1766', '794', '1', 'arr = [1,2,3,4]', '\"23:41\"', 'The valid 24-hour times are \"12:34\", \"12:43\", \"13:24\", \"13:42\", \"14:23\", \"14:32\", \"21:34\", \"21:43\", \"23:14\", and \"23:41\". Of these times, \"23:41\" is the latest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1767', '794', '2', 'arr = [5,5,5,5]', '\"\"', 'There are no valid 24-hour times as \"55:55\" is not valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1768', '795', '1', 'deck = [17,13,11,2,3,5,7]', '[2,13,3,11,5,17,7]', 'We get the deck in the order [17,13,11,2,3,5,7] (this order does not matter), and reorder it.\nAfter reordering, the deck starts as [2,13,3,11,5,17,7], where 2 is the top of the deck.\nWe reveal 2, and move 13 to the bottom.  The deck is now [3,11,5,17,7,13].\nWe reveal 3, and move 11 to the bottom.  The deck is now [5,17,7,13,11].\nWe reveal 5, and move 17 to the bottom.  The deck is now [7,13,11,17].\nWe reveal 7, and move 13 to the bottom.  The deck is now [11,17,13].\nWe reveal 11, and move 17 to the bottom.  The deck is now [13,17].\nWe reveal 13, and move 17 to the bottom.  The deck is now [17].\nWe reveal 17.\nSince all the cards revealed are in increasing order, the answer is correct.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1769', '795', '2', 'deck = [1,1000]', '[1,1000]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1770', '796', '1', 'root1 = [1,2,3,4,5,6,null,null,null,7,8], root2 = [1,3,2,null,6,4,5,null,null,null,null,8,7]', 'true', 'We flipped at nodes with values 1, 3, and 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1771', '796', '2', 'root1 = [], root2 = []', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1772', '796', '3', 'root1 = [], root2 = [1]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1773', '797', '1', 'nums = [4,6,15,35]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1774', '797', '2', 'nums = [20,50,9,63]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1775', '797', '3', 'nums = [2,3,6,7,4,12,21,39]', '8', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1776', '798', '1', 'words = [\"hello\",\"leetcode\"], order = \"hlabcdefgijkmnopqrstuvwxyz\"', 'true', 'As \'h\' comes before \'l\' in this language, then the sequence is sorted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1777', '798', '2', 'words = [\"word\",\"world\",\"row\"], order = \"worldabcefghijkmnpqstuvxyz\"', 'false', 'As \'d\' comes after \'l\' in this language, then words[0] &gt; words[1], hence the sequence is unsorted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1778', '799', '1', 'arr = [3,1,3,6]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1779', '799', '2', 'arr = [2,1,2,6]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1780', '799', '3', 'arr = [4,-2,2,-4]', 'true', 'We can take two groups, [-2,-4] and [2,4] to form [-2,-4,2,4] or [2,4,-2,-4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1781', '800', '1', 'strs = [\"ca\",\"bb\",\"ac\"]', '1', 'After deleting the first column, strs = [\"a\", \"b\", \"c\"].\nNow strs is in lexicographic order (ie. strs[0] &lt;= strs[1] &lt;= strs[2]).\nWe require at least 1 deletion since initially strs was not in lexicographic order, so the answer is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1782', '800', '2', 'strs = [\"xc\",\"yb\",\"za\"]', '0', 'strs is already in lexicographic order, so we do not need to delete anything.\nNote that the rows of strs are not necessarily in lexicographic order:\ni.e., it is NOT necessarily true that (strs[0][0] &lt;= strs[0][1] &lt;= ...)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1783', '800', '3', 'strs = [\"zyx\",\"wvu\",\"tsr\"]', '3', 'We have to delete every column.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1784', '801', '1', 'rods = [1,2,3,6]', '6', 'We have two disjoint subsets {1,2,3} and {6}, which have the same sum = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1785', '801', '2', 'rods = [1,2,3,4,5,6]', '10', 'We have two disjoint subsets {2,3,5} and {4,6}, which have the same sum = 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1786', '801', '3', 'rods = [1,2]', '0', 'The billboard cannot be supported, so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1787', '802', '1', 'cells = [0,1,0,1,1,0,0,1], n = 7', '[0,0,1,1,0,0,0,0]', 'The following table summarizes the state of the prison on each day:\nDay 0: [0, 1, 0, 1, 1, 0, 0, 1]\nDay 1: [0, 1, 1, 0, 0, 0, 0, 0]\nDay 2: [0, 0, 0, 0, 1, 1, 1, 0]\nDay 3: [0, 1, 1, 0, 0, 1, 0, 0]\nDay 4: [0, 0, 0, 0, 0, 1, 0, 0]\nDay 5: [0, 1, 1, 1, 0, 1, 0, 0]\nDay 6: [0, 0, 1, 0, 1, 1, 0, 0]\nDay 7: [0, 0, 1, 1, 0, 0, 0, 0]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1788', '802', '2', 'cells = [1,0,0,1,0,0,1,0], n = 1000000000', '[0,0,1,1,1,1,1,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1789', '803', '1', 'root = [1,2,3,4,5,6]', 'true', 'Every level before the last is full (ie. levels with node-values {1} and {2, 3}), and all nodes in the last level ({4, 5, 6}) are as far left as possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1790', '803', '2', 'root = [1,2,3,4,5,null,7]', 'false', 'The node with value 7 isn\'t as far left as possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1791', '804', '1', 'grid = [\" /\",\"/ \"]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1792', '804', '2', 'grid = [\" /\",\"  \"]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1793', '804', '3', 'grid = [\"/\\\\\",\"\\\\/\"]', '5', 'Recall that because \\ characters are escaped, \"\\\\/\" refers to \\/, and \"/\\\\\" refers to /\\.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1794', '805', '1', 'strs = [\"babca\",\"bbazb\"]', '3', 'After deleting columns 0, 1, and 4, the final array is strs = [\"bc\", \"az\"].\nBoth these rows are individually in lexicographic order (ie. strs[0][0] &lt;= strs[0][1] and strs[1][0] &lt;= strs[1][1]).\nNote that strs[0] &gt; strs[1] - the array strs is not necessarily in lexicographic order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1795', '805', '2', 'strs = [\"edcba\"]', '4', 'If we delete less than 4 columns, the only row will not be lexicographically sorted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1796', '805', '3', 'strs = [\"ghi\",\"def\",\"abc\"]', '0', 'All rows are already lexicographically sorted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1797', '806', '1', 'nums = [1,2,3,3]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1798', '806', '2', 'nums = [2,1,2,5,3,2]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1799', '806', '3', 'nums = [5,1,5,2,5,3,5,4]', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1800', '808', '1', 'points = [[1,2],[2,1],[1,0],[0,1]]', '2.00000', 'The minimum area rectangle occurs at [1,2],[2,1],[1,0],[0,1], with an area of 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1801', '808', '2', 'points = [[0,1],[2,1],[1,1],[1,0],[2,0]]', '1.00000', 'The minimum area rectangle occurs at [1,0],[1,1],[2,1],[2,0], with an area of 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1802', '808', '3', 'points = [[0,3],[1,2],[3,1],[1,3],[2,1]]', '0', 'There is no possible rectangle to form from these points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1803', '809', '1', 'x = 3, target = 19', '5', '3 * 3 + 3 * 3 + 3 / 3.\nThe expression contains 5 operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1804', '809', '2', 'x = 5, target = 501', '8', '5 * 5 * 5 * 5 - 5 * 5 * 5 + 5 / 5.\nThe expression contains 8 operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1805', '809', '3', 'x = 100, target = 100000000', '3', '100 * 100 * 100 * 100.\nThe expression contains 3 operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1806', '810', '1', 'root = [1,1,1,1,1,null,1]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1807', '810', '2', 'root = [2,2,2,5,2]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1808', '811', '1', 'wordlist = [\"KiTe\",\"kite\",\"hare\",\"Hare\"], queries = [\"kite\",\"Kite\",\"KiTe\",\"Hare\",\"HARE\",\"Hear\",\"hear\",\"keti\",\"keet\",\"keto\"]', '[\"kite\",\"KiTe\",\"KiTe\",\"Hare\",\"hare\",\"\",\"\",\"KiTe\",\"\",\"KiTe\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1809', '811', '2', 'wordlist = [\"yellow\"], queries = [\"YellOw\"]', '[\"yellow\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1810', '812', '1', 'n = 3, k = 7', '[181,292,707,818,929]', 'Note that 070 is not a valid number, because it has leading zeroes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1811', '812', '2', 'n = 2, k = 1', '[10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1812', '813', '1', 'root = [0,0,null,0,0]', '1', 'One camera is enough to monitor all nodes if placed as shown.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1813', '813', '2', 'root = [0,0,null,0,null,0,null,null,0]', '2', 'At least two cameras are needed to monitor all nodes of the tree. The above image shows one of the valid configurations of camera placement.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1814', '814', '1', 'arr = [3,2,4,1]', '[4,2,4,3]', 'We perform 4 pancake flips, with k values 4, 2, 4, and 3.\nStarting state: arr = [3, 2, 4, 1]\nAfter 1st flip (k = 4): arr = [<u>1</u>, <u>4</u>, <u>2</u>, <u>3</u>]\nAfter 2nd flip (k = 2): arr = [<u>4</u>, <u>1</u>, 2, 3]\nAfter 3rd flip (k = 4): arr = [<u>3</u>, <u>2</u>, <u>1</u>, <u>4</u>]\nAfter 4th flip (k = 3): arr = [<u>1</u>, <u>2</u>, <u>3</u>, 4], which is sorted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1815', '814', '2', 'arr = [1,2,3]', '[]', 'The input is already sorted, so there is no need to flip anything.\nNote that other answers, such as [3, 3], would also be accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1816', '815', '1', 'x = 2, y = 3, bound = 10', '[2,3,4,5,7,9,10]', '2 = 2<sup>0</sup> + 3<sup>0</sup>\n3 = 2<sup>1</sup> + 3<sup>0</sup>\n4 = 2<sup>0</sup> + 3<sup>1</sup>\n5 = 2<sup>1</sup> + 3<sup>1</sup>\n7 = 2<sup>2</sup> + 3<sup>1</sup>\n9 = 2<sup>3</sup> + 3<sup>0</sup>\n10 = 2<sup>0</sup> + 3<sup>2</sup>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1817', '815', '2', 'x = 3, y = 5, bound = 15', '[2,4,6,8,10,14]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1818', '816', '1', 'root = [1,2], voyage = [2,1]', '[-1]', 'It is impossible to flip the nodes such that the pre-order traversal matches voyage.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1819', '816', '2', 'root = [1,2,3], voyage = [1,3,2]', '[1]', 'Flipping node 1 swaps nodes 2 and 3, so the pre-order traversal matches voyage.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1820', '816', '3', 'root = [1,2,3], voyage = [1,2,3]', '[]', 'The tree\'s pre-order traversal already matches voyage, so no nodes need to be flipped.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1821', '817', '1', 's = \"0.(52)\", t = \"0.5(25)\"', 'true', 'Because \"0.(52)\" represents 0.52525252..., and \"0.5(25)\" represents 0.52525252525..... , the strings represent the same number.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1822', '817', '2', 's = \"0.1666(6)\", t = \"0.166(66)\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1823', '817', '3', 's = \"0.9(9)\", t = \"1.\"', 'true', '\"0.9(9)\" represents 0.999999999... repeated forever, which equals 1.  [<a href=\"https://en.wikipedia.org/wiki/0.999...\" target=\"_blank\">See this link for an explanation.</a>]\n\"1.\" represents the number 1, which is formed correctly: (IntegerPart) = \"1\" and (NonRepeatingPart) = \"\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1824', '818', '1', 'points = [[1,3],[-2,2]], k = 1', '[[-2,2]]', 'The distance between (1, 3) and the origin is sqrt(10).\nThe distance between (-2, 2) and the origin is sqrt(8).\nSince sqrt(8) &lt; sqrt(10), (-2, 2) is closer to the origin.\nWe only want the closest k = 1 points from the origin, so the answer is just [[-2,2]].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1825', '818', '2', 'points = [[3,3],[5,-1],[-2,4]], k = 2', '[[3,3],[-2,4]]', 'The answer [[-2,4],[3,3]] would also be accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1826', '819', '1', 'nums = [4,5,0,-2,-3,1], k = 5', '7', 'There are 7 subarrays with a sum divisible by k = 5:\n[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1827', '819', '2', 'nums = [5], k = 9', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1828', '820', '1', 'arr = [10,13,12,14,15]', '2', 'From starting index i = 0, we can make our 1st jump to i = 2 (since arr[2] is the smallest among arr[1], arr[2], arr[3], arr[4] that is greater or equal to arr[0]), then we cannot jump any more.\nFrom starting index i = 1 and i = 2, we can make our 1st jump to i = 3, then we cannot jump any more.\nFrom starting index i = 3, we can make our 1st jump to i = 4, so we have reached the end.\nFrom starting index i = 4, we have reached the end already.\nIn total, there are 2 different starting indices i = 3 and i = 4, where we can reach the end with some number of\njumps.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1829', '820', '2', 'arr = [2,3,1,1,4]', '3', 'From starting index i = 0, we make jumps to i = 1, i = 2, i = 3:\nDuring our 1st jump (odd-numbered), we first jump to i = 1 because arr[1] is the smallest value in [arr[1], arr[2], arr[3], arr[4]] that is greater than or equal to arr[0].\nDuring our 2nd jump (even-numbered), we jump from i = 1 to i = 2 because arr[2] is the largest value in [arr[2], arr[3], arr[4]] that is less than or equal to arr[1]. arr[3] is also the largest value, but 2 is a smaller index, so we can only jump to i = 2 and not i = 3\nDuring our 3rd jump (odd-numbered), we jump from i = 2 to i = 3 because arr[3] is the smallest value in [arr[3], arr[4]] that is greater than or equal to arr[2].\nWe can\'t jump from i = 3 to i = 4, so the starting index i = 0 is not good.\nIn a similar manner, we can deduce that:\nFrom starting index i = 1, we jump to i = 4, so we reach the end.\nFrom starting index i = 2, we jump to i = 3, and then we can\'t jump anymore.\nFrom starting index i = 3, we jump to i = 4, so we reach the end.\nFrom starting index i = 4, we are already at the end.\nIn total, there are 3 different starting indices i = 1, i = 3, and i = 4, where we can reach the end with some\nnumber of jumps.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1830', '820', '3', 'arr = [5,1,3,4,2]', '3', 'We can reach the end from starting indices 1, 2, and 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1831', '821', '1', 'nums = [2,1,2]', '5', 'You can form a triangle with three side lengths: 1, 2, and 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1832', '821', '2', 'nums = [1,2,1,10]', '0', 'You cannot use the side lengths 1, 1, and 2 to form a triangle.\nYou cannot use the side lengths 1, 1, and 10 to form a triangle.\nYou cannot use the side lengths 1, 2, and 10 to form a triangle.\nAs we cannot use any three side lengths to form a triangle of non-zero area, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1833', '822', '1', 'nums = [-4,-1,0,3,10]', '[0,1,9,16,100]', 'After squaring, the array becomes [16,1,0,9,100].\nAfter sorting, it becomes [0,1,9,16,100].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1834', '822', '2', 'nums = [-7,-3,2,3,11]', '[4,9,9,49,121]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1835', '823', '1', 'arr = [9,4,2,10,7,8,8,1,9]', '5', 'arr[1] &gt; arr[2] &lt; arr[3] &gt; arr[4] &lt; arr[5]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1836', '823', '2', 'arr = [4,8,12,16]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1837', '823', '3', 'arr = [100]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1838', '824', '1', 'root = [3,0,0]', '2', 'From the root of the tree, we move one coin to its left child, and one coin to its right child.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1839', '824', '2', 'root = [0,3,0]', '3', 'From the left child of the root, we move two coins to the root [taking two moves]. Then, we move one coin from the root of the tree to the right child.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1840', '825', '1', 'grid = [[1,0,0,0],[0,0,0,0],[0,0,2,-1]]', '2', 'We have the following two paths: \n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2)\n2. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1841', '825', '2', 'grid = [[1,0,0,0],[0,0,0,0],[0,0,0,2]]', '4', 'We have the following four paths: \n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2),(2,3)\n2. (0,0),(0,1),(1,1),(1,0),(2,0),(2,1),(2,2),(1,2),(0,2),(0,3),(1,3),(2,3)\n3. (0,0),(1,0),(2,0),(2,1),(2,2),(1,2),(1,1),(0,1),(0,2),(0,3),(1,3),(2,3)\n4. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2),(2,3)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1842', '825', '3', 'grid = [[0,1],[2,0]]', '0', 'There is no path that walks over every empty square exactly once.\nNote that the starting and ending square can be anywhere in the grid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1843', '826', '1', '[\"TimeMap\", \"set\", \"get\", \"get\", \"set\", \"get\", \"get\"]\n[[], [\"foo\", \"bar\", 1], [\"foo\", 1], [\"foo\", 3], [\"foo\", \"bar2\", 4], [\"foo\", 4], [\"foo\", 5]]', '[null, null, \"bar\", \"bar\", null, \"bar2\", \"bar2\"]', 'TimeMap timeMap = new TimeMap();\ntimeMap.set(\"foo\", \"bar\", 1);  // store the key \"foo\" and value \"bar\" along with timestamp = 1.\ntimeMap.get(\"foo\", 1);         // return \"bar\"\ntimeMap.get(\"foo\", 3);         // return \"bar\", since there is no value corresponding to foo at timestamp 3 and timestamp 2, then the only value is at timestamp 1 is \"bar\".\ntimeMap.set(\"foo\", \"bar2\", 4); // store the key \"foo\" and value \"bar2\" along with timestamp = 4.\ntimeMap.get(\"foo\", 4);         // return \"bar2\"\ntimeMap.get(\"foo\", 5);         // return \"bar2\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1844', '827', '1', 'nums = [2,1,3]', '12', 'We could choose the following i, j, k triples:\n(i=0, j=0, k=1) : 2 &amp; 2 &amp; 1\n(i=0, j=1, k=0) : 2 &amp; 1 &amp; 2\n(i=0, j=1, k=1) : 2 &amp; 1 &amp; 1\n(i=0, j=1, k=2) : 2 &amp; 1 &amp; 3\n(i=0, j=2, k=1) : 2 &amp; 3 &amp; 1\n(i=1, j=0, k=0) : 1 &amp; 2 &amp; 2\n(i=1, j=0, k=1) : 1 &amp; 2 &amp; 1\n(i=1, j=0, k=2) : 1 &amp; 2 &amp; 3\n(i=1, j=1, k=0) : 1 &amp; 1 &amp; 2\n(i=1, j=2, k=0) : 1 &amp; 3 &amp; 2\n(i=2, j=0, k=1) : 3 &amp; 2 &amp; 1\n(i=2, j=1, k=0) : 3 &amp; 1 &amp; 2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1845', '827', '2', 'nums = [0,0,0]', '27', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1846', '828', '1', 'days = [1,4,6,7,8,20], costs = [2,7,15]', '11', 'For example, here is one way to buy passes that lets you travel your travel plan:\nOn day 1, you bought a 1-day pass for costs[0] = $2, which covered day 1.\nOn day 3, you bought a 7-day pass for costs[1] = $7, which covered days 3, 4, ..., 9.\nOn day 20, you bought a 1-day pass for costs[0] = $2, which covered day 20.\nIn total, you spent $11 and covered all the days of your travel.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1847', '828', '2', 'days = [1,2,3,4,5,6,7,8,9,10,30,31], costs = [2,7,15]', '17', 'For example, here is one way to buy passes that lets you travel your travel plan:\nOn day 1, you bought a 30-day pass for costs[2] = $15 which covered days 1, 2, ..., 30.\nOn day 31, you bought a 1-day pass for costs[0] = $2 which covered day 31.\nIn total, you spent $17 and covered all the days of your travel.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1848', '829', '1', 'a = 1, b = 2', '\"abb\"', '\"abb\", \"bab\" and \"bba\" are all correct answers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1849', '829', '2', 'a = 4, b = 1', '\"aabaa\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1850', '830', '1', 'nums = [1,2,3,4], queries = [[1,0],[-3,1],[-4,0],[2,3]]', '[8,6,2,4]', 'At the beginning, the array is [1,2,3,4].\nAfter adding 1 to nums[0], the array is [2,2,3,4], and the sum of even values is 2 + 2 + 4 = 8.\nAfter adding -3 to nums[1], the array is [2,-1,3,4], and the sum of even values is 2 + 4 = 6.\nAfter adding -4 to nums[0], the array is [-2,-1,3,4], and the sum of even values is -2 + 4 = 2.\nAfter adding 2 to nums[3], the array is [-2,-1,3,6], and the sum of even values is -2 + 6 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1851', '830', '2', 'nums = [1], queries = [[4,0]]', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1852', '831', '1', 'firstList = [[0,2],[5,10],[13,23],[24,25]], secondList = [[1,5],[8,12],[15,24],[25,26]]', '[[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1853', '831', '2', 'firstList = [[1,3],[5,9]], secondList = []', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1854', '833', '1', 'root = [0,1,2,3,4,3,4]', '\"dba\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1855', '833', '2', 'root = [25,1,3,1,3,0,2]', '\"adz\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1856', '833', '3', 'root = [2,2,1,null,1,0,null,0]', '\"abc\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1857', '834', '1', 'num = [1,2,0,0], k = 34', '[1,2,3,4]', '1200 + 34 = 1234');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1858', '834', '2', 'num = [2,7,4], k = 181', '[4,5,5]', '274 + 181 = 455');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1859', '834', '3', 'num = [2,1,5], k = 806', '[1,0,2,1]', '215 + 806 = 1021');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1860', '835', '1', 'equations = [\"a==b\",\"b!=a\"]', 'false', 'If we assign say, a = 1 and b = 1, then the first equation is satisfied, but not the second.\nThere is no way to assign the variables to satisfy both equations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1861', '835', '2', 'equations = [\"b==a\",\"a==b\"]', 'true', 'We could assign a = 1 and b = 1 to satisfy both equations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1862', '836', '1', 'startValue = 2, target = 3', '2', 'Use double operation and then decrement operation {2 -&gt; 4 -&gt; 3}.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1863', '836', '2', 'startValue = 5, target = 8', '2', 'Use decrement and then double {5 -&gt; 4 -&gt; 8}.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1864', '836', '3', 'startValue = 3, target = 10', '3', 'Use double, decrement and double {3 -&gt; 6 -&gt; 5 -&gt; 10}.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1865', '838', '1', 'root = [1,2,3,4], x = 4, y = 3', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1866', '838', '2', 'root = [1,2,3,null,4,null,5], x = 5, y = 4', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1867', '838', '3', 'root = [1,2,3,null,4], x = 2, y = 3', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1868', '839', '1', 'grid = [[2,1,1],[1,1,0],[0,1,1]]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1869', '839', '2', 'grid = [[2,1,1],[0,1,1],[1,0,1]]', '-1', 'The orange in the bottom left corner (row 2, column 0) is never rotten, because rotting only happens 4-directionally.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1870', '839', '3', 'grid = [[0,2]]', '0', 'Since there are already no fresh oranges at minute 0, the answer is just 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1871', '840', '1', 'nums = [0,1,0], k = 1', '2', 'Flip nums[0], then flip nums[2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1872', '840', '2', 'nums = [1,1,0], k = 2', '-1', 'No matter how we flip subarrays of size 2, we cannot make the array become [1,1,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1873', '840', '3', 'nums = [0,0,0,1,0,1,1,0], k = 3', '3', 'Flip nums[0],nums[1],nums[2]: nums becomes [1,1,1,1,0,1,1,0]\nFlip nums[4],nums[5],nums[6]: nums becomes [1,1,1,1,1,0,0,0]\nFlip nums[5],nums[6],nums[7]: nums becomes [1,1,1,1,1,1,1,1]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1874', '841', '1', 'nums = [1,17,8]', '2', '[1,8,17] and [17,8,1] are the valid permutations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1875', '841', '2', 'nums = [2,2,2]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1876', '842', '1', 'n = 2, trust = [[1,2]]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1877', '842', '2', 'n = 3, trust = [[1,3],[2,3]]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1878', '842', '3', 'n = 3, trust = [[1,3],[2,3],[3,1]]', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1879', '843', '1', 'root = [4,1,3,null,null,2], val = 5', '[5,4,null,1,3,null,null,2]', 'a = [1,4,2,3], b = [1,4,2,3,5]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1880', '843', '2', 'root = [5,2,4,null,1], val = 3', '[5,2,4,null,1,null,3]', 'a = [2,1,5,4], b = [2,1,5,4,3]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1881', '843', '3', 'root = [5,2,3,null,1], val = 4', '[5,2,4,null,1,3]', 'a = [2,1,5,3], b = [2,1,5,3,4]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1882', '844', '1', 'board = [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"R\",\".\",\".\",\".\",\"p\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]', '3', 'In this example, the rook is attacking all the pawns.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1883', '844', '2', 'board = [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\"p\",\"p\",\"p\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"B\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"B\",\"R\",\"B\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"B\",\"p\",\"p\",\".\",\".\"],[\".\",\"p\",\"p\",\"p\",\"p\",\"p\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]', '0', 'The bishops are blocking the rook from attacking any of the pawns.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1884', '844', '3', 'board = [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\"p\",\"p\",\".\",\"R\",\".\",\"p\",\"B\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"B\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"p\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"]]', '3', 'The rook is attacking the pawns at positions b5, d6, and f5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1885', '845', '1', 'stones = [3,2,4,1], k = 2', '20', 'We start with [3, 2, 4, 1].\nWe merge [3, 2] for a cost of 5, and we are left with [5, 4, 1].\nWe merge [4, 1] for a cost of 5, and we are left with [5, 5].\nWe merge [5, 5] for a cost of 10, and we are left with [10].\nThe total cost was 20, and this is the minimum possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1886', '845', '2', 'stones = [3,2,4,1], k = 3', '-1', 'After any merge operation, there are 2 piles left, and we can\'t merge anymore.  So the task is impossible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1887', '845', '3', 'stones = [3,5,1,2,6], k = 3', '25', 'We start with [3, 5, 1, 2, 6].\nWe merge [5, 1, 2] for a cost of 8, and we are left with [3, 8, 6].\nWe merge [3, 8, 6] for a cost of 17, and we are left with [17].\nThe total cost was 25, and this is the minimum possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1888', '846', '1', 'n = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,0]]', '[1,0]', 'We have the initial grid with all lamps turned off. In the above picture we see the grid after turning on the lamp at grid[0][0] then turning on the lamp at grid[4][4].\nThe 0<sup>th</sup> query asks if the lamp at grid[1][1] is illuminated or not (the blue square). It is illuminated, so set ans[0] = 1. Then, we turn off all lamps in the red square.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/19/illu_step1.jpg\" style=\"width:500px;height:218px\"/>\nThe 1<sup>st</sup> query asks if the lamp at grid[1][0] is illuminated or not (the blue square). It is not illuminated, so set ans[1] = 0. Then, we turn off all lamps in the red rectangle.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/19/illu_step2.jpg\" style=\"width:500px;height:219px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1889', '846', '2', 'n = 5, lamps = [[0,0],[4,4]], queries = [[1,1],[1,1]]', '[1,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1890', '846', '3', 'n = 5, lamps = [[0,0],[0,4]], queries = [[0,4],[0,1],[1,4]]', '[1,1,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1891', '847', '1', 'words = [\"bella\",\"label\",\"roller\"]', '[\"e\",\"l\",\"l\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1892', '847', '2', 'words = [\"cool\",\"lock\",\"cook\"]', '[\"c\",\"o\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1893', '848', '1', 's = \"aabcbc\"', 'true', '\"\" -&gt; \"<u>abc</u>\" -&gt; \"a<u>abc</u>bc\"\nThus, \"aabcbc\" is valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1894', '848', '2', 's = \"abcabcababcc\"', 'true', '\"\" -&gt; \"<u>abc</u>\" -&gt; \"abc<u>abc</u>\" -&gt; \"abcabc<u>abc</u>\" -&gt; \"abcabcab<u>abc</u>c\"\nThus, \"abcabcababcc\" is valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1895', '848', '3', 's = \"abccba\"', 'false', 'It is impossible to get \"abccba\" using the operation.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1896', '849', '1', 'nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2', '6', '[1,1,1,0,0,<u><strong>1</strong>,1,1,1,1,<strong>1</strong></u>]\nBolded numbers were flipped from 0 to 1. The longest subarray is underlined.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1897', '849', '2', 'nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], k = 3', '10', '[0,0,<u>1,1,<strong>1</strong>,<strong>1</strong>,1,1,1,<strong>1</strong>,1,1</u>,0,0,0,1,1,1,1]\nBolded numbers were flipped from 0 to 1. The longest subarray is underlined.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1898', '850', '1', 'nums = [4,2,3], k = 1', '5', 'Choose index 1 and nums becomes [4,-2,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1899', '850', '2', 'nums = [3,-1,0,2], k = 3', '6', 'Choose indices (1, 2, 2) and nums becomes [3,1,0,2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1900', '850', '3', 'nums = [2,-3,-1,5,-4], k = 2', '13', 'Choose indices (1, 4) and nums becomes [2,3,-1,5,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1901', '852', '1', 'tops = [2,1,2,4,2,2], bottoms = [5,2,6,2,3,2]', '2', 'The first figure represents the dominoes as given by tops and bottoms: before we do any rotations.\nIf we rotate the second and fourth dominoes, we can make every value in the top row equal to 2, as indicated by the second figure.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1902', '852', '2', 'tops = [3,5,1,2,3], bottoms = [3,6,3,3,4]', '-1', 'In this case, it is not possible to rotate the dominoes to make one row of values equal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1903', '853', '1', 'preorder = [8,5,1,7,10,12]', '[8,5,10,1,7,null,12]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1904', '853', '2', 'preorder = [1,3]', '[1,null,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1905', '855', '1', 'time = [30,20,150,100,40]', '3', 'Three pairs have a total duration divisible by 60:\n(time[0] = 30, time[2] = 150): total duration 180\n(time[1] = 20, time[3] = 100): total duration 120\n(time[1] = 20, time[4] = 40): total duration 60');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1906', '855', '2', 'time = [60,60,60]', '3', 'All three pairs have a total duration of 120, which is divisible by 60.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1907', '856', '1', 'weights = [1,2,3,4,5,6,7,8,9,10], days = 5', '15', 'A ship capacity of 15 is the minimum to ship all the packages in 5 days like this:\n1st day: 1, 2, 3, 4, 5\n2nd day: 6, 7\n3rd day: 8\n4th day: 9\n5th day: 10\n\nNote that the cargo must be shipped in the order given, so using a ship of capacity 14 and splitting the packages into parts like (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) is not allowed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1908', '856', '2', 'weights = [3,2,2,4,1,4], days = 3', '6', 'A ship capacity of 6 is the minimum to ship all the packages in 3 days like this:\n1st day: 3, 2\n2nd day: 2, 4\n3rd day: 1, 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1909', '856', '3', 'weights = [1,2,3,1,1], days = 4', '3', '1st day: 1\n2nd day: 2\n3rd day: 3\n4th day: 1, 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1910', '857', '1', 'n = 20', '1', 'The only positive number (&lt;= 20) with at least 1 repeated digit is 11.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1911', '857', '2', 'n = 100', '10', 'The positive numbers (&lt;= 100) with atleast 1 repeated digit are 11, 22, 33, 44, 55, 66, 77, 88, 99, and 100.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1912', '857', '3', 'n = 1000', '262', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1913', '858', '1', 'arr = [0,2,1,-6,6,-7,9,1,2,0,1]', 'true', '0 + 2 + 1 = -6 + 6 - 7 + 9 + 1 = 2 + 0 + 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1914', '858', '2', 'arr = [0,2,1,-6,6,7,9,-1,2,0,1]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1915', '858', '3', 'arr = [3,3,6,5,-2,2,5,1,-9,4]', 'true', '3 + 3 = 6 = 5 - 2 + 2 + 5 + 1 - 9 + 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1916', '859', '1', 'values = [8,1,5,2,6]', '11', 'i = 0, j = 2, values[i] + values[j] + i - j = 8 + 5 + 0 - 2 = 11');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1917', '859', '2', 'values = [1,2]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1918', '860', '1', 'k = 1', '1', 'The smallest answer is n = 1, which has length 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1919', '860', '2', 'k = 2', '-1', 'There is no such positive integer n divisible by 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1920', '860', '3', 'k = 3', '3', 'The smallest answer is n = 111, which has length 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1921', '861', '1', 's = \"0110\", n = 3', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1922', '861', '2', 's = \"0110\", n = 4', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1923', '862', '1', 'n = 2', '\"110\"\n<strong>Explantion:</strong> (-2)<sup>2</sup> + (-2)<sup>1</sup> = 2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1924', '862', '2', 'n = 3', '\"111\"\n<strong>Explantion:</strong> (-2)<sup>2</sup> + (-2)<sup>1</sup> + (-2)<sup>0</sup> = 3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1925', '862', '3', 'n = 4', '\"100\"\n<strong>Explantion:</strong> (-2)<sup>2</sup> = 4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1926', '863', '1', 'nums = [0,1,1]', '[true,false,false]', 'The input numbers in binary are 0, 01, 011; which are 0, 1, and 3 in base-10.\nOnly the first number is divisible by 5, so answer[0] is true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1927', '863', '2', 'nums = [1,1,1]', '[false,false,false]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1928', '864', '1', 'head = [2,1,5]', '[5,5,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1929', '864', '2', 'head = [2,7,4,3,5]', '[7,0,5,5,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1930', '865', '1', 'grid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]', '3', 'There are three 1s that are enclosed by 0s, and one 1 that is not enclosed because its on the boundary.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1931', '865', '2', 'grid = [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]', '0', 'All 1s are either on the boundary or can reach the boundary.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1932', '866', '1', 's = \"(()())(())\"', '\"()()()\"', 'The input string is \"(()())(())\", with primitive decomposition \"(()())\" + \"(())\".\nAfter removing outer parentheses of each part, this is \"()()\" + \"()\" = \"()()()\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1933', '866', '2', 's = \"(()())(())(()(()))\"', '\"()()()()(())\"', 'The input string is \"(()())(())(()(()))\", with primitive decomposition \"(()())\" + \"(())\" + \"(()(()))\".\nAfter removing outer parentheses of each part, this is \"()()\" + \"()\" + \"()(())\" = \"()()()()(())\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1934', '866', '3', 's = \"()()\"', '\"\"', 'The input string is \"()()\", with primitive decomposition \"()\" + \"()\".\nAfter removing outer parentheses of each part, this is \"\" + \"\" = \"\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1935', '868', '1', 'queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FB\"', '[true,false,true,true,false]', '\"FooBar\" can be generated like this \"F\" + \"oo\" + \"B\" + \"ar\".\n\"FootBall\" can be generated like this \"F\" + \"oot\" + \"B\" + \"all\".\n\"FrameBuffer\" can be generated like this \"F\" + \"rame\" + \"B\" + \"uffer\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1936', '868', '2', 'queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FoBa\"', '[true,false,true,false,false]', '\"FooBar\" can be generated like this \"Fo\" + \"o\" + \"Ba\" + \"r\".\n\"FootBall\" can be generated like this \"Fo\" + \"ot\" + \"Ba\" + \"ll\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1937', '868', '3', 'queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FoBaT\"', '[false,true,false,false,false]', '\"FooBarTest\" can be generated like this \"Fo\" + \"o\" + \"Ba\" + \"r\" + \"T\" + \"est\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1938', '869', '1', 'clips = [[0,2],[4,6],[8,10],[1,9],[1,5],[5,9]], time = 10', '3', 'We take the clips [0,2], [8,10], [1,9]; a total of 3 clips.\nThen, we can reconstruct the sporting event as follows:\nWe cut [1,9] into segments [1,2] + [2,8] + [8,9].\nNow we have segments [0,2] + [2,8] + [8,10] which cover the sporting event [0, 10].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1939', '869', '2', 'clips = [[0,1],[1,2]], time = 5', '-1', 'We cannot cover [0,5] with only [0,1] and [1,2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1940', '869', '3', 'clips = [[0,1],[6,8],[0,2],[5,6],[0,4],[0,3],[6,7],[1,3],[4,7],[1,4],[2,5],[2,6],[3,4],[4,5],[5,7],[6,9]], time = 9', '3', 'We can take clips [0,4], [4,7], and [6,9].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1941', '870', '1', 'n = 2', 'true', 'Alice chooses 1, and Bob has no more moves.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1942', '870', '2', 'n = 3', 'false', 'Alice chooses 1, Bob chooses 1, and Alice has no more moves.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1943', '872', '1', 'nums = [3,6,9,12]', '4', 'The whole array is an arithmetic sequence with steps of length = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1944', '872', '2', 'nums = [9,4,7,2,10]', '3', 'The longest arithmetic subsequence is [4,7,10].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1945', '872', '3', 'nums = [20,1,15,3,10,5,8]', '4', 'The longest arithmetic subsequence is [20,15,10,5].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1946', '873', '1', 'traversal = \"1-2--3--4-5--6--7\"', '[1,2,5,3,4,6,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1947', '873', '2', 'traversal = \"1-2--3---4-5--6---7\"', '[1,2,5,3,null,6,null,4,null,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1948', '873', '3', 'traversal = \"1-401--349---90--88\"', '[1,401,null,349,88,90]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1949', '874', '1', 'costs = [[10,20],[30,200],[400,50],[30,20]]', '110', 'The first person goes to city A for a cost of 10.\nThe second person goes to city A for a cost of 30.\nThe third person goes to city B for a cost of 50.\nThe fourth person goes to city B for a cost of 20.\n\nThe total minimum cost is 10 + 30 + 50 + 20 = 110 to have half the people interviewing in each city.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1950', '874', '2', 'costs = [[259,770],[448,54],[926,667],[184,139],[840,118],[577,469]]', '1859', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1951', '874', '3', 'costs = [[515,563],[451,713],[537,709],[343,819],[855,779],[457,60],[650,359],[631,42]]', '3086', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1952', '875', '1', 'rows = 1, cols = 2, rCenter = 0, cCenter = 0', '[[0,0],[0,1]]', 'The distances from (0, 0) to other cells are: [0,1]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1953', '875', '2', 'rows = 2, cols = 2, rCenter = 0, cCenter = 1', '[[0,1],[0,0],[1,1],[1,0]]', 'The distances from (0, 1) to other cells are: [0,1,1,2]\nThe answer [[0,1],[1,1],[0,0],[1,0]] would also be accepted as correct.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1954', '875', '3', 'rows = 2, cols = 3, rCenter = 1, cCenter = 2', '[[1,2],[0,2],[1,1],[0,1],[1,0],[0,0]]', 'The distances from (1, 2) to other cells are: [0,1,1,2,2,3]\nThere are other answers that would also be accepted as correct, such as [[1,2],[1,1],[0,2],[1,0],[0,1],[0,0]].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1955', '876', '1', 'nums = [0,6,5,2,2,5,1,9,4], firstLen = 1, secondLen = 2', '20', 'One choice of subarrays is [9] with length 1, and [6,5] with length 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1956', '876', '2', 'nums = [3,8,1,3,2,1,8,9,0], firstLen = 3, secondLen = 2', '29', 'One choice of subarrays is [3,8,1] with length 3, and [8,9] with length 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1957', '876', '3', 'nums = [2,1,5,6,0,9,5,0,3,8], firstLen = 4, secondLen = 3', '31', 'One choice of subarrays is [5,6,0,9] with length 4, and [0,3,8] with length 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1958', '877', '1', '[\"StreamChecker\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\", \"query\"]\n[[[\"cd\", \"f\", \"kl\"]], [\"a\"], [\"b\"], [\"c\"], [\"d\"], [\"e\"], [\"f\"], [\"g\"], [\"h\"], [\"i\"], [\"j\"], [\"k\"], [\"l\"]]', '[null, false, false, false, true, false, true, false, false, false, false, false, true]', 'StreamChecker streamChecker = new StreamChecker([\"cd\", \"f\", \"kl\"]);\nstreamChecker.query(\"a\"); // return False\nstreamChecker.query(\"b\"); // return False\nstreamChecker.query(\"c\"); // return False\nstreamChecker.query(\"d\"); // return True, because \'cd\' is in the wordlist\nstreamChecker.query(\"e\"); // return False\nstreamChecker.query(\"f\"); // return True, because \'f\' is in the wordlist\nstreamChecker.query(\"g\"); // return False\nstreamChecker.query(\"h\"); // return False\nstreamChecker.query(\"i\"); // return False\nstreamChecker.query(\"j\"); // return False\nstreamChecker.query(\"k\"); // return False\nstreamChecker.query(\"l\"); // return True, because \'kl\' is in the wordlist');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1959', '878', '1', 'a = 1, b = 2, c = 5', '[1,2]', 'Move the stone from 5 to 3, or move the stone from 5 to 4 to 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1960', '878', '2', 'a = 4, b = 3, c = 2', '[0,0]', 'We cannot make any moves.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1961', '878', '3', 'a = 3, b = 5, c = 1', '[1,2]', 'Move the stone from 1 to 4; or move the stone from 1 to 2 to 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1962', '880', '1', 'nums1 = [1,4,2], nums2 = [1,2,4]', '2', 'We can draw 2 uncrossed lines as in the diagram.\nWe cannot draw 3 uncrossed lines, because the line from nums1[1] = 4 to nums2[2] = 4 will intersect the line from nums1[2]=2 to nums2[1]=2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1963', '880', '2', 'nums1 = [2,5,1,2,5], nums2 = [10,5,2,1,5,2]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1964', '880', '3', 'nums1 = [1,3,7,1,7,5], nums2 = [1,9,2,5,1]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1965', '881', '1', 'blocked = [[0,1],[1,0]], source = [0,0], target = [0,2]', 'false', 'The target square is inaccessible starting from the source square because we cannot move.\nWe cannot move north or east because those squares are blocked.\nWe cannot move south or west because we cannot go outside of the grid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1966', '881', '2', 'blocked = [], source = [0,0], target = [999999,999999]', 'true', 'Because there are no blocked cells, it is possible to reach the target square.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1967', '882', '1', 'points = [[1,1],[2,3],[3,2]]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1968', '882', '2', 'points = [[1,1],[2,2],[3,3]]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1969', '883', '1', 'root = [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]', '[30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1970', '883', '2', 'root = [0,null,1]', '[1,null,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1971', '689', '1', 's = \"ab#c\", t = \"ad#c\"', 'true', 'Both s and t become \"ac\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1972', '689', '2', 's = \"ab##\", t = \"c#d#\"', 'true', 'Both s and t become \"\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1973', '689', '3', 's = \"a#c\", t = \"b\"', 'false', 's becomes \"c\" while t becomes \"b\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1974', '691', '1', 'hand = [1,2,3,6,2,3,4,7,8], groupSize = 3', 'true', 'Alice\'s hand can be rearranged as [1,2,3],[2,3,4],[6,7,8]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1975', '691', '2', 'hand = [1,2,3,4,5], groupSize = 4', 'false', 'Alice\'s hand can not be rearranged into groups of 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1976', '703', '1', 'p = 2, q = 1', '2', 'The ray meets receptor 2 the first time it gets reflected back to the left wall.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1977', '703', '2', 'p = 3, q = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1978', '788', '1', 'words = [\"alex\",\"loves\",\"leetcode\"]', '\"alexlovesleetcode\"', 'All permutations of \"alex\",\"loves\",\"leetcode\" would also be accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1979', '788', '2', 'words = [\"catg\",\"ctaagt\",\"gcta\",\"ttca\",\"atgcatc\"]', '\"gctaagttcatgcatc\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1980', '791', '1', 'pushed = [1,2,3,4,5], popped = [4,5,3,2,1]', 'true', 'We might do the following sequence:\npush(1), push(2), push(3), push(4),\npop() -&gt; 4,\npush(5),\npop() -&gt; 5, pop() -&gt; 3, pop() -&gt; 2, pop() -&gt; 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1981', '791', '2', 'pushed = [1,2,3,4,5], popped = [4,3,5,1,2]', 'false', '1 cannot be popped before 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1982', '793', '1', 'tokens = [100], power = 50', '0', '<strong>:</strong> Playing the only token in the bag is impossible because you either have too little power or too little score.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1983', '793', '2', 'tokens = [100,200], power = 150', '1', 'Play the 0<sup>th</sup> token (100) face up, your power becomes 50 and score becomes 1.\nThere is no need to play the 1<sup>st</sup> token since you cannot play it face up to add to your score.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1984', '793', '3', 'tokens = [100,200,300,400], power = 200', '2', 'Play the tokens in this order to get a score of 2:\n1. Play the 0<sup>th</sup> token (100) face up, your power becomes 100 and score becomes 1.\n2. Play the 3<sup>rd</sup> token (400) face down, your power becomes 500 and score becomes 0.\n3. Play the 1<sup>st</sup> token (200) face up, your power becomes 300 and score becomes 1.\n4. Play the 2<sup>nd </sup>token (300) face up, your power becomes 0 and score becomes 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1985', '807', '1', 'nums = [6,0,8,2,1,5]', '4', 'The maximum width ramp is achieved at (i, j) = (1, 5): nums[1] = 0 and nums[5] = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1986', '807', '2', 'nums = [9,8,1,0,1,9,4,0,4,1]', '7', 'The maximum width ramp is achieved at (i, j) = (2, 9): nums[2] = 1 and nums[9] = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1987', '832', '1', 'root = [3,9,20,null,null,15,7]', '[[9],[3,15],[20],[7]]', 'Column -1: Only node 9 is in this column.\nColumn 0: Nodes 3 and 15 are in this column in that order from top to bottom.\nColumn 1: Only node 20 is in this column.\nColumn 2: Only node 7 is in this column.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1988', '832', '2', 'root = [1,2,3,4,5,6,7]', '[[4],[2],[1,5,6],[3],[7]]', 'Column -2: Only node 4 is in this column.\nColumn -1: Only node 2 is in this column.\nColumn 0: Nodes 1, 5, and 6 are in this column.\n          1 is at the top, so it comes first.\n          5 and 6 are at the same position (2, 0), so we order them by their value, 5 before 6.\nColumn 1: Only node 3 is in this column.\nColumn 2: Only node 7 is in this column.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1989', '832', '3', 'root = [1,2,3,4,6,5,7]', '[[4],[2],[1,5,6],[3],[7]]', 'This case is the exact same as example 2, but with nodes 5 and 6 swapped.\nNote that the solution remains the same since 5 and 6 are in the same location and should be ordered by their values.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1990', '837', '1', 'nums = [1,2,1,2,3], k = 2', '7', 'Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1991', '837', '2', 'nums = [1,2,1,3,4], k = 3', '3', 'Subarrays formed with exactly 3 different integers: [1,2,1,3], [2,1,3], [1,3,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1992', '851', '1', 'n = 4', '7', '7 = 4 * 3 / 2 + 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1993', '851', '2', 'n = 10', '12', '12 = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1994', '854', '1', 'n = 5', '2', '5 is \"101\" in binary, with complement \"010\" in binary, which is 2 in base-10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1995', '854', '2', 'n = 7', '0', '7 is \"111\" in binary, with complement \"000\" in binary, which is 0 in base-10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1996', '854', '3', 'n = 10', '5', '10 is \"1010\" in binary, with complement \"0101\" in binary, which is 5 in base-10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1997', '867', '1', 'root = [1,0,1,0,1,0,1]', '22', '(100) + (101) + (110) + (111) = 4 + 5 + 6 + 7 = 22');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1998', '867', '2', 'root = [0]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('1999', '871', '1', 'root = [8,3,10,1,6,null,14,null,null,4,7,13]', '7', 'We have various ancestor-node differences, some of which are given below :\n|8 - 3| = 5\n|3 - 7| = 4\n|8 - 1| = 7\n|10 - 13| = 3\nAmong all possible differences, the maximum value of 7 is obtained by |8 - 1| = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2000', '871', '2', 'root = [1,null,2,null,0,3]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2001', '879', '1', 'grid = [[1,1],[1,2]], row = 0, col = 0, color = 3', '[[3,3],[3,2]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2002', '879', '2', 'grid = [[1,2,2],[2,3,2]], row = 0, col = 1, color = 3', '[[1,3,3],[2,3,3]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2003', '879', '3', 'grid = [[1,1,1],[1,1,1],[1,1,1]], row = 1, col = 1, color = 2', '[[2,2,2],[2,1,2],[2,2,2]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2004', '884', '1', 'values = [1,2,3]', '6', 'The polygon is already triangulated, and the score of the only triangle is 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2005', '884', '2', 'values = [3,7,4,5]', '144', 'There are two triangulations, with possible scores: 3*7*5 + 4*5*7 = 245, or 3*4*5 + 3*4*7 = 144.\nThe minimum score is 144.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2006', '884', '3', 'values = [1,3,1,4,1,5]', '13', 'The minimum score triangulation has score 1*1*3 + 1*1*4 + 1*1*5 + 1*1*1 = 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2007', '885', '1', 'stones = [7,4,9]', '[1,2]', 'We can move 4 -&gt; 8 for one move to finish the game.\nOr, we can move 9 -&gt; 5, 4 -&gt; 6 for two moves to finish the game.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2008', '885', '2', 'stones = [6,5,4,3,10]', '[2,3]', 'We can move 3 -&gt; 8 then 10 -&gt; 7 to finish the game.\nOr, we can move 3 -&gt; 7, 4 -&gt; 8, 5 -&gt; 9 to finish the game.\nNotice we cannot move 10 -&gt; 2 to finish the game, because that would be an illegal move.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2009', '886', '1', 'instructions = \"GGLLGG\"', 'true', 'The robot is initially at (0, 0) facing the north direction.\n\"G\": move one step. Position: (0, 1). Direction: North.\n\"G\": move one step. Position: (0, 2). Direction: North.\n\"L\": turn 90 degrees anti-clockwise. Position: (0, 2). Direction: West.\n\"L\": turn 90 degrees anti-clockwise. Position: (0, 2). Direction: South.\n\"G\": move one step. Position: (0, 1). Direction: South.\n\"G\": move one step. Position: (0, 0). Direction: South.\nRepeating the instructions, the robot goes into the cycle: (0, 0) --&gt; (0, 1) --&gt; (0, 2) --&gt; (0, 1) --&gt; (0, 0).\nBased on that, we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2010', '886', '2', 'instructions = \"GG\"', 'false', 'The robot is initially at (0, 0) facing the north direction.\n\"G\": move one step. Position: (0, 1). Direction: North.\n\"G\": move one step. Position: (0, 2). Direction: North.\nRepeating the instructions, keeps advancing in the north direction and does not go into cycles.\nBased on that, we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2011', '886', '3', 'instructions = \"GL\"', 'true', 'The robot is initially at (0, 0) facing the north direction.\n\"G\": move one step. Position: (0, 1). Direction: North.\n\"L\": turn 90 degrees anti-clockwise. Position: (0, 1). Direction: West.\n\"G\": move one step. Position: (-1, 1). Direction: West.\n\"L\": turn 90 degrees anti-clockwise. Position: (-1, 1). Direction: South.\n\"G\": move one step. Position: (-1, 0). Direction: South.\n\"L\": turn 90 degrees anti-clockwise. Position: (-1, 0). Direction: East.\n\"G\": move one step. Position: (0, 0). Direction: East.\n\"L\": turn 90 degrees anti-clockwise. Position: (0, 0). Direction: North.\nRepeating the instructions, the robot goes into the cycle: (0, 0) --&gt; (0, 1) --&gt; (-1, 1) --&gt; (-1, 0) --&gt; (0, 0).\nBased on that, we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2012', '887', '1', 'n = 3, paths = [[1,2],[2,3],[3,1]]', '[1,2,3]', 'Gardens 1 and 2 have different types.\nGardens 2 and 3 have different types.\nGardens 3 and 1 have different types.\nHence, [1,2,3] is a valid answer. Other valid answers include [1,2,4], [1,4,2], and [3,2,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2013', '887', '2', 'n = 4, paths = [[1,2],[3,4]]', '[1,2,1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2014', '887', '3', 'n = 4, paths = [[1,2],[2,3],[3,4],[4,1],[1,3],[2,4]]', '[1,2,3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2015', '888', '1', 'arr = [1,15,7,9,2,5,10], k = 3', '84', 'arr becomes [15,15,15,9,10,10,10]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2016', '888', '2', 'arr = [1,4,1,5,7,3,6,1,9,9,3], k = 4', '83', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2017', '888', '3', 'arr = [1], k = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2018', '889', '1', 's = \"banana\"', '\"ana\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2019', '889', '2', 's = \"abcd\"', '\"\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2020', '890', '1', 'Customer table:\n+-------------+-------------+\n| customer_id | product_key |\n+-------------+-------------+\n| 1           | 5           |\n| 2           | 6           |\n| 3           | 5           |\n| 3           | 6           |\n| 1           | 6           |\n+-------------+-------------+\nProduct table:\n+-------------+\n| product_key |\n+-------------+\n| 5           |\n| 6           |\n+-------------+', '+-------------+\n| customer_id |\n+-------------+\n| 1           |\n| 3           |\n+-------------+', 'The customers who bought all the products (5 and 6) are customers with IDs 1 and 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2021', '891', '1', 'stones = [2,7,4,1,8,1]', '1', 'We combine 7 and 8 to get 1 so the array converts to [2,4,1,1,1] then,\nwe combine 2 and 4 to get 2 so the array converts to [2,1,1,1] then,\nwe combine 2 and 1 to get 1 so the array converts to [1,1,1] then,\nwe combine 1 and 1 to get 0 so the array converts to [1] then that\'s the value of the last stone.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2022', '891', '2', 'stones = [1]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2023', '892', '1', 's = \"abbaca\"', '\"ca\"', 'For example, in \"abbaca\" we could remove \"bb\" since the letters are adjacent and equal, and this is the only possible move.  The result of this move is that the string is \"aaca\", of which only \"aa\" is possible, so the final string is \"ca\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2024', '892', '2', 's = \"azxxzy\"', '\"ay\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2025', '893', '1', 'words = [\"a\",\"b\",\"ba\",\"bca\",\"bda\",\"bdca\"]', '4', ': One of the longest word chains is [\"a\",\"<u>b</u>a\",\"b<u>d</u>a\",\"bd<u>c</u>a\"].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2026', '893', '2', 'words = [\"xbc\",\"pcxbcf\",\"xb\",\"cxbc\",\"pcxbc\"]', '5', 'All the words can be put in a word chain [\"xb\", \"xb<u>c</u>\", \"<u>c</u>xbc\", \"<u>p</u>cxbc\", \"pcxbc<u>f</u>\"].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2027', '893', '3', 'words = [\"abcd\",\"dbqca\"]', '1', 'The trivial word chain [\"abcd\"] is one of the longest word chains.\n[\"abcd\",\"dbqca\"] is not a valid word chain because the ordering of the letters is changed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2028', '894', '1', 'stones = [2,7,4,1,8,1]', '1', 'We can combine 2 and 4 to get 2, so the array converts to [2,7,1,8,1] then,\nwe can combine 7 and 8 to get 1, so the array converts to [2,1,1,1] then,\nwe can combine 2 and 1 to get 1, so the array converts to [1,1,1] then,\nwe can combine 1 and 1 to get 0, so the array converts to [1], then that\'s the optimal value.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2029', '894', '2', 'stones = [31,26,33,21,40]', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2030', '895', '1', 'ActorDirector table:\n+-------------+-------------+-------------+\n| actor_id    | director_id | timestamp   |\n+-------------+-------------+-------------+\n| 1           | 1           | 0           |\n| 1           | 1           | 1           |\n| 1           | 1           | 2           |\n| 1           | 2           | 3           |\n| 1           | 2           | 4           |\n| 2           | 1           | 5           |\n| 2           | 1           | 6           |\n+-------------+-------------+-------------+', '+-------------+-------------+\n| actor_id    | director_id |\n+-------------+-------------+\n| 1           | 1           |\n+-------------+-------------+', 'The only pair is (1, 1) where they cooperated exactly 3 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2031', '896', '1', 'heights = [1,1,4,2,1,3]', '3', 'heights:  [1,1,<u>4</u>,2,<u>1</u>,<u>3</u>]\nexpected: [1,1,<u>1</u>,2,<u>3</u>,<u>4</u>]\nIndices 2, 4, and 5 do not match.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2032', '896', '2', 'heights = [5,1,2,3,4]', '5', 'heights:  [<u>5</u>,<u>1</u>,<u>2</u>,<u>3</u>,<u>4</u>]\nexpected: [<u>1</u>,<u>2</u>,<u>3</u>,<u>4</u>,<u>5</u>]\nAll indices do not match.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2033', '896', '3', 'heights = [1,2,3,4,5]', '0', 'heights:  [1,2,3,4,5]\nexpected: [1,2,3,4,5]\nAll indices match.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2034', '897', '1', 'customers = [1,0,1,2,1,1,7,5], grumpy = [0,1,0,1,0,1,0,1], minutes = 3', '16', 'The bookstore owner keeps themselves not grumpy for the last 3 minutes. \nThe maximum number of customers that can be satisfied = 1 + 1 + 1 + 1 + 7 + 5 = 16.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2035', '897', '2', 'customers = [1], grumpy = [0], minutes = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2036', '898', '1', 'arr = [3,2,1]', '[3,1,2]', 'Swapping 2 and 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2037', '898', '2', 'arr = [1,1,5]', '[1,1,5]', 'This is already the smallest permutation.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2038', '898', '3', 'arr = [1,9,4,6,7]', '[1,7,4,6,9]', 'Swapping 9 and 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2039', '899', '1', 'barcodes = [1,1,1,2,2,2]', '[2,1,2,1,2,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2040', '899', '2', 'barcodes = [1,1,1,1,2,2,3,3]', '[1,3,1,3,1,2,1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2041', '900', '1', 's1 = \"parker\", s2 = \"morris\", baseStr = \"parser\"', '\"makkek\"', 'Based on the equivalency information in s1 and s2, we can group their characters as [m,p], [a,o], [k,r,s], [e,i].\nThe characters in each group are equivalent and sorted in lexicographical order.\nSo the answer is \"makkek\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2042', '900', '2', 's1 = \"hello\", s2 = \"world\", baseStr = \"hold\"', '\"hdld\"', 'Based on the equivalency information in s1 and s2, we can group their characters as [h,w], [d,e,o], [l,r].\nSo only the second letter \'o\' in baseStr is changed to \'d\', the answer is \"hdld\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2043', '900', '3', 's1 = \"leetcode\", s2 = \"programs\", baseStr = \"sourcecode\"', '\"aauaaaaada\"', 'We group the equivalent characters in s1 and s2 as [a,o,e,r,s,c], [l,p], [g,t] and [d,m], thus all letters in baseStr except \'u\' and \'d\' are transformed to \'a\', the answer is \"aauaaaaada\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2044', '901', '1', 'Sales table:\n+---------+------------+------+----------+-------+\n| sale_id | product_id | year | quantity | price |\n+---------+------------+------+----------+-------+ \n| 1       | 100        | 2008 | 10       | 5000  |\n| 2       | 100        | 2009 | 12       | 5000  |\n| 7       | 200        | 2011 | 15       | 9000  |\n+---------+------------+------+----------+-------+\nProduct table:\n+------------+--------------+\n| product_id | product_name |\n+------------+--------------+\n| 100        | Nokia        |\n| 200        | Apple        |\n| 300        | Samsung      |\n+------------+--------------+', '+--------------+-------+-------+\n| product_name | year  | price |\n+--------------+-------+-------+\n| Nokia        | 2008  | 5000  |\n| Nokia        | 2009  | 5000  |\n| Apple        | 2011  | 9000  |\n+--------------+-------+-------+', 'From sale_id = 1, we can conclude that Nokia was sold for 5000 in the year 2008.\nFrom sale_id = 2, we can conclude that Nokia was sold for 5000 in the year 2009.\nFrom sale_id = 7, we can conclude that Apple was sold for 9000 in the year 2011.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2045', '902', '1', 'Sales table:\n+---------+------------+------+----------+-------+\n| sale_id | product_id | year | quantity | price |\n+---------+------------+------+----------+-------+ \n| 1       | 100        | 2008 | 10       | 5000  |\n| 2       | 100        | 2009 | 12       | 5000  |\n| 7       | 200        | 2011 | 15       | 9000  |\n+---------+------------+------+----------+-------+\nProduct table:\n+------------+--------------+\n| product_id | product_name |\n+------------+--------------+\n| 100        | Nokia        |\n| 200        | Apple        |\n| 300        | Samsung      |\n+------------+--------------+', '+------------+------------+----------+-------+\n| product_id | first_year | quantity | price |\n+------------+------------+----------+-------+ \n| 100        | 2008       | 10       | 5000  |\n| 200        | 2011       | 15       | 9000  |\n+------------+------------+----------+-------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2046', '903', '1', 'str1 = \"ABCABC\", str2 = \"ABC\"', '\"ABC\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2047', '903', '2', 'str1 = \"ABABAB\", str2 = \"ABAB\"', '\"AB\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2048', '903', '3', 'str1 = \"LEET\", str2 = \"CODE\"', '\"\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2049', '904', '1', 'matrix = [[0,1],[1,1]]', '1', 'After flipping no values, 1 row has all values equal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2050', '904', '2', 'matrix = [[0,1],[1,0]]', '2', 'After flipping values in the first column, both rows have equal values.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2051', '904', '3', 'matrix = [[0,0,0],[0,0,1],[1,1,0]]', '2', 'After flipping values in the first two columns, the last two rows have equal values.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2052', '905', '1', 'arr1 = [1,1,1,1,1], arr2 = [1,0,1]', '[1,0,0,0,0]', 'arr1 represents 11, arr2 represents 5, the output represents 16.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2053', '905', '2', 'arr1 = [0], arr2 = [0]', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2054', '905', '3', 'arr1 = [0], arr2 = [1]', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2055', '906', '1', 'matrix = [[0,1,0],[1,1,1],[0,1,0]], target = 0', '4', 'The four 1x1 submatrices that only contain 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2056', '906', '2', 'matrix = [[1,-1],[-1,1]], target = 0', '5', 'The two 1x2 submatrices, plus the two 2x1 submatrices, plus the 2x2 submatrix.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2057', '906', '3', 'matrix = [[904]], target = 0', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2058', '907', '1', 'Project table:\n+-------------+-------------+\n| project_id  | employee_id |\n+-------------+-------------+\n| 1           | 1           |\n| 1           | 2           |\n| 1           | 3           |\n| 2           | 1           |\n| 2           | 4           |\n+-------------+-------------+\nEmployee table:\n+-------------+--------+------------------+\n| employee_id | name   | experience_years |\n+-------------+--------+------------------+\n| 1           | Khaled | 3                |\n| 2           | Ali    | 2                |\n| 3           | John   | 1                |\n| 4           | Doe    | 2                |\n+-------------+--------+------------------+', '+-------------+---------------+\n| project_id  | average_years |\n+-------------+---------------+\n| 1           | 2.00          |\n| 2           | 2.50          |\n+-------------+---------------+', 'The average experience years for the first project is (3 + 2 + 1) / 3 = 2.00 and for the second project is (3 + 2) / 2 = 2.50');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2059', '908', '1', 'text = \"alice is a good girl she is a good student\", first = \"a\", second = \"good\"', '[\"girl\",\"student\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2060', '908', '2', 'text = \"we will we will rock you\", first = \"we\", second = \"will\"', '[\"we\",\"rock\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2061', '909', '1', 'tiles = \"AAB\"', '8', 'The possible sequences are \"A\", \"B\", \"AA\", \"AB\", \"BA\", \"AAB\", \"ABA\", \"BAA\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2062', '909', '2', 'tiles = \"AAABBC\"', '188', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2063', '909', '3', 'tiles = \"V\"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2064', '910', '1', 'root = [1,2,3,4,-99,-99,7,8,9,-99,-99,12,13,-99,14], limit = 1', '[1,2,3,4,null,null,7,8,9,null,14]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2065', '910', '2', 'root = [5,4,8,11,null,17,4,7,1,null,null,5,3], limit = 22', '[5,4,8,11,null,17,4,7,null,null,null,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2066', '910', '3', 'root = [1,2,-3,-5,null,4,null], limit = -1', '[1,null,-3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2067', '911', '1', 's = \"bcabc\"', '\"abc\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2068', '911', '2', 's = \"cbacdcbc\"', '\"acdb\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2069', '912', '1', 'Product table:\n+------------+--------------+------------+\n| product_id | product_name | unit_price |\n+------------+--------------+------------+\n| 1          | S8           | 1000       |\n| 2          | G4           | 800        |\n| 3          | iPhone       | 1400       |\n+------------+--------------+------------+\nSales table:\n+-----------+------------+----------+------------+----------+-------+\n| seller_id | product_id | buyer_id | sale_date  | quantity | price |\n+-----------+------------+----------+------------+----------+-------+\n| 1         | 1          | 1        | 2019-01-21 | 2        | 2000  |\n| 1         | 2          | 2        | 2019-02-17 | 1        | 800   |\n| 2         | 2          | 3        | 2019-06-02 | 1        | 800   |\n| 3         | 3          | 4        | 2019-05-13 | 2        | 2800  |\n+-----------+------------+----------+------------+----------+-------+', '+-------------+--------------+\n| product_id  | product_name |\n+-------------+--------------+\n| 1           | S8           |\n+-------------+--------------+', 'The product with id 1 was only sold in the spring of 2019.\nThe product with id 2 was sold in the spring of 2019 but was also sold after the spring of 2019.\nThe product with id 3 was sold after spring 2019.\nWe return only product 1 as it is the product that was only sold in the spring of 2019.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2070', '913', '1', 'arr = [1,0,2,3,0,4,5,0]', '[1,0,0,2,3,0,0,4]', 'After calling your function, the input array is modified to: [1,0,0,2,3,0,0,4]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2071', '913', '2', 'arr = [1,2,3]', '[1,2,3]', 'After calling your function, the input array is modified to: [1,2,3]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2072', '914', '1', 'values = [5,4,3,2,1], labels = [1,1,2,2,3], numWanted = 3, useLimit = 1', '9', 'The subset chosen is the first, third, and fifth items.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2073', '914', '2', 'values = [5,4,3,2,1], labels = [1,3,3,3,2], numWanted = 3, useLimit = 2', '12', 'The subset chosen is the first, second, and third items.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2074', '914', '3', 'values = [9,8,8,7,6], labels = [0,0,0,1,1], numWanted = 3, useLimit = 1', '16', 'The subset chosen is the first and fourth items.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2075', '915', '1', 'grid = [[0,1],[1,0]]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2076', '915', '2', 'grid = [[0,0,0],[1,1,0],[1,1,0]]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2077', '915', '3', 'grid = [[1,0,0],[1,1,0],[1,1,0]]', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2078', '916', '1', 'str1 = \"abac\", str2 = \"cab\"', '\"cabac\"', 'str1 = \"abac\" is a subsequence of \"cabac\" because we can delete the first \"c\".\nstr2 = \"cab\" is a subsequence of \"cabac\" because we can delete the last \"ac\".\nThe answer provided is the shortest such string that satisfies these properties.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2079', '916', '2', 'str1 = \"aaaaaaaa\", str2 = \"aaaaaaaa\"', '\"aaaaaaaa\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2080', '917', '1', 'count = [0,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]', '[1.00000,3.00000,2.37500,2.50000,3.00000]', 'The sample represented by count is [1,2,2,2,3,3,3,3].\nThe minimum and maximum are 1 and 3 respectively.\nThe mean is (1+2+2+2+3+3+3+3) / 8 = 19 / 8 = 2.375.\nSince the size of the sample is even, the median is the average of the two middle elements 2 and 3, which is 2.5.\nThe mode is 3 as it appears the most in the sample.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2081', '917', '2', 'count = [0,4,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]', '[1.00000,4.00000,2.18182,2.00000,1.00000]', 'The sample represented by count is [1,1,1,1,2,2,2,3,3,4,4].\nThe minimum and maximum are 1 and 4 respectively.\nThe mean is (1+1+1+1+2+2+2+3+3+4+4) / 11 = 24 / 11 = 2.18181818... (for display purposes, the output shows the rounded number 2.18182).\nSince the size of the sample is odd, the median is the middle element 2.\nThe mode is 1 as it appears the most in the sample.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2082', '918', '1', 'trips = [[2,1,5],[3,3,7]], capacity = 4', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2083', '918', '2', 'trips = [[2,1,5],[3,3,7]], capacity = 5', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2084', '919', '1', 'array = [1,2,3,4,5,3,1], target = 3', '2', '3 exists in the array, at index=2 and index=5. Return the minimum index, which is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2085', '919', '2', 'array = [0,1,2,4,2,1], target = 3', '-1', '3 does not exist in <code>the array,</code> so we return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2086', '920', '1', 'expression = \"{a,b}{c,{d,e}}\"', '[\"ac\",\"ad\",\"ae\",\"bc\",\"bd\",\"be\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2087', '920', '2', 'expression = \"{{a,z},a{b,c},{ab,z}}\"', '[\"a\",\"ab\",\"ac\",\"z\"]', 'Each distinct word is written only once in the final answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2088', '921', '1', 'candies = 7, num_people = 4', '[1,2,3,1]', 'On the first turn, ans[0] += 1, and the array is [1,0,0,0].\nOn the second turn, ans[1] += 2, and the array is [1,2,0,0].\nOn the third turn, ans[2] += 3, and the array is [1,2,3,0].\nOn the fourth turn, ans[3] += 1 (because there is only one candy left), and the final array is [1,2,3,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2089', '921', '2', 'candies = 10, num_people = 3', '[5,2,3]', 'On the first turn, ans[0] += 1, and the array is [1,0,0].\nOn the second turn, ans[1] += 2, and the array is [1,2,0].\nOn the third turn, ans[2] += 3, and the array is [1,2,3].\nOn the fourth turn, ans[0] += 4, and the final array is [5,2,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2090', '922', '1', 'label = 14', '[1,3,4,14]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2091', '922', '2', 'label = 26', '[1,2,6,10,26]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2092', '923', '1', 'books = [[1,1],[2,3],[2,3],[1,1],[1,1],[1,1],[1,2]], shelfWidth = 4', '6', 'The sum of the heights of the 3 shelves is 1 + 3 + 2 = 6.\nNotice that book number 2 does not have to be on the first shelf.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2093', '923', '2', 'books = [[1,3],[2,4],[3,2]], shelfWidth = 6', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2094', '924', '1', 'expression = \"&amp;(|(f))\"', 'false', 'First, evaluate |(f) --&gt; f. The expression is now \"&amp;(f)\".\nThen, evaluate &amp;(f) --&gt; f. The expression is now \"f\".\nFinally, return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2095', '924', '2', 'expression = \"|(f,f,f,t)\"', 'true', 'The evaluation of (false OR false OR false OR true) is true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2096', '924', '3', 'expression = \"!(&amp;(f,t))\"', 'true', 'First, evaluate &amp;(f,t) --&gt; (false AND true) --&gt; false --&gt; f. The expression is now \"!(f)\".\nThen, evaluate !(f) --&gt; NOT false --&gt; true. We return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2097', '925', '1', 'address = \"1.1.1.1\"', '\"1[.]1[.]1[.]1\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2098', '925', '2', 'address = \"255.100.50.0\"', '\"255[.]100[.]50[.]0\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2099', '926', '1', 'bookings = [[1,2,10],[2,3,20],[2,5,25]], n = 5', '[10,55,45,25,25]', 'Flight labels:        1   2   3   4   5\nBooking 1 reserved:  10  10\nBooking 2 reserved:      20  20\nBooking 3 reserved:      25  25  25  25\nTotal seats:         10  55  45  25  25\nHence, answer = [10,55,45,25,25]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2100', '926', '2', 'bookings = [[1,2,10],[2,2,15]], n = 2', '[10,25]', 'Flight labels:        1   2\nBooking 1 reserved:  10  10\nBooking 2 reserved:      15\nTotal seats:         10  25\nHence, answer = [10,25]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2101', '927', '1', 'root = [1,2,3,4,5,6,7], to_delete = [3,5]', '[[1,2,null,4],[6],[7]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2102', '927', '2', 'root = [1,2,4,null,3], to_delete = [3]', '[[1,2,4]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2103', '928', '1', 'seq = \"(()())\"', '[0,1,1,1,1,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2104', '928', '2', 'seq = \"()(())()\"', '[0,0,0,1,1,0,1,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2105', '929', '1', 'nums = [1,2,3]', '\"firstsecondthird\"', 'There are three threads being fired asynchronously. The input [1,2,3] means thread A calls first(), thread B calls second(), and thread C calls third(). \"firstsecondthird\" is the correct output.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2106', '929', '2', 'nums = [1,3,2]', '\"firstsecondthird\"', 'The input [1,3,2] means thread A calls first(), thread B calls third(), and thread C calls second(). \"firstsecondthird\" is the correct output.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2107', '930', '1', 'n = 1', '\"foobar\"', 'There are two threads being fired asynchronously. One of them calls foo(), while the other calls bar().\n\"foobar\" is being output 1 time.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2108', '930', '2', 'n = 2', '\"foobarfoobar\"', '\"foobar\" is being output 2 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2109', '931', '1', 'n = 2', '\"0102\"', 'There are three threads being fired asynchronously.\nOne of them calls zero(), the other calls even(), and the last one calls odd().\n\"0102\" is the correct output.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2110', '931', '2', 'n = 5', '\"0102030405\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2111', '932', '1', 'water = \"HOH\"', '\"HHO\"', '\"HOH\" and \"OHH\" are also valid answers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2112', '932', '2', 'water = \"OOHHHH\"', '\"HHOHHO\"', '\"HOHHHO\", \"OHHHHO\", \"HHOHOH\", \"HOHHOH\", \"OHHHOH\", \"HHOOHH\", \"HOHOHH\" and \"OHHOHH\" are also valid answers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2113', '933', '1', 'arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]', '[2,2,2,1,4,3,3,9,6,7,19]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2114', '933', '2', 'arr1 = [28,6,22,8,44,17], arr2 = [22,28,8,6]', '[22,28,8,6,17,44]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2115', '934', '1', 'root = [3,5,1,6,2,0,8,null,null,7,4]', '[2,7,4]', 'We return the node with value 2, colored in yellow in the diagram.\nThe nodes coloured in blue are the deepest leaf-nodes of the tree.\nNote that nodes 6, 0, and 8 are also leaf nodes, but the depth of them is 2, but the depth of nodes 7 and 4 is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2116', '934', '2', 'root = [1]', '[1]', 'The root is the deepest node in the tree, and it\'s the lca of itself.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2117', '934', '3', 'root = [0,1,3,null,2]', '[2]', 'The deepest leaf node in the tree is 2, the lca of one node is itself.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2118', '935', '1', 'hours = [9,9,6,0,6,6,9]', '3', 'The longest well-performing interval is [9,9,6].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2119', '935', '2', 'hours = [6,6,6]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2120', '936', '1', 'req_skills = [\"java\",\"nodejs\",\"reactjs\"], people = [[\"java\"],[\"nodejs\"],[\"nodejs\",\"reactjs\"]]', '[0,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2121', '936', '2', 'req_skills = [\"algorithms\",\"math\",\"java\",\"reactjs\",\"csharp\",\"aws\"], people = [[\"algorithms\",\"math\",\"java\"],[\"algorithms\",\"math\",\"reactjs\"],[\"java\",\"csharp\",\"aws\"],[\"reactjs\",\"csharp\"],[\"csharp\",\"math\"],[\"aws\",\"java\"]]', '[1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2122', '937', '1', 'dominoes = [[1,2],[2,1],[3,4],[5,6]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2123', '937', '2', 'dominoes = [[1,2],[1,2],[1,1],[1,2],[2,2]]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2124', '938', '1', 'n = 3, redEdges = [[0,1],[1,2]], blueEdges = []', '[0,1,-1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2125', '938', '2', 'n = 3, redEdges = [[0,1]], blueEdges = [[2,1]]', '[0,1,-1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2126', '940', '1', 'arr1 = [1,2,3,4], arr2 = [-1,4,5,6]', '13', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2127', '940', '2', 'arr1 = [1,-2,-5,0,10], arr2 = [0,-2,-1,-7,-4]', '20', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2128', '941', '1', 'n = 4', '4', 'T_3 = 0 + 1 + 1 = 2\nT_4 = 1 + 1 + 2 = 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2129', '941', '2', 'n = 25', '1389537', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2130', '942', '1', 'target = \"leet\"', '\"DDR!UURRR!!DDD!\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2131', '942', '2', 'target = \"code\"', '\"RR!DDRR!UUL!R!\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2132', '943', '1', 'grid = [[1,1,1],[1,0,1],[1,1,1]]', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2133', '943', '2', 'grid = [[1,1,0,0]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2134', '945', '1', 'Activity table:\n+---------+------------+---------------+---------------+\n| user_id | session_id | activity_date | activity_type |\n+---------+------------+---------------+---------------+\n| 1       | 1          | 2019-07-20    | open_session  |\n| 1       | 1          | 2019-07-20    | scroll_down   |\n| 1       | 1          | 2019-07-20    | end_session   |\n| 2       | 4          | 2019-07-20    | open_session  |\n| 2       | 4          | 2019-07-21    | send_message  |\n| 2       | 4          | 2019-07-21    | end_session   |\n| 3       | 2          | 2019-07-21    | open_session  |\n| 3       | 2          | 2019-07-21    | send_message  |\n| 3       | 2          | 2019-07-21    | end_session   |\n| 4       | 3          | 2019-06-25    | open_session  |\n| 4       | 3          | 2019-06-25    | end_session   |\n+---------+------------+---------------+---------------+', '+------------+--------------+ \n| day        | active_users |\n+------------+--------------+ \n| 2019-07-20 | 2            |\n| 2019-07-21 | 2            |\n+------------+--------------+', 'Note that we do not care about days with zero active users.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2135', '946', '1', 'text1 = \"abcde\", text2 = \"ace\"', '3', 'The longest common subsequence is \"ace\" and its length is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2136', '946', '2', 'text1 = \"abc\", text2 = \"abc\"', '3', 'The longest common subsequence is \"abc\" and its length is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2137', '946', '3', 'text1 = \"abc\", text2 = \"def\"', '0', 'There is no such common subsequence, so the result is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2138', '947', '1', 'nums = [1,2,3]', '2', 'We can decrease 2 to 0 or 3 to 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2139', '947', '2', 'nums = [9,6,1,6,2]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2140', '948', '1', 'root = [1,2,3,4,5,6,7,8,9,10,11], n = 11, x = 3', 'true', 'The second player can choose the node with value 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2141', '948', '2', 'root = [1,2,3], n = 3, x = 1', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2142', '949', '1', '[\"SnapshotArray\",\"set\",\"snap\",\"set\",\"get\"]\n[[3],[0,5],[],[0,6],[0,0]]', '[null,null,0,null,5]', 'SnapshotArray snapshotArr = new SnapshotArray(3); // set the length to be 3\nsnapshotArr.set(0,5);  // Set array[0] = 5\nsnapshotArr.snap();  // Take a snapshot, return snap_id = 0\nsnapshotArr.set(0,6);\nsnapshotArr.get(0,0);  // Get the value of array[0] with snap_id = 0, return 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2143', '950', '1', 'text = \"ghiabcdefhelloadamhelloabcdefghi\"', '7', 'We can split the string on \"(ghi)(abcdef)(hello)(adam)(hello)(abcdef)(ghi)\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2144', '950', '2', 'text = \"merchant\"', '1', 'We can split the string on \"(merchant)\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2145', '950', '3', 'text = \"antaprezatepzapreanta\"', '11', 'We can split the string on \"(a)(nt)(a)(pre)(za)(tep)(za)(pre)(a)(nt)(a)\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2146', '951', '1', 'Views table:\n+------------+-----------+-----------+------------+\n| article_id | author_id | viewer_id | view_date  |\n+------------+-----------+-----------+------------+\n| 1          | 3         | 5         | 2019-08-01 |\n| 1          | 3         | 6         | 2019-08-02 |\n| 2          | 7         | 7         | 2019-08-01 |\n| 2          | 7         | 6         | 2019-08-02 |\n| 4          | 7         | 1         | 2019-07-22 |\n| 3          | 4         | 4         | 2019-07-21 |\n| 3          | 4         | 4         | 2019-07-21 |\n+------------+-----------+-----------+------------+', '+------+\n| id   |\n+------+\n| 4    |\n| 7    |\n+------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2147', '952', '1', 'date = \"2019-01-09\"', '9', 'Given date is the 9th day of the year in 2019.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2148', '952', '2', 'date = \"2019-02-10\"', '41', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2149', '953', '1', 'n = 1, k = 6, target = 3', '1', 'You throw one die with 6 faces.\nThere is only one way to get a sum of 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2150', '953', '2', 'n = 2, k = 6, target = 7', '6', 'You throw two dice, each with 6 faces.\nThere are 6 ways to get a sum of 7: 1+6, 2+5, 3+4, 4+3, 5+2, 6+1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2151', '953', '3', 'n = 30, k = 30, target = 500', '222616187', 'The answer must be returned modulo 10<sup>9</sup> + 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2152', '954', '1', 'text = \"ababa\"', '3', 'We can swap the first \'b\' with the last \'a\', or the last \'b\' with the first \'a\'. Then, the longest repeated character substring is \"aaa\" with length 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2153', '954', '2', 'text = \"aaabaaa\"', '6', 'Swap \'b\' with the last \'a\' (or the first \'a\'), and we get longest repeated character substring \"aaaaaa\" with length 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2154', '954', '3', 'text = \"aaaaa\"', '5', 'No need to swap, longest repeated character substring is \"aaaaa\" with length is 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2155', '955', '1', '[\"MajorityChecker\", \"query\", \"query\", \"query\"]\n[[[1, 1, 2, 2, 1, 1]], [0, 5, 4], [0, 3, 3], [2, 3, 2]]', '[null, 1, -1, 2]', 'MajorityChecker majorityChecker = new MajorityChecker([1, 1, 2, 2, 1, 1]);\nmajorityChecker.query(0, 5, 4); // return 1\nmajorityChecker.query(0, 3, 3); // return -1\nmajorityChecker.query(2, 3, 2); // return 2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2156', '957', '1', 'words = [\"cat\",\"bt\",\"hat\",\"tree\"], chars = \"atach\"', '6', 'The strings that can be formed are \"cat\" and \"hat\" so the answer is 3 + 3 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2157', '957', '2', 'words = [\"hello\",\"world\",\"leetcode\"], chars = \"welldonehoneyr\"', '10', 'The strings that can be formed are \"hello\" and \"world\" so the answer is 5 + 5 = 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2158', '958', '1', 'root = [1,7,0,7,-8,null,null]', '2', 'Level 1 sum = 1.\nLevel 2 sum = 7 + 0 = 7.\nLevel 3 sum = 7 + -8 = -1.\nSo we return the level with the maximum sum which is level 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2159', '958', '2', 'root = [989,null,10250,98693,-89388,null,null,null,-32127]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2160', '959', '1', 'grid = [[1,0,1],[0,0,0],[1,0,1]]', '2', 'The cell (1, 1) is as far as possible from all the land with distance 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2161', '959', '2', 'grid = [[1,0,0],[0,0,0],[0,0,0]]', '4', 'The cell (2, 2) is as far as possible from all the land with distance 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2162', '960', '1', 's = \"abab\"', '\"bab\"', 'The substrings are [\"a\", \"ab\", \"aba\", \"abab\", \"b\", \"ba\", \"bab\"]. The lexicographically maximum substring is \"bab\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2163', '960', '2', 's = \"leetcode\"', '\"tcode\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2164', '961', '1', 'Products table:\n+------------+-----------+-------------+\n| product_id | new_price | change_date |\n+------------+-----------+-------------+\n| 1          | 20        | 2019-08-14  |\n| 2          | 50        | 2019-08-14  |\n| 1          | 30        | 2019-08-15  |\n| 1          | 35        | 2019-08-16  |\n| 2          | 65        | 2019-08-17  |\n| 3          | 20        | 2019-08-18  |\n+------------+-----------+-------------+', '+------------+-------+\n| product_id | price |\n+------------+-------+\n| 2          | 50    |\n| 1          | 35    |\n| 3          | 10    |\n+------------+-------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2165', '962', '1', 'transactions = [\"alice,20,800,mtv\",\"alice,50,100,beijing\"]', '[\"alice,20,800,mtv\",\"alice,50,100,beijing\"]', 'The first transaction is invalid because the second transaction occurs within a difference of 60 minutes, have the same name and is in a different city. Similarly the second one is invalid too.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2166', '962', '2', 'transactions = [\"alice,20,800,mtv\",\"alice,50,1200,mtv\"]', '[\"alice,50,1200,mtv\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2167', '962', '3', 'transactions = [\"alice,20,800,mtv\",\"bob,50,1200,mtv\"]', '[\"bob,50,1200,mtv\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2168', '963', '1', 'queries = [\"cbd\"], words = [\"zaaaz\"]', '[1]', 'On the first query we have f(\"cbd\") = 1, f(\"zaaaz\") = 3 so f(\"cbd\") &lt; f(\"zaaaz\").');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2169', '963', '2', 'queries = [\"bbb\",\"cc\"], words = [\"a\",\"aa\",\"aaa\",\"aaaa\"]', '[1,2]', 'On the first query only f(\"bbb\") &lt; f(\"aaaa\"). On the second query both f(\"aaa\") and f(\"aaaa\") are both &gt; f(\"cc\").');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2170', '964', '1', 'head = [1,2,-3,3,1]', '[3,1]\n<strong>Note:</strong> The answer [1,2,1] would also be accepted.', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2171', '964', '2', 'head = [1,2,3,-3,4]', '[1,2,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2172', '964', '3', 'head = [1,2,3,-3,-2]', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2173', '966', '1', 'Delivery table:\n+-------------+-------------+------------+-----------------------------+\n| delivery_id | customer_id | order_date | customer_pref_delivery_date |\n+-------------+-------------+------------+-----------------------------+\n| 1           | 1           | 2019-08-01 | 2019-08-02                  |\n| 2           | 2           | 2019-08-02 | 2019-08-02                  |\n| 3           | 1           | 2019-08-11 | 2019-08-12                  |\n| 4           | 3           | 2019-08-24 | 2019-08-24                  |\n| 5           | 3           | 2019-08-21 | 2019-08-22                  |\n| 6           | 2           | 2019-08-11 | 2019-08-13                  |\n| 7           | 4           | 2019-08-09 | 2019-08-09                  |\n+-------------+-------------+------------+-----------------------------+', '+----------------------+\n| immediate_percentage |\n+----------------------+\n| 50.00                |\n+----------------------+', 'The customer id 1 has a first order with delivery id 1 and it is scheduled.\nThe customer id 2 has a first order with delivery id 2 and it is immediate.\nThe customer id 3 has a first order with delivery id 5 and it is scheduled.\nThe customer id 4 has a first order with delivery id 7 and it is immediate.\nHence, half the customers have immediate first orders.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2174', '967', '1', 'n = 5', '12', 'For example [1,2,5,4,3] is a valid permutation, but [5,2,3,4,1] is not because the prime number 5 is at index 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2175', '967', '2', 'n = 100', '682289015', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2176', '968', '1', 's = \"abcda\", queries = [[3,3,0],[1,2,0],[0,3,1],[0,3,2],[0,4,1]]', '[true,false,false,true,true]', 'queries[0]: substring = \"d\", is palidrome.\nqueries[1]: substring = \"bc\", is not palidrome.\nqueries[2]: substring = \"abcd\", is not palidrome after replacing only 1 character.\nqueries[3]: substring = \"abcd\", could be changed to \"abba\" which is palidrome. Also this can be changed to \"baab\" first rearrange it \"bacd\" then replace \"cd\" with \"ab\".\nqueries[4]: substring = \"abcda\", could be changed to \"abcba\" which is palidrome.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2177', '968', '2', 's = \"lyb\", queries = [[0,1,0],[2,2,1]]', '[false,true]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2178', '969', '1', 'words = [\"aaaa\",\"asas\",\"able\",\"ability\",\"actt\",\"actor\",\"access\"], puzzles = [\"aboveyz\",\"abrodyz\",\"abslute\",\"absoryz\",\"actresz\",\"gaswxyz\"]', '[1,1,3,2,4,0]', '1 valid word for \"aboveyz\" : \"aaaa\" \n1 valid word for \"abrodyz\" : \"aaaa\"\n3 valid words for \"abslute\" : \"aaaa\", \"asas\", \"able\"\n2 valid words for \"absoryz\" : \"aaaa\", \"asas\"\n4 valid words for \"actresz\" : \"aaaa\", \"asas\", \"actt\", \"access\"\nThere are no valid words for \"gaswxyz\" cause none of the words in the list contains letter \'g\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2179', '969', '2', 'words = [\"apple\",\"pleas\",\"please\"], puzzles = [\"aelwxyz\",\"aelpxyz\",\"aelpsxy\",\"saelpxy\",\"xaelpsy\"]', '[0,1,3,2,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2180', '970', '1', 'Department table:\n+------+---------+-------+\n| id   | revenue | month |\n+------+---------+-------+\n| 1    | 8000    | Jan   |\n| 2    | 9000    | Jan   |\n| 3    | 10000   | Feb   |\n| 1    | 7000    | Feb   |\n| 1    | 6000    | Mar   |\n+------+---------+-------+', '+------+-------------+-------------+-------------+-----+-------------+\n| id   | Jan_Revenue | Feb_Revenue | Mar_Revenue | ... | Dec_Revenue |\n+------+-------------+-------------+-------------+-----+-------------+\n| 1    | 8000        | 7000        | 6000        | ... | null        |\n| 2    | 9000        | null        | null        | ... | null        |\n| 3    | null        | 10000       | null        | ... | null        |\n+------+-------------+-------------+-------------+-----+-------------+', 'The revenue from Apr to Dec is null.\nNote that the result table has 13 columns (1 for the department id + 12 for the months).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2181', '972', '1', 'day = 31, month = 8, year = 2019', '\"Saturday\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2182', '972', '2', 'day = 18, month = 7, year = 1999', '\"Sunday\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2183', '972', '3', 'day = 15, month = 8, year = 1993', '\"Sunday\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2184', '973', '1', 'arr = [1,-2,0,3]', '4', 'Because we can choose [1, -2, 0, 3] and drop -2, thus the subarray [1, 0, 3] becomes the maximum value.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2185', '973', '2', 'arr = [1,-2,-2,3]', '3', 'We just choose [3] and it\'s the maximum sum.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2186', '973', '3', 'arr = [-1,-1,-1,-1]', '-1', 'The final subarray needs to be non-empty. You can\'t choose [-1] and delete -1 from it, then get an empty subarray to make the sum equals to 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2187', '974', '1', 'arr1 = [1,5,3,6,7], arr2 = [1,3,2,4]', '1', 'Replace <code>5</code> with <code>2</code>, then <code>arr1 = [1, 2, 3, 6, 7]</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2188', '974', '2', 'arr1 = [1,5,3,6,7], arr2 = [4,3,1]', '2', 'Replace <code>5</code> with <code>3</code> and then replace <code>3</code> with <code>4</code>. <code>arr1 = [1, 3, 4, 6, 7]</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2189', '974', '3', 'arr1 = [1,5,3,6,7], arr2 = [1,6,3,3]', '-1', 'You can\'t make <code>arr1</code> strictly increasing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2190', '975', '1', 'text = \"nlaebolko\"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2191', '975', '2', 'text = \"loonbalxballpoon\"', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2192', '975', '3', 'text = \"leetcode\"', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2193', '976', '1', 's = \"(abcd)\"', '\"dcba\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2194', '976', '2', 's = \"(u(love)i)\"', '\"iloveu\"', 'The substring \"love\" is reversed first, then the whole string is reversed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2195', '976', '3', 's = \"(ed(et(oc))el)\"', '\"leetcode\"', 'First, we reverse the substring \"oc\", then \"etco\", and finally, the whole string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2196', '977', '1', 'arr = [1,2], k = 3', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2197', '977', '2', 'arr = [1,-2,1], k = 5', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2198', '977', '3', 'arr = [-1,-2], k = 7', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2199', '978', '1', 'n = 4, connections = [[0,1],[1,2],[2,0],[1,3]]', '[[1,3]]', '[[3,1]] is also accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2200', '978', '2', 'n = 2, connections = [[0,1]]', '[[0,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2201', '979', '1', 'Transactions table:\n+------+---------+----------+--------+------------+\n| id   | country | state    | amount | trans_date |\n+------+---------+----------+--------+------------+\n| 121  | US      | approved | 1000   | 2018-12-18 |\n| 122  | US      | declined | 2000   | 2018-12-19 |\n| 123  | US      | approved | 2000   | 2019-01-01 |\n| 124  | DE      | approved | 2000   | 2019-01-07 |\n+------+---------+----------+--------+------------+', '+----------+---------+-------------+----------------+--------------------+-----------------------+\n| month    | country | trans_count | approved_count | trans_total_amount | approved_total_amount |\n+----------+---------+-------------+----------------+--------------------+-----------------------+\n| 2018-12  | US      | 2           | 1              | 3000               | 1000                  |\n| 2019-01  | US      | 1           | 1              | 2000               | 2000                  |\n| 2019-01  | DE      | 1           | 1              | 2000               | 2000                  |\n+----------+---------+-------------+----------------+--------------------+-----------------------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2202', '980', '1', 'n = 15', '[1,2,\"fizz\",4,\"buzz\",\"fizz\",7,8,\"fizz\",\"buzz\",11,\"fizz\",13,14,\"fizzbuzz\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2203', '980', '2', 'n = 5', '[1,2,\"fizz\",4,\"buzz\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2204', '981', '1', 'arr = [4,2,1,3]', '[[1,2],[2,3],[3,4]]', 'The minimum absolute difference is 1. List all pairs with difference equal to 1 in ascending order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2205', '981', '2', 'arr = [1,3,6,10,15]', '[[1,3]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2206', '981', '3', 'arr = [3,8,-10,23,19,-4,-14,27]', '[[-14,-10],[19,23],[23,27]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2207', '982', '1', 'n = 3, a = 2, b = 3, c = 5', '4', 'The ugly numbers are 2, 3, 4, 5, 6, 8, 9, 10... The 3<sup>rd</sup> is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2208', '982', '2', 'n = 4, a = 2, b = 3, c = 4', '6', 'The ugly numbers are 2, 3, 4, 6, 8, 9, 10, 12... The 4<sup>th</sup> is 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2209', '982', '3', 'n = 5, a = 2, b = 11, c = 13', '10', 'The ugly numbers are 2, 4, 6, 8, 10, 11, 12, 13... The 5<sup>th</sup> is 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2210', '983', '1', 's = \"dcab\", pairs = [[0,3],[1,2]]', '\"bacd\"\n<strong>Explaination:</strong> \nSwap s[0] and s[3], s = \"bcad\"\nSwap s[1] and s[2], s = \"bacd\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2211', '983', '2', 's = \"dcab\", pairs = [[0,3],[1,2],[0,2]]', '\"abcd\"\n<strong>Explaination: </strong>\nSwap s[0] and s[3], s = \"bcad\"\nSwap s[0] and s[2], s = \"acbd\"\nSwap s[1] and s[2], s = \"abcd\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2212', '983', '3', 's = \"cba\", pairs = [[0,1],[1,2]]', '\"abc\"\n<strong>Explaination: </strong>\nSwap s[0] and s[1], s = \"bca\"\nSwap s[1] and s[2], s = \"bac\"\nSwap s[0] and s[1], s = \"abc\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2213', '984', '1', 'n = 8, m = 2, group = [-1,-1,1,0,0,1,0,-1], beforeItems = [[],[6],[5],[6],[3,6],[],[],[]]', '[6,3,4,1,5,2,0,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2214', '984', '2', 'n = 8, m = 2, group = [-1,-1,1,0,0,1,0,-1], beforeItems = [[],[6],[5],[6],[3],[],[4],[]]', '[]', 'This is the same as example 1 except that 4 needs to be before 6 in the sorted list.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2215', '985', '1', 'Queue table:\n+-----------+-------------+--------+------+\n| person_id | person_name | weight | turn |\n+-----------+-------------+--------+------+\n| 5         | Alice       | 250    | 1    |\n| 4         | Bob         | 175    | 5    |\n| 3         | Alex        | 350    | 2    |\n| 6         | John Cena   | 400    | 3    |\n| 1         | Winston     | 500    | 6    |\n| 2         | Marie       | 200    | 4    |\n+-----------+-------------+--------+------+', '+-------------+\n| person_name |\n+-------------+\n| John Cena   |\n+-------------+', 'The folowing table is ordered by the turn for simplicity.\n+------+----+-----------+--------+--------------+\n| Turn | ID | Name      | Weight | Total Weight |\n+------+----+-----------+--------+--------------+\n| 1    | 5  | Alice     | 250    | 250          |\n| 2    | 3  | Alex      | 350    | 600          |\n| 3    | 6  | John Cena | 400    | 1000         | (last person to board)\n| 4    | 2  | Marie     | 200    | 1200         | (cannot board)\n| 5    | 4  | Bob       | 175    | ___          |\n| 6    | 1  | Winston   | 500    | ___          |\n+------+----+-----------+--------+--------------+');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2216', '986', '1', '[\"Skiplist\", \"add\", \"add\", \"add\", \"search\", \"add\", \"search\", \"erase\", \"erase\", \"search\"]\n[[], [1], [2], [3], [0], [4], [1], [0], [1], [1]]', '[null, null, null, null, false, null, true, false, true, false]', 'Skiplist skiplist = new Skiplist();\nskiplist.add(1);\nskiplist.add(2);\nskiplist.add(3);\nskiplist.search(0); // return False\nskiplist.add(4);\nskiplist.search(1); // return True\nskiplist.erase(0);  // return False, 0 is not in skiplist.\nskiplist.erase(1);  // return True\nskiplist.search(1); // return False, 1 has already been erased.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2217', '987', '1', 'arr = [1,2,2,1,1,3]', 'true', 'The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2218', '987', '2', 'arr = [1,2]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2219', '987', '3', 'arr = [-3,0,1,-3,1,1,1,-3,10,0]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2220', '988', '1', 's = \"abcd\", t = \"bcdf\", maxCost = 3', '3', '\"abc\" of s can change to \"bcd\".\nThat costs 3, so the maximum length is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2221', '988', '2', 's = \"abcd\", t = \"cdef\", maxCost = 3', '1', 'Each character in s costs 2 to change to character in t,  so the maximum length is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2222', '988', '3', 's = \"abcd\", t = \"acde\", maxCost = 0', '1', 'You cannot make any change, so the maximum length is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2223', '989', '1', 's = \"abcd\", k = 2', '\"abcd\"', 'There\'s nothing to delete.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2224', '989', '2', 's = \"deeedbbcccbdaa\", k = 3', '\"aa\"\n<strong>', '</strong>First delete \"eee\" and \"ccc\", get \"ddbbbdaa\"\nThen delete \"bbb\", get \"dddaa\"\nFinally delete \"ddd\", get \"aa\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2225', '989', '3', 's = \"pbbcggttciiippooaais\", k = 2', '\"ps\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2226', '990', '1', 'grid = [[0,0,0,0,0,1],\n               [1,1,0,0,1,0],\n               [0,0,0,0,1,1],\n               [0,0,1,0,1,0],\n               [0,1,1,0,0,0],\n               [0,1,1,0,0,0]]', '11\n<strong>', '</strong>One possible solution is [right, right, rotate clockwise, right, down, down, down, down, rotate counterclockwise, right, down].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2227', '990', '2', 'grid = [[0,0,1,1,1,1],\n               [0,0,0,0,1,1],\n               [1,1,0,0,0,1],\n               [1,1,1,0,0,1],\n               [1,1,1,0,0,1],\n               [1,1,1,0,0,0]]', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2228', '991', '1', 'Queries table:\n+------------+-------------------+----------+--------+\n| query_name | result            | position | rating |\n+------------+-------------------+----------+--------+\n| Dog        | Golden Retriever  | 1        | 5      |\n| Dog        | German Shepherd   | 2        | 5      |\n| Dog        | Mule              | 200      | 1      |\n| Cat        | Shirazi           | 5        | 2      |\n| Cat        | Siamese           | 3        | 3      |\n| Cat        | Sphynx            | 7        | 4      |\n+------------+-------------------+----------+--------+', '+------------+---------+-----------------------+\n| query_name | quality | poor_query_percentage |\n+------------+---------+-----------------------+\n| Dog        | 2.50    | 33.33                 |\n| Cat        | 0.66    | 33.33                 |\n+------------+---------+-----------------------+', 'Dog queries quality is ((5 / 1) + (5 / 2) + (1 / 200)) / 3 = 2.50\nDog queries poor_ query_percentage is (1 / 3) * 100 = 33.33\n\nCat queries quality equals ((2 / 5) + (3 / 3) + (4 / 7)) / 3 = 0.66\nCat queries poor_ query_percentage is (1 / 3) * 100 = 33.33');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2229', '993', '1', 'arr = [1,2,3,4], difference = 1', '4', 'The longest arithmetic subsequence is [1,2,3,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2230', '993', '2', 'arr = [1,3,5,7], difference = 1', '1', 'The longest arithmetic subsequence is any single element.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2231', '993', '3', 'arr = [1,5,7,8,5,3,4,2,1], difference = -2', '4', 'The longest arithmetic subsequence is [7,5,3,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2232', '994', '1', 'grid = [[0,6,0],[5,8,7],[0,9,0]]', '24', '[[0,6,0],\n [5,8,7],\n [0,9,0]]\nPath to get the maximum gold, 9 -&gt; 8 -&gt; 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2233', '994', '2', 'grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]', '28', '[[1,0,7],\n [2,0,6],\n [3,4,5],\n [0,3,0],\n [9,0,20]]\nPath to get the maximum gold, 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2234', '995', '1', 'n = 1', '5', 'All possible strings are: \"a\", \"e\", \"i\" , \"o\" and \"u\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2235', '995', '2', 'n = 2', '10', 'All possible strings are: \"ae\", \"ea\", \"ei\", \"ia\", \"ie\", \"io\", \"iu\", \"oi\", \"ou\" and \"ua\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2236', '995', '3', 'n = 5', '68', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2237', '996', '1', 's = \"RLRRLLRLRL\"', '4', 's can be split into \"RL\", \"RRLL\", \"RL\", \"RL\", each substring contains same number of \'L\' and \'R\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2238', '996', '2', 's = \"RLRRRLLRLL\"', '2', 's can be split into \"RL\", \"RRRLLRLL\", each substring contains same number of \'L\' and \'R\'.\nNote that s cannot be split into \"RL\", \"RR\", \"RL\", \"LR\", \"LL\", because the 2<sup>nd</sup> and 5<sup>th</sup> substrings are not balanced.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2239', '996', '3', 's = \"LLLLRRRR\"', '1', 's can be split into \"LLLLRRRR\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2240', '997', '1', 'queens = [[0,1],[1,0],[4,0],[0,4],[3,3],[2,4]], king = [0,0]', '[[0,1],[1,0],[3,3]]', 'The diagram above shows the three queens that can directly attack the king and the three queens that cannot attack the king (i.e., marked with red dashes).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2241', '997', '2', 'queens = [[0,0],[1,1],[2,2],[3,4],[3,5],[4,4],[4,5]], king = [3,3]', '[[2,2],[3,4],[4,4]]', 'The diagram above shows the three queens that can directly attack the king and the three queens that cannot attack the king (i.e., marked with red dashes).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2242', '998', '1', 'n = 2, rollMax = [1,1,2,2,2,3]', '34', 'There will be 2 rolls of die, if there are no constraints on the die, there are 6 * 6 = 36 possible combinations. In this case, looking at rollMax array, the numbers 1 and 2 appear at most once consecutively, therefore sequences (1,1) and (2,2) cannot occur, so the final answer is 36-2 = 34.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2243', '998', '2', 'n = 2, rollMax = [1,1,1,1,1,1]', '30', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2244', '998', '3', 'n = 3, rollMax = [1,1,1,2,2,3]', '181', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2245', '999', '1', 'nums = [2,2,1,1,5,3,3,5]', '7', 'For the subarray [2,2,1,1,5,3,3] of length 7, if we remove nums[4] = 5, we will get [2,2,1,1,3,3], so that each number will appear exactly twice.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2246', '999', '2', 'nums = [1,1,1,2,2,2,3,3,3,4,4,4,5]', '13', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2247', '1000', '1', 'n = 1', '[[4,2,1],[4,1,1],[0,1,1],[2,2,1],[2,1,1],[2,0,3],[2,1,2],[2,2,2],[4,0,3],[4,1,2],[0,2,1],[4,2,2],[3,2,1],[3,1,1],[0,0,3],[0,1,2],[0,2,2],[1,2,1],[1,1,1],[3,0,3],[3,1,2],[3,2,2],[1,0,3],[1,1,2],[1,2,2]]', 'n is the number of times each philosopher will call the function.\nThe output array describes the calls you made to the functions controlling the forks and the eat function, its format is:\noutput[i] = [a, b, c] (three integers)\n- a is the id of a philosopher.\n- b specifies the fork: {1 : left, 2 : right}.\n- c specifies the operation: {1 : pick, 2 : put, 3 : eat}.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2248', '1001', '1', 'n = 1', '1.00000', 'The first person can only get the first seat.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2249', '1001', '2', 'n = 2', '0.50000', 'The second person has a probability of 0.5 to get the second seat (when first person gets the first seat).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2250', '1002', '1', 'coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2251', '1002', '2', 'coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2252', '1003', '1', 'folder = [\"/a\",\"/a/b\",\"/c/d\",\"/c/d/e\",\"/c/f\"]', '[\"/a\",\"/c/d\",\"/c/f\"]', 'Folders \"/a/b\" is a subfolder of \"/a\" and \"/c/d/e\" is inside of folder \"/c/d\" in our filesystem.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2253', '1003', '2', 'folder = [\"/a\",\"/a/b/c\",\"/a/b/d\"]', '[\"/a\"]', 'Folders \"/a/b/c\" and \"/a/b/d\" will be removed because they are subfolders of \"/a\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2254', '1003', '3', 'folder = [\"/a/b/c\",\"/a/b/ca\",\"/a/b/d\"]', '[\"/a/b/c\",\"/a/b/ca\",\"/a/b/d\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2255', '1004', '1', 's = \"QWER\"', '0', 's is already balanced.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2256', '1004', '2', 's = \"QQWE\"', '1', 'We need to replace a \'Q\' to \'R\', so that \"RQWE\" (or \"QRWE\") is balanced.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2257', '1004', '3', 's = \"QQQW\"', '2', 'We can replace the first \"QQ\" to \"ER\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2258', '1005', '1', 'startTime = [1,2,3,3], endTime = [3,4,5,6], profit = [50,10,40,70]', '120', 'The subset chosen is the first and fourth job. \nTime range [1-3]+[3-6] , we get profit of 120 = 50 + 70.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2259', '1005', '2', 'startTime = [1,2,3,4,6], endTime = [3,5,10,6,9], profit = [20,20,100,70,60]', '150', 'The subset chosen is the first, fourth and fifth job. \nProfit obtained 150 = 20 + 70 + 60.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2260', '1005', '3', 'startTime = [1,1,1], endTime = [2,3,4], profit = [5,6,4]', '6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2261', '1006', '1', 'function_id = 1, z = 5', '[[1,4],[2,3],[3,2],[4,1]]', 'The hidden formula for function_id = 1 is f(x, y) = x + y.\nThe following positive integer values of x and y make f(x, y) equal to 5:\nx=1, y=4 -&gt; f(1, 4) = 1 + 4 = 5.\nx=2, y=3 -&gt; f(2, 3) = 2 + 3 = 5.\nx=3, y=2 -&gt; f(3, 2) = 3 + 2 = 5.\nx=4, y=1 -&gt; f(4, 1) = 4 + 1 = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2262', '1006', '2', 'function_id = 2, z = 5', '[[1,5],[5,1]]', 'The hidden formula for function_id = 2 is f(x, y) = x * y.\nThe following positive integer values of x and y make f(x, y) equal to 5:\nx=1, y=5 -&gt; f(1, 5) = 1 * 5 = 5.\nx=5, y=1 -&gt; f(5, 1) = 5 * 1 = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2263', '1007', '1', 'n = 2, start = 3', '[3,2,0,1]', 'The binary representation of the permutation is (11,10,00,01). \nAll the adjacent element differ by one bit. Another valid permutation is [3,1,0,2]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2264', '1007', '2', 'n = 3, start = 2', '[2,6,7,5,4,0,1,3]', 'The binary representation of the permutation is (010,110,111,101,100,000,001,011).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2265', '1008', '1', 'arr = [\"un\",\"iq\",\"ue\"]', '4', 'All the valid concatenations are:\n- \"\"\n- \"un\"\n- \"iq\"\n- \"ue\"\n- \"uniq\" (\"un\" + \"iq\")\n- \"ique\" (\"iq\" + \"ue\")\nMaximum length is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2266', '1008', '2', 'arr = [\"cha\",\"r\",\"act\",\"ers\"]', '6', 'Possible longest valid concatenations are \"chaers\" (\"cha\" + \"ers\") and \"acters\" (\"act\" + \"ers\").');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2267', '1008', '3', 'arr = [\"abcdefghijklmnopqrstuvwxyz\"]', '26', 'The only string in arr has all 26 characters.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2268', '1009', '1', 'n = 2, m = 3', '3', '<code>3</code> squares are necessary to cover the rectangle.\n<code>2</code> (squares of <code>1x1</code>)\n<code>1</code> (square of <code>2x2</code>)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2269', '1009', '2', 'n = 5, m = 8', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2270', '1009', '3', 'n = 11, m = 13', '6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2271', '1010', '1', 's1 = \"xx\", s2 = \"yy\"', '1', 'Swap s1[0] and s2[1], s1 = \"yx\", s2 = \"yx\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2272', '1010', '2', 's1 = \"xy\", s2 = \"yx\"', '2', 'Swap s1[0] and s2[0], s1 = \"yy\", s2 = \"xx\".\nSwap s1[0] and s2[1], s1 = \"xy\", s2 = \"xy\".\nNote that you cannot swap s1[0] and s1[1] to make s1 equal to \"yx\", cause we can only swap chars in different strings.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2273', '1010', '3', 's1 = \"xx\", s2 = \"xy\"', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2274', '1011', '1', 'nums = [1,1,2,1,1], k = 3', '2', 'The only sub-arrays with 3 odd numbers are [1,1,2,1] and [1,2,1,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2275', '1011', '2', 'nums = [2,4,6], k = 1', '0', 'There is no odd numbers in the array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2276', '1011', '3', 'nums = [2,2,2,1,2,2,1,2,2,2], k = 2', '16', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2277', '1012', '1', 's = \"lee(t(c)o)de)\"', '\"lee(t(c)o)de\"', '\"lee(t(co)de)\" , \"lee(t(c)ode)\" would also be accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2278', '1012', '2', 's = \"a)b(c)d\"', '\"ab(c)d\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2279', '1012', '3', 's = \"))((\"', '\"\"', 'An empty string is also valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2280', '1013', '1', 'nums = [12,5,7,23]', 'true', 'Pick numbers 5 and 7.\n5*3 + 7*(-2) = 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2281', '1013', '2', 'nums = [29,6,10]', 'true', 'Pick numbers 29, 6 and 10.\n29*1 + 6*(-3) + 10*(-1) = 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2282', '1013', '3', 'nums = [3,6]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2283', '1014', '1', 'Prices table:\n+------------+------------+------------+--------+\n| product_id | start_date | end_date   | price  |\n+------------+------------+------------+--------+\n| 1          | 2019-02-17 | 2019-02-28 | 5      |\n| 1          | 2019-03-01 | 2019-03-22 | 20     |\n| 2          | 2019-02-01 | 2019-02-20 | 15     |\n| 2          | 2019-02-21 | 2019-03-31 | 30     |\n+------------+------------+------------+--------+\nUnitsSold table:\n+------------+---------------+-------+\n| product_id | purchase_date | units |\n+------------+---------------+-------+\n| 1          | 2019-02-25    | 100   |\n| 1          | 2019-03-01    | 15    |\n| 2          | 2019-02-10    | 200   |\n| 2          | 2019-03-22    | 30    |\n+------------+---------------+-------+', '+------------+---------------+\n| product_id | average_price |\n+------------+---------------+\n| 1          | 6.96          |\n| 2          | 16.96         |\n+------------+---------------+', 'Average selling price = Total Price of Product / Number of products sold.\nAverage selling price for product 1 = ((100 * 5) + (15 * 20)) / 115 = 6.96\nAverage selling price for product 2 = ((200 * 15) + (30 * 30)) / 230 = 16.96');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2284', '1015', '1', 'm = 2, n = 3, indices = [[0,1],[1,1]]', '6', 'Initial matrix = [[0,0,0],[0,0,0]].\nAfter applying first increment it becomes [[1,2,1],[0,1,0]].\nThe final matrix is [[1,3,1],[1,3,1]], which contains 6 odd numbers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2285', '1015', '2', 'm = 2, n = 2, indices = [[1,1],[0,0]]', '0', 'Final matrix = [[2,2],[2,2]]. There are no odd numbers in the final matrix.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2286', '1016', '1', 'upper = 2, lower = 1, colsum = [1,1,1]', '[[1,1,0],[0,0,1]]', '[[1,0,1],[0,1,0]], and [[0,1,1],[1,0,0]] are also correct answers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2287', '1016', '2', 'upper = 2, lower = 3, colsum = [2,2,1,1]', '[]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2288', '1016', '3', 'upper = 5, lower = 5, colsum = [2,1,2,0,1,0,1,2,0,1]', '[[1,1,1,0,1,0,0,1,0,0],[1,0,1,0,0,0,1,1,0,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2289', '1017', '1', 'grid = [[1,1,1,1,1,1,1,0],[1,0,0,0,0,1,1,0],[1,0,1,0,1,1,1,0],[1,0,0,0,0,1,0,1],[1,1,1,1,1,1,1,0]]', '2', 'Islands in gray are closed because they are completely surrounded by water (group of 1s).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2290', '1017', '2', 'grid = [[0,0,1,0,0],[0,1,0,1,0],[0,1,1,1,0]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2291', '1017', '3', 'grid = [[1,1,1,1,1,1,1],\n               [1,0,0,0,0,0,1],\n               [1,0,1,1,1,0,1],\n               [1,0,1,0,1,0,1],\n               [1,0,1,1,1,0,1],\n               [1,0,0,0,0,0,1],\n               [1,1,1,1,1,1,1]]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2292', '1018', '1', 'words = [\"dog\",\"cat\",\"dad\",\"good\"], letters = [\"a\",\"a\",\"c\",\"d\",\"d\",\"d\",\"g\",\"o\",\"o\"], score = [1,0,9,5,0,0,3,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0]', '23', 'Score  a=1, c=9, d=5, g=3, o=2\nGiven letters, we can form the words \"dad\" (5+1+5) and \"good\" (3+2+2+5) with a score of 23.\nWords \"dad\" and \"dog\" only get a score of 21.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2293', '1018', '2', 'words = [\"xxxz\",\"ax\",\"bx\",\"cx\"], letters = [\"z\",\"a\",\"b\",\"c\",\"x\",\"x\",\"x\"], score = [4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,10]', '27', 'Score  a=4, b=4, c=4, x=5, z=10\nGiven letters, we can form the words \"ax\" (4+5), \"bx\" (4+5) and \"cx\" (4+5) with a score of 27.\nWord \"xxxz\" only get a score of 25.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2294', '1018', '3', 'words = [\"leetcode\"], letters = [\"l\",\"e\",\"t\",\"c\",\"o\",\"d\"], score = [0,0,1,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0]', '0', 'Letter \"e\" can only be used once.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2295', '1019', '1', '<code>grid</code> = [[1,2,3],[4,5,6],[7,8,9]], k = 1', '[[9,1,2],[3,4,5],[6,7,8]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2296', '1019', '2', '<code>grid</code> = [[3,8,1,9],[19,7,2,5],[4,6,11,10],[12,0,21,13]], k = 4', '[[12,0,21,13],[3,8,1,9],[19,7,2,5],[4,6,11,10]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2297', '1019', '3', '<code>grid</code> = [[1,2,3],[4,5,6],[7,8,9]], k = 9', '[[1,2,3],[4,5,6],[7,8,9]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2298', '1020', '1', '[\"FindElements\",\"find\",\"find\"]\n[[[-1,null,-1]],[1],[2]]', '[null,false,true]', 'FindElements findElements = new FindElements([-1,null,-1]); \nfindElements.find(1); // return False \nfindElements.find(2); // return True');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2299', '1020', '2', '[\"FindElements\",\"find\",\"find\",\"find\"]\n[[[-1,-1,-1,-1,-1]],[1],[3],[5]]', '[null,true,true,false]', 'FindElements findElements = new FindElements([-1,-1,-1,-1,-1]);\nfindElements.find(1); // return True\nfindElements.find(3); // return True\nfindElements.find(5); // return False');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2300', '1020', '3', '[\"FindElements\",\"find\",\"find\",\"find\",\"find\"]\n[[[-1,null,-1,-1,null,-1]],[2],[3],[4],[5]]', '[null,true,false,false,true]', 'FindElements findElements = new FindElements([-1,null,-1,-1,null,-1]);\nfindElements.find(2); // return True\nfindElements.find(3); // return False\nfindElements.find(4); // return False\nfindElements.find(5); // return True');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2301', '1021', '1', 'nums = [3,6,5,1,8]', '18', 'Pick numbers 3, 6, 1 and 8 their sum is 18 (maximum sum divisible by 3).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2302', '1021', '2', 'nums = [4]', '0', 'Since 4 is not divisible by 3, do not pick any number.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2303', '1021', '3', 'nums = [1,2,3,4,4]', '12', 'Pick numbers 1, 3, 4 and 4 their sum is 12 (maximum sum divisible by 3).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2304', '1022', '1', 'grid = [[\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\"T\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\".\",\".\",\"B\",\".\",\"#\"],\n               [\"#\",\".\",\"#\",\"#\",\".\",\"#\"],\n               [\"#\",\".\",\".\",\".\",\"S\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"]]', '3', 'We return only the number of times the box is pushed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2305', '1022', '2', 'grid = [[\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\"T\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\".\",\".\",\"B\",\".\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\".\",\"#\"],\n               [\"#\",\".\",\".\",\".\",\"S\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"]]', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2306', '1022', '3', 'grid = [[\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"],\n               [\"#\",\"T\",\".\",\".\",\"#\",\"#\"],\n               [\"#\",\".\",\"#\",\"B\",\".\",\"#\"],\n               [\"#\",\".\",\".\",\".\",\".\",\"#\"],\n               [\"#\",\".\",\".\",\".\",\"S\",\"#\"],\n               [\"#\",\"#\",\"#\",\"#\",\"#\",\"#\"]]', '5', 'push the box down, left, left, up and up.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2307', '1023', '1', 'points = [[1,1],[3,4],[-1,0]]', '7', 'One optimal path is <strong>[1,1]</strong> -&gt; [2,2] -&gt; [3,3] -&gt; <strong>[3,4] </strong>-&gt; [2,3] -&gt; [1,2] -&gt; [0,1] -&gt; <strong>[-1,0]</strong>   \nTime from [1,1] to [3,4] = 3 seconds \nTime from [3,4] to [-1,0] = 4 seconds\nTotal time = 7 seconds');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2308', '1023', '2', 'points = [[3,2],[-2,2]]', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2309', '1024', '1', 'grid = [[1,0],[0,1]]', '0', 'No servers can communicate with others.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2310', '1024', '2', 'grid = [[1,0],[1,1]]', '3', 'All three servers can communicate with at least one other server.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2311', '1024', '3', 'grid = [[1,1,0,0],[0,0,1,0],[0,0,1,0],[0,0,0,1]]', '4', 'The two servers in the first row can communicate with each other. The two servers in the third column can communicate with each other. The server at right bottom corner can\'t communicate with any other server.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2312', '1025', '1', 'products = [\"mobile\",\"mouse\",\"moneypot\",\"monitor\",\"mousepad\"], searchWord = \"mouse\"', '[[\"mobile\",\"moneypot\",\"monitor\"],[\"mobile\",\"moneypot\",\"monitor\"],[\"mouse\",\"mousepad\"],[\"mouse\",\"mousepad\"],[\"mouse\",\"mousepad\"]]', 'products sorted lexicographically = [\"mobile\",\"moneypot\",\"monitor\",\"mouse\",\"mousepad\"].\nAfter typing m and mo all products match and we show user [\"mobile\",\"moneypot\",\"monitor\"].\nAfter typing mou, mous and mouse the system suggests [\"mouse\",\"mousepad\"].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2313', '1025', '2', 'products = [\"havana\"], searchWord = \"havana\"', '[[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"]]', 'The only word \"havana\" will be always suggested while typing the search word.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2314', '1026', '1', 'steps = 3, arrLen = 2', '4', 'There are 4 differents ways to stay at index 0 after 3 steps.\nRight, Left, Stay\nStay, Right, Left\nRight, Stay, Left\nStay, Stay, Stay');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2315', '1026', '2', 'steps = 2, arrLen = 4', '2', 'There are 2 differents ways to stay at index 0 after 2 steps\nRight, Left\nStay, Stay');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2316', '1026', '3', 'steps = 4, arrLen = 2', '8', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2317', '1027', '1', 'moves = [[0,0],[2,0],[1,1],[2,1],[2,2]]', '\"A\"', 'A wins, they always play first.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2318', '1027', '2', 'moves = [[0,0],[1,1],[0,1],[0,2],[1,0],[2,0]]', '\"B\"', 'B wins.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2319', '1027', '3', 'moves = [[0,0],[1,1],[2,0],[1,0],[1,2],[2,1],[0,1],[0,2],[2,2]]', '\"Draw\"', 'The game ends in a draw since there are no moves to make.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2320', '1028', '1', 'tomatoSlices = 16, cheeseSlices = 7', '[1,6]\n<strong>Explantion:</strong> To make one jumbo burger and 6 small burgers we need 4*1 + 2*6 = 16 tomato and 1 + 6 = 7 cheese.\nThere will be no remaining ingredients.', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2321', '1028', '2', 'tomatoSlices = 17, cheeseSlices = 4', '[]\n<strong>Explantion:</strong> There will be no way to use all ingredients to make small and jumbo burgers.', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2322', '1028', '3', 'tomatoSlices = 4, cheeseSlices = 17', '[]\n<strong>Explantion:</strong> Making 1 jumbo burger there will be 16 cheese remaining and making 2 small burgers there will be 15 cheese remaining.', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2323', '1029', '1', 'matrix =\n[\n  [0,1,1,1],\n  [1,1,1,1],\n  [0,1,1,1]\n]', '15', 'There are <strong>10</strong> squares of side 1.\nThere are <strong>4</strong> squares of side 2.\nThere is  <strong>1</strong> square of side 3.\nTotal number of squares = 10 + 4 + 1 = <strong>15</strong>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2324', '1029', '2', 'matrix = \n[\n  [1,0,1],\n  [1,1,0],\n  [1,1,0]\n]', '7', 'There are <b>6</b> squares of side 1.  \nThere is <strong>1</strong> square of side 2. \nTotal number of squares = 6 + 1 = <b>7</b>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2325', '1030', '1', 's = \"abc\", k = 2', '1', 'You can split the string into \"ab\" and \"c\", and change 1 character in \"ab\" to make it palindrome.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2326', '1030', '2', 's = \"aabbc\", k = 3', '0', 'You can split the string into \"aa\", \"bb\" and \"c\", all of them are palindrome.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2327', '1030', '3', 's = \"leetcode\", k = 8', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2328', '1031', '1', 'Students table:\n+------------+--------------+\n| student_id | student_name |\n+------------+--------------+\n| 1          | Alice        |\n| 2          | Bob          |\n| 13         | John         |\n| 6          | Alex         |\n+------------+--------------+\nSubjects table:\n+--------------+\n| subject_name |\n+--------------+\n| Math         |\n| Physics      |\n| Programming  |\n+--------------+\nExaminations table:\n+------------+--------------+\n| student_id | subject_name |\n+------------+--------------+\n| 1          | Math         |\n| 1          | Physics      |\n| 1          | Programming  |\n| 2          | Programming  |\n| 1          | Physics      |\n| 1          | Math         |\n| 13         | Math         |\n| 13         | Programming  |\n| 13         | Physics      |\n| 2          | Math         |\n| 1          | Math         |\n+------------+--------------+', '+------------+--------------+--------------+----------------+\n| student_id | student_name | subject_name | attended_exams |\n+------------+--------------+--------------+----------------+\n| 1          | Alice        | Math         | 3              |\n| 1          | Alice        | Physics      | 2              |\n| 1          | Alice        | Programming  | 1              |\n| 2          | Bob          | Math         | 1              |\n| 2          | Bob          | Physics      | 0              |\n| 2          | Bob          | Programming  | 1              |\n| 6          | Alex         | Math         | 0              |\n| 6          | Alex         | Physics      | 0              |\n| 6          | Alex         | Programming  | 0              |\n| 13         | John         | Math         | 1              |\n| 13         | John         | Physics      | 1              |\n| 13         | John         | Programming  | 1              |\n+------------+--------------+--------------+----------------+', 'The result table should contain all students and all subjects.\nAlice attended the Math exam 3 times, the Physics exam 2 times, and the Programming exam 1 time.\nBob attended the Math exam 1 time, the Programming exam 1 time, and did not attend the Physics exam.\nAlex did not attend any exams.\nJohn attended the Math exam 1 time, the Physics exam 1 time, and the Programming exam 1 time.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2329', '1032', '1', 'n = 234', '15', 'Product of digits = 2 * 3 * 4 = 24 \nSum of digits = 2 + 3 + 4 = 9 \nResult = 24 - 9 = 15');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2330', '1032', '2', 'n = 4421', '21\n<b>', '</b>Product of digits = 4 * 4 * 2 * 1 = 32 \nSum of digits = 4 + 4 + 2 + 1 = 11 \nResult = 32 - 11 = 21');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2331', '1033', '1', 'groupSizes = [3,3,3,3,3,1,3]', '[[5],[0,1,2],[3,4,6]]', 'The first group is [5]. The size is 1, and groupSizes[5] = 1.\nThe second group is [0,1,2]. The size is 3, and groupSizes[0] = groupSizes[1] = groupSizes[2] = 3.\nThe third group is [3,4,6]. The size is 3, and groupSizes[3] = groupSizes[4] = groupSizes[6] = 3.\nOther possible solutions are [[2,1,6],[5],[0,4,3]] and [[5],[0,6,2],[4,3,1]].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2332', '1033', '2', 'groupSizes = [2,1,3,3,3,2]', '[[1],[0,5],[2,3,4]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2333', '1034', '1', 'nums = [1,2,5,9], threshold = 6', '5', 'We can get a sum to 17 (1+2+5+9) if the divisor is 1. \nIf the divisor is 4 we can get a sum of 7 (1+1+2+3) and if the divisor is 5 the sum will be 5 (1+1+1+2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2334', '1034', '2', 'nums = [44,22,33,11,1], threshold = 5', '44', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2335', '1035', '1', 'mat = [[0,0],[0,1]]', '3', 'One possible solution is to flip (1, 0) then (0, 1) and finally (1, 1) as shown.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2336', '1035', '2', 'mat = [[0]]', '0', 'Given matrix is a zero matrix. We do not need to change it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2337', '1035', '3', 'mat = [[1,0,0],[1,0,0]]', '-1', 'Given matrix cannot be a zero matrix.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2338', '1037', '1', 'arr = [1,2,2,6,6,6,6,7,10]', '6', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2339', '1037', '2', 'arr = [1,1]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2340', '1038', '1', 'intervals = [[1,4],[3,6],[2,8]]', '2', 'Interval [3,6] is covered by [2,8], therefore it is removed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2341', '1038', '2', 'intervals = [[1,4],[2,3]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2342', '1039', '1', 'grid = [[1,2,3],[4,5,6],[7,8,9]]', '13', 'The possible falling paths are:\n[1,5,9], [1,5,7], [1,6,7], [1,6,8],\n[2,4,8], [2,4,9], [2,6,7], [2,6,8],\n[3,4,8], [3,4,9], [3,5,7], [3,5,9]\nThe falling path with the smallest sum is [1,5,7], so the answer is 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2343', '1039', '2', 'grid = [[7]]', '7', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2344', '1040', '1', 'head = [1,0,1]', '5', '(101) in base 2 = (5) in base 10');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2345', '1040', '2', 'head = [0]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2346', '1042', '1', 'mat = [[1,1,3,2,4,3,2],[1,1,3,2,4,3,2],[1,1,3,2,4,3,2]], threshold = 4', '2', 'The maximum side length of square with sum less than 4 is 2 as shown.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2347', '1042', '2', 'mat = [[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2]], threshold = 1', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2348', '1043', '1', 'grid = [[0,0,0],[1,1,0],[0,0,0],[0,1,1],[0,0,0]], k = 1', '6', 'The shortest path without eliminating any obstacle is 10.\nThe shortest path with one obstacle elimination at position (3,2) is 6. Such path is (0,0) -&gt; (0,1) -&gt; (0,2) -&gt; (1,2) -&gt; (2,2) -&gt; <strong>(3,2)</strong> -&gt; (4,2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2349', '1043', '2', 'grid = [[0,1,1],[1,1,1],[1,0,0]], k = 1', '-1', 'We need to eliminate at least two obstacles to find such a walk.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2350', '1044', '1', 'nums = [12,345,2,6,7896]', '2\n<strong>', '</strong>12 contains 2 digits (even number of digits). \n345 contains 3 digits (odd number of digits). \n2 contains 1 digit (odd number of digits). \n6 contains 1 digit (odd number of digits). \n7896 contains 4 digits (even number of digits). \nTherefore only 12 and 7896 contain an even number of digits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2351', '1044', '2', 'nums = [555,901,482,1771]', '1', 'Only 1771 contains an even number of digits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2352', '1045', '1', 'nums = [1,2,3,3,4,4,5,6], k = 4', 'true', 'Array can be divided into [1,2,3,4] and [3,4,5,6].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2353', '1045', '2', 'nums = [3,2,1,2,3,4,3,4,5,9,10,11], k = 3', 'true', 'Array can be divided into [1,2,3] , [2,3,4] , [3,4,5] and [9,10,11].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2354', '1045', '3', 'nums = [1,2,3,4], k = 3', 'false', 'Each array should be divided in subarrays of size 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2355', '1046', '1', 's = \"aababcaab\", maxLetters = 2, minSize = 3, maxSize = 4', '2', 'Substring \"aab\" has 2 occurrences in the original string.\nIt satisfies the conditions, 2 unique letters and size 3 (between minSize and maxSize).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2356', '1046', '2', 's = \"aaaa\", maxLetters = 1, minSize = 3, maxSize = 3', '2', 'Substring \"aaa\" occur 2 times in the string. It can overlap.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2357', '1047', '1', 'status = [1,0,1,0], candies = [7,5,4,100], keys = [[],[],[1],[]], containedBoxes = [[1,2],[3],[],[]], initialBoxes = [0]', '16', 'You will be initially given box 0. You will find 7 candies in it and boxes 1 and 2.\nBox 1 is closed and you do not have a key for it so you will open box 2. You will find 4 candies and a key to box 1 in box 2.\nIn box 1, you will find 5 candies and box 3 but you will not find a key to box 3 so box 3 will remain closed.\nTotal number of candies collected = 7 + 4 + 5 = 16 candy.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2358', '1047', '2', 'status = [1,0,0,0,0,0], candies = [1,1,1,1,1,1], keys = [[1,2,3,4,5],[],[],[],[],[]], containedBoxes = [[1,2,3,4,5],[],[],[],[],[]], initialBoxes = [0]', '6', 'You have initially box 0. Opening it you can find boxes 1,2,3,4 and 5 and their keys.\nThe total number of candies will be 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2359', '1048', '1', 'arr = [17,18,5,4,6,1]', '[18,6,6,6,1,-1]', '- index 0 --&gt; the greatest element to the right of index 0 is index 1 (18).\n- index 1 --&gt; the greatest element to the right of index 1 is index 4 (6).\n- index 2 --&gt; the greatest element to the right of index 2 is index 4 (6).\n- index 3 --&gt; the greatest element to the right of index 3 is index 4 (6).\n- index 4 --&gt; the greatest element to the right of index 4 is index 5 (1).\n- index 5 --&gt; there are no elements to the right of index 5, so we put -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2360', '1048', '2', 'arr = [400]', '[-1]', 'There are no elements to the right of index 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2361', '1049', '1', 'arr = [4,9,3], target = 10', '3', 'When using 3 arr converts to [3, 3, 3] which sums 9 and that\'s the optimal answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2362', '1049', '2', 'arr = [2,3,5], target = 10', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2363', '1049', '3', 'arr = [60864,25176,27249,21296,20204], target = 56803', '11361', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2364', '1050', '1', 'board = [\"E23\",\"2X2\",\"12S\"]', '[7,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2365', '1050', '2', 'board = [\"E12\",\"1X1\",\"21S\"]', '[4,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2366', '1050', '3', 'board = [\"E11\",\"XXX\",\"11S\"]', '[0,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2367', '1051', '1', 'root = [1,2,3,4,5,null,6,7,null,null,null,null,8]', '15', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2368', '1051', '2', 'root = [6,7,8,2,7,1,3,9,null,1,4,null,null,null,5]', '19', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2369', '1052', '1', 'n = 5', '[-7,-1,1,3,4]', 'These arrays also are accepted [-5,-1,1,2,3] , [-3,-1,2,-2,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2370', '1052', '2', 'n = 3', '[-1,0,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2371', '1052', '3', 'n = 1', '[0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2372', '1053', '1', 'root1 = [2,1,4], root2 = [1,0,3]', '[0,1,1,2,3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2373', '1053', '2', 'root1 = [1,null,8], root2 = [8,1]', '[1,1,8,8]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2374', '1054', '1', 'arr = [4,2,3,0,3,1,2], start = 5', 'true', 'All possible ways to reach at index 3 with value 0 are: \nindex 5 -&gt; index 4 -&gt; index 1 -&gt; index 3 \nindex 5 -&gt; index 6 -&gt; index 4 -&gt; index 1 -&gt; index 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2375', '1054', '2', 'arr = [4,2,3,0,3,1,2], start = 0', 'true \n<strong>', '</strong>One possible way to reach at index 3 with value 0 is: \nindex 0 -&gt; index 4 -&gt; index 1 -&gt; index 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2376', '1054', '3', 'arr = [3,0,2,1,2], start = 2', 'false', 'There is no way to reach at index 1 with value 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2377', '1055', '1', 'words = [\"SEND\",\"MORE\"], result = \"MONEY\"', 'true', 'Map \'S\'-&gt; 9, \'E\'-&gt;5, \'N\'-&gt;6, \'D\'-&gt;7, \'M\'-&gt;1, \'O\'-&gt;0, \'R\'-&gt;8, \'Y\'-&gt;\'2\'\nSuch that: \"SEND\" + \"MORE\" = \"MONEY\" ,  9567 + 1085 = 10652');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2378', '1055', '2', 'words = [\"SIX\",\"SEVEN\",\"SEVEN\"], result = \"TWENTY\"', 'true', 'Map \'S\'-&gt; 6, \'I\'-&gt;5, \'X\'-&gt;0, \'E\'-&gt;8, \'V\'-&gt;7, \'N\'-&gt;2, \'T\'-&gt;1, \'W\'-&gt;\'3\', \'Y\'-&gt;4\nSuch that: \"SIX\" + \"SEVEN\" + \"SEVEN\" = \"TWENTY\" ,  650 + 68782 + 68782 = 138214');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2379', '1055', '3', 'words = [\"LEET\",\"CODE\"], result = \"POINT\"', 'false', 'There is no possible mapping to satisfy the equation, so we return false.\nNote that two different characters cannot map to the same digit.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2380', '1056', '1', 's = \"10#11#12\"', '\"jkab\"', '\"j\" -&gt; \"10#\" , \"k\" -&gt; \"11#\" , \"a\" -&gt; \"1\" , \"b\" -&gt; \"2\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2381', '1056', '2', 's = \"1326#\"', '\"acz\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2382', '1057', '1', 'arr = [1,3,4,8], queries = [[0,1],[1,2],[0,3],[3,3]]', '[2,7,14,8]', 'The binary representation of the elements in the array are:\n1 = 0001 \n3 = 0011 \n4 = 0100 \n8 = 1000 \nThe XOR values for queries are:\n[0,1] = 1 xor 3 = 2 \n[1,2] = 3 xor 4 = 7 \n[0,3] = 1 xor 3 xor 4 xor 8 = 14 \n[3,3] = 8');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2383', '1057', '2', 'arr = [4,8,2,10], queries = [[2,3],[1,3],[0,0],[0,3]]', '[8,0,4,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2384', '1058', '1', 'watchedVideos = [[\"A\",\"B\"],[\"C\"],[\"B\",\"C\"],[\"D\"]], friends = [[1,2],[0,3],[0,3],[1,2]], id = 0, level = 1', '[\"B\",\"C\"]', 'You have id = 0 (green color in the figure) and your friends are (yellow color in the figure):\nPerson with id = 1 -&gt; watchedVideos = [\"C\"] \nPerson with id = 2 -&gt; watchedVideos = [\"B\",\"C\"] \nThe frequencies of watchedVideos by your friends are: \nB -&gt; 1 \nC -&gt; 2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2385', '1058', '2', 'watchedVideos = [[\"A\",\"B\"],[\"C\"],[\"B\",\"C\"],[\"D\"]], friends = [[1,2],[0,3],[0,3],[1,2]], id = 0, level = 2', '[\"D\"]', 'You have id = 0 (green color in the figure) and the only friend of your friends is the person with id = 3 (yellow color in the figure).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2386', '1059', '1', 's = \"zzazz\"', '0', 'The string \"zzazz\" is already palindrome we do not need any insertions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2387', '1059', '2', 's = \"mbadm\"', '2', 'String can be \"mbdadbm\" or \"mdbabdm\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2388', '1059', '3', 's = \"leetcode\"', '5', 'Inserting 5 characters the string becomes \"leetcodocteel\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2389', '1060', '1', 'nums = [1,2,3,4]', '[2,4,4,4]', 'The first pair [1,2] means we have freq = 1 and val = 2 so we generate the array [2].\nThe second pair [3,4] means we have freq = 3 and val = 4 so we generate [4,4,4].\nAt the end the concatenation [2] + [4,4,4] is [2,4,4,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2390', '1060', '2', 'nums = [1,1,2,3]', '[1,3,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2391', '1061', '1', 'mat = [[1,2,3],[4,5,6],[7,8,9]], k = 1', '[[12,21,16],[27,45,33],[24,39,28]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2392', '1061', '2', 'mat = [[1,2,3],[4,5,6],[7,8,9]], k = 2', '[[45,45,45],[45,45,45],[45,45,45]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2393', '1062', '1', 'root = [6,7,8,2,7,1,3,9,null,1,4,null,null,null,5]', '18', 'The red nodes are the nodes with even-value grandparent while the blue nodes are the even-value grandparents.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2394', '1062', '2', 'root = [1]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2395', '1063', '1', 'text = \"abcabcabc\"', '3\n<b>', '</b>The 3 substrings are \"abcabc\", \"bcabca\" and \"cabcab\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2396', '1063', '2', 'text = \"leetcodeleetcode\"', '2\n<b>', '</b>The 2 substrings are \"ee\" and \"leetcodeleetcode\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2397', '1064', '1', 'n = 2', '[1,1]', 'Let a = 1 and b = 1.\nBoth a and b are no-zero integers, and a + b = 2 = n.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2398', '1064', '2', 'n = 11', '[2,9]', 'Let a = 2 and b = 9.\nBoth a and b are no-zero integers, and a + b = 9 = n.\nNote that there are other valid answers as [8, 3] that can be accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2399', '1065', '1', 'a = 2, b = 6, c = 5', '3', 'After flips a = 1 , b = 4 , c = 5 such that (<code>a</code> OR <code>b</code> == <code>c</code>)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2400', '1065', '2', 'a = 4, b = 2, c = 7', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2401', '1065', '3', 'a = 1, b = 2, c = 3', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2402', '1066', '1', 'n = 4, connections = [[0,1],[0,2],[1,2]]', '1', 'Remove cable between computer 1 and 2 and place between computers 1 and 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2403', '1066', '2', 'n = 6, connections = [[0,1],[0,2],[0,3],[1,2],[1,3]]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2404', '1066', '3', 'n = 6, connections = [[0,1],[0,2],[0,3],[1,2]]', '-1', 'There are not enough cables.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2405', '1067', '1', 'word = \"CAKE\"', '3', 'Using two fingers, one optimal way to type \"CAKE\" is: \nFinger 1 on letter \'C\' -&gt; cost = 0 \nFinger 1 on letter \'A\' -&gt; cost = Distance from letter \'C\' to letter \'A\' = 2 \nFinger 2 on letter \'K\' -&gt; cost = 0 \nFinger 2 on letter \'E\' -&gt; cost = Distance from letter \'K\' to letter \'E\' = 1 \nTotal distance = 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2406', '1067', '2', 'word = \"HAPPY\"', '6', 'Using two fingers, one optimal way to type \"HAPPY\" is:\nFinger 1 on letter \'H\' -&gt; cost = 0\nFinger 1 on letter \'A\' -&gt; cost = Distance from letter \'H\' to letter \'A\' = 2\nFinger 2 on letter \'P\' -&gt; cost = 0\nFinger 2 on letter \'P\' -&gt; cost = Distance from letter \'P\' to letter \'P\' = 0\nFinger 1 on letter \'Y\' -&gt; cost = Distance from letter \'A\' to letter \'Y\' = 4\nTotal distance = 6');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2407', '1068', '1', 'Customer table:\n+-------------+--------------+--------------+-------------+\n| customer_id | name         | visited_on   | amount      |\n+-------------+--------------+--------------+-------------+\n| 1           | Jhon         | 2019-01-01   | 100         |\n| 2           | Daniel       | 2019-01-02   | 110         |\n| 3           | Jade         | 2019-01-03   | 120         |\n| 4           | Khaled       | 2019-01-04   | 130         |\n| 5           | Winston      | 2019-01-05   | 110         | \n| 6           | Elvis        | 2019-01-06   | 140         | \n| 7           | Anna         | 2019-01-07   | 150         |\n| 8           | Maria        | 2019-01-08   | 80          |\n| 9           | Jaze         | 2019-01-09   | 110         | \n| 1           | Jhon         | 2019-01-10   | 130         | \n| 3           | Jade         | 2019-01-10   | 150         | \n+-------------+--------------+--------------+-------------+', '+--------------+--------------+----------------+\n| visited_on   | amount       | average_amount |\n+--------------+--------------+----------------+\n| 2019-01-07   | 860          | 122.86         |\n| 2019-01-08   | 840          | 120            |\n| 2019-01-09   | 840          | 120            |\n| 2019-01-10   | 1000         | 142.86         |\n+--------------+--------------+----------------+', '1st moving average from 2019-01-01 to 2019-01-07 has an average_amount of (100 + 110 + 120 + 130 + 110 + 140 + 150)/7 = 122.86\n2nd moving average from 2019-01-02 to 2019-01-08 has an average_amount of (110 + 120 + 130 + 110 + 140 + 150 + 80)/7 = 120\n3rd moving average from 2019-01-03 to 2019-01-09 has an average_amount of (120 + 130 + 110 + 140 + 150 + 80 + 110)/7 = 120\n4th moving average from 2019-01-04 to 2019-01-10 has an average_amount of (130 + 110 + 140 + 150 + 80 + 110 + 130 + 150)/7 = 142.86');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2408', '1069', '1', 'num = 9669', '9969', 'Changing the first digit results in 6669.\nChanging the second digit results in 9969.\nChanging the third digit results in 9699.\nChanging the fourth digit results in 9666.\nThe maximum number is 9969.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2409', '1069', '2', 'num = 9996', '9999', 'Changing the last digit 6 to 9 results in the maximum number.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2410', '1069', '3', 'num = 9999', '9999', 'It is better not to apply any change.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2411', '1070', '1', 's = \"HOW ARE YOU\"', '[\"HAY\",\"ORO\",\"WEU\"]', 'Each word is printed vertically. \n \"HAY\"\n \"ORO\"\n \"WEU\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2412', '1070', '2', 's = \"TO BE OR NOT TO BE\"', '[\"TBONTB\",\"OEROOE\",\"   T\"]', 'Trailing spaces is not allowed. \n\"TBONTB\"\n\"OEROOE\"\n\"   T\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2413', '1070', '3', 's = \"CONTEST IS COMING\"', '[\"CIC\",\"OSO\",\"N M\",\"T I\",\"E N\",\"S G\",\"T\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2414', '1071', '1', 'root = [1,2,3,2,null,2,4], target = 2', '[1,null,3,null,4]', 'Leaf nodes in green with value (target = 2) are removed (Picture in left). \nAfter removing, new nodes become leaf nodes with value (target = 2) (Picture in center).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2415', '1071', '2', 'root = [1,3,3,3,2], target = 3', '[1,3,null,null,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2416', '1071', '3', 'root = [1,2,null,2,null,2], target = 2', '[1]', 'Leaf nodes in green with value (target = 2) are removed at each step.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2417', '1072', '1', 'n = 5, ranges = [3,4,1,1,0,0]', '1', 'The tap at point 0 can cover the interval [-3,3]\nThe tap at point 1 can cover the interval [-3,5]\nThe tap at point 2 can cover the interval [1,3]\nThe tap at point 3 can cover the interval [2,4]\nThe tap at point 4 can cover the interval [4,4]\nThe tap at point 5 can cover the interval [5,5]\nOpening Only the second tap will water the whole garden [0,5]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2418', '1072', '2', 'n = 3, ranges = [0,0,0,0]', '-1', 'Even if you activate all the four taps you cannot water the whole garden.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2419', '1073', '1', 'Products table:\n+-------------+-----------------------+------------------+\n| product_id  | product_name          | product_category |\n+-------------+-----------------------+------------------+\n| 1           | Leetcode Solutions    | Book             |\n| 2           | Jewels of Stringology | Book             |\n| 3           | HP                    | Laptop           |\n| 4           | Lenovo                | Laptop           |\n| 5           | Leetcode Kit          | T-shirt          |\n+-------------+-----------------------+------------------+\nOrders table:\n+--------------+--------------+----------+\n| product_id   | order_date   | unit     |\n+--------------+--------------+----------+\n| 1            | 2020-02-05   | 60       |\n| 1            | 2020-02-10   | 70       |\n| 2            | 2020-01-18   | 30       |\n| 2            | 2020-02-11   | 80       |\n| 3            | 2020-02-17   | 2        |\n| 3            | 2020-02-24   | 3        |\n| 4            | 2020-03-01   | 20       |\n| 4            | 2020-03-04   | 30       |\n| 4            | 2020-03-04   | 60       |\n| 5            | 2020-02-25   | 50       |\n| 5            | 2020-02-27   | 50       |\n| 5            | 2020-03-01   | 50       |\n+--------------+--------------+----------+', '+--------------------+---------+\n| product_name       | unit    |\n+--------------------+---------+\n| Leetcode Solutions | 130     |\n| Leetcode Kit       | 100     |\n+--------------------+---------+', 'Products with product_id = 1 is ordered in February a total of (60 + 70) = 130.\nProducts with product_id = 2 is ordered in February a total of 80.\nProducts with product_id = 3 is ordered in February a total of (2 + 3) = 5.\nProducts with product_id = 4 was not ordered in February 2020.\nProducts with product_id = 5 is ordered in February a total of (50 + 50) = 100.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2420', '1074', '1', 'palindrome = \"abccba\"', '\"aaccba\"', 'There are many ways to make \"abccba\" not a palindrome, such as \"<u>z</u>bccba\", \"a<u>a</u>ccba\", and \"ab<u>a</u>cba\".\nOf all the ways, \"aaccba\" is the lexicographically smallest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2421', '1074', '2', 'palindrome = \"a\"', '\"\"', 'There is no way to replace a single character to make \"a\" not a palindrome, so return an empty string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2422', '1075', '1', 'mat = [[3,3,1,1],[2,2,1,2],[1,1,1,2]]', '[[1,1,1,1],[1,2,2,2],[1,2,3,3]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2423', '1075', '2', 'mat = [[11,25,66,1,69,7],[23,55,17,45,15,52],[75,31,36,44,58,8],[22,27,33,25,68,4],[84,28,14,11,5,50]]', '[[5,17,4,1,52,7],[11,11,25,45,8,69],[14,23,25,44,58,15],[22,27,31,36,50,66],[84,28,75,33,55,68]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2424', '1076', '1', 'nums = [2,3,1,5,4]', '10\n<b>', '</b>By reversing the subarray [3,1,5] the array becomes [2,5,1,3,4] whose value is 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2425', '1076', '2', 'nums = [2,4,9,24,2,1,10]', '68', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2426', '1077', '1', 'arr = [40,10,20,30]', '[4,1,2,3]', ': 40 is the largest element. 10 is the smallest. 20 is the second smallest. 30 is the third smallest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2427', '1077', '2', 'arr = [100,100,100]', '[1,1,1]', ': Same elements share the same rank.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2428', '1077', '3', 'arr = [37,12,28,9,100,56,80,5,12]', '[5,3,4,2,8,6,7,1,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2429', '1078', '1', 's = \"ababa\"', '1', 's is already a palindrome, so its entirety can be removed in a single step.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2430', '1078', '2', 's = \"abb\"', '2', '\"<u>a</u>bb\" -&gt; \"<u>bb</u>\" -&gt; \"\". \nRemove palindromic subsequence \"a\" then \"bb\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2431', '1078', '3', 's = \"baabb\"', '2', '\"<u>baa</u>b<u>b</u>\" -&gt; \"<u>b</u>\" -&gt; \"\". \nRemove palindromic subsequence \"baab\" then \"b\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2432', '1079', '1', 'restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]], veganFriendly = 1, maxPrice = 50, maxDistance = 10', '[3,1,5] \n<strong>', '</strong>The restaurants are:\nRestaurant 1 [id=1, rating=4, veganFriendly=1, price=40, distance=10]\nRestaurant 2 [id=2, rating=8, veganFriendly=0, price=50, distance=5]\nRestaurant 3 [id=3, rating=8, veganFriendly=1, price=30, distance=4]\nRestaurant 4 [id=4, rating=10, veganFriendly=0, price=10, distance=3]\nRestaurant 5 [id=5, rating=1, veganFriendly=1, price=15, distance=1] \nAfter filter restaurants with veganFriendly = 1, maxPrice = 50 and maxDistance = 10 we have restaurant 3, restaurant 1 and restaurant 5 (ordered by rating from highest to lowest).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2433', '1079', '2', 'restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]], veganFriendly = 0, maxPrice = 50, maxDistance = 10', '[4,3,2,1,5]', 'The restaurants are the same as in example 1, but in this case the filter veganFriendly = 0, therefore all restaurants are considered.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2434', '1079', '3', 'restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]], veganFriendly = 0, maxPrice = 30, maxDistance = 3', '[4,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2435', '1080', '1', 'n = 4, edges = [[0,1,3],[1,2,1],[1,3,4],[2,3,1]], distanceThreshold = 4', '3', 'The figure above describes the graph. \nThe neighboring cities at a distanceThreshold = 4 for each city are:\nCity 0 -&gt; [City 1, City 2] \nCity 1 -&gt; [City 0, City 2, City 3] \nCity 2 -&gt; [City 0, City 1, City 3] \nCity 3 -&gt; [City 1, City 2] \nCities 0 and 3 have 2 neighboring cities at a distanceThreshold = 4, but we have to return city 3 since it has the greatest number.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2436', '1080', '2', 'n = 5, edges = [[0,1,2],[0,4,8],[1,2,3],[1,4,2],[2,3,1],[3,4,1]], distanceThreshold = 2', '0', 'The figure above describes the graph. \nThe neighboring cities at a distanceThreshold = 2 for each city are:\nCity 0 -&gt; [City 1] \nCity 1 -&gt; [City 0, City 4] \nCity 2 -&gt; [City 3, City 4] \nCity 3 -&gt; [City 2, City 4]\nCity 4 -&gt; [City 1, City 2, City 3] \nThe city 0 has 1 neighboring city at a distanceThreshold = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2437', '1081', '1', 'jobDifficulty = [6,5,4,3,2,1], d = 2', '7', 'First day you can finish the first 5 jobs, total difficulty = 6.\nSecond day you can finish the last job, total difficulty = 1.\nThe difficulty of the schedule = 6 + 1 = 7');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2438', '1081', '2', 'jobDifficulty = [9,9,9], d = 4', '-1', 'If you finish a job per day you will still have a free day. you cannot find a schedule for the given jobs.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2439', '1081', '3', 'jobDifficulty = [1,1,1], d = 3', '3', 'The schedule is one job per day. total difficulty will be 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2440', '1082', '1', 'mat = \n[[1,1,0,0,0],\n [1,1,1,1,0],\n [1,0,0,0,0],\n [1,1,0,0,0],\n [1,1,1,1,1]], \nk = 3', '[2,0,3]', 'The number of soldiers in each row is: \n- Row 0: 2 \n- Row 1: 4 \n- Row 2: 1 \n- Row 3: 2 \n- Row 4: 5 \nThe rows ordered from weakest to strongest are [2,0,3,1,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2441', '1082', '2', 'mat = \n[[1,0,0,0],\n [1,1,1,1],\n [1,0,0,0],\n [1,0,0,0]], \nk = 2', '[0,2]', 'The number of soldiers in each row is: \n- Row 0: 1 \n- Row 1: 4 \n- Row 2: 1 \n- Row 3: 1 \nThe rows ordered from weakest to strongest are [0,2,3,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2442', '1083', '1', 'arr = [3,3,3,3,5,5,5,2,2,7]', '2', 'Choosing {3,7} will make the new array [5,5,5,2,2] which has size 5 (i.e equal to half of the size of the old array).\nPossible sets of size 2 are {3,5},{3,2},{5,2}.\nChoosing set {2,7} is not possible as it will make the new array [3,3,3,3,5,5,5] which has a size greater than half of the size of the old array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2443', '1083', '2', 'arr = [7,7,7,7,7,7]', '1', 'The only possible set you can choose is {7}. This will make the new array empty.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2444', '1084', '1', 'root = [1,2,3,4,5,6]', '110', 'Remove the red edge and get 2 binary trees with sum 11 and 10. Their product is 110 (11*10)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2445', '1084', '2', 'root = [1,null,2,3,4,null,null,5,6]', '90', 'Remove the red edge and get 2 binary trees with sum 15 and 6.Their product is 90 (15*6)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2446', '1085', '1', 'arr = [6,4,14,6,8,13,9,7,10,6,12], d = 2', '4', 'You can start at index 10. You can jump 10 --&gt; 8 --&gt; 6 --&gt; 7 as shown.\nNote that if you start at index 6 you can only jump to index 7. You cannot jump to index 5 because 13 &gt; 9. You cannot jump to index 4 because index 5 is between index 4 and 6 and 13 &gt; 9.\nSimilarly You cannot jump from index 3 to index 2 or index 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2447', '1085', '2', 'arr = [3,3,3,3,3], d = 3', '1', 'You can start at any index. You always cannot jump to any index.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2448', '1085', '3', 'arr = [7,6,5,4,3,2,1], d = 1', '7', 'Start at index 0. You can visit all the indicies.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2449', '1086', '1', 'Movies table:\n+-------------+--------------+\n| movie_id    |  title       |\n+-------------+--------------+\n| 1           | Avengers     |\n| 2           | Frozen 2     |\n| 3           | Joker        |\n+-------------+--------------+\nUsers table:\n+-------------+--------------+\n| user_id     |  name        |\n+-------------+--------------+\n| 1           | Daniel       |\n| 2           | Monica       |\n| 3           | Maria        |\n| 4           | James        |\n+-------------+--------------+\nMovieRating table:\n+-------------+--------------+--------------+-------------+\n| movie_id    | user_id      | rating       | created_at  |\n+-------------+--------------+--------------+-------------+\n| 1           | 1            | 3            | 2020-01-12  |\n| 1           | 2            | 4            | 2020-02-11  |\n| 1           | 3            | 2            | 2020-02-12  |\n| 1           | 4            | 1            | 2020-01-01  |\n| 2           | 1            | 5            | 2020-02-17  | \n| 2           | 2            | 2            | 2020-02-01  | \n| 2           | 3            | 2            | 2020-03-01  |\n| 3           | 1            | 3            | 2020-02-22  | \n| 3           | 2            | 4            | 2020-02-25  | \n+-------------+--------------+--------------+-------------+', '+--------------+\n| results      |\n+--------------+\n| Daniel       |\n| Frozen 2     |\n+--------------+', 'Daniel and Monica have rated 3 movies (\"Avengers\", \"Frozen 2\" and \"Joker\") but Daniel is smaller lexicographically.\nFrozen 2 and Joker have a rating average of 3.5 in February but Frozen 2 is smaller lexicographically.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2450', '1087', '1', 'num = 14', '6', 'Step 1) 14 is even; divide by 2 and obtain 7. \nStep 2) 7 is odd; subtract 1 and obtain 6.\nStep 3) 6 is even; divide by 2 and obtain 3. \nStep 4) 3 is odd; subtract 1 and obtain 2. \nStep 5) 2 is even; divide by 2 and obtain 1. \nStep 6) 1 is odd; subtract 1 and obtain 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2451', '1087', '2', 'num = 8', '4', 'Step 1) 8 is even; divide by 2 and obtain 4. \nStep 2) 4 is even; divide by 2 and obtain 2. \nStep 3) 2 is even; divide by 2 and obtain 1. \nStep 4) 1 is odd; subtract 1 and obtain 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2452', '1087', '3', 'num = 123', '12', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2453', '1088', '1', 'arr = [2,2,2,2,5,5,5,8], k = 3, threshold = 4', '3', 'Sub-arrays [2,5,5],[5,5,5] and [5,5,8] have averages 4, 5 and 6 respectively. All other sub-arrays of size 3 have averages less than 4 (the threshold).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2454', '1088', '2', 'arr = [11,13,17,23,29,31,7,5,2,3], k = 3, threshold = 5', '6', 'The first 6 sub-arrays of size 3 have averages greater than 5. Note that averages are not integers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2455', '1089', '1', 'hour = 12, minutes = 30', '165', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2456', '1089', '2', 'hour = 3, minutes = 30', '75', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2457', '1089', '3', 'hour = 3, minutes = 15', '7.5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2458', '1090', '1', 'arr = [100,-23,-23,404,100,23,23,23,3,404]', '3', 'You need three jumps from index 0 --&gt; 4 --&gt; 3 --&gt; 9. Note that index 9 is the last index of the array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2459', '1090', '2', 'arr = [7]', '0', 'Start index is the last index. You do not need to jump.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2460', '1090', '3', 'arr = [7,6,9,6,9,6,9,7]', '1', 'You can jump directly from index 0 to index 7 which is last index of the array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2461', '1091', '1', 'arr = [10,2,5,3]', 'true', 'For i = 0 and j = 2, arr[i] == 10 == 2 * 5 == 2 * arr[j]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2462', '1091', '2', 'arr = [3,1,7,11]', 'false', 'There is no i and j that satisfy the conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2463', '1092', '1', 's = \"bab\", t = \"aba\"', '1', 'Replace the first \'a\' in t with b, t = \"bba\" which is anagram of s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2464', '1092', '2', 's = \"leetcode\", t = \"practice\"', '5', 'Replace \'p\', \'r\', \'a\', \'i\' and \'c\' from t with proper characters to make t anagram of s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2465', '1092', '3', 's = \"anagram\", t = \"mangaar\"', '0', '\"anagram\" and \"mangaar\" are anagrams.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2466', '1093', '1', '[\"TweetCounts\",\"recordTweet\",\"recordTweet\",\"recordTweet\",\"getTweetCountsPerFrequency\",\"getTweetCountsPerFrequency\",\"recordTweet\",\"getTweetCountsPerFrequency\"]\n[[],[\"tweet3\",0],[\"tweet3\",60],[\"tweet3\",10],[\"minute\",\"tweet3\",0,59],[\"minute\",\"tweet3\",0,60],[\"tweet3\",120],[\"hour\",\"tweet3\",0,210]]', '[null,null,null,null,[2],[2,1],null,[4]]', 'TweetCounts tweetCounts = new TweetCounts();\ntweetCounts.recordTweet(\"tweet3\", 0);                              // New tweet \"tweet3\" at time 0\ntweetCounts.recordTweet(\"tweet3\", 60);                             // New tweet \"tweet3\" at time 60\ntweetCounts.recordTweet(\"tweet3\", 10);                             // New tweet \"tweet3\" at time 10\ntweetCounts.getTweetCountsPerFrequency(\"minute\", \"tweet3\", 0, 59); // return [2]; chunk [0,59] had 2 tweets\ntweetCounts.getTweetCountsPerFrequency(\"minute\", \"tweet3\", 0, 60); // return [2,1]; chunk [0,59] had 2 tweets, chunk [60,60] had 1 tweet\ntweetCounts.recordTweet(\"tweet3\", 120);                            // New tweet \"tweet3\" at time 120\ntweetCounts.getTweetCountsPerFrequency(\"hour\", \"tweet3\", 0, 210);  // return [4]; chunk [0,210] had 4 tweets');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2467', '1094', '1', 'seats = [[\"#\",\".\",\"#\",\"#\",\".\",\"#\"],\n                [\".\",\"#\",\"#\",\"#\",\"#\",\".\"],\n                [\"#\",\".\",\"#\",\"#\",\".\",\"#\"]]', '4', 'Teacher can place 4 students in available seats so they don\'t cheat on the exam.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2468', '1094', '2', 'seats = [[\".\",\"#\"],\n                [\"#\",\"#\"],\n                [\"#\",\".\"],\n                [\"#\",\"#\"],\n                [\".\",\"#\"]]', '3', 'Place all students in available seats.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2469', '1094', '3', 'seats = [[\"#\",\".\",\"<strong>.</strong>\",\".\",\"#\"],\n                [\"<strong>.</strong>\",\"#\",\"<strong>.</strong>\",\"#\",\"<strong>.</strong>\"],\n                [\"<strong>.</strong>\",\".\",\"#\",\".\",\"<strong>.</strong>\"],\n                [\"<strong>.</strong>\",\"#\",\"<strong>.</strong>\",\"#\",\"<strong>.</strong>\"],\n                [\"#\",\".\",\"<strong>.</strong>\",\".\",\"#\"]]', '10', 'Place students in available seats in column 1, 3 and 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2470', '1095', '1', 'grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]', '8', 'There are 8 negatives number in the matrix.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2471', '1095', '2', 'grid = [[3,2],[1,0]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2472', '1096', '1', '[\"ProductOfNumbers\",\"add\",\"add\",\"add\",\"add\",\"add\",\"getProduct\",\"getProduct\",\"getProduct\",\"add\",\"getProduct\"]\n[[],[3],[0],[2],[5],[4],[2],[3],[4],[8],[2]]', '[null,null,null,null,null,null,20,40,0,null,32]', 'ProductOfNumbers productOfNumbers = new ProductOfNumbers();\nproductOfNumbers.add(3);        // [3]\nproductOfNumbers.add(0);        // [3,0]\nproductOfNumbers.add(2);        // [3,0,2]\nproductOfNumbers.add(5);        // [3,0,2,5]\nproductOfNumbers.add(4);        // [3,0,2,5,4]\nproductOfNumbers.getProduct(2); // return 20. The product of the last 2 numbers is 5 * 4 = 20\nproductOfNumbers.getProduct(3); // return 40. The product of the last 3 numbers is 2 * 5 * 4 = 40\nproductOfNumbers.getProduct(4); // return 0. The product of the last 4 numbers is 0 * 2 * 5 * 4 = 0\nproductOfNumbers.add(8);        // [3,0,2,5,4,8]\nproductOfNumbers.getProduct(2); // return 32. The product of the last 2 numbers is 4 * 8 = 32');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2473', '1097', '1', 'events = [[1,2],[2,3],[3,4]]', '3', 'You can attend all the three events.\nOne way to attend them all is as shown.\nAttend the first event on day 1.\nAttend the second event on day 2.\nAttend the third event on day 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2474', '1097', '2', 'events= [[1,2],[2,3],[3,4],[1,2]]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2475', '1098', '1', 'target = [9,3,5]', 'true', 'Start with arr = [1, 1, 1] \n[1, 1, 1], sum = 3 choose index 1\n[1, 3, 1], sum = 5 choose index 2\n[1, 3, 5], sum = 9 choose index 0\n[9, 3, 5] Done');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2476', '1098', '2', 'target = [1,1,1,2]', 'false', 'Impossible to create target array from [1,1,1,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2477', '1098', '3', 'target = [8,5]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2478', '1099', '1', 'arr = [0,1,2,3,4,5,6,7,8]', '[0,1,2,4,8,3,5,6,7]\n<strong>Explantion:</strong> [0] is the only integer with 0 bits.\n[1,2,4,8] all have 1 bit.\n[3,5,6] have 2 bits.\n[7] has 3 bits.\nThe sorted array by bits is [0,1,2,4,8,3,5,6,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2479', '1099', '2', 'arr = [1024,512,256,128,64,32,16,8,4,2,1]', '[1,2,4,8,16,32,64,128,256,512,1024]\n<strong>Explantion:</strong> All integers have 1 bit in the binary representation, you should just sort them in ascending order.', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2480', '1100', '1', '[\"Cashier\",\"getBill\",\"getBill\",\"getBill\",\"getBill\",\"getBill\",\"getBill\",\"getBill\"]\n[[3,50,[1,2,3,4,5,6,7],[100,200,300,400,300,200,100]],[[1,2],[1,2]],[[3,7],[10,10]],[[1,2,3,4,5,6,7],[1,1,1,1,1,1,1]],[[4],[10]],[[7,3],[10,10]],[[7,5,3,1,6,4,2],[10,10,10,9,9,9,7]],[[2,3,5],[5,3,2]]]', '[null,500.0,4000.0,800.0,4000.0,4000.0,7350.0,2500.0]', 'Cashier cashier = new Cashier(3,50,[1,2,3,4,5,6,7],[100,200,300,400,300,200,100]);\ncashier.getBill([1,2],[1,2]);                        // return 500.0. 1<sup>st</sup> customer, no discount.\n                                                     // bill = 1 * 100 + 2 * 200 = 500.\ncashier.getBill([3,7],[10,10]);                      // return 4000.0. 2<sup>nd</sup> customer, no discount.\n                                                     // bill = 10 * 300 + 10 * 100 = 4000.\ncashier.getBill([1,2,3,4,5,6,7],[1,1,1,1,1,1,1]);    // return 800.0. 3<sup>rd</sup> customer, 50% discount.\n                                                     // Original bill = 1600\n                                                     // Actual bill = 1600 * ((100 - 50) / 100) = 800.\ncashier.getBill([4],[10]);                           // return 4000.0. 4<sup>th</sup> customer, no discount.\ncashier.getBill([7,3],[10,10]);                      // return 4000.0. 5<sup>th</sup> customer, no discount.\ncashier.getBill([7,5,3,1,6,4,2],[10,10,10,9,9,9,7]); // return 7350.0. 6<sup>th</sup> customer, 50% discount.\n                                                     // Original bill = 14700, but with\n                                                     // Actual bill = 14700 * ((100 - 50) / 100) = 7350.\ncashier.getBill([2,3,5],[5,3,2]);                    // return 2500.0.  6<sup>th</sup> customer, no discount.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2481', '1101', '1', 's = \"abcabc\"', '10', 'The substrings containing at least one occurrence of the characters <em>a</em>, <em>b</em> and <em>c are \"</em>abc<em>\", \"</em>abca<em>\", \"</em>abcab<em>\", \"</em>abcabc<em>\", \"</em>bca<em>\", \"</em>bcab<em>\", \"</em>bcabc<em>\", \"</em>cab<em>\", \"</em>cabc<em>\" </em>and<em> \"</em>abc<em>\" </em>(<strong>again</strong>)<em>. </em>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2482', '1101', '2', 's = \"aaacb\"', '3', 'The substrings containing at least one occurrence of the characters <em>a</em>, <em>b</em> and <em>c are \"</em>aaacb<em>\", \"</em>aacb<em>\" </em>and<em> \"</em>acb<em>\".</em><em> </em>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2483', '1101', '3', 's = \"abc\"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2484', '1102', '1', 'n = 1', '1', 'Unique order (P1, D1), Delivery 1 always is after of Pickup 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2485', '1102', '2', 'n = 2', '6', 'All possible orders: \n(P1,P2,D1,D2), (P1,P2,D2,D1), (P1,D1,P2,D2), (P2,P1,D1,D2), (P2,P1,D2,D1) and (P2,D2,P1,D1).\nThis is an invalid order (P1,D2,P2,D1) because Pickup 2 is after of Delivery 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2486', '1102', '3', 'n = 3', '90', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2487', '1103', '1', 'date1 = \"2019-06-29\", date2 = \"2019-06-30\"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2488', '1103', '2', 'date1 = \"2020-01-15\", date2 = \"2019-12-31\"', '15', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2489', '1104', '1', 'n = 4, leftChild = [1,-1,3,-1], rightChild = [2,-1,-1,-1]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2490', '1104', '2', 'n = 4, leftChild = [1,-1,3,-1], rightChild = [2,3,-1,-1]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2491', '1104', '3', 'n = 2, leftChild = [1,0], rightChild = [-1,-1]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2492', '1105', '1', 'num = 8', '[3,3]', 'For num + 1 = 9, the closest divisors are 3 &amp; 3, for num + 2 = 10, the closest divisors are 2 &amp; 5, hence 3 &amp; 3 is chosen.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2493', '1105', '2', 'num = 123', '[5,25]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2494', '1105', '3', 'num = 999', '[40,25]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2495', '1106', '1', 'digits = [8,1,9]', '\"981\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2496', '1106', '2', 'digits = [8,6,7,1,0]', '\"8760\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2497', '1106', '3', 'digits = [1]', '\"\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2498', '1107', '1', 'nums = [8,1,2,2,3]', '[4,0,1,1,3]', 'For nums[0]=8 there exist four smaller numbers than it (1, 2, 2 and 3). \nFor nums[1]=1 does not exist any smaller number than it.\nFor nums[2]=2 there exist one smaller number than it (1). \nFor nums[3]=2 there exist one smaller number than it (1). \nFor nums[4]=3 there exist three smaller numbers than it (1, 2 and 2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2499', '1107', '2', 'nums = [6,5,4,8]', '[2,1,0,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2500', '1107', '3', 'nums = [7,7,7,7]', '[0,0,0,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2501', '1108', '1', 'votes = [\"ABC\",\"ACB\",\"ABC\",\"ACB\",\"ACB\"]', '\"ACB\"', 'Team A was ranked first place by 5 voters. No other team was voted as first place, so team A is the first team.\nTeam B was ranked second by 2 voters and ranked third by 3 voters.\nTeam C was ranked second by 3 voters and ranked third by 2 voters.\nAs most of the voters ranked C second, team C is the second team, and team B is the third.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2502', '1108', '2', 'votes = [\"WXYZ\",\"XYZW\"]', '\"XWYZ\"', 'X is the winner due to the tie-breaking rule. X has the same votes as W for the first position, but X has one vote in the second position, while W does not have any votes in the second position.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2503', '1108', '3', 'votes = [\"ZMNAGUEDSJYLBOPHRQICWFXTVK\"]', '\"ZMNAGUEDSJYLBOPHRQICWFXTVK\"', 'Only one voter, so their votes are used for the ranking.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2504', '1109', '1', 'head = [4,2,8], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]', 'true', 'Nodes in blue form a subpath in the binary Tree.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2505', '1109', '2', 'head = [1,4,2,6], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2506', '1109', '3', 'head = [1,4,2,6,8], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]', 'false', 'There is no path in the binary tree that contains all the elements of the linked list from <code>head</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2507', '1110', '1', 'grid = [[1,1,1,1],[2,2,2,2],[1,1,1,1],[2,2,2,2]]', '3', 'You will start at point (0, 0).\nThe path to (3, 3) is as follows. (0, 0) --&gt; (0, 1) --&gt; (0, 2) --&gt; (0, 3) change the arrow to down with cost = 1 --&gt; (1, 3) --&gt; (1, 2) --&gt; (1, 1) --&gt; (1, 0) change the arrow to down with cost = 1 --&gt; (2, 0) --&gt; (2, 1) --&gt; (2, 2) --&gt; (2, 3) change the arrow to down with cost = 1 --&gt; (3, 3)\nThe total cost = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2508', '1110', '2', 'grid = [[1,1,3],[3,2,2],[1,1,4]]', '0', 'You can follow the path from (0, 0) to (2, 2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2509', '1110', '3', 'grid = [[1,2],[4,3]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2510', '1111', '1', 's = \"aaaabbbbcccc\"', '\"abccbaabccba\"', 'After steps 1, 2 and 3 of the first iteration, result = \"abc\"\nAfter steps 4, 5 and 6 of the first iteration, result = \"abccba\"\nFirst iteration is done. Now s = \"aabbcc\" and we go back to step 1\nAfter steps 1, 2 and 3 of the second iteration, result = \"abccbaabc\"\nAfter steps 4, 5 and 6 of the second iteration, result = \"abccbaabccba\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2511', '1111', '2', 's = \"rat\"', '\"art\"', 'The word \"rat\" becomes \"art\" after re-ordering it with the mentioned algorithm.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2512', '1112', '1', 's = \"eleetminicoworoep\"', '13', 'The longest substring is \"leetminicowor\" which contains two each of the vowels: <strong>e</strong>, <strong>i</strong> and <strong>o</strong> and zero of the vowels: <strong>a</strong> and <strong>u</strong>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2513', '1112', '2', 's = \"leetcodeisgreat\"', '5', 'The longest substring is \"leetc\" which contains two e\'s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2514', '1112', '3', 's = \"bcbcbc\"', '6', 'In this case, the given string \"bcbcbc\" is the longest because all vowels: <strong>a</strong>, <strong>e</strong>, <strong>i</strong>, <strong>o</strong> and <strong>u</strong> appear zero times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2515', '1113', '1', 'root = [1,null,1,1,1,null,null,1,1,null,1,null,null,null,1]', '3', 'Longest ZigZag path in blue nodes (right -&gt; left -&gt; right).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2516', '1113', '2', 'root = [1,1,1,null,1,null,null,1,1,null,1]', '4', 'Longest ZigZag path in blue nodes (left -&gt; right -&gt; left -&gt; right).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2517', '1113', '3', 'root = [1]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2518', '1114', '1', 'root = [1,4,3,2,4,2,5,null,null,null,null,null,null,4,6]', '20', 'Maximum sum in a valid Binary search tree is obtained in root node with key equal to 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2519', '1114', '2', 'root = [4,3,null,1,2]', '2', 'Maximum sum in a valid Binary search tree is obtained in a single root node with key equal to 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2520', '1114', '3', 'root = [-4,-2,-5]', '0', 'All values are negatives. Return an empty BST.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2521', '1115', '1', 'n = 4', '\"pppz\"', '\"pppz\" is a valid string since the character \'p\' occurs three times and the character \'z\' occurs once. Note that there are many other valid strings such as \"ohhh\" and \"love\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2522', '1115', '2', 'n = 2', '\"xy\"', '\"xy\" is a valid string since the characters \'x\' and \'y\' occur once. Note that there are many other valid strings such as \"ag\" and \"ur\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2523', '1115', '3', 'n = 7', '\"holasss\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2524', '1117', '1', 'n = 1, headID = 0, manager = [-1], informTime = [0]', '0', 'The head of the company is the only employee in the company.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2525', '1117', '2', 'n = 6, headID = 2, manager = [2,2,-1,2,2,2], informTime = [0,0,1,0,0,0]', '1', 'The head of the company with id = 2 is the direct manager of all the employees in the company and needs 1 minute to inform them all.\nThe tree structure of the employees in the company is shown.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2526', '1118', '1', 'n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 2, target = 4', '0.16666666666666666', 'The figure above shows the given graph. The frog starts at vertex 1, jumping with 1/3 probability to the vertex 2 after <strong>second 1</strong> and then jumping with 1/2 probability to vertex 4 after <strong>second 2</strong>. Thus the probability for the frog is on the vertex 4 after 2 seconds is 1/3 * 1/2 = 1/6 = 0.16666666666666666.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2527', '1118', '2', 'n = 7, edges = [[1,2],[1,3],[1,7],[2,4],[2,6],[3,5]], t = 1, target = 7', '0.3333333333333333', 'The figure above shows the given graph. The frog starts at vertex 1, jumping with 1/3 = 0.3333333333333333 probability to the vertex 7 after <strong>second 1</strong>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2528', '1119', '1', 'Employees table:\n+----+----------+\n| id | name     |\n+----+----------+\n| 1  | Alice    |\n| 7  | Bob      |\n| 11 | Meir     |\n| 90 | Winston  |\n| 3  | Jonathan |\n+----+----------+\nEmployeeUNI table:\n+----+-----------+\n| id | unique_id |\n+----+-----------+\n| 3  | 1         |\n| 11 | 2         |\n| 90 | 3         |\n+----+-----------+', '+-----------+----------+\n| unique_id | name     |\n+-----------+----------+\n| null      | Alice    |\n| null      | Bob      |\n| 2         | Meir     |\n| 3         | Winston  |\n| 1         | Jonathan |\n+-----------+----------+', 'Alice and Bob do not have a unique ID, We will show null instead.\nThe unique ID of Meir is 2.\nThe unique ID of Winston is 3.\nThe unique ID of Jonathan is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2529', '1120', '1', 'tree = [7,4,3,null,null,6,19], target = 3', '3', 'In all examples the original and cloned trees are shown. The target node is a green node from the original tree. The answer is the yellow node from the cloned tree.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2530', '1120', '2', 'tree = [7], target =  7', '7', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2531', '1120', '3', 'tree = [8,null,6,null,5,null,4,null,3,null,2,null,1], target = 4', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2532', '1121', '1', 'matrix = [[3,7,8],[9,11,13],[15,16,17]]', '[15]', '15 is the only lucky number since it is the minimum in its row and the maximum in its column.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2533', '1121', '2', 'matrix = [[1,10,4,2],[9,3,8,7],[15,16,17,12]]', '[12]', '12 is the only lucky number since it is the minimum in its row and the maximum in its column.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2534', '1121', '3', 'matrix = [[7,8],[1,2]]', '[7]', '7 is the only lucky number since it is the minimum in its row and the maximum in its column.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2535', '1123', '1', 'root = [1,null,2,null,3,null,4,null,null]', '[2,1,3,null,null,null,4]', 'This is not the only correct answer, [3,1,4,null,2] is also correct.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2536', '1123', '2', 'root = [2,1,3]', '[2,1,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2537', '1124', '1', 'n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 2', '60', 'We have the maximum performance of the team by selecting engineer 2 (with speed=10 and efficiency=4) and engineer 5 (with speed=5 and efficiency=7). That is, performance = (10 + 5) * min(4, 7) = 60.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2538', '1124', '2', 'n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 3', '68\n<strong>', '</strong>This is the same example as the first but k = 3. We can select engineer 1, engineer 2 and engineer 5 to get the maximum performance of the team. That is, performance = (2 + 10 + 5) * min(5, 4, 7) = 68.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2539', '1124', '3', 'n = 6, speed = [2,10,3,1,5,8], efficiency = [5,4,3,9,7,2], k = 4', '72', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2540', '1125', '1', 'arr1 = [4,5,8], arr2 = [10,9,1,8], d = 2', '2', 'For arr1[0]=4 we have: \n|4-10|=6 &gt; d=2 \n|4-9|=5 &gt; d=2 \n|4-1|=3 &gt; d=2 \n|4-8|=4 &gt; d=2 \nFor arr1[1]=5 we have: \n|5-10|=5 &gt; d=2 \n|5-9|=4 &gt; d=2 \n|5-1|=4 &gt; d=2 \n|5-8|=3 &gt; d=2\nFor arr1[2]=8 we have:\n<strong>|8-10|=2 &lt;= d=2</strong>\n<strong>|8-9|=1 &lt;= d=2</strong>\n|8-1|=7 &gt; d=2\n<strong>|8-8|=0 &lt;= d=2</strong>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2541', '1125', '2', 'arr1 = [1,4,2,3], arr2 = [-4,-3,6,10,20,30], d = 3', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2542', '1125', '3', 'arr1 = [2,1,100,3], arr2 = [-5,-2,10,-3,7], d = 6', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2543', '1126', '1', 'n = 3, reservedSeats = [[1,2],[1,3],[1,8],[2,6],[3,1],[3,10]]', '4', 'The figure above shows the optimal allocation for four groups, where seats mark with blue are already reserved and contiguous seats mark with orange are for one group.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2544', '1126', '2', 'n = 2, reservedSeats = [[2,1],[1,8],[2,6]]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2545', '1126', '3', 'n = 4, reservedSeats = [[4,3],[1,4],[4,6],[1,7]]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2546', '1127', '1', 'lo = 12, hi = 15, k = 2', '13', 'The power of 12 is 9 (12 --&gt; 6 --&gt; 3 --&gt; 10 --&gt; 5 --&gt; 16 --&gt; 8 --&gt; 4 --&gt; 2 --&gt; 1)\nThe power of 13 is 9\nThe power of 14 is 17\nThe power of 15 is 17\nThe interval sorted by the power value [12,13,14,15]. For k = 2 answer is the second element which is 13.\nNotice that 12 and 13 have the same power value and we sorted them in ascending order. Same for 14 and 15.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2547', '1127', '2', 'lo = 7, hi = 11, k = 4', '7', 'The power array corresponding to the interval [7, 8, 9, 10, 11] is [16, 3, 19, 6, 14].\nThe interval sorted by power is [8, 10, 11, 7, 9].\nThe fourth number in the sorted array is 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2548', '1128', '1', 'slices = [1,2,3,4,5,6]', '10', 'Pick pizza slice of size 4, Alice and Bob will pick slices with size 3 and 5 respectively. Then Pick slices with size 6, finally Alice and Bob will pick slice of size 2 and 1 respectively. Total = 4 + 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2549', '1128', '2', 'slices = [8,9,8,6,1,1]', '16', 'Pick pizza slice of size 8 in each turn. If you pick slice with size 9 your partners will pick slices of size 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2550', '1129', '1', 'nums = [0,1,2,3,4], index = [0,1,2,2,1]', '[0,4,1,3,2]', 'nums       index     target\n0            0        [0]\n1            1        [0,1]\n2            2        [0,1,2]\n3            2        [0,1,3,2]\n4            1        [0,4,1,3,2]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2551', '1129', '2', 'nums = [1,2,3,4,0], index = [0,1,2,3,0]', '[0,1,2,3,4]', 'nums       index     target\n1            0        [1]\n2            1        [1,2]\n3            2        [1,2,3]\n4            3        [1,2,3,4]\n0            0        [0,1,2,3,4]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2552', '1129', '3', 'nums = [1], index = [0]', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2553', '1130', '1', 'nums = [21,4,7]', '32', '21 has 4 divisors: 1, 3, 7, 21\n4 has 3 divisors: 1, 2, 4\n7 has 2 divisors: 1, 7\nThe answer is the sum of divisors of 21 only.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2554', '1130', '2', 'nums = [21,21]', '64', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2555', '1130', '3', 'nums = [1,2,3,4,5]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2556', '1131', '1', 'grid = [[2,4,3],[6,5,2]]', 'true', 'As shown you can start at cell (0, 0) and visit all the cells of the grid to reach (m - 1, n - 1).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2557', '1131', '2', 'grid = [[1,2,1],[1,2,1]]', 'false', 'As shown you the street at cell (0, 0) is not connected with any street of any other cell and you will get stuck at cell (0, 0)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2558', '1131', '3', 'grid = [[1,1,2]]', 'false', 'You will get stuck at cell (0, 1) and you cannot reach cell (0, 2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2559', '1132', '1', 's = \"level\"', '\"l\"', 's contains 4 prefix excluding itself (\"l\", \"le\", \"lev\", \"leve\"), and suffix (\"l\", \"el\", \"vel\", \"evel\"). The largest prefix which is also suffix is given by \"l\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2560', '1132', '2', 's = \"ababab\"', '\"abab\"', '\"abab\" is the largest prefix which is also suffix. They can overlap in the original string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2561', '1133', '1', 'Stocks table:\n+---------------+-----------+---------------+--------+\n| stock_name    | operation | operation_day | price  |\n+---------------+-----------+---------------+--------+\n| Leetcode      | Buy       | 1             | 1000   |\n| Corona Masks  | Buy       | 2             | 10     |\n| Leetcode      | Sell      | 5             | 9000   |\n| Handbags      | Buy       | 17            | 30000  |\n| Corona Masks  | Sell      | 3             | 1010   |\n| Corona Masks  | Buy       | 4             | 1000   |\n| Corona Masks  | Sell      | 5             | 500    |\n| Corona Masks  | Buy       | 6             | 1000   |\n| Handbags      | Sell      | 29            | 7000   |\n| Corona Masks  | Sell      | 10            | 10000  |\n+---------------+-----------+---------------+--------+', '+---------------+-------------------+\n| stock_name    | capital_gain_loss |\n+---------------+-------------------+\n| Corona Masks  | 9500              |\n| Leetcode      | 8000              |\n| Handbags      | -23000            |\n+---------------+-------------------+', 'Leetcode stock was bought at day 1 for 1000$ and was sold at day 5 for 9000$. Capital gain = 9000 - 1000 = 8000$.\nHandbags stock was bought at day 17 for 30000$ and was sold at day 29 for 7000$. Capital loss = 7000 - 30000 = -23000$.\nCorona Masks stock was bought at day 1 for 10$ and was sold at day 3 for 1010$. It was bought again at day 4 for 1000$ and was sold at day 5 for 500$. At last, it was bought at day 6 for 1000$ and was sold at day 10 for 10000$. Capital gain/loss is the sum of capital gains/losses for each (\'Buy\' --&gt; \'Sell\') operation = (1010 - 10) + (500 - 1000) + (10000 - 1000) = 1000 - 500 + 9000 = 9500$.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2562', '1134', '1', 'arr = [2,2,3,4]', '2', 'The only lucky number in the array is 2 because frequency[2] == 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2563', '1134', '2', 'arr = [1,2,2,3,3,3]', '3', '1, 2 and 3 are all lucky numbers, return the largest of them.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2564', '1134', '3', 'arr = [2,2,2,3,3]', '-1', 'There are no lucky numbers in the array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2565', '1135', '1', 'rating = [2,5,3,4,1]', '3', 'We can form three teams given the conditions. (2,3,4), (5,4,1), (5,3,1).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2566', '1135', '2', 'rating = [2,1,3]', '0', 'We can\'t form any team given the conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2567', '1135', '3', 'rating = [1,2,3,4]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2568', '1136', '1', '[\"UndergroundSystem\",\"checkIn\",\"checkIn\",\"checkIn\",\"checkOut\",\"checkOut\",\"checkOut\",\"getAverageTime\",\"getAverageTime\",\"checkIn\",\"getAverageTime\",\"checkOut\",\"getAverageTime\"]\n[[],[45,\"Leyton\",3],[32,\"Paradise\",8],[27,\"Leyton\",10],[45,\"Waterloo\",15],[27,\"Waterloo\",20],[32,\"Cambridge\",22],[\"Paradise\",\"Cambridge\"],[\"Leyton\",\"Waterloo\"],[10,\"Leyton\",24],[\"Leyton\",\"Waterloo\"],[10,\"Waterloo\",38],[\"Leyton\",\"Waterloo\"]]', '[null,null,null,null,null,null,null,14.00000,11.00000,null,11.00000,null,12.00000]', 'UndergroundSystem undergroundSystem = new UndergroundSystem();\nundergroundSystem.checkIn(45, \"Leyton\", 3);\nundergroundSystem.checkIn(32, \"Paradise\", 8);\nundergroundSystem.checkIn(27, \"Leyton\", 10);\nundergroundSystem.checkOut(45, \"Waterloo\", 15);  // Customer 45 \"Leyton\" -&gt; \"Waterloo\" in 15-3 = 12\nundergroundSystem.checkOut(27, \"Waterloo\", 20);  // Customer 27 \"Leyton\" -&gt; \"Waterloo\" in 20-10 = 10\nundergroundSystem.checkOut(32, \"Cambridge\", 22); // Customer 32 \"Paradise\" -&gt; \"Cambridge\" in 22-8 = 14\nundergroundSystem.getAverageTime(\"Paradise\", \"Cambridge\"); // return 14.00000. One trip \"Paradise\" -&gt; \"Cambridge\", (14) / 1 = 14\nundergroundSystem.getAverageTime(\"Leyton\", \"Waterloo\");    // return 11.00000. Two trips \"Leyton\" -&gt; \"Waterloo\", (10 + 12) / 2 = 11\nundergroundSystem.checkIn(10, \"Leyton\", 24);\nundergroundSystem.getAverageTime(\"Leyton\", \"Waterloo\");    // return 11.00000\nundergroundSystem.checkOut(10, \"Waterloo\", 38);  // Customer 10 \"Leyton\" -&gt; \"Waterloo\" in 38-24 = 14\nundergroundSystem.getAverageTime(\"Leyton\", \"Waterloo\");    // return 12.00000. Three trips \"Leyton\" -&gt; \"Waterloo\", (10 + 12 + 14) / 3 = 12');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2569', '1136', '2', '[\"UndergroundSystem\",\"checkIn\",\"checkOut\",\"getAverageTime\",\"checkIn\",\"checkOut\",\"getAverageTime\",\"checkIn\",\"checkOut\",\"getAverageTime\"]\n[[],[10,\"Leyton\",3],[10,\"Paradise\",8],[\"Leyton\",\"Paradise\"],[5,\"Leyton\",10],[5,\"Paradise\",16],[\"Leyton\",\"Paradise\"],[2,\"Leyton\",21],[2,\"Paradise\",30],[\"Leyton\",\"Paradise\"]]', '[null,null,null,5.00000,null,null,5.50000,null,null,6.66667]', 'UndergroundSystem undergroundSystem = new UndergroundSystem();\nundergroundSystem.checkIn(10, \"Leyton\", 3);\nundergroundSystem.checkOut(10, \"Paradise\", 8); // Customer 10 \"Leyton\" -&gt; \"Paradise\" in 8-3 = 5\nundergroundSystem.getAverageTime(\"Leyton\", \"Paradise\"); // return 5.00000, (5) / 1 = 5\nundergroundSystem.checkIn(5, \"Leyton\", 10);\nundergroundSystem.checkOut(5, \"Paradise\", 16); // Customer 5 \"Leyton\" -&gt; \"Paradise\" in 16-10 = 6\nundergroundSystem.getAverageTime(\"Leyton\", \"Paradise\"); // return 5.50000, (5 + 6) / 2 = 5.5\nundergroundSystem.checkIn(2, \"Leyton\", 21);\nundergroundSystem.checkOut(2, \"Paradise\", 30); // Customer 2 \"Leyton\" -&gt; \"Paradise\" in 30-21 = 9\nundergroundSystem.getAverageTime(\"Leyton\", \"Paradise\"); // return 6.66667, (5 + 6 + 9) / 3 = 6.66667');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2570', '1137', '1', 'n = 2, s1 = \"aa\", s2 = \"da\", evil = \"b\"', '51', 'There are 25 good strings starting with \'a\': \"aa\",\"ac\",\"ad\",...,\"az\". Then there are 25 good strings starting with \'c\': \"ca\",\"cc\",\"cd\",...,\"cz\" and finally there is one good string starting with \'d\': \"da\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2571', '1137', '2', 'n = 8, s1 = \"leetcode\", s2 = \"leetgoes\", evil = \"leet\"', '0', 'All strings greater than or equal to s1 and smaller than or equal to s2 start with the prefix \"leet\", therefore, there is not any good string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2572', '1137', '3', 'n = 2, s1 = \"gx\", s2 = \"gz\", evil = \"x\"', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2573', '1138', '1', 'n = 13', '4', 'There are 9 groups in total, they are grouped according sum of its digits of numbers from 1 to 13:\n[1,10], [2,11], [3,12], [4,13], [5], [6], [7], [8], [9].\nThere are 4 groups with largest size.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2574', '1138', '2', 'n = 2', '2', 'There are 2 groups [1], [2] of size 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2575', '1139', '1', 's = \"annabelle\", k = 2', 'true', 'You can construct two palindromes using all characters in s.\nSome possible constructions \"anna\" + \"elble\", \"anbna\" + \"elle\", \"anellena\" + \"b\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2576', '1139', '2', 's = \"leetcode\", k = 3', 'false', 'It is impossible to construct 3 palindromes using all the characters of s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2577', '1139', '3', 's = \"true\", k = 4', 'true', 'The only possible solution is to put each character in a separate string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2578', '1140', '1', 'radius = 1, xCenter = 0, yCenter = 0, x1 = 1, y1 = -1, x2 = 3, y2 = 1', 'true', 'Circle and rectangle share the point (1,0).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2579', '1140', '2', 'radius = 1, xCenter = 1, yCenter = 1, x1 = 1, y1 = -3, x2 = 2, y2 = -1', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2580', '1140', '3', 'radius = 1, xCenter = 0, yCenter = 0, x1 = -1, y1 = 0, x2 = 0, y2 = 1', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2581', '1141', '1', 'satisfaction = [-1,-8,0,5,-9]', '14', 'After Removing the second and last dish, the maximum total <strong>like-time coefficient</strong> will be equal to (-1*1 + 0*2 + 5*3 = 14).\nEach dish is prepared in one unit of time.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2582', '1141', '2', 'satisfaction = [4,3,2]', '20', 'Dishes can be prepared in any order, (2*1 + 3*2 + 4*3 = 20)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2583', '1141', '3', 'satisfaction = [-1,-4,-5]', '0', 'People do not like the dishes. No dish is prepared.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2584', '1142', '1', 'nums = [4,3,10,9,8]', '[10,9]', 'The subsequences [10,9] and [10,8] are minimal such that the sum of their elements is strictly greater than the sum of elements not included. However, the subsequence [10,9] has the maximum total sum of its elements.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2585', '1142', '2', 'nums = [4,4,7,6,7]', '[7,7,6]', 'The subsequence [7,7] has the sum of its elements equal to 14 which is not strictly greater than the sum of elements not included (14 = 4 + 4 + 6). Therefore, the subsequence [7,6,7] is the minimal satisfying the conditions. Note the subsequence has to be returned in non-decreasing order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2586', '1143', '1', 's = \"1101\"', '6', '\"1101\" corressponds to number 13 in their decimal representation.\nStep 1) 13 is odd, add 1 and obtain 14. \nStep 2) 14 is even, divide by 2 and obtain 7.\nStep 3) 7 is odd, add 1 and obtain 8.\nStep 4) 8 is even, divide by 2 and obtain 4.  \nStep 5) 4 is even, divide by 2 and obtain 2. \nStep 6) 2 is even, divide by 2 and obtain 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2587', '1143', '2', 's = \"10\"', '1', '\"10\" corressponds to number 2 in their decimal representation.\nStep 1) 2 is even, divide by 2 and obtain 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2588', '1143', '3', 's = \"1\"', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2589', '1144', '1', 'a = 1, b = 1, c = 7', '\"ccaccbcc\"', '\"ccbccacc\" would also be a correct answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2590', '1144', '2', 'a = 7, b = 1, c = 0', '\"aabaa\"', 'It is the only correct answer in this case.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2591', '1145', '1', 'stoneValue = [1,2,3,7]', '\"Bob\"', 'Alice will always lose. Her best move will be to take three piles and the score become 6. Now the score of Bob is 7 and Bob wins.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2592', '1145', '2', 'stoneValue = [1,2,3,-9]', '\"Alice\"', 'Alice must choose all the three piles at the first move to win and leave Bob with negative score.\nIf Alice chooses one pile her score will be 1 and the next move Bob\'s score becomes 5. In the next move, Alice will take the pile with value = -9 and lose.\nIf Alice chooses two piles her score will be 3 and the next move Bob\'s score becomes 3. In the next move, Alice will take the pile with value = -9 and also lose.\nRemember that both play optimally so here Alice will choose the scenario that makes her win.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2593', '1145', '3', 'stoneValue = [1,2,3,6]', '\"Tie\"', 'Alice cannot win this game. She can end the game in a draw if she decided to choose all the first three piles, otherwise she will lose.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2594', '1146', '1', 'Users table:\n+------+-----------+\n| id   | name      |\n+------+-----------+\n| 1    | Alice     |\n| 2    | Bob       |\n| 3    | Alex      |\n| 4    | Donald    |\n| 7    | Lee       |\n| 13   | Jonathan  |\n| 19   | Elvis     |\n+------+-----------+\nRides table:\n+------+----------+----------+\n| id   | user_id  | distance |\n+------+----------+----------+\n| 1    | 1        | 120      |\n| 2    | 2        | 317      |\n| 3    | 3        | 222      |\n| 4    | 7        | 100      |\n| 5    | 13       | 312      |\n| 6    | 19       | 50       |\n| 7    | 7        | 120      |\n| 8    | 19       | 400      |\n| 9    | 7        | 230      |\n+------+----------+----------+', '+----------+--------------------+\n| name     | travelled_distance |\n+----------+--------------------+\n| Elvis    | 450                |\n| Lee      | 450                |\n| Bob      | 317                |\n| Jonathan | 312                |\n| Alex     | 222                |\n| Alice    | 120                |\n| Donald   | 0                  |\n+----------+--------------------+', 'Elvis and Lee traveled 450 miles, Elvis is the top traveler as his name is alphabetically smaller than Lee.\nBob, Jonathan, Alex, and Alice have only one ride and we just order them by the total distances of the ride.\nDonald did not have any rides, the distance traveled by him is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2595', '1147', '1', 'words = [\"mass\",\"as\",\"hero\",\"superhero\"]', '[\"as\",\"hero\"]', '\"as\" is substring of \"mass\" and \"hero\" is substring of \"superhero\".\n[\"hero\",\"as\"] is also a valid answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2596', '1147', '2', 'words = [\"leetcode\",\"et\",\"code\"]', '[\"et\",\"code\"]', '\"et\", \"code\" are substring of \"leetcode\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2597', '1147', '3', 'words = [\"blue\",\"green\",\"bu\"]', '[]', 'No string of words is substring of another string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2598', '1148', '1', 'queries = [3,1,2,1], m = 5', '[2,1,2,1]', 'The queries are processed as follow: \nFor i=0: queries[i]=3, P=[1,2,3,4,5], position of 3 in P is <strong>2</strong>, then we move 3 to the beginning of P resulting in P=[3,1,2,4,5]. \nFor i=1: queries[i]=1, P=[3,1,2,4,5], position of 1 in P is <strong>1</strong>, then we move 1 to the beginning of P resulting in P=[1,3,2,4,5]. \nFor i=2: queries[i]=2, P=[1,3,2,4,5], position of 2 in P is <strong>2</strong>, then we move 2 to the beginning of P resulting in P=[2,1,3,4,5]. \nFor i=3: queries[i]=1, P=[2,1,3,4,5], position of 1 in P is <strong>1</strong>, then we move 1 to the beginning of P resulting in P=[1,2,3,4,5]. \nTherefore, the array containing the result is [2,1,2,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2599', '1148', '2', 'queries = [4,1,2,2], m = 4', '[3,1,2,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2600', '1148', '3', 'queries = [7,5,5,8,3], m = 8', '[6,5,0,7,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2601', '1149', '1', 'text = \"&amp;amp; is an HTML entity but &amp;ambassador; is not.\"', '\"&amp; is an HTML entity but &amp;ambassador; is not.\"', 'The parser will replace the &amp;amp; entity by &amp;');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2602', '1149', '2', 'text = \"and I quote: &amp;quot;...&amp;quot;\"', '\"and I quote: \\\"...\\\"\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2603', '1150', '1', 'n = 1', '12', 'There are 12 possible way to paint the grid as shown.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2604', '1150', '2', 'n = 5000', '30228214', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2605', '1151', '1', 'nums = [-3,2,-3,4,2]', '5', 'If you choose startValue = 4, in the third iteration your step by step sum is less than 1.\n<strong>step by step sum</strong>\n<strong>startValue = 4 | startValue = 5 | nums</strong>\n  (4 <strong>-3</strong> ) = 1  | (5 <strong>-3</strong> ) = 2    |  -3\n  (1 <strong>+2</strong> ) = 3  | (2 <strong>+2</strong> ) = 4    |   2\n  (3 <strong>-3</strong> ) = 0  | (4 <strong>-3</strong> ) = 1    |  -3\n  (0 <strong>+4</strong> ) = 4  | (1 <strong>+4</strong> ) = 5    |   4\n  (4 <strong>+2</strong> ) = 6  | (5 <strong>+2</strong> ) = 7    |   2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2606', '1151', '2', 'nums = [1,2]', '1', 'Minimum start value should be positive.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2607', '1151', '3', 'nums = [1,-2,-3]', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2608', '1152', '1', 'k = 7', '2', 'The Fibonacci numbers are: 1, 1, 2, 3, 5, 8, 13, ... \nFor k = 7 we can use 2 + 5 = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2609', '1152', '2', 'k = 10', '2', 'For k = 10 we can use 2 + 8 = 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2610', '1152', '3', 'k = 19', '3', 'For k = 19 we can use 1 + 5 + 13 = 19.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2611', '1153', '1', 'n = 1, k = 3', '\"c\"', 'The list [\"a\", \"b\", \"c\"] contains all happy strings of length 1. The third string is \"c\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2612', '1153', '2', 'n = 1, k = 4', '\"\"', 'There are only 3 happy strings of length 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2613', '1153', '3', 'n = 3, k = 9', '\"cab\"', 'There are 12 different happy string of length 3 [\"aba\", \"abc\", \"aca\", \"acb\", \"bab\", \"bac\", \"bca\", \"bcb\", \"cab\", \"cac\", \"cba\", \"cbc\"]. You will find the 9<sup>th</sup> string = \"cab\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2614', '1154', '1', 's = \"1000\", k = 10000', '1', 'The only possible array is [1000]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2615', '1154', '2', 's = \"1000\", k = 10', '0', 'There cannot be an array that was printed this way and has all integer &gt;= 1 and &lt;= 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2616', '1154', '3', 's = \"1317\", k = 2000', '8', 'Possible arrays are [1317],[131,7],[13,17],[1,317],[13,1,7],[1,31,7],[1,3,17],[1,3,1,7]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2617', '1155', '1', 's = \"a0b1c2\"', '\"0a1b2c\"', 'No two adjacent characters have the same type in \"0a1b2c\". \"a0b1c2\", \"0a1b2c\", \"0c2a1b\" are also valid permutations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2618', '1155', '2', 's = \"leetcode\"', '\"\"', '\"leetcode\" has only characters so we cannot separate them by digits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2619', '1155', '3', 's = \"1229857369\"', '\"\"', '\"1229857369\" has only digits so we cannot separate them by characters.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2620', '1156', '1', 'orders = [[\"David\",\"3\",\"Ceviche\"],[\"Corina\",\"10\",\"Beef Burrito\"],[\"David\",\"3\",\"Fried Chicken\"],[\"Carla\",\"5\",\"Water\"],[\"Carla\",\"5\",\"Ceviche\"],[\"Rous\",\"3\",\"Ceviche\"]]', '[[\"Table\",\"Beef Burrito\",\"Ceviche\",\"Fried Chicken\",\"Water\"],[\"3\",\"0\",\"2\",\"1\",\"0\"],[\"5\",\"0\",\"1\",\"0\",\"1\"],[\"10\",\"1\",\"0\",\"0\",\"0\"]] \n<strong>', '</strong>The displaying table looks like:\n<strong>Table,Beef Burrito,Ceviche,Fried Chicken,Water</strong>\n3    ,0           ,2      ,1            ,0\n5    ,0           ,1      ,0            ,1\n10   ,1           ,0      ,0            ,0\nFor the table 3: David orders \"Ceviche\" and \"Fried Chicken\", and Rous orders \"Ceviche\".\nFor the table 5: Carla orders \"Water\" and \"Ceviche\".\nFor the table 10: Corina orders \"Beef Burrito\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2621', '1156', '2', 'orders = [[\"James\",\"12\",\"Fried Chicken\"],[\"Ratesh\",\"12\",\"Fried Chicken\"],[\"Amadeus\",\"12\",\"Fried Chicken\"],[\"Adam\",\"1\",\"Canadian Waffles\"],[\"Brianna\",\"1\",\"Canadian Waffles\"]]', '[[\"Table\",\"Canadian Waffles\",\"Fried Chicken\"],[\"1\",\"2\",\"0\"],[\"12\",\"0\",\"3\"]]', 'For the table 1: Adam and Brianna order \"Canadian Waffles\".\nFor the table 12: James, Ratesh and Amadeus order \"Fried Chicken\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2622', '1156', '3', 'orders = [[\"Laura\",\"2\",\"Bean Burrito\"],[\"Jhon\",\"2\",\"Beef Burrito\"],[\"Melissa\",\"2\",\"Soda\"]]', '[[\"Table\",\"Bean Burrito\",\"Beef Burrito\",\"Soda\"],[\"2\",\"1\",\"1\",\"1\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2623', '1157', '1', 'croakOfFrogs = \"croakcroak\"', '1', 'One frog yelling \"croak<strong>\"</strong> twice.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2624', '1157', '2', 'croakOfFrogs = \"crcoakroak\"', '2', 'The minimum number of frogs is two. \nThe first frog could yell \"<strong>cr</strong>c<strong>oak</strong>roak\".\nThe second frog could yell later \"cr<strong>c</strong>oak<strong>roak</strong>\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2625', '1157', '3', 'croakOfFrogs = \"croakcrook\"', '-1', 'The given string is an invalid combination of \"croak<strong>\"</strong> from different frogs.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2626', '1158', '1', 'n = 2, m = 3, k = 1', '6', 'The possible arrays are [1, 1], [2, 1], [2, 2], [3, 1], [3, 2] [3, 3]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2627', '1158', '2', 'n = 5, m = 2, k = 3', '0', 'There are no possible arrays that satisify the mentioned conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2628', '1158', '3', 'n = 9, m = 1, k = 1', '1', 'The only possible array is [1, 1, 1, 1, 1, 1, 1, 1, 1]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2629', '1159', '1', 's = \"011101\"', '5', 'All possible ways of splitting s into two non-empty substrings are:\nleft = \"0\" and right = \"11101\", score = 1 + 4 = 5 \nleft = \"01\" and right = \"1101\", score = 1 + 3 = 4 \nleft = \"011\" and right = \"101\", score = 1 + 2 = 3 \nleft = \"0111\" and right = \"01\", score = 1 + 1 = 2 \nleft = \"01110\" and right = \"1\", score = 2 + 1 = 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2630', '1159', '2', 's = \"00111\"', '5', 'When left = \"00\" and right = \"111\", we get the maximum score = 2 + 3 = 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2631', '1159', '3', 's = \"1111\"', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2632', '1160', '1', 'cardPoints = [1,2,3,4,5,6,1], k = 3', '12', 'After the first step, your score will always be 1. However, choosing the rightmost card first will maximize your total score. The optimal strategy is to take the three cards on the right, giving a final score of 1 + 6 + 5 = 12.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2633', '1160', '2', 'cardPoints = [2,2,2], k = 2', '4', 'Regardless of which two cards you take, your score will always be 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2634', '1160', '3', 'cardPoints = [9,7,7,9,7,7,9], k = 7', '55', 'You have to take all the cards. Your score is the sum of points of all cards.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2635', '1161', '1', 'nums = [[1,2,3],[4,5,6],[7,8,9]]', '[1,4,2,7,5,3,8,6,9]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2636', '1161', '2', 'nums = [[1,2,3,4,5],[6,7],[8],[9,10,11],[12,13,14,15,16]]', '[1,6,2,8,7,3,9,4,12,10,5,13,11,14,15,16]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2637', '1162', '1', 'nums = [10,2,-10,5,20], k = 2', '37', 'The subsequence is [10, 2, 5, 20].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2638', '1162', '2', 'nums = [-1,-2,-3], k = 1', '-1', 'The subsequence must be non-empty, so we choose the largest number.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2639', '1162', '3', 'nums = [10,-2,-10,-5,20], k = 2', '23', 'The subsequence is [10, -2, -5, 20].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2640', '1163', '1', 'candies = [2,3,5,1,3], extraCandies = 3', '[true,true,true,false,true]', 'If you give all extraCandies to:\n- Kid 1, they will have 2 + 3 = 5 candies, which is the greatest among the kids.\n- Kid 2, they will have 3 + 3 = 6 candies, which is the greatest among the kids.\n- Kid 3, they will have 5 + 3 = 8 candies, which is the greatest among the kids.\n- Kid 4, they will have 1 + 3 = 4 candies, which is not the greatest among the kids.\n- Kid 5, they will have 3 + 3 = 6 candies, which is the greatest among the kids.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2641', '1163', '2', 'candies = [4,2,1,1,2], extraCandies = 1', '[true,false,false,false,false]', 'There is only 1 extra candy.\nKid 1 will always have the greatest number of candies, even if a different kid is given the extra candy.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2642', '1163', '3', 'candies = [12,1,12], extraCandies = 10', '[true,false,true]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2643', '1164', '1', 'num = 555', '888', 'The first time pick x = 5 and y = 9 and store the new integer in a.\nThe second time pick x = 5 and y = 1 and store the new integer in b.\nWe have now a = 999 and b = 111 and max difference = 888');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2644', '1164', '2', 'num = 9', '8', 'The first time pick x = 9 and y = 9 and store the new integer in a.\nThe second time pick x = 9 and y = 1 and store the new integer in b.\nWe have now a = 9 and b = 1 and max difference = 8');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2645', '1165', '1', 's1 = \"abc\", s2 = \"xya\"', 'true', '\"ayx\" is a permutation of s2=\"xya\" which can break to string \"abc\" which is a permutation of s1=\"abc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2646', '1165', '2', 's1 = \"abe\", s2 = \"acd\"', 'false', 'All permutations for s1=\"abe\" are: \"abe\", \"aeb\", \"bae\", \"bea\", \"eab\" and \"eba\" and all permutation for s2=\"acd\" are: \"acd\", \"adc\", \"cad\", \"cda\", \"dac\" and \"dca\". However, there is not any permutation from s1 which can break some permutation from s2 and vice-versa.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2647', '1165', '3', 's1 = \"leetcodee\", s2 = \"interview\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2648', '1166', '1', 'hats = [[3,4],[4,5],[5]]', '1', 'There is only one way to choose hats given the conditions. \nFirst person choose hat 3, Second person choose hat 4 and last one hat 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2649', '1166', '2', 'hats = [[3,5,1],[3,5]]', '4', 'There are 4 ways to choose hats:\n(3,5), (5,3), (1,3) and (1,5)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2650', '1166', '3', 'hats = [[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]]', '24', 'Each person can choose hats labeled from 1 to 4.\nNumber of Permutations of (1,2,3,4) = 24.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2651', '1167', '1', 'paths = [[\"London\",\"New York\"],[\"New York\",\"Lima\"],[\"Lima\",\"Sao Paulo\"]]', '\"Sao Paulo\"', 'Starting at \"London\" city you will reach \"Sao Paulo\" city which is the destination city. Your trip consist of: \"London\" -&gt; \"New York\" -&gt; \"Lima\" -&gt; \"Sao Paulo\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2652', '1167', '2', 'paths = [[\"B\",\"C\"],[\"D\",\"B\"],[\"C\",\"A\"]]', '\"A\"', 'All possible trips are: \n\"D\" -&gt; \"B\" -&gt; \"C\" -&gt; \"A\". \n\"B\" -&gt; \"C\" -&gt; \"A\". \n\"C\" -&gt; \"A\". \n\"A\". \nClearly the destination city is \"A\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2653', '1167', '3', 'paths = [[\"A\",\"Z\"]]', '\"Z\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2654', '1168', '1', 'nums = [1,0,0,0,1,0,0,1], k = 2', 'true', 'Each of the 1s are at least 2 places away from each other.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2655', '1168', '2', 'nums = [1,0,0,1,0,1], k = 2', 'false', 'The second 1 and third 1 are only one apart from each other.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2656', '1169', '1', 'nums = [8,2,4,7], limit = 4', '2', 'All subarrays are: \n[8] with maximum absolute diff |8-8| = 0 &lt;= 4.\n[8,2] with maximum absolute diff |8-2| = 6 &gt; 4. \n[8,2,4] with maximum absolute diff |8-2| = 6 &gt; 4.\n[8,2,4,7] with maximum absolute diff |8-2| = 6 &gt; 4.\n[2] with maximum absolute diff |2-2| = 0 &lt;= 4.\n[2,4] with maximum absolute diff |2-4| = 2 &lt;= 4.\n[2,4,7] with maximum absolute diff |2-7| = 5 &gt; 4.\n[4] with maximum absolute diff |4-4| = 0 &lt;= 4.\n[4,7] with maximum absolute diff |4-7| = 3 &lt;= 4.\n[7] with maximum absolute diff |7-7| = 0 &lt;= 4. \nTherefore, the size of the longest subarray is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2657', '1169', '2', 'nums = [10,1,2,4,7,2], limit = 5', '4', 'The subarray [2,4,7,2] is the longest since the maximum absolute diff is |2-7| = 5 &lt;= 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2658', '1169', '3', 'nums = [4,2,2,2,4,4,2,2], limit = 0', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2659', '1170', '1', 'mat = [[1,3,11],[2,4,6]], k = 5', '7', 'Choosing one element from each row, the first k smallest sum are:\n[1,2], [1,4], [3,2], [3,4], [1,6]. Where the 5th sum is 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2660', '1170', '2', 'mat = [[1,3,11],[2,4,6]], k = 9', '17', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2661', '1170', '3', 'mat = [[1,10,10],[1,4,5],[2,3,6]], k = 7', '9', 'Choosing one element from each row, the first k smallest sum are:\n[1,1,2], [1,1,3], [1,4,2], [1,4,3], [1,1,6], [1,5,2], [1,5,3]. Where the 7th sum is 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2662', '1171', '1', 'target = [1,3], n = 3', '[\"Push\",\"Push\",\"Pop\",\"Push\"]', 'Initially the stack s is empty. The last element is the top of the stack.\nRead 1 from the stream and push it to the stack. s = [1].\nRead 2 from the stream and push it to the stack. s = [1,2].\nPop the integer on the top of the stack. s = [1].\nRead 3 from the stream and push it to the stack. s = [1,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2663', '1171', '2', 'target = [1,2,3], n = 3', '[\"Push\",\"Push\",\"Push\"]', 'Initially the stack s is empty. The last element is the top of the stack.\nRead 1 from the stream and push it to the stack. s = [1].\nRead 2 from the stream and push it to the stack. s = [1,2].\nRead 3 from the stream and push it to the stack. s = [1,2,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2664', '1171', '3', 'target = [1,2], n = 4', '[\"Push\",\"Push\"]', 'Initially the stack s is empty. The last element is the top of the stack.\nRead 1 from the stream and push it to the stack. s = [1].\nRead 2 from the stream and push it to the stack. s = [1,2].\nSince the stack (from the bottom to the top) is equal to target, we stop the stack operations.\nThe answers that read integer 3 from the stream are not accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2665', '1172', '1', 'arr = [2,3,1,6,7]', '4', 'The triplets are (0,1,2), (0,2,2), (2,3,4) and (2,4,4)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2666', '1172', '2', 'arr = [1,1,1,1,1]', '10', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2667', '1173', '1', 'n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], hasApple = [false,false,true,false,true,true,false]', '8', 'The figure above represents the given tree where red vertices have an apple. One optimal path to collect all apples is shown by the green arrows.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2668', '1173', '2', 'n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], hasApple = [false,false,true,false,false,true,false]', '6', 'The figure above represents the given tree where red vertices have an apple. One optimal path to collect all apples is shown by the green arrows.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2669', '1173', '3', 'n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], hasApple = [false,false,false,false,false,false,false]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2670', '1174', '1', 'pizza = [\"A..\",\"AAA\",\"...\"], k = 3', '3', 'The figure above shows the three ways to cut the pizza. Note that pieces must contain at least one apple.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2671', '1174', '2', 'pizza = [\"A..\",\"AA.\",\"...\"], k = 3', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2672', '1174', '3', 'pizza = [\"A..\",\"A..\",\"...\"], k = 1', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2673', '1176', '1', 'n = 2', '[\"1/2\"]', '\"1/2\" is the only unique fraction with a denominator less-than-or-equal-to 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2674', '1176', '2', 'n = 3', '[\"1/2\",\"1/3\",\"2/3\"]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2675', '1176', '3', 'n = 4', '[\"1/2\",\"1/3\",\"1/4\",\"2/3\",\"3/4\"]', '\"2/4\" is not a simplified fraction because it can be simplified to \"1/2\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2676', '1177', '1', 'root = [3,1,4,3,null,1,5]', '4', 'Nodes in blue are <strong>good</strong>.\nRoot Node (3) is always a good node.\nNode 4 -&gt; (3,4) is the maximum value in the path starting from the root.\nNode 5 -&gt; (3,4,5) is the maximum value in the path\nNode 3 -&gt; (3,1,3) is the maximum value in the path.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2677', '1177', '2', 'root = [3,3,null,4,2]', '3', 'Node 2 -&gt; (3, 3, 2) is not good, because \"3\" is higher than it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2678', '1177', '3', 'root = [1]', '1', 'Root is considered as <strong>good</strong>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2679', '1178', '1', 'cost = [4,3,2,5,6,7,2,5,5], target = 9', '\"7772\"', 'The cost to paint the digit \'7\' is 2, and the digit \'2\' is 3. Then cost(\"7772\") = 2*3+ 3*1 = 9. You could also paint \"977\", but \"7772\" is the largest number.\n<strong>Digit    cost</strong>\n  1  -&gt;   4\n  2  -&gt;   3\n  3  -&gt;   2\n  4  -&gt;   5\n  5  -&gt;   6\n  6  -&gt;   7\n  7  -&gt;   2\n  8  -&gt;   5\n  9  -&gt;   5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2680', '1178', '2', 'cost = [7,6,5,5,5,6,8,7,8], target = 12', '\"85\"', 'The cost to paint the digit \'8\' is 7, and the digit \'5\' is 5. Then cost(\"85\") = 7 + 5 = 12.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2681', '1178', '3', 'cost = [2,4,6,2,4,6,4,4,4], target = 5', '\"0\"', 'It is impossible to paint any integer with total cost equal to target.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2682', '1179', '1', 'startTime = [1,2,3], endTime = [3,2,7], queryTime = 4', '1', 'We have 3 students where:\nThe first student started doing homework at time 1 and finished at time 3 and wasn\'t doing anything at time 4.\nThe second student started doing homework at time 2 and finished at time 2 and also wasn\'t doing anything at time 4.\nThe third student started doing homework at time 3 and finished at time 7 and was the only student doing homework at time 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2683', '1179', '2', 'startTime = [4], endTime = [4], queryTime = 4', '1', 'The only student was doing their homework at the queryTime.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2684', '1180', '1', 'text = \"Leetcode is cool\"', '\"Is cool leetcode\"', 'There are 3 words, \"Leetcode\" of length 8, \"is\" of length 2 and \"cool\" of length 4.\nOutput is ordered by length and the new first word starts with capital letter.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2685', '1180', '2', 'text = \"Keep calm and code on\"', '\"On and keep calm code\"', 'Output is ordered as follows:\n\"On\" 2 letters.\n\"and\" 3 letters.\n\"keep\" 4 letters in case of tie order by position in original text.\n\"calm\" 4 letters.\n\"code\" 4 letters.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2686', '1180', '3', 'text = \"To be or not to be\"', '\"To be or to be not\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2687', '1181', '1', 'favoriteCompanies = [[\"leetcode\",\"google\",\"facebook\"],[\"google\",\"microsoft\"],[\"google\",\"facebook\"],[\"google\"],[\"amazon\"]]', '[0,1,4]', 'Person with index=2 has favoriteCompanies[2]=[\"google\",\"facebook\"] which is a subset of favoriteCompanies[0]=[\"leetcode\",\"google\",\"facebook\"] corresponding to the person with index 0. \nPerson with index=3 has favoriteCompanies[3]=[\"google\"] which is a subset of favoriteCompanies[0]=[\"leetcode\",\"google\",\"facebook\"] and favoriteCompanies[1]=[\"google\",\"microsoft\"]. \nOther lists of favorite companies are not a subset of another list, therefore, the answer is [0,1,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2688', '1181', '2', 'favoriteCompanies = [[\"leetcode\",\"google\",\"facebook\"],[\"leetcode\",\"amazon\"],[\"facebook\",\"google\"]]', '[0,1]', 'In this case favoriteCompanies[2]=[\"facebook\",\"google\"] is a subset of favoriteCompanies[0]=[\"leetcode\",\"google\",\"facebook\"], therefore, the answer is [0,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2689', '1181', '3', 'favoriteCompanies = [[\"leetcode\"],[\"google\"],[\"facebook\"],[\"amazon\"]]', '[0,1,2,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2690', '1182', '1', 'darts = [[-2,0],[2,0],[0,2],[0,-2]], r = 2', '4', 'Circle dartboard with center in (0,0) and radius = 2 contain all points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2691', '1182', '2', 'darts = [[-3,0],[3,0],[2,6],[5,4],[0,9],[7,8]], r = 5', '5', 'Circle dartboard with center in (0,4) and radius = 5 contain all points except the point (7,8).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2692', '1183', '1', 'sentence = \"i love eating burger\", searchWord = \"burg\"', '4', '\"burg\" is prefix of \"burger\" which is the 4th word in the sentence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2693', '1183', '2', 'sentence = \"this problem is an easy problem\", searchWord = \"pro\"', '2', '\"pro\" is prefix of \"problem\" which is the 2nd and the 6th word in the sentence, but we return 2 as it\'s the minimal index.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2694', '1183', '3', 'sentence = \"i am tired\", searchWord = \"you\"', '-1', '\"you\" is not a prefix of any word in the sentence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2695', '1184', '1', 's = \"abciiidef\", k = 3', '3', 'The substring \"iii\" contains 3 vowel letters.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2696', '1184', '2', 's = \"aeiou\", k = 2', '2', 'Any substring of length 2 contains 2 vowels.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2697', '1184', '3', 's = \"leetcode\", k = 3', '2', '\"lee\", \"eet\" and \"ode\" contain 2 vowels.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2698', '1185', '1', 'root = [2,3,1,3,1,null,1]', '2', 'The figure above represents the given binary tree. There are three paths going from the root node to leaf nodes: the red path [2,3,3], the green path [2,1,1], and the path [2,3,1]. Among these paths only red path and green path are pseudo-palindromic paths since the red path [2,3,3] can be rearranged in [3,2,3] (palindrome) and the green path [2,1,1] can be rearranged in [1,2,1] (palindrome).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2699', '1185', '2', 'root = [2,1,1,1,3,null,null,null,null,null,1]', '1', 'The figure above represents the given binary tree. There are three paths going from the root node to leaf nodes: the green path [2,1,1], the path [2,1,3,1], and the path [2,1]. Among these paths only the green path is pseudo-palindromic since [2,1,1] can be rearranged in [1,2,1] (palindrome).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2700', '1185', '3', 'root = [9]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2701', '1186', '1', 'nums1 = [2,1,-2,5], nums2 = [3,0,-6]', '18', 'Take subsequence [2,-2] from nums1 and subsequence [3,-6] from nums2.\nTheir dot product is (2*3 + (-2)*(-6)) = 18.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2702', '1186', '2', 'nums1 = [3,-2], nums2 = [2,-6,7]', '21', 'Take subsequence [3] from nums1 and subsequence [7] from nums2.\nTheir dot product is (3*7) = 21.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2703', '1186', '3', 'nums1 = [-1,-1], nums2 = [1,1]', '-1', 'Take subsequence [-1] from nums1 and subsequence [1] from nums2.\nTheir dot product is -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2704', '939', '1', 'arr = [6,2,4]', '32', 'There are two possible trees shown.\nThe first has a non-leaf node sum 36, and the second has non-leaf node sum 32.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2705', '939', '2', 'arr = [4,11]', '44', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2706', '944', '1', 'piles = [2,7,9,4,4]', '10', 'If Alice takes one pile at the beginning, Bob takes two piles, then Alice takes 2 piles again. Alice can get 2 + 4 + 4 = 10 piles in total. If Alice takes two piles at the beginning, then Bob can take all three piles left. In this case, Alice get 2 + 7 = 9 piles in total. So we return 10 since it\'s larger.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2707', '944', '2', 'piles = [1,2,3,4,5,100]', '104', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2708', '956', '1', 'Users table:\n+---------+------------+----------------+\n| user_id | join_date  | favorite_brand |\n+---------+------------+----------------+\n| 1       | 2018-01-01 | Lenovo         |\n| 2       | 2018-02-09 | Samsung        |\n| 3       | 2018-01-19 | LG             |\n| 4       | 2018-05-21 | HP             |\n+---------+------------+----------------+\nOrders table:\n+----------+------------+---------+----------+-----------+\n| order_id | order_date | item_id | buyer_id | seller_id |\n+----------+------------+---------+----------+-----------+\n| 1        | 2019-08-01 | 4       | 1        | 2         |\n| 2        | 2018-08-02 | 2       | 1        | 3         |\n| 3        | 2019-08-03 | 3       | 2        | 3         |\n| 4        | 2018-08-04 | 1       | 4        | 2         |\n| 5        | 2018-08-04 | 1       | 3        | 4         |\n| 6        | 2019-08-05 | 2       | 2        | 4         |\n+----------+------------+---------+----------+-----------+\nItems table:\n+---------+------------+\n| item_id | item_brand |\n+---------+------------+\n| 1       | Samsung    |\n| 2       | Lenovo     |\n| 3       | LG         |\n| 4       | HP         |\n+---------+------------+', '+-----------+------------+----------------+\n| buyer_id  | join_date  | orders_in_2019 |\n+-----------+------------+----------------+\n| 1         | 2018-01-01 | 1              |\n| 2         | 2018-02-09 | 2              |\n| 3         | 2018-01-19 | 0              |\n| 4         | 2018-05-21 | 0              |\n+-----------+------------+----------------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2709', '971', '1', 'distance = [1,2,3,4], start = 0, destination = 1', '1', 'Distance between 0 and 1 is 1 or 9, minimum is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2710', '971', '2', 'distance = [1,2,3,4], start = 0, destination = 2', '3', 'Distance between 0 and 2 is 3 or 7, minimum is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2711', '971', '3', 'distance = [1,2,3,4], start = 0, destination = 3', '4', 'Distance between 0 and 3 is 6 or 4, minimum is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2712', '992', '1', 'position = [1,2,3]', '1', 'First step: Move the chip at position 3 to position 1 with cost = 0.\nSecond step: Move the chip at position 2 to position 1 with cost = 1.\nTotal cost is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2713', '992', '2', 'position = [2,2,2,3,3]', '2', 'We can move the two chips at position  3 to position 2. Each move has cost = 1. The total cost = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2714', '992', '3', 'position = [1,1000000000]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2715', '1036', '1', '[\"CombinationIterator\", \"next\", \"hasNext\", \"next\", \"hasNext\", \"next\", \"hasNext\"]\n[[\"abc\", 2], [], [], [], [], [], []]', '[null, \"ab\", true, \"ac\", true, \"bc\", false]', 'CombinationIterator itr = new CombinationIterator(\"abc\", 2);\nitr.next();    // return \"ab\"\nitr.hasNext(); // return True\nitr.next();    // return \"ac\"\nitr.hasNext(); // return True\nitr.next();    // return \"bc\"\nitr.hasNext(); // return False');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2716', '1041', '1', 'low = 100, high = 300', '[123,234]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2717', '1041', '2', 'low = 1000, high = 13000', '[1234,2345,3456,4567,5678,6789,12345]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2718', '1122', '1', '[\"CustomStack\",\"push\",\"push\",\"pop\",\"push\",\"push\",\"push\",\"increment\",\"increment\",\"pop\",\"pop\",\"pop\",\"pop\"]\n[[3],[1],[2],[],[2],[3],[4],[5,100],[2,100],[],[],[],[]]', '[null,null,null,2,null,null,null,null,null,103,202,201,-1]', 'CustomStack stk = new CustomStack(3); // Stack is Empty []\nstk.push(1);                          // stack becomes [1]\nstk.push(2);                          // stack becomes [1, 2]\nstk.pop();                            // return 2 --&gt; Return top of the stack 2, stack becomes [1]\nstk.push(2);                          // stack becomes [1, 2]\nstk.push(3);                          // stack becomes [1, 2, 3]\nstk.push(4);                          // stack still [1, 2, 3], Do not add another elements as size is 4\nstk.increment(5, 100);                // stack becomes [101, 102, 103]\nstk.increment(2, 100);                // stack becomes [201, 202, 103]\nstk.pop();                            // return 103 --&gt; Return top of the stack 103, stack becomes [201, 202]\nstk.pop();                            // return 202 --&gt; Return top of the stack 202, stack becomes [201]\nstk.pop();                            // return 201 --&gt; Return top of the stack 201, stack becomes []\nstk.pop();                            // return -1 --&gt; Stack is empty return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2719', '1175', '1', 's = \"leetcode\"', '2', 'The substring \"ee\" is of length 2 with the character \'e\' only.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2720', '1175', '2', 's = \"abbcccddddeeeeedcba\"', '5', 'The substring \"eeeee\" is of length 5 with the character \'e\' only.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2721', '1187', '1', 'target = [1,2,3,4], arr = [2,4,1,3]', 'true', 'You can follow the next steps to convert arr to target:\n1- Reverse subarray [2,4,1], arr becomes [1,4,2,3]\n2- Reverse subarray [4,2], arr becomes [1,2,4,3]\n3- Reverse subarray [4,3], arr becomes [1,2,3,4]\nThere are multiple ways to convert arr to target, this is not the only way to do so.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2722', '1187', '2', 'target = [7], arr = [7]', 'true', 'arr is equal to target without any reverses.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2723', '1187', '3', 'target = [3,7,9], arr = [3,7,11]', 'false', 'arr does not have value 9 and it can never be converted to target.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2724', '1188', '1', 's = \"00110110\", k = 2', 'true', 'The binary codes of length 2 are \"00\", \"01\", \"10\" and \"11\". They can be all found as substrings at indices 0, 1, 3 and 2 respectively.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2725', '1188', '2', 's = \"0110\", k = 1', 'true', 'The binary codes of length 1 are \"0\" and \"1\", it is clear that both exist as a substring.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2726', '1188', '3', 's = \"0110\", k = 2', 'false', 'The binary code \"00\" is of length 2 and does not exist in the array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2727', '1189', '1', 'numCourses = 2, prerequisites = [[1,0]], queries = [[0,1],[1,0]]', '[false,true]', 'The pair [1, 0] indicates that you have to take course 1 before you can take course 0.\nCourse 0 is not a prerequisite of course 1, but the opposite is true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2728', '1189', '2', 'numCourses = 2, prerequisites = [], queries = [[1,0],[0,1]]', '[false,false]', 'There are no prerequisites, and each course is independent.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2729', '1189', '3', 'numCourses = 3, prerequisites = [[1,2],[1,0],[2,0]], queries = [[1,0],[1,2]]', '[true,true]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2730', '1190', '1', 'grid = [[3,1,1],[2,5,1],[1,5,5],[2,1,1]]', '24', 'Path of robot #1 and #2 are described in color green and blue respectively.\nCherries taken by Robot #1, (3 + 2 + 5 + 2) = 12.\nCherries taken by Robot #2, (1 + 5 + 5 + 1) = 12.\nTotal of cherries: 12 + 12 = 24.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2731', '1190', '2', 'grid = [[1,0,0,0,0,0,1],[2,0,0,0,0,3,0],[2,0,9,0,0,0,0],[0,3,0,5,4,0,0],[1,0,2,3,0,0,6]]', '28', 'Path of robot #1 and #2 are described in color green and blue respectively.\nCherries taken by Robot #1, (1 + 9 + 5 + 2) = 17.\nCherries taken by Robot #2, (1 + 3 + 4 + 3) = 11.\nTotal of cherries: 17 + 11 = 28.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2732', '1191', '1', 'nums = [3,4,5,2]', '12', 'If you choose the indices i=1 and j=2 (indexed from 0), you will get the maximum value, that is, (nums[1]-1)*(nums[2]-1) = (4-1)*(5-1) = 3*4 = 12.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2733', '1191', '2', 'nums = [1,5,4,5]', '16', 'Choosing the indices i=1 and j=3 (indexed from 0), you will get the maximum value of (5-1)*(5-1) = 16.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2734', '1191', '3', 'nums = [3,7]', '12', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2735', '1192', '1', 'h = 5, w = 4, horizontalCuts = [1,2,4], verticalCuts = [1,3]', '4', 'The figure above represents the given rectangular cake. Red lines are the horizontal and vertical cuts. After you cut the cake, the green piece of cake has the maximum area.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2736', '1192', '2', 'h = 5, w = 4, horizontalCuts = [3,1], verticalCuts = [1]', '6', 'The figure above represents the given rectangular cake. Red lines are the horizontal and vertical cuts. After you cut the cake, the green and yellow pieces of cake have the maximum area.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2737', '1192', '3', 'h = 5, w = 4, horizontalCuts = [3], verticalCuts = [3]', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2738', '1193', '1', 'n = 6, connections = [[0,1],[1,3],[2,3],[4,0],[4,5]]', '3', 'Change the direction of edges show in red such that each node can reach the node 0 (capital).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2739', '1193', '2', 'n = 5, connections = [[1,0],[1,2],[3,2],[3,4]]', '2', 'Change the direction of edges show in red such that each node can reach the node 0 (capital).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2740', '1193', '3', 'n = 3, connections = [[1,0],[2,0]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2741', '1194', '1', 'balls = [1,1]', '1.00000', 'Only 2 ways to divide the balls equally:\n- A ball of color 1 to box 1 and a ball of color 2 to box 2\n- A ball of color 2 to box 1 and a ball of color 1 to box 2\nIn both ways, the number of distinct colors in each box is equal. The probability is 2/2 = 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2742', '1194', '2', 'balls = [2,1,1]', '0.66667', 'We have the set of balls [1, 1, 2, 3]\nThis set of balls will be shuffled randomly and we may have one of the 12 distinct shuffles with equal probability (i.e. 1/12):\n[1,1 / 2,3], [1,1 / 3,2], [1,2 / 1,3], [1,2 / 3,1], [1,3 / 1,2], [1,3 / 2,1], [2,1 / 1,3], [2,1 / 3,1], [2,3 / 1,1], [3,1 / 1,2], [3,1 / 2,1], [3,2 / 1,1]\nAfter that, we add the first two balls to the first box and the second two balls to the second box.\nWe can see that 8 of these 12 possible random distributions have the same number of distinct colors of balls in each box.\nProbability is 8/12 = 0.66667');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2743', '1194', '3', 'balls = [1,2,1,2]', '0.60000', 'The set of balls is [1, 2, 2, 3, 4, 4]. It is hard to display all the 180 possible random shuffles of this set but it is easy to check that 108 of them will have the same number of distinct colors in each box.\nProbability = 108 / 180 = 0.6');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2744', '1195', '1', 'nums = [2,5,1,3,4,7], n = 3', '[2,3,5,4,1,7]', 'Since x<sub>1</sub>=2, x<sub>2</sub>=5, x<sub>3</sub>=1, y<sub>1</sub>=3, y<sub>2</sub>=4, y<sub>3</sub>=7 then the answer is [2,3,5,4,1,7].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2745', '1195', '2', 'nums = [1,2,3,4,4,3,2,1], n = 4', '[1,4,2,3,3,2,4,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2746', '1195', '3', 'nums = [1,1,2,2], n = 2', '[1,2,1,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2747', '1196', '1', 'arr = [1,2,3,4,5], k = 2', '[5,1]', 'Median is 3, the elements of the array sorted by the strongest are [5,1,4,2,3]. The strongest 2 elements are [5, 1]. [1, 5] is also <strong>accepted</strong> answer.\nPlease note that although |5 - 3| == |1 - 3| but 5 is stronger than 1 because 5 &gt; 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2748', '1196', '2', 'arr = [1,1,3,5,5], k = 2', '[5,5]', 'Median is 3, the elements of the array sorted by the strongest are [5,5,1,1,3]. The strongest 2 elements are [5, 5].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2749', '1196', '3', 'arr = [6,7,11,7,6,8], k = 5', '[11,8,6,6,7]', 'Median is 7, the elements of the array sorted by the strongest are [11,8,6,6,7,7].\nAny permutation of [11,8,6,6,7] is <strong>accepted</strong>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2750', '1197', '1', '[\"BrowserHistory\",\"visit\",\"visit\",\"visit\",\"back\",\"back\",\"forward\",\"visit\",\"forward\",\"back\",\"back\"]\n[[\"leetcode.com\"],[\"google.com\"],[\"facebook.com\"],[\"youtube.com\"],[1],[1],[1],[\"linkedin.com\"],[2],[2],[7]]', '[null,null,null,null,\"facebook.com\",\"google.com\",\"facebook.com\",null,\"linkedin.com\",\"google.com\",\"leetcode.com\"]', 'BrowserHistory browserHistory = new BrowserHistory(\"leetcode.com\");\nbrowserHistory.visit(\"google.com\");       // You are in \"leetcode.com\". Visit \"google.com\"\nbrowserHistory.visit(\"facebook.com\");     // You are in \"google.com\". Visit \"facebook.com\"\nbrowserHistory.visit(\"youtube.com\");      // You are in \"facebook.com\". Visit \"youtube.com\"\nbrowserHistory.back(1);                   // You are in \"youtube.com\", move back to \"facebook.com\" return \"facebook.com\"\nbrowserHistory.back(1);                   // You are in \"facebook.com\", move back to \"google.com\" return \"google.com\"\nbrowserHistory.forward(1);                // You are in \"google.com\", move forward to \"facebook.com\" return \"facebook.com\"\nbrowserHistory.visit(\"linkedin.com\");     // You are in \"facebook.com\". Visit \"linkedin.com\"\nbrowserHistory.forward(2);                // You are in \"linkedin.com\", you cannot move forward any steps.\nbrowserHistory.back(2);                   // You are in \"linkedin.com\", move back two steps to \"facebook.com\" then to \"google.com\". return \"google.com\"\nbrowserHistory.back(7);                   // You are in \"google.com\", you can move back only one step to \"leetcode.com\". return \"leetcode.com\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2751', '1198', '1', 'houses = [0,0,0,0,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3', '9', 'Paint houses of this way [1,2,2,1,1]\nThis array contains target = 3 neighborhoods, [{1}, {2,2}, {1,1}].\nCost of paint all houses (1 + 1 + 1 + 1 + 5) = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2752', '1198', '2', 'houses = [0,2,1,2,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3', '11', 'Some houses are already painted, Paint the houses of this way [2,2,1,2,2]\nThis array contains target = 3 neighborhoods, [{2,2}, {1}, {2,2}]. \nCost of paint the first and last house (10 + 1) = 11.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2753', '1198', '3', 'houses = [3,1,2,3], cost = [[1,1,1],[1,1,1],[1,1,1],[1,1,1]], m = 4, n = 3, target = 3', '-1', 'Houses are already painted with a total of 4 neighborhoods [{3},{1},{2},{3}] different of target = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2754', '1199', '1', 'prices = [8,4,6,2,3]', '[4,2,4,2,3]', 'For item 0 with price[0]=8 you will receive a discount equivalent to prices[1]=4, therefore, the final price you will pay is 8 - 4 = 4.\nFor item 1 with price[1]=4 you will receive a discount equivalent to prices[3]=2, therefore, the final price you will pay is 4 - 2 = 2.\nFor item 2 with price[2]=6 you will receive a discount equivalent to prices[3]=2, therefore, the final price you will pay is 6 - 2 = 4.\nFor items 3 and 4 you will not receive any discount at all.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2755', '1199', '2', 'prices = [1,2,3,4,5]', '[1,2,3,4,5]', 'In this case, for all items, you will not receive any discount at all.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2756', '1199', '3', 'prices = [10,1,1,6]', '[9,0,1,6]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2757', '1200', '1', '[\"SubrectangleQueries\",\"getValue\",\"updateSubrectangle\",\"getValue\",\"getValue\",\"updateSubrectangle\",\"getValue\",\"getValue\"]\n[[[[1,2,1],[4,3,4],[3,2,1],[1,1,1]]],[0,2],[0,0,3,2,5],[0,2],[3,1],[3,0,3,2,10],[3,1],[0,2]]', '[null,1,null,5,5,null,10,5]', 'SubrectangleQueries subrectangleQueries = new SubrectangleQueries([[1,2,1],[4,3,4],[3,2,1],[1,1,1]]);  \n// The initial rectangle (4x3) looks like:\n// 1 2 1\n// 4 3 4\n// 3 2 1\n// 1 1 1\nsubrectangleQueries.getValue(0, 2); // return 1\nsubrectangleQueries.updateSubrectangle(0, 0, 3, 2, 5);\n// After this update the rectangle looks like:\n// 5 5 5\n// 5 5 5\n// 5 5 5\n// 5 5 5 \nsubrectangleQueries.getValue(0, 2); // return 5\nsubrectangleQueries.getValue(3, 1); // return 5\nsubrectangleQueries.updateSubrectangle(3, 0, 3, 2, 10);\n// After this update the rectangle looks like:\n// 5   5   5\n// 5   5   5\n// 5   5   5\n// 10  10  10 \nsubrectangleQueries.getValue(3, 1); // return 10\nsubrectangleQueries.getValue(0, 2); // return 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2758', '1200', '2', '[\"SubrectangleQueries\",\"getValue\",\"updateSubrectangle\",\"getValue\",\"getValue\",\"updateSubrectangle\",\"getValue\"]\n[[[[1,1,1],[2,2,2],[3,3,3]]],[0,0],[0,0,2,2,100],[0,0],[2,2],[1,1,2,2,20],[2,2]]', '[null,1,null,100,100,null,20]', 'SubrectangleQueries subrectangleQueries = new SubrectangleQueries([[1,1,1],[2,2,2],[3,3,3]]);\nsubrectangleQueries.getValue(0, 0); // return 1\nsubrectangleQueries.updateSubrectangle(0, 0, 2, 2, 100);\nsubrectangleQueries.getValue(0, 0); // return 100\nsubrectangleQueries.getValue(2, 2); // return 100\nsubrectangleQueries.updateSubrectangle(1, 1, 2, 2, 20);\nsubrectangleQueries.getValue(2, 2); // return 20');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2759', '1201', '1', 'arr = [3,2,2,4,3], target = 3', '2', 'Only two sub-arrays have sum = 3 ([3] and [3]). The sum of their lengths is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2760', '1201', '2', 'arr = [7,3,4,7], target = 7', '2', 'Although we have three non-overlapping sub-arrays of sum = 7 ([7], [3,4] and [7]), but we will choose the first and third sub-arrays as the sum of their lengths is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2761', '1201', '3', 'arr = [4,3,2,6,2,3,4], target = 6', '-1', 'We have only one sub-array of sum = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2762', '1202', '1', 'houses = [1,4,8,10,20], k = 3', '5', 'Allocate mailboxes in position 3, 9 and 20.\nMinimum total distance from each houses to nearest mailboxes is |3-1| + |4-3| + |9-8| + |10-9| + |20-20| = 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2763', '1202', '2', 'houses = [2,3,5,12,18], k = 2', '9', 'Allocate mailboxes in position 3 and 14.\nMinimum total distance from each houses to nearest mailboxes is |2-3| + |3-3| + |5-3| + |12-14| + |18-14| = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2764', '1203', '1', 'nums = [1,2,3,4]', '[1,3,6,10]', 'Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2765', '1203', '2', 'nums = [1,1,1,1,1]', '[1,2,3,4,5]', 'Running sum is obtained as follows: [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2766', '1203', '3', 'nums = [3,1,2,10,1]', '[3,4,6,16,17]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2767', '1204', '1', 'arr = [5,5,4], k = 1', '1', ': Remove the single 4, only 5 is left.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2768', '1205', '1', 'bloomDay = [1,10,3,10,2], m = 3, k = 1', '3', 'Let us see what happened in the first three days. x means flower bloomed and _ means flower did not bloom in the garden.\nWe need 3 bouquets each should contain 1 flower.\nAfter day 1: [x, _, _, _, _]   // we can only make one bouquet.\nAfter day 2: [x, _, _, _, x]   // we can only make two bouquets.\nAfter day 3: [x, _, x, _, x]   // we can make 3 bouquets. The answer is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2769', '1205', '2', 'bloomDay = [1,10,3,10,2], m = 3, k = 2', '-1', 'We need 3 bouquets each has 2 flowers, that means we need 6 flowers. We only have 5 flowers so it is impossible to get the needed bouquets and we return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2770', '1205', '3', 'bloomDay = [7,7,7,7,12,7,7], m = 2, k = 3', '12', 'We need 2 bouquets each should have 3 flowers.\nHere is the garden after the 7 and 12 days:\nAfter day 7: [x, x, x, x, _, x, x]\nWe can make one bouquet of the first three flowers that bloomed. We cannot make another bouquet from the last three flowers that bloomed because they are not adjacent.\nAfter day 12: [x, x, x, x, x, x, x]\nIt is obvious that we can make two bouquets in different ways.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2771', '1206', '1', '[\"TreeAncestor\", \"getKthAncestor\", \"getKthAncestor\", \"getKthAncestor\"]\n[[7, [-1, 0, 0, 1, 1, 2, 2]], [3, 1], [5, 2], [6, 3]]', '[null, 1, 0, -1]', 'TreeAncestor treeAncestor = new TreeAncestor(7, [-1, 0, 0, 1, 1, 2, 2]);\ntreeAncestor.getKthAncestor(3, 1); // returns 1 which is the parent of 3\ntreeAncestor.getKthAncestor(5, 2); // returns 0 which is the grandparent of 5\ntreeAncestor.getKthAncestor(6, 3); // returns -1 because there is no such ancestor');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2772', '1207', '1', 'Activities table:\n+------------+------------+\n| sell_date  | product     |\n+------------+------------+\n| 2020-05-30 | Headphone  |\n| 2020-06-01 | Pencil     |\n| 2020-06-02 | Mask       |\n| 2020-05-30 | Basketball |\n| 2020-06-01 | Bible      |\n| 2020-06-02 | Mask       |\n| 2020-05-30 | T-Shirt    |\n+------------+------------+', '+------------+----------+------------------------------+\n| sell_date  | num_sold | products                     |\n+------------+----------+------------------------------+\n| 2020-05-30 | 3        | Basketball,Headphone,T-shirt |\n| 2020-06-01 | 2        | Bible,Pencil                 |\n| 2020-06-02 | 1        | Mask                         |\n+------------+----------+------------------------------+', 'For 2020-05-30, Sold items were (Headphone, Basketball, T-shirt), we sort them lexicographically and separate them by a comma.\nFor 2020-06-01, Sold items were (Pencil, Bible), we sort them lexicographically and separate them by a comma.\nFor 2020-06-02, the Sold item is (Mask), we just return it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2773', '1208', '1', 'n = 5, start = 0', '8', 'Array nums is equal to [0, 2, 4, 6, 8] where (0 ^ 2 ^ 4 ^ 6 ^ 8) = 8.\nWhere \"^\" corresponds to bitwise XOR operator.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2774', '1208', '2', 'n = 4, start = 3', '8', 'Array nums is equal to [3, 5, 7, 9] where (3 ^ 5 ^ 7 ^ 9) = 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2775', '1209', '1', 'names = [\"pes\",\"fifa\",\"gta\",\"pes(2019)\"]', '[\"pes\",\"fifa\",\"gta\",\"pes(2019)\"]', 'Let\'s see how the file system creates folder names:\n\"pes\" --&gt; not assigned before, remains \"pes\"\n\"fifa\" --&gt; not assigned before, remains \"fifa\"\n\"gta\" --&gt; not assigned before, remains \"gta\"\n\"pes(2019)\" --&gt; not assigned before, remains \"pes(2019)\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2776', '1209', '2', 'names = [\"gta\",\"gta(1)\",\"gta\",\"avalon\"]', '[\"gta\",\"gta(1)\",\"gta(2)\",\"avalon\"]', 'Let\'s see how the file system creates folder names:\n\"gta\" --&gt; not assigned before, remains \"gta\"\n\"gta(1)\" --&gt; not assigned before, remains \"gta(1)\"\n\"gta\" --&gt; the name is reserved, system adds (k), since \"gta(1)\" is also reserved, systems put k = 2. it becomes \"gta(2)\"\n\"avalon\" --&gt; not assigned before, remains \"avalon\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2777', '1209', '3', 'names = [\"onepiece\",\"onepiece(1)\",\"onepiece(2)\",\"onepiece(3)\",\"onepiece\"]', '[\"onepiece\",\"onepiece(1)\",\"onepiece(2)\",\"onepiece(3)\",\"onepiece(4)\"]', 'When the last folder is created, the smallest positive valid k is 4, and it becomes \"onepiece(4)\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2778', '1210', '1', 'rains = [1,2,3,4]', '[-1,-1,-1,-1]', 'After the first day full lakes are [1]\nAfter the second day full lakes are [1,2]\nAfter the third day full lakes are [1,2,3]\nAfter the fourth day full lakes are [1,2,3,4]\nThere\'s no day to dry any lake and there is no flood in any lake.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2779', '1210', '2', 'rains = [1,2,0,0,2,1]', '[-1,-1,2,1,-1,-1]', 'After the first day full lakes are [1]\nAfter the second day full lakes are [1,2]\nAfter the third day, we dry lake 2. Full lakes are [1]\nAfter the fourth day, we dry lake 1. There is no full lakes.\nAfter the fifth day, full lakes are [2].\nAfter the sixth day, full lakes are [1,2].\nIt is easy that this scenario is flood-free. [-1,-1,1,2,-1,-1] is another acceptable scenario.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2780', '1210', '3', 'rains = [1,2,0,1,2]', '[]', 'After the second day, full lakes are  [1,2]. We have to dry one lake in the third day.\nAfter that, it will rain over lakes [1,2]. It\'s easy to prove that no matter which lake you choose to dry in the 3rd day, the other one will flood.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2781', '1211', '1', 'n = 5, edges = [[0,1,1],[1,2,1],[2,3,2],[0,3,2],[0,4,3],[3,4,3],[1,4,6]]', '[[0,1],[2,3,4,5]]', 'The figure above describes the graph.\nThe following figure shows all the possible MSTs:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/06/04/msts.png\" style=\"width:540px;height:553px\"/>\nNotice that the two edges 0 and 1 appear in all MSTs, therefore they are critical edges, so we return them in the first list of the output.\nThe edges 2, 3, 4, and 5 are only part of some MSTs, therefore they are considered pseudo-critical edges. We add them to the second list of the output.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2782', '1211', '2', 'n = 4, edges = [[0,1,1],[1,2,1],[2,3,1],[0,3,1]]', '[[],[0,1,2,3]]', 'We can observe that since all 4 edges have equal weight, choosing any 3 edges from the given 4 will yield an MST. Therefore all 4 edges are pseudo-critical.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2783', '1212', '1', 'salary = [4000,3000,1000,2000]', '2500.00000', 'Minimum salary and maximum salary are 1000 and 4000 respectively.\nAverage salary excluding minimum and maximum salary is (2000+3000) / 2 = 2500');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2784', '1212', '2', 'salary = [1000,2000,3000]', '2000.00000', 'Minimum salary and maximum salary are 1000 and 3000 respectively.\nAverage salary excluding minimum and maximum salary is (2000) / 1 = 2000');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2785', '1213', '1', 'n = 12, k = 3', '3', 'Factors list is [1, 2, 3, 4, 6, 12], the 3<sup>rd</sup> factor is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2786', '1213', '2', 'n = 7, k = 2', '7', 'Factors list is [1, 7], the 2<sup>nd</sup> factor is 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2787', '1213', '3', 'n = 4, k = 4', '-1', 'Factors list is [1, 2, 4], there is only 3 factors. We should return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2788', '1214', '1', 'nums = [1,1,0,1]', '3', 'After deleting the number in position 2, [1,1,1] contains 3 numbers with value of 1\'s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2789', '1214', '2', 'nums = [0,1,1,1,0,1,1,0,1]', '5', 'After deleting the number in position 4, [0,1,1,1,1,1,0,1] longest subarray with value of 1\'s is [1,1,1,1,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2790', '1214', '3', 'nums = [1,1,1]', '2', 'You must delete one element.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2791', '1215', '1', 'n = 4, relations = [[2,1],[3,1],[1,4]], k = 2', '3', 'The figure above represents the given graph.\nIn the first semester, you can take courses 2 and 3.\nIn the second semester, you can take course 1.\nIn the third semester, you can take course 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2792', '1215', '2', 'n = 5, relations = [[2,1],[3,1],[4,1],[1,5]], k = 2', '4', 'The figure above represents the given graph.\nIn the first semester, you can only take courses 2 and 3 since you cannot take more than two per semester.\nIn the second semester, you can take course 4.\nIn the third semester, you can take course 1.\nIn the fourth semester, you can take course 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2793', '1216', '1', 'path = \"NES\"', 'false', 'Notice that the path doesn\'t cross any point more than once.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2794', '1216', '2', 'path = \"NESWW\"', 'true', 'Notice that the path visits the origin twice.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2795', '1217', '1', 'arr = [1,2,3,4,5,10,6,7,8,9], k = 5', 'true', 'Pairs are (1,9),(2,8),(3,7),(4,6) and (5,10).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2796', '1217', '2', 'arr = [1,2,3,4,5,6], k = 7', 'true', 'Pairs are (1,6),(2,5) and(3,4).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2797', '1217', '3', 'arr = [1,2,3,4,5,6], k = 10', 'false', 'You can try all possible pairs to see that there is no way to divide arr into 3 pairs each with sum divisible by 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2798', '1218', '1', 'nums = [3,5,6,7], target = 9', '4', 'There are 4 subsequences that satisfy the condition.\n[3] -&gt; Min value + max value &lt;= target (3 + 3 &lt;= 9)\n[3,5] -&gt; (3 + 5 &lt;= 9)\n[3,5,6] -&gt; (3 + 6 &lt;= 9)\n[3,6] -&gt; (3 + 6 &lt;= 9)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2799', '1218', '2', 'nums = [3,3,6,8], target = 10', '6', 'There are 6 subsequences that satisfy the condition. (nums can have repeated numbers).\n[3] , [3] , [3,3], [3,6] , [3,6] , [3,3,6]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2800', '1218', '3', 'nums = [2,3,3,4,6,7], target = 12', '61', 'There are 63 non-empty subsequences, two of them do not satisfy the condition ([6,7], [7]).\nNumber of valid subsequences (63 - 2 = 61).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2801', '1219', '1', 'points = [[1,3],[2,0],[5,10],[6,-10]], k = 1', '4', 'The first two points satisfy the condition |x<sub>i</sub> - x<sub>j</sub>| &lt;= 1 and if we calculate the equation we get 3 + 0 + |1 - 2| = 4. Third and fourth points also satisfy the condition and give a value of 10 + -10 + |5 - 6| = 1.\nNo other pairs satisfy the condition, so we return the max of 4 and 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2802', '1219', '2', 'points = [[0,0],[3,0],[9,2]], k = 3', '3', 'Only the first two points have an absolute difference of 3 or less in the x-values, and give the value of 0 + 0 + |0 - 3| = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2803', '1220', '1', 'arr = [3,5,1]', 'true', 'We can reorder the elements as [1,3,5] or [5,3,1] with differences 2 and -2 respectively, between each consecutive elements.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2804', '1220', '2', 'arr = [1,2,4]', 'false', 'There is no way to reorder the elements to obtain an arithmetic progression.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2805', '1221', '1', 'n = 4, left = [4,3], right = [0,1]', '4', 'In the image above:\n-The ant at index 0 is named A and going to the right.\n-The ant at index 1 is named B and going to the right.\n-The ant at index 3 is named C and going to the left.\n-The ant at index 4 is named D and going to the left.\nThe last moment when an ant was on the plank is t = 4 seconds. After that, it falls immediately out of the plank. (i.e., We can say that at t = 4.0000000001, there are no ants on the plank).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2806', '1221', '2', 'n = 7, left = [], right = [0,1,2,3,4,5,6,7]', '7', 'All ants are going to the right, the ant at index 0 needs 7 seconds to fall.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2807', '1221', '3', 'n = 7, left = [0,1,2,3,4,5,6,7], right = []', '7', 'All ants are going to the left, the ant at index 7 needs 7 seconds to fall.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2808', '1222', '1', 'mat = [[1,0,1],[1,1,0],[1,1,0]]', '13', 'There are 6 rectangles of side 1x1.\nThere are 2 rectangles of side 1x2.\nThere are 3 rectangles of side 2x1.\nThere is 1 rectangle of side 2x2. \nThere is 1 rectangle of side 3x1.\nTotal number of rectangles = 6 + 2 + 3 + 1 + 1 = 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2809', '1222', '2', 'mat = [[0,1,1,0],[0,1,1,1],[1,1,1,0]]', '24', 'There are 8 rectangles of side 1x1.\nThere are 5 rectangles of side 1x2.\nThere are 2 rectangles of side 1x3. \nThere are 4 rectangles of side 2x1.\nThere are 2 rectangles of side 2x2. \nThere are 2 rectangles of side 3x1. \nThere is 1 rectangle of side 3x2. \nTotal number of rectangles = 8 + 5 + 2 + 4 + 2 + 2 + 1 = 24.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2810', '1223', '1', 'num = \"4321\", k = 4', '\"1342\"', 'The steps to obtain the minimum integer from 4321 with 4 adjacent swaps are shown.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2811', '1223', '2', 'num = \"100\", k = 1', '\"010\"', 'It\'s ok for the output to have leading zeros, but the input is guaranteed not to have any leading zeros.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2812', '1223', '3', 'num = \"36789\", k = 1000', '\"36789\"', 'We can keep the number without any swaps.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2813', '1224', '1', 'date = \"20th Oct 2052\"', '\"2052-10-20\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2814', '1224', '2', 'date = \"6th Jun 1933\"', '\"1933-06-06\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2815', '1224', '3', 'date = \"26th May 1960\"', '\"1960-05-26\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2816', '1225', '1', 'nums = [1,2,3,4], n = 4, left = 1, right = 5', '13', 'All subarray sums are 1, 3, 6, 10, 2, 5, 9, 3, 7, 4. After sorting them in non-decreasing order we have the new array [1, 2, 3, 3, 4, 5, 6, 7, 9, 10]. The sum of the numbers from index le = 1 to ri = 5 is 1 + 2 + 3 + 3 + 4 = 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2817', '1225', '2', 'nums = [1,2,3,4], n = 4, left = 3, right = 4', '6', 'The given array is the same as example 1. We have the new array [1, 2, 3, 3, 4, 5, 6, 7, 9, 10]. The sum of the numbers from index le = 3 to ri = 4 is 3 + 3 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2818', '1225', '3', 'nums = [1,2,3,4], n = 4, left = 1, right = 10', '50', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2819', '1226', '1', 'nums = [5,3,2,4]', '0', 'We can make at most 3 moves.\nIn the first move, change 2 to 3. nums becomes [5,3,3,4].\nIn the second move, change 4 to 3. nums becomes [5,3,3,3].\nIn the third move, change 5 to 3. nums becomes [3,3,3,3].\nAfter performing 3 moves, the difference between the minimum and maximum is 3 - 3 = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2820', '1226', '2', 'nums = [1,5,0,10,14]', '1', 'We can make at most 3 moves.\nIn the first move, change 5 to 0. nums becomes [1,0,0,10,14].\nIn the second move, change 10 to 0. nums becomes [1,0,0,0,14].\nIn the third move, change 14 to 1. nums becomes [1,0,0,0,1].\nAfter performing 3 moves, the difference between the minimum and maximum is 1 - 0 = 1.\nIt can be shown that there is no way to make the difference 0 in 3 moves.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2821', '1226', '3', 'nums = [3,100,20]', '0', 'We can make at most 3 moves.\nIn the first move, change 100 to 7. nums becomes [3,7,20].\nIn the second move, change 20 to 7. nums becomes [3,7,7].\nIn the third move, change 3 to 7. nums becomes [7,7,7].\nAfter performing 3 moves, the difference between the minimum and maximum is 7 - 7 = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2822', '1227', '1', 'n = 1', 'true', 'Alice can remove 1 stone winning the game because Bob doesn\'t have any moves.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2823', '1227', '2', 'n = 2', 'false', 'Alice can only remove 1 stone, after that Bob removes the last one winning the game (2 -&gt; 1 -&gt; 0).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2824', '1227', '3', 'n = 4', 'true', 'n is already a perfect square, Alice can win with one move, removing 4 stones (4 -&gt; 0).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2825', '1228', '1', 'nums = [1,2,3,1,1,3]', '4', 'There are 4 good pairs (0,3), (0,4), (3,4), (2,5) 0-indexed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2826', '1228', '2', 'nums = [1,1,1,1]', '6', 'Each pair in the array are <em>good</em>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2827', '1228', '3', 'nums = [1,2,3]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2828', '1229', '1', 's = \"0110111\"', '9', 'There are 9 substring in total with only 1\'s characters.\n\"1\" -&gt; 5 times.\n\"11\" -&gt; 3 times.\n\"111\" -&gt; 1 time.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2829', '1229', '2', 's = \"101\"', '2', 'Substring \"1\" is shown 2 times in s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2830', '1229', '3', 's = \"111111\"', '21', 'Each substring contains only 1\'s characters.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2831', '1230', '1', 'n = 3, edges = [[0,1],[1,2],[0,2]], succProb = [0.5,0.5,0.2], start = 0, end = 2', '0.25000', 'There are two paths from start to end, one having a probability of success = 0.2 and the other has 0.5 * 0.5 = 0.25.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2832', '1230', '2', 'n = 3, edges = [[0,1],[1,2],[0,2]], succProb = [0.5,0.5,0.3], start = 0, end = 2', '0.30000', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2833', '1230', '3', 'n = 3, edges = [[0,1]], succProb = [0.5], start = 0, end = 2', '0.00000', 'There is no path between 0 and 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2834', '1231', '1', 'positions = [[0,1],[1,0],[1,2],[2,1]]', '4.00000', 'As shown, you can see that choosing [x<sub>centre</sub>, y<sub>centre</sub>] = [1, 1] will make the distance to each customer = 1, the sum of all distances is 4 which is the minimum possible we can achieve.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2835', '1231', '2', 'positions = [[1,1],[3,3]]', '2.82843', 'The minimum possible sum of distances = sqrt(2) + sqrt(2) = 2.82843');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2836', '1232', '1', 'Users table:\n+---------+-----------+-------------------------+\n| user_id | name      | mail                    |\n+---------+-----------+-------------------------+\n| 1       | Winston   | winston@leetcode.com    |\n| 2       | Jonathan  | jonathanisgreat         |\n| 3       | Annabelle | bella-@leetcode.com     |\n| 4       | Sally     | sally.come@leetcode.com |\n| 5       | Marwan    | quarz#2020@leetcode.com |\n| 6       | David     | david69@gmail.com       |\n| 7       | Shapiro   | .shapo@leetcode.com     |\n+---------+-----------+-------------------------+', '+---------+-----------+-------------------------+\n| user_id | name      | mail                    |\n+---------+-----------+-------------------------+\n| 1       | Winston   | winston@leetcode.com    |\n| 3       | Annabelle | bella-@leetcode.com     |\n| 4       | Sally     | sally.come@leetcode.com |\n+---------+-----------+-------------------------+', 'The mail of user 2 does not have a domain.\nThe mail of user 5 has the # sign which is not allowed.\nThe mail of user 6 does not have the leetcode domain.\nThe mail of user 7 starts with a period.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2837', '1233', '1', 'numBottles = 9, numExchange = 3', '13', 'You can exchange 3 empty bottles to get 1 full water bottle.\nNumber of water bottles you can drink: 9 + 3 + 1 = 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2838', '1233', '2', 'numBottles = 15, numExchange = 4', '19', 'You can exchange 4 empty bottles to get 1 full water bottle. \nNumber of water bottles you can drink: 15 + 3 + 1 = 19.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2839', '1234', '1', 'n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], labels = \"abaedcd\"', '[2,1,1,1,1,1,1]', 'Node 0 has label \'a\' and its sub-tree has node 2 with label \'a\' as well, thus the answer is 2. Notice that any node is part of its sub-tree.\nNode 1 has a label \'b\'. The sub-tree of node 1 contains nodes 1,4 and 5, as nodes 4 and 5 have different labels than node 1, the answer is just 1 (the node itself).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2840', '1234', '2', 'n = 4, edges = [[0,1],[1,2],[0,3]], labels = \"bbbb\"', '[4,2,1,1]', 'The sub-tree of node 2 contains only node 2, so the answer is 1.\nThe sub-tree of node 3 contains only node 3, so the answer is 1.\nThe sub-tree of node 1 contains nodes 1 and 2, both have label \'b\', thus the answer is 2.\nThe sub-tree of node 0 contains nodes 0, 1, 2 and 3, all with label \'b\', thus the answer is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2841', '1234', '3', 'n = 5, edges = [[0,1],[0,2],[1,3],[0,4]], labels = \"aabab\"', '[3,2,1,1,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2842', '1235', '1', 's = \"adefaddaccc\"', '[\"e\",\"f\",\"ccc\"]', 'The following are all the possible substrings that meet the conditions:\n[\n  \"adefaddaccc\"\n  \"adefadda\",\n  \"ef\",\n  \"e\",\n  \"f\",\n  \"ccc\",\n]\nIf we choose the first string, we cannot choose anything else and we\'d get only 1. If we choose \"adefadda\", we are left with \"ccc\" which is the only one that doesn\'t overlap, thus obtaining 2 substrings. Notice also, that it\'s not optimal to choose \"ef\" since it can be split into two. Therefore, the optimal way is to choose [\"e\",\"f\",\"ccc\"] which gives us 3 substrings. No other solution of the same number of substrings exist.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2843', '1235', '2', 's = \"abbaccd\"', '[\"d\",\"bb\",\"cc\"]\n<b>', '</b>Notice that while the set of substrings [\"d\",\"abba\",\"cc\"] also has length 3, it\'s considered incorrect since it has larger total length.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2844', '1236', '1', 'arr = [9,12,3,7,15], target = 5', '2', 'Calling func with all the pairs of [l,r] = [[0,0],[1,1],[2,2],[3,3],[4,4],[0,1],[1,2],[2,3],[3,4],[0,2],[1,3],[2,4],[0,3],[1,4],[0,4]], Winston got the following results [9,12,3,7,15,8,0,3,7,0,0,3,0,0,0]. The value closest to 5 is 7 and 3, thus the minimum difference is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2845', '1236', '2', 'arr = [1000000,1000000,1000000], target = 1', '999999', 'Winston called the func with all possible values of [l,r] and he always got 1000000, thus the min difference is 999999.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2846', '1236', '3', 'arr = [1,2,4,8,16], target = 0', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2847', '1237', '1', 'low = 3, high = 7', '3\n<b>', '</b>The odd numbers between 3 and 7 are [3,5,7].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2848', '1237', '2', 'low = 8, high = 10', '1\n<b>', '</b>The odd numbers between 8 and 10 are [9].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2849', '1238', '1', 'arr = [1,3,5]', '4', 'All subarrays are [[1],[1,3],[1,3,5],[3],[3,5],[5]]\nAll sub-arrays sum are [1,4,9,3,8,5].\nOdd sums are [1,9,3,5] so the answer is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2850', '1238', '2', 'arr = [2,4,6]', '0', 'All subarrays are [[2],[2,4],[2,4,6],[4],[4,6],[6]]\nAll sub-arrays sum are [2,6,12,4,10,6].\nAll sub-arrays have even sum and the answer is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2851', '1238', '3', 'arr = [1,2,3,4,5,6,7]', '16', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2852', '1239', '1', 's = \"aacaba\"', '2', 'There are 5 ways to split <code>\"aacaba\"</code> and 2 of them are good. \n(\"a\", \"acaba\") Left string and right string contains 1 and 3 different letters respectively.\n(\"aa\", \"caba\") Left string and right string contains 1 and 3 different letters respectively.\n(\"aac\", \"aba\") Left string and right string contains 2 and 2 different letters respectively (good split).\n(\"aaca\", \"ba\") Left string and right string contains 2 and 2 different letters respectively (good split).\n(\"aacab\", \"a\") Left string and right string contains 3 and 1 different letters respectively.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2853', '1239', '2', 's = \"abcd\"', '1', 'Split the string as follows (\"ab\", \"cd\").');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2854', '1240', '1', 'target = [1,2,3,2,1]', '3', 'We need at least 3 operations to form the target array from the initial array.\n[<strong><u>0,0,0,0,0</u></strong>] increment 1 from index 0 to 4 (inclusive).\n[1,<strong><u>1,1,1</u></strong>,1] increment 1 from index 1 to 3 (inclusive).\n[1,2,<strong><u>2</u></strong>,2,1] increment 1 at index 2.\n[1,2,3,2,1] target array is formed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2855', '1240', '2', 'target = [3,1,1,2]', '4', '[<strong><u>0,0,0,0</u></strong>] -&gt; [1,1,1,<strong><u>1</u></strong>] -&gt; [<strong><u>1</u></strong>,1,1,2] -&gt; [<strong><u>2</u></strong>,1,1,2] -&gt; [3,1,1,2]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2856', '1240', '3', 'target = [3,1,5,4,2]', '7', '[<strong><u>0,0,0,0,0</u></strong>] -&gt; [<strong><u>1</u></strong>,1,1,1,1] -&gt; [<strong><u>2</u></strong>,1,1,1,1] -&gt; [3,1,<strong><u>1,1,1</u></strong>] -&gt; [3,1,<strong><u>2,2</u></strong>,2] -&gt; [3,1,<strong><u>3,3</u></strong>,2] -&gt; [3,1,<strong><u>4</u></strong>,4,2] -&gt; [3,1,5,4,2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2857', '1241', '1', 'Patients table:\n+------------+--------------+--------------+\n| patient_id | patient_name | conditions   |\n+------------+--------------+--------------+\n| 1          | Daniel       | YFEV COUGH   |\n| 2          | Alice        |              |\n| 3          | Bob          | DIAB100 MYOP |\n| 4          | George       | ACNE DIAB100 |\n| 5          | Alain        | DIAB201      |\n+------------+--------------+--------------+', '+------------+--------------+--------------+\n| patient_id | patient_name | conditions   |\n+------------+--------------+--------------+\n| 3          | Bob          | DIAB100 MYOP |\n| 4          | George       | ACNE DIAB100 | \n+------------+--------------+--------------+', 'Bob and George both have a condition that starts with DIAB1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2858', '1242', '1', 's = \"codeleet\", <code>indices</code> = [4,5,6,7,0,2,1,3]', '\"leetcode\"', 'As shown, \"codeleet\" becomes \"leetcode\" after shuffling.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2859', '1242', '2', 's = \"abc\", <code>indices</code> = [0,1,2]', '\"abc\"', 'After shuffling, each character remains in its position.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2860', '1243', '1', 'target = \"10111\"', '3', 'Initially, s = \"00000\".\nChoose index i = 2: \"00<u>000</u>\" -&gt; \"00<u>111</u>\"\nChoose index i = 0: \"<u>00111</u>\" -&gt; \"<u>11000</u>\"\nChoose index i = 1: \"1<u>1000</u>\" -&gt; \"1<u>0111</u>\"\nWe need at least 3 flip operations to form target.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2861', '1243', '2', 'target = \"101\"', '3', 'Initially, s = \"000\".\nChoose index i = 0: \"<u>000</u>\" -&gt; \"<u>111</u>\"\nChoose index i = 1: \"1<u>11</u>\" -&gt; \"1<u>00</u>\"\nChoose index i = 2: \"10<u>0</u>\" -&gt; \"10<u>1</u>\"\nWe need at least 3 flip operations to form target.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2862', '1243', '3', 'target = \"00000\"', '0', 'We do not need any operations since the initial s already equals target.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2863', '1244', '1', 'root = [1,2,3,null,4], distance = 3', '1', 'The leaf nodes of the tree are 3 and 4 and the length of the shortest path between them is 3. This is the only good pair.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2864', '1244', '2', 'root = [1,2,3,4,5,6,7], distance = 3', '2', 'The good pairs are [4,5] and [6,7] with shortest path = 2. The pair [4,6] is not good because the length of ther shortest path between them is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2865', '1244', '3', 'root = [7,1,4,6,null,5,3,null,null,null,null,null,2], distance = 3', '1', 'The only good pair is [2,5].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2866', '1245', '1', 's = \"aaabcccd\", k = 2', '4\n<b>', '</b>Compressing s without deleting anything will give us \"a3bc3d\" of length 6. Deleting any of the characters \'a\' or \'c\' would at most decrease the length of the compressed string to 5, for instance delete 2 \'a\' then we will have s = \"abcccd\" which compressed is abc3d. Therefore, the optimal way is to delete \'b\' and \'d\', then the compressed version of s will be \"a3c3\" of length 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2867', '1245', '2', 's = \"aabbaa\", k = 2', '2\n<b>', '</b>If we delete both \'b\' characters, the resulting compressed string would be \"a4\" of length 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2868', '1245', '3', 's = \"aaaaaaaaaaa\", k = 0', '3', 'Since k is zero, we cannot delete anything. The compressed string is \"a11\" of length 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2869', '1246', '1', 'arr = [3,0,1,1,9,7], a = 7, b = 2, c = 3', '4', 'There are 4 good triplets: [(3,0,1), (3,0,1), (3,1,1), (0,1,1)].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2870', '1246', '2', 'arr = [1,1,2,2,3], a = 0, b = 0, c = 1', '0', 'No triplet satisfies all conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2871', '1247', '1', 'arr = [2,1,3,5,4,6,7], k = 2', '5', 'Let\'s see the rounds of the game:\nRound |       arr       | winner | win_count\n  1   | [2,1,3,5,4,6,7] | 2      | 1\n  2   | [2,3,5,4,6,7,1] | 3      | 1\n  3   | [3,5,4,6,7,1,2] | 5      | 1\n  4   | [5,4,6,7,1,2,3] | 5      | 2\nSo we can see that 4 rounds will be played and 5 is the winner because it wins 2 consecutive games.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2872', '1247', '2', 'arr = [3,2,1], k = 10', '3', '3 will win the first 10 rounds consecutively.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2873', '1248', '1', 'grid = [[0,0,1],[1,1,0],[1,0,0]]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2874', '1248', '2', 'grid = [[0,1,1,0],[0,1,1,0],[0,1,1,0],[0,1,1,0]]', '-1', 'All rows are similar, swaps have no effect on the grid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2875', '1248', '3', 'grid = [[1,0,0],[1,1,0],[1,1,1]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2876', '1249', '1', 'nums1 = [2,4,5,8,10], nums2 = [4,6,8,9]', '30', 'Valid paths:\n[2,4,5,8,10], [2,4,5,8,9], [2,4,6,8,9], [2,4,6,8,10],  (starting from nums1)\n[4,6,8,9], [4,5,8,10], [4,5,8,9], [4,6,8,10]    (starting from nums2)\nThe maximum is obtained with the path in green <strong>[2,4,6,8,10]</strong>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2877', '1249', '2', 'nums1 = [1,3,5,7,9], nums2 = [3,5,100]', '109', 'Maximum sum is obtained with the path <strong>[1,3,5,100]</strong>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2878', '1249', '3', 'nums1 = [1,2,3,4,5], nums2 = [6,7,8,9,10]', '40', 'There are no common elements between nums1 and nums2.\nMaximum sum is obtained with the path [6,7,8,9,10].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2879', '1250', '1', 'arr = [2,3,4,7,11], k = 5', '9', 'The missing positive integers are [1,5,6,8,9,10,12,13,...]. The 5<sup>th</sup> missing positive integer is 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2880', '1250', '2', 'arr = [1,2,3,4], k = 2', '6', 'The missing positive integers are [5,6,7,...]. The 2<sup>nd</sup> missing positive integer is 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2881', '1251', '1', 's = \"input\", t = \"ouput\", k = 9', 'true\n<b>', '</b>In the 6th move, we shift \'i\' 6 times to get \'o\'. And in the 7th move we shift \'n\' to get \'u\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2882', '1251', '2', 's = \"abc\", t = \"bcd\", k = 10', 'false', 'We need to shift each character in s one time to convert it into t. We can shift \'a\' to \'b\' during the 1st move. However, there is no way to shift the other characters in the remaining moves to obtain t from s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2883', '1251', '3', 's = \"aab\", t = \"bbb\", k = 27', 'true\n<b>', '</b>In the 1st move, we shift the first \'a\' 1 time to get \'b\'. In the 27th move, we shift the second \'a\' 27 times to get \'b\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2884', '1252', '1', 's = \"(()))\"', '1', 'The second \'(\' has two matching \'))\', but the first \'(\' has only \')\' matching. We need to add one more \')\' at the end of the string to be \"(())))\" which is balanced.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2885', '1252', '2', 's = \"())\"', '0', 'The string is already balanced.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2886', '1252', '3', 's = \"))())(\"', '3', 'Add \'(\' to match the first \'))\', Add \'))\' to match the last \'(\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2887', '1253', '1', 's = \"3242415\"', '5', '\"24241\" is the longest awesome substring, we can form the palindrome \"24142\" with some swaps.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2888', '1253', '2', 's = \"12345678\"', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2889', '1253', '3', 's = \"213123\"', '6', '\"213123\" is the longest awesome substring, we can form the palindrome \"231132\" with some swaps.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2890', '1254', '1', 's = \"leEeetcode\"', '\"leetcode\"', 'In the first step, either you choose i = 1 or i = 2, both will result \"leEeetcode\" to be reduced to \"leetcode\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2891', '1254', '2', 's = \"abBAcC\"', '\"\"', 'We have many possible scenarios, and all lead to the same answer. For example:\n\"abBAcC\" --&gt; \"aAcC\" --&gt; \"cC\" --&gt; \"\"\n\"abBAcC\" --&gt; \"abBA\" --&gt; \"aA\" --&gt; \"\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2892', '1254', '3', 's = \"s\"', '\"s\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2893', '1255', '1', 'n = 3, k = 1', '\"0\"', 'S<sub>3</sub> is \"<strong><u>0</u></strong>111001\".\nThe 1<sup>st</sup> bit is \"0\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2894', '1255', '2', 'n = 4, k = 11', '\"1\"', 'S<sub>4</sub> is \"0111001101<strong><u>1</u></strong>0001\".\nThe 11<sup>th</sup> bit is \"1\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2895', '1256', '1', 'nums = [1,1,1,1,1], target = 2', '2', 'There are 2 non-overlapping subarrays [<strong>1,1</strong>,1,<strong>1,1</strong>] with sum equals to target(2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2896', '1256', '2', 'nums = [-1,3,5,1,4,2,-9], target = 6', '2', 'There are 3 subarrays with sum equal to 6.\n([5,1], [4,2], [3,5,1,4,2,-9]) but only the first 2 are non-overlapping.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2897', '1257', '1', 'n = 7, cuts = [1,3,4,5]', '16', 'Using cuts order = [1, 3, 4, 5] as in the input leads to the following scenario:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/21/e11.jpg\" style=\"width:350px;height:284px\"/>\nThe first cut is done to a rod of length 7 so the cost is 7. The second cut is done to a rod of length 6 (i.e. the second part of the first cut), the third is done to a rod of length 4 and the last cut is to a rod of length 3. The total cost is 7 + 6 + 4 + 3 = 20.\nRearranging the cuts to be [3, 5, 1, 4] for example will lead to a scenario with total cost = 16 (as shown in the example photo 7 + 4 + 3 + 2 = 16).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2898', '1257', '2', 'n = 9, cuts = [5,6,1,4,2]', '22', 'If you try the given cuts ordering the cost will be 25.\nThere are much ordering with total cost &lt;= 25, for example, the order [4, 6, 5, 2, 1] has total cost = 22 which is the minimum possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2899', '1258', '1', 'arr = [2,6,4,1]', 'false', 'There are no three consecutive odds.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2900', '1258', '2', 'arr = [1,2,34,3,4,5,7,23,12]', 'true', '[5,7,23] are three consecutive odds.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2901', '1259', '1', 'n = 3', '2', 'arr = [1, 3, 5]\nFirst operation choose x = 2 and y = 0, this leads arr to be [2, 3, 4]\nIn the second operation choose x = 2 and y = 0 again, thus arr = [3, 3, 3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2902', '1259', '2', 'n = 6', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2903', '1260', '1', 'position = [1,2,3,4,7], m = 3', '3', 'Distributing the 3 balls into baskets 1, 4 and 7 will make the magnetic force between ball pairs [3, 3, 6]. The minimum magnetic force is 3. We cannot achieve a larger minimum magnetic force than 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2904', '1260', '2', 'position = [5,4,3,2,1,1000000000], m = 2', '999999999', 'We can use baskets 1 and 1000000000.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2905', '1261', '1', 'n = 10', '4', 'You have 10 oranges.\nDay 1: Eat 1 orange,  10 - 1 = 9.  \nDay 2: Eat 6 oranges, 9 - 2*(9/3) = 9 - 6 = 3. (Since 9 is divisible by 3)\nDay 3: Eat 2 oranges, 3 - 2*(3/3) = 3 - 2 = 1. \nDay 4: Eat the last orange  1 - 1  = 0.\nYou need at least 4 days to eat the 10 oranges.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2906', '1261', '2', 'n = 6', '3', 'You have 6 oranges.\nDay 1: Eat 3 oranges, 6 - 6/2 = 6 - 3 = 3. (Since 6 is divisible by 2).\nDay 2: Eat 2 oranges, 3 - 2*(3/3) = 3 - 2 = 1. (Since 3 is divisible by 3)\nDay 3: Eat the last orange  1 - 1  = 0.\nYou need at least 3 days to eat the 6 oranges.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2907', '1262', '1', 'n = 987', '\"987\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2908', '1262', '2', 'n = 1234', '\"1.234\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2909', '1263', '1', 'n = 6, edges = [[0,1],[0,2],[2,5],[3,4],[4,2]]', '[0,3]\n<b>', '</b>It\'s not possible to reach all the nodes from a single vertex. From 0 we can reach [0,1,2,5]. From 3 we can reach [3,4,2,5]. So we output [0,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2910', '1263', '2', 'n = 5, edges = [[0,1],[2,1],[3,1],[1,4],[2,4]]', '[0,2,3]', 'Notice that vertices 0, 3 and 2 are not reachable from any other node, so we must include them. Also any of these vertices can reach nodes 1 and 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2911', '1264', '1', 'nums = [1,5]', '5', 'Increment by 1 (second element): [0, 0] to get [0, 1] (1 operation).\nDouble all the elements: [0, 1] -&gt; [0, 2] -&gt; [0, 4] (2 operations).\nIncrement by 1 (both elements)  [0, 4] -&gt; [1, 4] -&gt; <strong>[1, 5]</strong> (2 operations).\nTotal of operations: 1 + 2 + 2 = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2912', '1264', '2', 'nums = [2,2]', '3', 'Increment by 1 (both elements) [0, 0] -&gt; [0, 1] -&gt; [1, 1] (2 operations).\nDouble all the elements: [1, 1] -&gt; <strong>[2, 2]</strong> (1 operation).\nTotal of operations: 2 + 1 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2913', '1264', '3', 'nums = [4,2,5]', '6', '(initial)[0,0,0] -&gt; [1,0,0] -&gt; [1,0,1] -&gt; [2,0,2] -&gt; [2,1,2] -&gt; [4,2,4] -&gt; <strong>[4,2,5]</strong>(nums).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2914', '1265', '1', 'grid = [[\"a\",\"a\",\"a\",\"a\"],[\"a\",\"b\",\"b\",\"a\"],[\"a\",\"b\",\"b\",\"a\"],[\"a\",\"a\",\"a\",\"a\"]]', 'true', 'There are two valid cycles shown in different colors in the image below:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/15/11.png\" style=\"width:225px;height:163px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2915', '1265', '2', 'grid = [[\"c\",\"c\",\"c\",\"a\"],[\"c\",\"d\",\"c\",\"c\"],[\"c\",\"c\",\"e\",\"c\"],[\"f\",\"c\",\"c\",\"c\"]]', 'true', 'There is only one valid cycle highlighted in the image below:\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/15/2.png\" style=\"width:229px;height:157px\"/>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2916', '1265', '3', 'grid = [[\"a\",\"b\",\"b\"],[\"b\",\"z\",\"b\"],[\"b\",\"b\",\"a\"]]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2917', '1266', '1', 'n = 4, rounds = [1,3,1,2]', '[1,2]', 'The marathon starts at sector 1. The order of the visited sectors is as follows:\n1 --&gt; 2 --&gt; 3 (end of round 1) --&gt; 4 --&gt; 1 (end of round 2) --&gt; 2 (end of round 3 and the marathon)\nWe can see that both sectors 1 and 2 are visited twice and they are the most visited sectors. Sectors 3 and 4 are visited only once.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2918', '1266', '2', 'n = 2, rounds = [2,1,2,1,2,1,2,1,2]', '[2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2919', '1266', '3', 'n = 7, rounds = [1,3,5,7]', '[1,2,3,4,5,6,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2920', '1267', '1', 'piles = [2,4,1,2,7,8]', '9', 'Choose the triplet (2, 7, 8), Alice Pick the pile with 8 coins, you the pile with <strong>7</strong> coins and Bob the last one.\nChoose the triplet (1, 2, 4), Alice Pick the pile with 4 coins, you the pile with <strong>2</strong> coins and Bob the last one.\nThe maximum number of coins which you can have are: 7 + 2 = 9.\nOn the other hand if we choose this arrangement (1, <strong>2</strong>, 8), (2, <strong>4</strong>, 7) you only get 2 + 4 = 6 coins which is not optimal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2921', '1267', '2', 'piles = [2,4,5]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2922', '1267', '3', 'piles = [9,8,7,6,5,1,2,3,4]', '18', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2923', '1268', '1', 'arr = [3,5,1,2,4], m = 1', '4', 'Step 1: \"00<u>1</u>00\", groups: [\"1\"]\nStep 2: \"0010<u>1</u>\", groups: [\"1\", \"1\"]\nStep 3: \"<u>1</u>0101\", groups: [\"1\", \"1\", \"1\"]\nStep 4: \"1<u>1</u>101\", groups: [\"111\", \"1\"]\nStep 5: \"111<u>1</u>1\", groups: [\"11111\"]\nThe latest step at which there exists a group of size 1 is step 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2924', '1268', '2', 'arr = [3,1,5,4,2], m = 2', '-1', 'Step 1: \"00<u>1</u>00\", groups: [\"1\"]\nStep 2: \"<u>1</u>0100\", groups: [\"1\", \"1\"]\nStep 3: \"1010<u>1</u>\", groups: [\"1\", \"1\", \"1\"]\nStep 4: \"101<u>1</u>1\", groups: [\"1\", \"111\"]\nStep 5: \"1<u>1</u>111\", groups: [\"11111\"]\nNo group of size 2 exists during any step.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2925', '1269', '1', 'stoneValue = [6,2,3,4,5,5]', '18', 'In the first round, Alice divides the row to [6,2,3], [4,5,5]. The left row has the value 11 and the right row has value 14. Bob throws away the right row and Alice\'s score is now 11.\nIn the second round Alice divides the row to [6], [2,3]. This time Bob throws away the left row and Alice\'s score becomes 16 (11 + 5).\nThe last round Alice has only one choice to divide the row which is [2], [3]. Bob throws away the right row and Alice\'s score is now 18 (16 + 2). The game ends because only one stone is remaining in the row.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2926', '1269', '2', 'stoneValue = [7,7,7,7,7,7,7]', '28', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2927', '1269', '3', 'stoneValue = [4]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2928', '1270', '1', 'arr = [1,2,4,4,4,4], m = 1, k = 3', 'true', 'The pattern <strong>(4)</strong> of length 1 is repeated 4 consecutive times. Notice that pattern can be repeated k or more times but not less.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2929', '1270', '2', 'arr = [1,2,1,2,1,1,1,3], m = 2, k = 2', 'true', 'The pattern <strong>(1,2)</strong> of length 2 is repeated 2 consecutive times. Another valid pattern <strong>(2,1) is</strong> also repeated 2 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2930', '1270', '3', 'arr = [1,2,1,2,1,3], m = 2, k = 3', 'false', 'The pattern (1,2) is of length 2 but is repeated only 2 times. There is no pattern of length 2 that is repeated 3 or more times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2931', '1271', '1', 'nums = [1,-2,-3,4]', '4', 'The array nums already has a positive product of 24.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2932', '1271', '2', 'nums = [0,1,-2,-3,-4]', '3', 'The longest subarray with positive product is [1,-2,-3] which has a product of 6.\nNotice that we cannot include 0 in the subarray since that\'ll make the product 0 which is not positive.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2933', '1271', '3', 'nums = [-1,-2,-3,0,1]', '2', 'The longest subarray with positive product is [-1,-2] or [-2,-3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2934', '1272', '1', 'grid = [[0,1,1,0],[0,1,1,0],[0,0,0,0]]', '2', 'We need at least 2 days to get a disconnected grid.\nChange land grid[1][1] and grid[0][2] to water and get 2 disconnected island.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2935', '1272', '2', 'grid = [[1,1]]', '2', 'Grid of full water is also disconnected ([[1,1]] -&gt; [[0,0]]), 0 islands.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2936', '1273', '1', 'nums = [2,1,3]', '1', 'We can reorder nums to be [2,3,1] which will yield the same BST. There are no other ways to reorder nums which will yield the same BST.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2937', '1273', '2', 'nums = [3,4,5,1,2]', '5', 'The following 5 arrays will yield the same BST: \n[3,1,2,4,5]\n[3,1,4,2,5]\n[3,1,4,5,2]\n[3,4,1,2,5]\n[3,4,1,5,2]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2938', '1273', '3', 'nums = [1,2,3]', '0', 'There are no other orderings of nums that will yield the same BST.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2939', '1275', '1', 's = \"10101\"', '4', 'There are four ways to split s in 3 parts where each part contain the same number of letters \'1\'.\n\"1|010|1\"\n\"1|01|01\"\n\"10|10|1\"\n\"10|1|01\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2940', '1275', '2', 's = \"1001\"', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2941', '1275', '3', 's = \"0000\"', '3', 'There are three ways to split s in 3 parts.\n\"0|0|00\"\n\"0|00|0\"\n\"00|0|0\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2942', '1276', '1', 'arr = [1,2,3,10,4,2,3,5]', '3', 'The shortest subarray we can remove is [10,4,2] of length 3. The remaining elements after that will be [1,2,3,3,5] which are sorted.\nAnother correct solution is to remove the subarray [3,10,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2943', '1276', '2', 'arr = [5,4,3,2,1]', '4', 'Since the array is strictly decreasing, we can only keep a single element. Therefore we need to remove a subarray of length 4, either [5,4,3,2] or [4,3,2,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2944', '1276', '3', 'arr = [1,2,3]', '0', 'The array is already non-decreasing. We do not need to remove any elements.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2945', '1277', '1', 'locations = [2,3,6,8,4], start = 1, finish = 3, fuel = 5', '4', 'The following are all possible routes, each uses 5 units of fuel:\n1 -&gt; 3\n1 -&gt; 2 -&gt; 3\n1 -&gt; 4 -&gt; 3\n1 -&gt; 4 -&gt; 2 -&gt; 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2946', '1277', '2', 'locations = [4,3,1], start = 1, finish = 0, fuel = 6', '5', 'The following are all possible routes:\n1 -&gt; 0, used fuel = 1\n1 -&gt; 2 -&gt; 0, used fuel = 5\n1 -&gt; 2 -&gt; 1 -&gt; 0, used fuel = 5\n1 -&gt; 0 -&gt; 1 -&gt; 0, used fuel = 3\n1 -&gt; 0 -&gt; 1 -&gt; 0 -&gt; 1 -&gt; 0, used fuel = 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2947', '1277', '3', 'locations = [5,2,1], start = 0, finish = 2, fuel = 3', '0', 'It is impossible to get from 0 to 2 using only 3 units of fuel since the shortest route needs 4 units of fuel.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2948', '1278', '1', 's = \"?zs\"', '\"azs\"', 'There are 25 solutions for this problem. From \"azs\" to \"yzs\", all are valid. Only \"z\" is an invalid modification as the string will consist of consecutive repeating characters in \"zzs\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2949', '1278', '2', 's = \"ubv?w\"', '\"ubvaw\"', 'There are 24 solutions for this problem. Only \"v\" and \"w\" are invalid modifications as the strings will consist of consecutive repeating characters in \"ubvvw\" and \"ubvww\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2950', '1279', '1', 'nums1 = [7,4], nums2 = [5,2,8,9]', '1', 'Type 1: (1, 1, 2), nums1[1]<sup>2</sup> = nums2[1] * nums2[2]. (4<sup>2</sup> = 2 * 8).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2951', '1279', '2', 'nums1 = [1,1], nums2 = [1,1,1]', '9', 'All Triplets are valid, because 1<sup>2</sup> = 1 * 1.\nType 1: (0,0,1), (0,0,2), (0,1,2), (1,0,1), (1,0,2), (1,1,2).  nums1[i]<sup>2</sup> = nums2[j] * nums2[k].\nType 2: (0,0,1), (1,0,1), (2,0,1). nums2[i]<sup>2</sup> = nums1[j] * nums1[k].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2952', '1279', '3', 'nums1 = [7,7,8,3], nums2 = [1,2,9,7]', '2', 'There are 2 valid triplets.\nType 1: (3,0,2).  nums1[3]<sup>2</sup> = nums2[0] * nums2[2].\nType 2: (3,0,1).  nums2[3]<sup>2</sup> = nums1[0] * nums1[1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2953', '1280', '1', 'colors = \"abaac\", neededTime = [1,2,3,4,5]', '3', 'In the above image, \'a\' is blue, \'b\' is red, and \'c\' is green.\nBob can remove the blue balloon at index 2. This takes 3 seconds.\nThere are no longer two consecutive balloons of the same color. Total time = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2954', '1280', '2', 'colors = \"abc\", neededTime = [1,2,3]', '0', 'The rope is already colorful. Bob does not need to remove any balloons from the rope.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2955', '1280', '3', 'colors = \"aabaa\", neededTime = [1,2,3,4,1]', '2', 'Bob will remove the ballons at indices 0 and 4. Each ballon takes 1 second to remove.\nThere are no longer two consecutive balloons of the same color. Total time = 1 + 1 = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2956', '1281', '1', 'n = 4, edges = [[3,1,2],[3,2,3],[1,1,3],[1,2,4],[1,1,2],[2,3,4]]', '2', 'If we remove the 2 edges [1,1,2] and [1,1,3]. The graph will still be fully traversable by Alice and Bob. Removing any additional edge will not make it so. So the maximum number of edges we can remove is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2957', '1281', '2', 'n = 4, edges = [[3,1,2],[3,2,3],[1,1,4],[2,1,4]]', '0', 'Notice that removing any edge will not make the graph fully traversable by Alice and Bob.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2958', '1281', '3', 'n = 4, edges = [[3,2,3],[1,1,2],[2,3,4]]', '-1\n<b>', '</b>In the current graph, Alice cannot reach node 4 from the other nodes. Likewise, Bob cannot reach 1. Therefore it\'s impossible to make the graph fully traversable.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2959', '1282', '1', 'Visits\n+----------+-------------+\n| visit_id | customer_id |\n+----------+-------------+\n| 1        | 23          |\n| 2        | 9           |\n| 4        | 30          |\n| 5        | 54          |\n| 6        | 96          |\n| 7        | 54          |\n| 8        | 54          |\n+----------+-------------+\nTransactions\n+----------------+----------+--------+\n| transaction_id | visit_id | amount |\n+----------------+----------+--------+\n| 2              | 5        | 310    |\n| 3              | 5        | 300    |\n| 9              | 5        | 200    |\n| 12             | 1        | 910    |\n| 13             | 2        | 970    |\n+----------------+----------+--------+', '+-------------+----------------+\n| customer_id | count_no_trans |\n+-------------+----------------+\n| 54          | 2              |\n| 30          | 1              |\n| 96          | 1              |\n+-------------+----------------+', 'Customer with id = 23 visited the mall once and made one transaction during the visit with id = 12.\nCustomer with id = 9 visited the mall once and made one transaction during the visit with id = 13.\nCustomer with id = 30 visited the mall once and did not make any transactions.\nCustomer with id = 54 visited the mall three times. During 2 visits they did not make any transactions, and during one visit they made 3 transactions.\nCustomer with id = 96 visited the mall once and did not make any transactions.\nAs we can see, users with IDs 30 and 96 visited the mall one time without making any transactions. Also, user 54 visited the mall twice and did not make any transactions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2960', '1283', '1', 'mat = [[1,0,0],[0,0,1],[1,0,0]]', '1', '(1, 2) is a special position because mat[1][2] == 1 and all other elements in row 1 and column 2 are 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2961', '1283', '2', 'mat = [[1,0,0],[0,1,0],[0,0,1]]', '3', '(0, 0), (1, 1) and (2, 2) are special positions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2962', '1284', '1', 'n = 4, preferences = [[1, 2, 3], [3, 2, 0], [3, 1, 0], [1, 2, 0]], pairs = [[0, 1], [2, 3]]', '2', 'Friend 1 is unhappy because:\n- 1 is paired with 0 but prefers 3 over 0, and\n- 3 prefers 1 over 2.\nFriend 3 is unhappy because:\n- 3 is paired with 2 but prefers 1 over 2, and\n- 1 prefers 3 over 0.\nFriends 0 and 2 are happy.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2963', '1284', '2', 'n = 2, preferences = [[1], [0]], pairs = [[1, 0]]', '0', 'Both friends 0 and 1 are happy.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2964', '1284', '3', 'n = 4, preferences = [[1, 3, 2], [2, 3, 0], [1, 3, 0], [0, 2, 1]], pairs = [[1, 3], [0, 2]]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2965', '1285', '1', 'points = [[0,0],[2,2],[3,10],[5,2],[7,0]]', '20', '<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/08/26/c.png\" style=\"width:214px;height:268px\"/>\nWe can connect the points as shown above to get the minimum cost of 20.\nNotice that there is a unique path between every pair of points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2966', '1285', '2', 'points = [[3,12],[-2,5],[-4,1]]', '18', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2967', '1286', '1', 's = \"84532\", t = \"34852\"', 'true', 'You can transform s into t using the following sort operations:\n\"84<u>53</u>2\" (from index 2 to 3) -&gt; \"84<u>35</u>2\"\n\"<u>843</u>52\" (from index 0 to 2) -&gt; \"<u>348</u>52\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2968', '1286', '2', 's = \"34521\", t = \"23415\"', 'true', 'You can transform s into t using the following sort operations:\n\"<u>3452</u>1\" -&gt; \"<u>2345</u>1\"\n\"234<u>51</u>\" -&gt; \"234<u>15</u>\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2969', '1286', '3', 's = \"12345\", t = \"12435\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2970', '1287', '1', 'Users table:\n+------------+--------------+\n| account    | name         |\n+------------+--------------+\n| 900001     | Alice        |\n| 900002     | Bob          |\n| 900003     | Charlie      |\n+------------+--------------+\nTransactions table:\n+------------+------------+------------+---------------+\n| trans_id   | account    | amount     | transacted_on |\n+------------+------------+------------+---------------+\n| 1          | 900001     | 7000       |  2020-08-01   |\n| 2          | 900001     | 7000       |  2020-09-01   |\n| 3          | 900001     | -3000      |  2020-09-02   |\n| 4          | 900002     | 1000       |  2020-09-12   |\n| 5          | 900003     | 6000       |  2020-08-07   |\n| 6          | 900003     | 6000       |  2020-09-07   |\n| 7          | 900003     | -4000      |  2020-09-11   |\n+------------+------------+------------+---------------+', '+------------+------------+\n| name       | balance    |\n+------------+------------+\n| Alice      | 11000      |\n+------------+------------+', 'Alice\'s balance is (7000 + 7000 - 3000) = 11000.\nBob\'s balance is 1000.\nCharlie\'s balance is (6000 + 6000 - 4000) = 8000.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2971', '1288', '1', 'arr = [1,4,2,5,3]', '58', 'The odd-length subarrays of arr and their sums are:\n[1] = 1\n[4] = 4\n[2] = 2\n[5] = 5\n[3] = 3\n[1,4,2] = 7\n[4,2,5] = 11\n[2,5,3] = 10\n[1,4,2,5,3] = 15\nIf we add all these together we get 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2972', '1288', '2', 'arr = [1,2]', '3\n<b>', '</b>There are only 2 subarrays of odd length, [1] and [2]. Their sum is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2973', '1288', '3', 'arr = [10,11,12]', '66', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2974', '1289', '1', 'nums = [1,2,3,4,5], requests = [[1,3],[0,1]]', '19', 'One permutation of nums is [2,1,3,4,5] with the following result: \nrequests[0] -&gt; nums[1] + nums[2] + nums[3] = 1 + 3 + 4 = 8\nrequests[1] -&gt; nums[0] + nums[1] = 2 + 1 = 3\nTotal sum: 8 + 3 = 11.\nA permutation with a higher total sum is [3,5,4,2,1] with the following result:\nrequests[0] -&gt; nums[1] + nums[2] + nums[3] = 5 + 4 + 2 = 11\nrequests[1] -&gt; nums[0] + nums[1] = 3 + 5  = 8\nTotal sum: 11 + 8 = 19, which is the best that you can do.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2975', '1289', '2', 'nums = [1,2,3,4,5,6], requests = [[0,1]]', '11', 'A permutation with the max total sum is [6,5,4,3,2,1] with request sums [11].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2976', '1289', '3', 'nums = [1,2,3,4,5,10], requests = [[0,2],[1,3],[1,1]]', '47', 'A permutation with the max total sum is [4,10,5,3,2,1] with request sums [19,18,10].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2977', '1290', '1', 'nums = [3,1,4,2], p = 6', '1', 'The sum of the elements in nums is 10, which is not divisible by 6. We can remove the subarray [4], and the sum of the remaining elements is 6, which is divisible by 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2978', '1290', '2', 'nums = [6,3,5,2], p = 9', '2', 'We cannot remove a single element to get a sum divisible by 9. The best way is to remove the subarray [5,2], leaving us with [6,3] with sum 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2979', '1290', '3', 'nums = [1,2,3], p = 3', '0', 'Here the sum is 6. which is already divisible by 3. Thus we do not need to remove anything.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2980', '1291', '1', 'targetGrid = [[1,1,1,1],[1,2,2,1],[1,2,2,1],[1,1,1,1]]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2981', '1291', '2', 'targetGrid = [[1,1,1,1],[1,1,3,3],[1,1,3,4],[5,5,1,4]]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2982', '1291', '3', 'targetGrid = [[1,2,1],[2,1,2],[1,2,1]]', 'false', 'It is impossible to form targetGrid because it is not allowed to print the same color in different turns.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2983', '1292', '1', 'text = \"  this   is  a sentence \"', '\"this   is   a   sentence\"', 'There are a total of 9 spaces and 4 words. We can evenly divide the 9 spaces between the words: 9 / (4-1) = 3 spaces.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2984', '1292', '2', 'text = \" practice   makes   perfect\"', '\"practice   makes   perfect \"', 'There are a total of 7 spaces and 3 words. 7 / (3-1) = 3 spaces plus 1 extra space. We place this extra space at the end of the string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2985', '1293', '1', 's = \"ababccc\"', '5', ': One way to split maximally is [\'a\', \'b\', \'ab\', \'c\', \'cc\']. Splitting like [\'a\', \'b\', \'a\', \'b\', \'c\', \'cc\'] is not valid as you have \'a\' and \'b\' multiple times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2986', '1293', '2', 's = \"aba\"', '2', ': One way to split maximally is [\'a\', \'ba\'].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2987', '1293', '3', 's = \"aa\"', '1', ': It is impossible to split the string any further.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2988', '1294', '1', 'grid = [[-1,-2,-3],[-2,-3,-3],[-3,-3,-2]]', '-1', 'It is not possible to get non-negative product in the path from (0, 0) to (2, 2), so return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2989', '1294', '2', 'grid = [[1,-2,1],[1,-2,1],[3,-4,1]]', '8', 'Maximum non-negative product is shown (1 * 1 * -2 * -4 * 1 = 8).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2990', '1294', '3', 'grid = [[1,3],[0,-4]]', '0', 'Maximum non-negative product is shown (1 * 0 * -4 = 0).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2991', '1295', '1', 'cost = [[15, 96], [36, 2]]', '17', ': The optimal way of connecting the groups is:\n1--A\n2--B\nThis results in a total cost of 17.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2992', '1295', '2', 'cost = [[1, 3, 5], [4, 1, 1], [1, 5, 3]]', '4', ': The optimal way of connecting the groups is:\n1--A\n2--B\n2--C\n3--A\nThis results in a total cost of 4.\nNote that there are multiple points connected to point 2 in the first group and point A in the second group. This does not matter as there is no limit to the number of points that can be connected. We only care about the minimum total cost.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2993', '1295', '3', 'cost = [[2, 5, 1], [3, 4, 7], [8, 1, 2], [6, 2, 4], [3, 8, 8]]', '10', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2994', '1296', '1', 'logs = [\"d1/\",\"d2/\",\"../\",\"d21/\",\"./\"]', '2', 'Use this change folder operation \"../\" 2 times and go back to the main folder.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2995', '1296', '2', 'logs = [\"d1/\",\"d2/\",\"./\",\"d3/\",\"../\",\"d31/\"]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2996', '1296', '3', 'logs = [\"d1/\",\"../\",\"../\",\"../\"]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2997', '1297', '1', 'customers = [8,3], boardingCost = 5, runningCost = 6', '3', 'The numbers written on the gondolas are the number of people currently there.\n1. 8 customers arrive, 4 board and 4 wait for the next gondola, the wheel rotates. Current profit is 4 * $5 - 1 * $6 = $14.\n2. 3 customers arrive, the 4 waiting board the wheel and the other 3 wait, the wheel rotates. Current profit is 8 * $5 - 2 * $6 = $28.\n3. The final 3 customers board the gondola, the wheel rotates. Current profit is 11 * $5 - 3 * $6 = $37.\nThe highest profit was $37 after rotating the wheel 3 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2998', '1297', '2', 'customers = [10,9,6], boardingCost = 6, runningCost = 4', '7', '1. 10 customers arrive, 4 board and 6 wait for the next gondola, the wheel rotates. Current profit is 4 * $6 - 1 * $4 = $20.\n2. 9 customers arrive, 4 board and 11 wait (2 originally waiting, 9 newly waiting), the wheel rotates. Current profit is 8 * $6 - 2 * $4 = $40.\n3. The final 6 customers arrive, 4 board and 13 wait, the wheel rotates. Current profit is 12 * $6 - 3 * $4 = $60.\n4. 4 board and 9 wait, the wheel rotates. Current profit is 16 * $6 - 4 * $4 = $80.\n5. 4 board and 5 wait, the wheel rotates. Current profit is 20 * $6 - 5 * $4 = $100.\n6. 4 board and 1 waits, the wheel rotates. Current profit is 24 * $6 - 6 * $4 = $120.\n7. 1 boards, the wheel rotates. Current profit is 25 * $6 - 7 * $4 = $122.\nThe highest profit was $122 after rotating the wheel 7 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('2999', '1297', '3', 'customers = [3,4,0,5,1], boardingCost = 1, runningCost = 92', '-1', '1. 3 customers arrive, 3 board and 0 wait, the wheel rotates. Current profit is 3 * $1 - 1 * $92 = -$89.\n2. 4 customers arrive, 4 board and 0 wait, the wheel rotates. Current profit is 7 * $1 - 2 * $92 = -$177.\n3. 0 customers arrive, 0 board and 0 wait, the wheel rotates. Current profit is 7 * $1 - 3 * $92 = -$269.\n4. 5 customers arrive, 4 board and 1 waits, the wheel rotates. Current profit is 11 * $1 - 4 * $92 = -$357.\n5. 1 customer arrives, 2 board and 0 wait, the wheel rotates. Current profit is 13 * $1 - 5 * $92 = -$447.\nThe profit was never positive, so return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3000', '1298', '1', '[\"ThroneInheritance\", \"birth\", \"birth\", \"birth\", \"birth\", \"birth\", \"birth\", \"getInheritanceOrder\", \"death\", \"getInheritanceOrder\"]\n[[\"king\"], [\"king\", \"andy\"], [\"king\", \"bob\"], [\"king\", \"catherine\"], [\"andy\", \"matthew\"], [\"bob\", \"alex\"], [\"bob\", \"asha\"], [null], [\"bob\"], [null]]', '[null, null, null, null, null, null, null, [\"king\", \"andy\", \"matthew\", \"bob\", \"alex\", \"asha\", \"catherine\"], null, [\"king\", \"andy\", \"matthew\", \"alex\", \"asha\", \"catherine\"]]', 'ThroneInheritance t= new ThroneInheritance(\"king\"); // order: <strong>king</strong>\nt.birth(\"king\", \"andy\"); // order: king &gt; <strong>andy</strong>\nt.birth(\"king\", \"bob\"); // order: king &gt; andy &gt; <strong>bob</strong>\nt.birth(\"king\", \"catherine\"); // order: king &gt; andy &gt; bob &gt; <strong>catherine</strong>\nt.birth(\"andy\", \"matthew\"); // order: king &gt; andy &gt; <strong>matthew</strong> &gt; bob &gt; catherine\nt.birth(\"bob\", \"alex\"); // order: king &gt; andy &gt; matthew &gt; bob &gt; <strong>alex</strong> &gt; catherine\nt.birth(\"bob\", \"asha\"); // order: king &gt; andy &gt; matthew &gt; bob &gt; alex &gt; <strong>asha</strong> &gt; catherine\nt.getInheritanceOrder(); // return [\"king\", \"andy\", \"matthew\", \"bob\", \"alex\", \"asha\", \"catherine\"]\nt.death(\"bob\"); // order: king &gt; andy &gt; matthew &gt; <strong><s>bob</s></strong> &gt; alex &gt; asha &gt; catherine\nt.getInheritanceOrder(); // return [\"king\", \"andy\", \"matthew\", \"alex\", \"asha\", \"catherine\"]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3001', '1299', '1', 'n = 5, requests = [[0,1],[1,0],[0,1],[1,2],[2,0],[3,4]]', '5\n<strong>Explantion:</strong> Let\'s see the requests:\nFrom building 0 we have employees x and y and both want to move to building 1.\nFrom building 1 we have employees a and b and they want to move to buildings 2 and 0 respectively.\nFrom building 2 we have employee z and they want to move to building 0.\nFrom building 3 we have employee c and they want to move to building 4.\nFrom building 4 we don\'t have any requests.\nWe can achieve the requests of users x and b by swapping their places.\nWe can achieve the requests of users y, a and z by swapping the places in the 3 buildings.', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3002', '1299', '2', 'n = 3, requests = [[0,0],[1,2],[2,1]]', '3\n<strong>Explantion:</strong> Let\'s see the requests:\nFrom building 0 we have employee x and they want to stay in the same building 0.\nFrom building 1 we have employee y and they want to move to building 2.\nFrom building 2 we have employee z and they want to move to building 1.\nWe can achieve all the requests.', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3003', '1299', '3', 'n = 4, requests = [[0,3],[3,1],[1,2],[2,0]]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3004', '1300', '1', '[\"ParkingSystem\", \"addCar\", \"addCar\", \"addCar\", \"addCar\"]\n[[1, 1, 0], [1], [2], [3], [1]]', '[null, true, true, false, false]', 'ParkingSystem parkingSystem = new ParkingSystem(1, 1, 0);\nparkingSystem.addCar(1); // return true because there is 1 available slot for a big car\nparkingSystem.addCar(2); // return true because there is 1 available slot for a medium car\nparkingSystem.addCar(3); // return false because there is no available slot for a small car\nparkingSystem.addCar(1); // return false because there is no available slot for a big car. It is already occupied.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3005', '1301', '1', 'keyName = [\"daniel\",\"daniel\",\"daniel\",\"luis\",\"luis\",\"luis\",\"luis\"], keyTime = [\"10:00\",\"10:40\",\"11:00\",\"09:00\",\"11:00\",\"13:00\",\"15:00\"]', '[\"daniel\"]', '\"daniel\" used the keycard 3 times in a one-hour period (\"10:00\",\"10:40\", \"11:00\").');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3006', '1301', '2', 'keyName = [\"alice\",\"alice\",\"alice\",\"bob\",\"bob\",\"bob\",\"bob\"], keyTime = [\"12:01\",\"12:00\",\"18:00\",\"21:00\",\"21:20\",\"21:30\",\"23:00\"]', '[\"bob\"]', '\"bob\" used the keycard 3 times in a one-hour period (\"21:00\",\"21:20\", \"21:30\").');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3007', '1302', '1', 'rowSum = [3,8], colSum = [4,7]', '[[3,0],\n         [1,7]]', '0<sup>th</sup> row: 3 + 0 = 3 == rowSum[0]\n1<sup>st</sup> row: 1 + 7 = 8 == rowSum[1]\n0<sup>th</sup> column: 3 + 1 = 4 == colSum[0]\n1<sup>st</sup> column: 0 + 7 = 7 == colSum[1]\nThe row and column sums match, and all matrix elements are non-negative.\nAnother possible matrix is: [[1,2],\n                             [3,5]]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3008', '1302', '2', 'rowSum = [5,7,10], colSum = [8,6,8]', '[[0,5,0],\n         [6,1,0],\n         [2,0,8]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3009', '1303', '1', 'k = 3, arrival = [1,2,3,4,5], load = [5,2,3,3,3]', '[1]', 'All of the servers start out available.\nThe first 3 requests are handled by the first 3 servers in order.\nRequest 3 comes in. Server 0 is busy, so it\'s assigned to the next available server, which is 1.\nRequest 4 comes in. It cannot be handled since all servers are busy, so it is dropped.\nServers 0 and 2 handled one request each, while server 1 handled two requests. Hence server 1 is the busiest server.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3010', '1303', '2', 'k = 3, arrival = [1,2,3,4], load = [1,2,1,2]', '[0]', 'The first 3 requests are handled by first 3 servers.\nRequest 3 comes in. It is handled by server 0 since the server is available.\nServer 0 handled two requests, while servers 1 and 2 handled one request each. Hence server 0 is the busiest server.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3011', '1303', '3', 'k = 3, arrival = [1,2,3], load = [10,12,11]', '[0,1,2]', 'Each server handles a single request, so they are all considered the busiest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3012', '1304', '1', 'nums = [3,5]', '2', 'There are 2 values (3 and 5) that are greater than or equal to 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3013', '1304', '2', 'nums = [0,0]', '-1', 'No numbers fit the criteria for x.\nIf x = 0, there should be 0 numbers &gt;= x, but there are 2.\nIf x = 1, there should be 1 number &gt;= x, but there are 0.\nIf x = 2, there should be 2 numbers &gt;= x, but there are 0.\nx cannot be greater since there are only 2 numbers in nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3014', '1304', '3', 'nums = [0,4,3,0,4]', '3', 'There are 3 values that are greater than or equal to 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3015', '1306', '1', 'points = [[2,1],[2,2],[3,3]], angle = 90, location = [1,1]', '3', 'The shaded region represents your field of view. All points can be made visible in your field of view, including [3,3] even though [2,2] is in front and in the same line of sight.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3016', '1306', '2', 'points = [[2,1],[2,2],[3,4],[1,1]], angle = 90, location = [1,1]', '4', 'All points can be made visible in your field of view, including the one at your location.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3017', '1306', '3', 'points = [[1,0],[2,1]], angle = 13, location = [1,1]', '1', 'You can only see one of the two points, as shown above.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3018', '1307', '1', 'n = 3', '2', 'The binary representation of 3 is \"11\".\n\"<u>1</u>1\" -&gt; \"<u>0</u>1\" with the 2<sup>nd</sup> operation since the 0<sup>th</sup> bit is 1.\n\"0<u>1</u>\" -&gt; \"0<u>0</u>\" with the 1<sup>st</sup> operation.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3019', '1307', '2', 'n = 6', '4', 'The binary representation of 6 is \"110\".\n\"<u>1</u>10\" -&gt; \"<u>0</u>10\" with the 2<sup>nd</sup> operation since the 1<sup>st</sup> bit is 1 and 0<sup>th</sup> through 0<sup>th</sup> bits are 0.\n\"01<u>0</u>\" -&gt; \"01<u>1</u>\" with the 1<sup>st</sup> operation.\n\"0<u>1</u>1\" -&gt; \"0<u>0</u>1\" with the 2<sup>nd</sup> operation since the 0<sup>th</sup> bit is 1.\n\"00<u>1</u>\" -&gt; \"00<u>0</u>\" with the 1<sup>st</sup> operation.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3020', '1308', '1', 's = \"(1+(2*3)+((<u>8</u>)/4))+1\"', '3', 'Digit 8 is inside of 3 nested parentheses in the string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3021', '1308', '2', 's = \"(1)+((2))+(((<u>3</u>)))\"', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3022', '1309', '1', 'n = 4, roads = [[0,1],[0,3],[1,2],[1,3]]', '4', 'The network rank of cities 0 and 1 is 4 as there are 4 roads that are connected to either 0 or 1. The road between 0 and 1 is only counted once.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3023', '1309', '2', 'n = 5, roads = [[0,1],[0,3],[1,2],[1,3],[2,3],[2,4]]', '5', 'There are 5 roads that are connected to cities 1 or 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3024', '1309', '3', 'n = 8, roads = [[0,1],[1,2],[2,3],[2,4],[5,6],[5,7]]', '5', 'The network rank of 2 and 5 is 5. Notice that all the cities do not have to be connected.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3025', '1310', '1', 'a = \"x\", b = \"y\"', 'true\n<strong>Explaination:</strong> If either a or b are palindromes the answer is true since you can split in the following way:\na<sub>prefix</sub> = \"\", a<sub>suffix</sub> = \"x\"\nb<sub>prefix</sub> = \"\", b<sub>suffix</sub> = \"y\"\nThen, a<sub>prefix</sub> + b<sub>suffix</sub> = \"\" + \"y\" = \"y\", which is a palindrome.', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3026', '1310', '2', 'a = \"xbdef\", b = \"xecab\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3027', '1310', '3', 'a = \"ulacfd\", b = \"jizalu\"', 'true\n<strong>Explaination:</strong> Split them at index 3:\na<sub>prefix</sub> = \"ula\", a<sub>suffix</sub> = \"cfd\"\nb<sub>prefix</sub> = \"jiz\", b<sub>suffix</sub> = \"alu\"\nThen, a<sub>prefix</sub> + b<sub>suffix</sub> = \"ula\" + \"alu\" = \"ulaalu\", which is a palindrome.', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3028', '1311', '1', 'n = 4, edges = [[1,2],[2,3],[2,4]]', '[3,4,0]\n<strong>', '</strong>The subtrees with subsets {1,2}, {2,3} and {2,4} have a max distance of 1.\nThe subtrees with subsets {1,2,3}, {1,2,4}, {2,3,4} and {1,2,3,4} have a max distance of 2.\nNo subtree has two nodes where the max distance between them is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3029', '1311', '2', 'n = 2, edges = [[1,2]]', '[1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3030', '1311', '3', 'n = 3, edges = [[1,2],[2,3]]', '[2,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3031', '1312', '1', 'arr = [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3]', '2.00000', 'After erasing the minimum and the maximum values of this array, all elements are equal to 2, so the mean is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3032', '1312', '2', 'arr = [6,2,7,5,1,2,0,3,10,2,5,0,5,5,0,8,7,6,8,0]', '4.00000', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3033', '1312', '3', 'arr = [6,0,7,0,7,5,7,8,3,4,0,7,8,1,6,8,1,1,2,4,8,1,9,5,4,3,8,5,10,8,6,6,1,0,6,10,8,2,3,4]', '4.77778', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3034', '1313', '2', 'towers = [[23,11,21]], radius = 9', '[23,11]', 'Since there is only one tower, the network quality is highest right at the tower\'s location.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3035', '1313', '3', 'towers = [[1,2,13],[2,1,7],[0,1,9]], radius = 2', '[1,2]', 'Coordinate (1, 2) has the highest network quality.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3036', '1314', '1', 'n = 4, k = 2', '5', 'The two line segments are shown in red and blue.\nThe image above shows the 5 different ways {(0,2),(2,3)}, {(0,1),(1,3)}, {(0,1),(2,3)}, {(1,2),(2,3)}, {(0,1),(1,2)}.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3037', '1314', '2', 'n = 3, k = 1', '3', 'The 3 ways are {(0,1)}, {(0,2)}, {(1,2)}.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3038', '1314', '3', 'n = 30, k = 7', '796297179', 'The total number of possible ways to draw 7 line segments is 3796297200. Taking this number modulo 10<sup>9</sup> + 7 gives us 796297179.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3039', '1315', '1', '[\"Fancy\", \"append\", \"addAll\", \"append\", \"multAll\", \"getIndex\", \"addAll\", \"append\", \"multAll\", \"getIndex\", \"getIndex\", \"getIndex\"]\n[[], [2], [3], [7], [2], [0], [3], [10], [2], [0], [1], [2]]', '[null, null, null, null, null, 10, null, null, null, 26, 34, 20]', 'Fancy fancy = new Fancy();\nfancy.append(2);   // fancy sequence: [2]\nfancy.addAll(3);   // fancy sequence: [2+3] -&gt; [5]\nfancy.append(7);   // fancy sequence: [5, 7]\nfancy.multAll(2);  // fancy sequence: [5*2, 7*2] -&gt; [10, 14]\nfancy.getIndex(0); // return 10\nfancy.addAll(3);   // fancy sequence: [10+3, 14+3] -&gt; [13, 17]\nfancy.append(10);  // fancy sequence: [13, 17, 10]\nfancy.multAll(2);  // fancy sequence: [13*2, 17*2, 10*2] -&gt; [26, 34, 20]\nfancy.getIndex(0); // return 26\nfancy.getIndex(1); // return 34\nfancy.getIndex(2); // return 20');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3040', '1316', '1', 's = \"aa\"', '0', 'The optimal substring here is an empty substring between the two <code>\'a\'s</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3041', '1316', '2', 's = \"abca\"', '2', 'The optimal substring here is \"bc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3042', '1316', '3', 's = \"cbzxy\"', '-1', 'There are no characters that appear twice in s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3043', '1317', '3', 's = \"0011\", a = 4, b = 2', '\"0011\"', 'There are no sequence of operations that will give us a lexicographically smaller string than \"0011\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3044', '1318', '1', 'scores = [1,3,5,10,15], ages = [1,2,3,4,5]', '34', 'You can choose all the players.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3045', '1318', '2', 'scores = [4,5,6,5], ages = [2,1,2,1]', '16', 'It is best to choose the last 3 players. Notice that you are allowed to choose multiple people of the same age.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3046', '1318', '3', 'scores = [1,2,3,5], ages = [8,9,10,1]', '6', 'It is best to choose the first 3 players.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3047', '1319', '1', 'n = 6, threshold = 2, queries = [[1,4],[2,5],[3,6]]', '[false,false,true]', 'The divisors for each number:\n1:   1\n2:   1, 2\n3:   1, <u>3</u>\n4:   1, 2, <u>4</u>\n5:   1, <u>5</u>\n6:   1, 2, <u>3</u>, <u>6</u>\nUsing the underlined divisors above the threshold, only cities 3 and 6 share a common divisor, so they are the\nonly ones directly connected. The result of each query:\n[1,4]   1 is not connected to 4\n[2,5]   2 is not connected to 5\n[3,6]   3 is connected to 6 through path 3--6');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3048', '1319', '2', 'n = 6, threshold = 0, queries = [[4,5],[3,4],[3,2],[2,6],[1,3]]', '[true,true,true,true,true]', 'The divisors for each number are the same as the previous example. However, since the threshold is 0,\nall divisors can be used. Since all numbers share 1 as a divisor, all cities are connected.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3049', '1319', '3', 'n = 5, threshold = 1, queries = [[4,5],[4,5],[3,2],[2,3],[3,4]]', '[false,false,false,false,false]', 'Only cities 2 and 4 share a common divisor 2 which is strictly greater than the threshold 1, so they are the only ones directly connected.\nPlease notice that there can be multiple queries for the same pair of nodes [x, y], and that the query [x, y] is equivalent to the query [y, x].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3050', '1320', '1', 'releaseTimes = [9,29,49,50], keysPressed = \"cbcd\"', '\"c\"', 'The keypresses were as follows:\nKeypress for \'c\' had a duration of 9 (pressed at time 0 and released at time 9).\nKeypress for \'b\' had a duration of 29 - 9 = 20 (pressed at time 9 right after the release of the previous character and released at time 29).\nKeypress for \'c\' had a duration of 49 - 29 = 20 (pressed at time 29 right after the release of the previous character and released at time 49).\nKeypress for \'d\' had a duration of 50 - 49 = 1 (pressed at time 49 right after the release of the previous character and released at time 50).\nThe longest of these was the keypress for \'b\' and the second keypress for \'c\', both with duration 20.\n\'c\' is lexicographically larger than \'b\', so the answer is \'c\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3051', '1320', '2', 'releaseTimes = [12,23,36,46,62], keysPressed = \"spuda\"', '\"a\"', 'The keypresses were as follows:\nKeypress for \'s\' had a duration of 12.\nKeypress for \'p\' had a duration of 23 - 12 = 11.\nKeypress for \'u\' had a duration of 36 - 23 = 13.\nKeypress for \'d\' had a duration of 46 - 36 = 10.\nKeypress for \'a\' had a duration of 62 - 46 = 16.\nThe longest of these was the keypress for \'a\' with duration 16.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3052', '1321', '1', 'nums = <code>[4,6,5,9,3,7]</code>, l = <code>[0,0,2]</code>, r = <code>[2,3,5]</code>', '<code>[true,false,true]</code>', 'In the 0<sup>th</sup> query, the subarray is [4,6,5]. This can be rearranged as [6,5,4], which is an arithmetic sequence.\nIn the 1<sup>st</sup> query, the subarray is [4,6,5,9]. This cannot be rearranged as an arithmetic sequence.\nIn the 2<sup>nd</sup> query, the subarray is <code>[5,9,3,7]. This</code> can be rearranged as <code>[3,5,7,9]</code>, which is an arithmetic sequence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3053', '1321', '2', 'nums = [-12,-9,-3,-12,-6,15,20,-25,-20,-15,-10], l = [0,1,6,4,8,7], r = [4,4,9,7,9,10]', '[false,true,false,false,true,true]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3054', '1322', '1', 'heights = [[1,2,2],[3,8,2],[5,3,5]]', '2', 'The route of [1,3,5,3,5] has a maximum absolute difference of 2 in consecutive cells.\nThis is better than the route of [1,2,2,2,5], where the maximum absolute difference is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3055', '1322', '2', 'heights = [[1,2,3],[3,8,4],[5,3,5]]', '1', 'The route of [1,2,3,4,5] has a maximum absolute difference of 1 in consecutive cells, which is better than route [1,3,5,3,5].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3056', '1322', '3', 'heights = [[1,2,1,1,1],[1,2,1,2,1],[1,2,1,2,1],[1,2,1,2,1],[1,1,1,2,1]]', '0', 'This route does not require any effort.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3057', '1323', '1', 'matrix = [[1,2],[3,4]]', '[[1,2],[2,3]]', 'The rank of matrix[0][0] is 1 because it is the smallest integer in its row and column.\nThe rank of matrix[0][1] is 2 because matrix[0][1] &gt; matrix[0][0] and matrix[0][0] is rank 1.\nThe rank of matrix[1][0] is 2 because matrix[1][0] &gt; matrix[0][0] and matrix[0][0] is rank 1.\nThe rank of matrix[1][1] is 3 because matrix[1][1] &gt; matrix[0][1], matrix[1][1] &gt; matrix[1][0], and both matrix[0][1] and matrix[1][0] are rank 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3058', '1323', '2', 'matrix = [[7,7],[7,7]]', '[[1,1],[1,1]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3059', '1323', '3', 'matrix = [[20,-21,14],[-19,4,19],[22,-47,24],[-19,4,19]]', '[[4,2,3],[1,3,4],[5,1,6],[1,3,4]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3060', '1324', '1', 'Users table:\n+---------+-----------+\n| user_id | user_name |\n+---------+-----------+\n| 6       | Alice     |\n| 2       | Bob       |\n| 7       | Alex      |\n+---------+-----------+\nRegister table:\n+------------+---------+\n| contest_id | user_id |\n+------------+---------+\n| 215        | 6       |\n| 209        | 2       |\n| 208        | 2       |\n| 210        | 6       |\n| 208        | 6       |\n| 209        | 7       |\n| 209        | 6       |\n| 215        | 7       |\n| 208        | 7       |\n| 210        | 2       |\n| 207        | 2       |\n| 210        | 7       |\n+------------+---------+', '+------------+------------+\n| contest_id | percentage |\n+------------+------------+\n| 208        | 100.0      |\n| 209        | 100.0      |\n| 210        | 100.0      |\n| 215        | 66.67      |\n| 207        | 33.33      |\n+------------+------------+', 'All the users registered in contests 208, 209, and 210. The percentage is 100% and we sort them in the answer table by contest_id in ascending order.\nAlice and Alex registered in contest 215 and the percentage is ((2/3) * 100) = 66.67%\nBob registered in contest 207 and the percentage is ((1/3) * 100) = 33.33%');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3061', '1325', '1', 'nums = [1,1,2,2,2,3]', '[3,1,1,2,2,2]', '\'3\' has a frequency of 1, \'1\' has a frequency of 2, and \'2\' has a frequency of 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3062', '1325', '2', 'nums = [2,3,1,3,2]', '[1,3,3,2,2]', '\'2\' and \'3\' both have a frequency of 2, so they are sorted in decreasing order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3063', '1325', '3', 'nums = [-1,1,-6,4,5,-6,1,4,1]', '[5,-1,4,4,-6,-6,1,1,1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3064', '1326', '1', 'points = [[8,7],[9,9],[7,4],[9,7]]', '1', 'Both the red and the blue area are optimal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3065', '1326', '2', 'points = [[3,1],[9,0],[1,0],[1,4],[5,3],[8,8]]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3066', '1327', '1', 's = \"aba\", t = \"baba\"', '6', 'The following are the pairs of substrings from s and t that differ by exactly 1 character:\n(\"<u>a</u>ba\", \"<u>b</u>aba\")\n(\"<u>a</u>ba\", \"ba<u>b</u>a\")\n(\"ab<u>a</u>\", \"<u>b</u>aba\")\n(\"ab<u>a</u>\", \"ba<u>b</u>a\")\n(\"a<u>b</u>a\", \"b<u>a</u>ba\")\n(\"a<u>b</u>a\", \"bab<u>a</u>\")\nThe underlined portions are the substrings that are chosen from s and t.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3067', '1328', '1', 'words = [\"acca\",\"bbbb\",\"caca\"], target = \"aba\"', '6', 'There are 6 ways to form target.\n\"aba\" -&gt; index 0 (\"<u>a</u>cca\"), index 1 (\"b<u>b</u>bb\"), index 3 (\"cac<u>a</u>\")\n\"aba\" -&gt; index 0 (\"<u>a</u>cca\"), index 2 (\"bb<u>b</u>b\"), index 3 (\"cac<u>a</u>\")\n\"aba\" -&gt; index 0 (\"<u>a</u>cca\"), index 1 (\"b<u>b</u>bb\"), index 3 (\"acc<u>a</u>\")\n\"aba\" -&gt; index 0 (\"<u>a</u>cca\"), index 2 (\"bb<u>b</u>b\"), index 3 (\"acc<u>a</u>\")\n\"aba\" -&gt; index 1 (\"c<u>a</u>ca\"), index 2 (\"bb<u>b</u>b\"), index 3 (\"acc<u>a</u>\")\n\"aba\" -&gt; index 1 (\"c<u>a</u>ca\"), index 2 (\"bb<u>b</u>b\"), index 3 (\"cac<u>a</u>\")');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3068', '1328', '2', 'words = [\"abba\",\"baab\"], target = \"bab\"', '4', 'There are 4 ways to form target.\n\"bab\" -&gt; index 0 (\"<u>b</u>aab\"), index 1 (\"b<u>a</u>ab\"), index 2 (\"ab<u>b</u>a\")\n\"bab\" -&gt; index 0 (\"<u>b</u>aab\"), index 1 (\"b<u>a</u>ab\"), index 3 (\"baa<u>b</u>\")\n\"bab\" -&gt; index 0 (\"<u>b</u>aab\"), index 2 (\"ba<u>a</u>b\"), index 3 (\"baa<u>b</u>\")\n\"bab\" -&gt; index 1 (\"a<u>b</u>ba\"), index 2 (\"ba<u>a</u>b\"), index 3 (\"baa<u>b</u>\")');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3069', '1329', '1', 'arr = [15,88], pieces = [[88],[15]]', 'true', 'Concatenate [15] then [88]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3070', '1329', '2', 'arr = [49,18,16], pieces = [[16,18,49]]', 'false', 'Even though the numbers match, we cannot reorder pieces[0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3071', '1329', '3', 'arr = [91,4,64,78], pieces = [[78],[4,64],[91]]', 'true', 'Concatenate [91] then [4,64] then [78]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3072', '1330', '1', 'n = 1', '5', 'The 5 sorted strings that consist of vowels only are <code>[\"a\",\"e\",\"i\",\"o\",\"u\"].</code>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3073', '1330', '2', 'n = 2', '15', 'The 15 sorted strings that consist of vowels only are\n[\"aa\",\"ae\",\"ai\",\"ao\",\"au\",\"ee\",\"ei\",\"eo\",\"eu\",\"ii\",\"io\",\"iu\",\"oo\",\"ou\",\"uu\"].\nNote that \"ea\" is not a valid string since \'e\' comes after \'a\' in the alphabet.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3074', '1330', '3', 'n = 33', '66045', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3075', '1331', '1', 'heights = [4,2,7,6,9,14,12], bricks = 5, ladders = 1', '4', 'Starting at building 0, you can follow these steps:\n- Go to building 1 without using ladders nor bricks since 4 &gt;= 2.\n- Go to building 2 using 5 bricks. You must use either bricks or ladders because 2 &lt; 7.\n- Go to building 3 without using ladders nor bricks since 7 &gt;= 6.\n- Go to building 4 using your only ladder. You must use either bricks or ladders because 6 &lt; 9.\nIt is impossible to go beyond building 4 because you do not have any more bricks or ladders.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3076', '1331', '2', 'heights = [4,12,2,7,3,18,20,3,19], bricks = 10, ladders = 2', '7', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3077', '1331', '3', 'heights = [14,3,19,3], bricks = 17, ladders = 0', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3078', '1332', '1', 'destination = [2,3], k = 1', '\"HHHVV\"', 'All the instructions that reach (2, 3) in lexicographic order are as follows:\n[\"HHHVV\", \"HHVHV\", \"HHVVH\", \"HVHHV\", \"HVHVH\", \"HVVHH\", \"VHHHV\", \"VHHVH\", \"VHVHH\", \"VVHHH\"].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3079', '1332', '2', 'destination = [2,3], k = 2', '\"HHVHV\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3080', '1332', '3', 'destination = [2,3], k = 3', '\"HHVVH\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3081', '1333', '1', 'n = 7', '3', 'According to the given rules:\n  nums[0] = 0\n  nums[1] = 1\n  nums[(1 * 2) = 2] = nums[1] = 1\n  nums[(1 * 2) + 1 = 3] = nums[1] + nums[2] = 1 + 1 = 2\n  nums[(2 * 2) = 4] = nums[2] = 1\n  nums[(2 * 2) + 1 = 5] = nums[2] + nums[3] = 1 + 2 = 3\n  nums[(3 * 2) = 6] = nums[3] = 2\n  nums[(3 * 2) + 1 = 7] = nums[3] + nums[4] = 2 + 1 = 3\nHence, nums = [0,1,1,2,1,3,2,3], and the maximum is max(0,1,1,2,1,3,2,3) = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3082', '1333', '2', 'n = 2', '1', 'According to the given rules, nums = [0,1,1]. The maximum is max(0,1,1) = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3083', '1333', '3', 'n = 3', '2', 'According to the given rules, nums = [0,1,1,2]. The maximum is max(0,1,1,2) = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3084', '1334', '1', 's = \"aab\"', '0', '<code>s</code> is already good.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3085', '1334', '2', 's = \"aaabbbcc\"', '2', 'You can delete two \'b\'s resulting in the good string \"aaabcc\".\nAnother way it to delete one \'b\' and one \'c\' resulting in the good string \"aaabbc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3086', '1334', '3', 's = \"ceabaacb\"', '2', 'You can delete both \'c\'s resulting in the good string \"eabaab\".\nNote that we only care about characters that are still in the string at the end (i.e. frequency of 0 is ignored).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3087', '1336', '1', 'instructions = [1,5,6,2]', '1', 'Begin with nums = [].\nInsert 1 with cost min(0, 0) = 0, now nums = [1].\nInsert 5 with cost min(1, 0) = 0, now nums = [1,5].\nInsert 6 with cost min(2, 0) = 0, now nums = [1,5,6].\nInsert 2 with cost min(1, 2) = 1, now nums = [1,2,5,6].\nThe total cost is 0 + 0 + 0 + 1 = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3088', '1336', '2', 'instructions = [1,2,3,6,5,4]', '3', 'Begin with nums = [].\nInsert 1 with cost min(0, 0) = 0, now nums = [1].\nInsert 2 with cost min(1, 0) = 0, now nums = [1,2].\nInsert 3 with cost min(2, 0) = 0, now nums = [1,2,3].\nInsert 6 with cost min(3, 0) = 0, now nums = [1,2,3,6].\nInsert 5 with cost min(3, 1) = 1, now nums = [1,2,3,5,6].\nInsert 4 with cost min(3, 2) = 2, now nums = [1,2,3,4,5,6].\nThe total cost is 0 + 0 + 0 + 0 + 1 + 2 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3089', '1337', '1', 'code = [5,7,1,4], k = 3', '[12,10,16,13]', 'Each number is replaced by the sum of the next 3 numbers. The decrypted code is [7+1+4, 1+4+5, 4+5+7, 5+7+1]. Notice that the numbers wrap around.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3090', '1337', '2', 'code = [1,2,3,4], k = 0', '[0,0,0,0]', 'When k is zero, the numbers are replaced by 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3091', '1337', '3', 'code = [2,4,9,3], k = -2', '[12,5,6,13]', 'The decrypted code is [3+9, 2+3, 4+2, 9+4]. Notice that the numbers wrap around again. If k is negative, the sum is of the <strong>previous</strong> numbers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3092', '1338', '1', 's = \"aababbab\"', '2', 'You can either:\nDelete the characters at 0-indexed positions 2 and 6 (\"aa<u>b</u>abb<u>a</u>b\" -&gt; \"aaabbb\"), or\nDelete the characters at 0-indexed positions 3 and 6 (\"aab<u>a</u>bb<u>a</u>b\" -&gt; \"aabbbb\").');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3093', '1338', '2', 's = \"bbaaaaabb\"', '2', 'The only solution is to delete the first two characters.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3094', '1339', '1', 'forbidden = [14,4,18,1,15], a = 3, b = 15, x = 9', '3', '3 jumps forward (0 -&gt; 3 -&gt; 6 -&gt; 9) will get the bug home.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3095', '1339', '2', 'forbidden = [8,3,16,6,12,20], a = 15, b = 13, x = 11', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3096', '1339', '3', 'forbidden = [1,6,2,14,5,17,4], a = 16, b = 9, x = 7', '2', 'One jump forward (0 -&gt; 16) then one jump backward (16 -&gt; 7) will get the bug home.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3097', '1340', '1', 'nums = [1,2,3,4], quantity = [2]', 'false', 'The 0<sup>th</sup> customer cannot be given two different integers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3098', '1340', '2', 'nums = [1,2,3,3], quantity = [2]', 'true', 'The 0<sup>th</sup> customer is given [3,3]. The integers [1,2] are not used.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3099', '1340', '3', 'nums = [1,1,2,2], quantity = [2,2]', 'true', 'The 0<sup>th</sup> customer is given [1,1], and the 1st customer is given [2,2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3100', '1341', '1', '[\"OrderedStream\", \"insert\", \"insert\", \"insert\", \"insert\", \"insert\"]\n[[5], [3, \"ccccc\"], [1, \"aaaaa\"], [2, \"bbbbb\"], [5, \"eeeee\"], [4, \"ddddd\"]]', '[null, [], [\"aaaaa\"], [\"bbbbb\", \"ccccc\"], [], [\"ddddd\", \"eeeee\"]]', '// Note that the values ordered by ID is [\"aaaaa\", \"bbbbb\", \"ccccc\", \"ddddd\", \"eeeee\"].\nOrderedStream os = new OrderedStream(5);\nos.insert(3, \"ccccc\"); // Inserts (3, \"ccccc\"), returns [].\nos.insert(1, \"aaaaa\"); // Inserts (1, \"aaaaa\"), returns [\"aaaaa\"].\nos.insert(2, \"bbbbb\"); // Inserts (2, \"bbbbb\"), returns [\"bbbbb\", \"ccccc\"].\nos.insert(5, \"eeeee\"); // Inserts (5, \"eeeee\"), returns [].\nos.insert(4, \"ddddd\"); // Inserts (4, \"ddddd\"), returns [\"ddddd\", \"eeeee\"].\n// Concatentating all the chunks returned:\n// [] + [\"aaaaa\"] + [\"bbbbb\", \"ccccc\"] + [] + [\"ddddd\", \"eeeee\"] = [\"aaaaa\", \"bbbbb\", \"ccccc\", \"ddddd\", \"eeeee\"]\n// The resulting order is the same as the order above.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3101', '1342', '1', 'word1 = \"abc\", word2 = \"bca\"', 'true', 'You can attain word2 from word1 in 2 operations.\nApply Operation 1: \"a<u>bc</u>\" -&gt; \"a<u>cb</u>\"\nApply Operation 1: \"<u>a</u>c<u>b</u>\" -&gt; \"<u>b</u>c<u>a</u>\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3102', '1342', '2', 'word1 = \"a\", word2 = \"aa\"', 'false', 'It is impossible to attain word2 from word1, or vice versa, in any number of operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3103', '1342', '3', 'word1 = \"cabbba\", word2 = \"abbccc\"', 'true', 'You can attain word2 from word1 in 3 operations.\nApply Operation 1: \"ca<u>b</u>bb<u>a</u>\" -&gt; \"ca<u>a</u>bb<u>b</u>\"\n<code>Apply Operation 2: \"</code><u>c</u>aa<u>bbb</u>\" -&gt; \"<u>b</u>aa<u>ccc</u>\"\nApply Operation 2: \"<u>baa</u>ccc\" -&gt; \"<u>abb</u>ccc\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3104', '1343', '1', 'nums = [1,1,4,2,3], x = 5', '2', 'The optimal solution is to remove the last two elements to reduce x to zero.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3105', '1343', '2', 'nums = [5,6,7,8,9], x = 4', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3106', '1343', '3', 'nums = [3,2,20,1,1,3], x = 10', '5', 'The optimal solution is to remove the last three elements and the first two elements (5 operations in total) to reduce x to zero.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3107', '1344', '1', 'm = 2, n = 3, introvertsCount = 1, extrovertsCount = 2', '240', 'Assume the grid is 1-indexed with coordinates (row, column).\nWe can put the introvert in cell (1,1) and put the extroverts in cells (1,3) and (2,3).\n- Introvert at (1,1) happiness: 120 (starting happiness) - (0 * 30) (0 neighbors) = 120\n- Extrovert at (1,3) happiness: 40 (starting happiness) + (1 * 20) (1 neighbor) = 60\n- Extrovert at (2,3) happiness: 40 (starting happiness) + (1 * 20) (1 neighbor) = 60\nThe grid happiness is 120 + 60 + 60 = 240.\nThe above figure shows the grid in this example with each person\'s happiness. The introvert stays in the light green cell while the extroverts live on the light purple cells.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3108', '1344', '2', 'm = 3, n = 1, introvertsCount = 2, extrovertsCount = 1', '260', 'Place the two introverts in (1,1) and (3,1) and the extrovert at (2,1).\n- Introvert at (1,1) happiness: 120 (starting happiness) - (1 * 30) (1 neighbor) = 90\n- Extrovert at (2,1) happiness: 40 (starting happiness) + (2 * 20) (2 neighbors) = 80\n- Introvert at (3,1) happiness: 120 (starting happiness) - (1 * 30) (1 neighbor) = 90\nThe grid happiness is 90 + 80 + 90 = 260.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3109', '1344', '3', 'm = 2, n = 2, introvertsCount = 4, extrovertsCount = 0', '240', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3110', '1345', '1', 'Activity table:\n+------------+------------+---------------+-----------+\n| machine_id | process_id | activity_type | timestamp |\n+------------+------------+---------------+-----------+\n| 0          | 0          | start         | 0.712     |\n| 0          | 0          | end           | 1.520     |\n| 0          | 1          | start         | 3.140     |\n| 0          | 1          | end           | 4.120     |\n| 1          | 0          | start         | 0.550     |\n| 1          | 0          | end           | 1.550     |\n| 1          | 1          | start         | 0.430     |\n| 1          | 1          | end           | 1.420     |\n| 2          | 0          | start         | 4.100     |\n| 2          | 0          | end           | 4.512     |\n| 2          | 1          | start         | 2.500     |\n| 2          | 1          | end           | 5.000     |\n+------------+------------+---------------+-----------+', '+------------+-----------------+\n| machine_id | processing_time |\n+------------+-----------------+\n| 0          | 0.894           |\n| 1          | 0.995           |\n| 2          | 1.456           |\n+------------+-----------------+', 'There are 3 machines running 2 processes each.\nMachine 0\'s average time is ((1.520 - 0.712) + (4.120 - 3.140)) / 2 = 0.894\nMachine 1\'s average time is ((1.550 - 0.550) + (1.420 - 0.430)) / 2 = 0.995\nMachine 2\'s average time is ((4.512 - 4.100) + (5.000 - 2.500)) / 2 = 1.456');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3111', '1346', '1', 'word1 = [\"ab\", \"c\"], word2 = [\"a\", \"bc\"]', 'true', 'word1 represents string \"ab\" + \"c\" -&gt; \"abc\"\nword2 represents string \"a\" + \"bc\" -&gt; \"abc\"\nThe strings are the same, so return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3112', '1346', '2', 'word1 = [\"a\", \"cb\"], word2 = [\"ab\", \"c\"]', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3113', '1346', '3', 'word1  = [\"abc\", \"d\", \"defg\"], word2 = [\"abcddefg\"]', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3114', '1347', '1', 'n = 3, k = 27', '\"aay\"', 'The numeric value of the string is 1 + 1 + 25 = 27, and it is the smallest string with such a value and length equal to 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3115', '1347', '2', 'n = 5, k = 73', '\"aaszz\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3116', '1348', '1', 'nums = [2,1,6,4]', '1', 'Remove index 0: [1,6,4] -&gt; Even sum: 1 + 4 = 5. Odd sum: 6. Not fair.\nRemove index 1: [2,6,4] -&gt; Even sum: 2 + 4 = 6. Odd sum: 6. Fair.\nRemove index 2: [2,1,4] -&gt; Even sum: 2 + 4 = 6. Odd sum: 1. Not fair.\nRemove index 3: [2,1,6] -&gt; Even sum: 2 + 6 = 8. Odd sum: 1. Not fair.\nThere is 1 index that you can remove to make nums fair.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3117', '1348', '2', 'nums = [1,1,1]', '3', 'You can remove any index and the remaining array is fair.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3118', '1348', '3', 'nums = [1,2,3]', '0', 'You cannot make a fair array after removing any index.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3119', '1349', '1', 'tasks = [[1,2],[2,4],[4,8]]', '8', 'Starting with 8 energy, we finish the tasks in the following order:\n    - 3rd task. Now energy = 8 - 4 = 4.\n    - 2nd task. Now energy = 4 - 2 = 2.\n    - 1st task. Now energy = 2 - 1 = 1.\nNotice that even though we have leftover energy, starting with 7 energy does not work because we cannot do the 3rd task.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3120', '1349', '2', 'tasks = [[1,3],[2,4],[10,11],[10,12],[8,9]]', '32', 'Starting with 32 energy, we finish the tasks in the following order:\n    - 1st task. Now energy = 32 - 1 = 31.\n    - 2nd task. Now energy = 31 - 2 = 29.\n    - 3rd task. Now energy = 29 - 10 = 19.\n    - 4th task. Now energy = 19 - 10 = 9.\n    - 5th task. Now energy = 9 - 8 = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3121', '1349', '3', 'tasks = [[1,7],[2,8],[3,9],[4,10],[5,11],[6,12]]', '27', 'Starting with 27 energy, we finish the tasks in the following order:\n    - 5th task. Now energy = 27 - 5 = 22.\n    - 2nd task. Now energy = 22 - 2 = 20.\n    - 3rd task. Now energy = 20 - 3 = 17.\n    - 1st task. Now energy = 17 - 1 = 16.\n    - 4th task. Now energy = 16 - 4 = 12.\n    - 6th task. Now energy = 12 - 6 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3122', '1350', '1', 'Users table:\n+---------+-------+\n| user_id | name  |\n+---------+-------+\n| 1       | aLice |\n| 2       | bOB   |\n+---------+-------+', '+---------+-------+\n| user_id | name  |\n+---------+-------+\n| 1       | Alice |\n| 2       | Bob   |\n+---------+-------+', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3123', '1351', '1', 'sequence = \"ababc\", word = \"ab\"', '2', '\"abab\" is a substring in \"<u>abab</u>c\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3124', '1351', '2', 'sequence = \"ababc\", word = \"ba\"', '1', '\"ba\" is a substring in \"a<u>ba</u>bc\". \"baba\" is not a substring in \"ababc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3125', '1351', '3', 'sequence = \"ababc\", word = \"ac\"', '0', '\"ac\" is not a substring in \"ababc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3126', '1352', '1', 'list1 = [0,1,2,3,4,5], a = 3, b = 4, list2 = [1000000,1000001,1000002]', '[0,1,2,1000000,1000001,1000002,5]', 'We remove the nodes 3 and 4 and put the entire list2 in their place. The blue edges and nodes in the above figure indicate the result.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3127', '1352', '2', 'list1 = [0,1,2,3,4,5,6], a = 2, b = 5, list2 = [1000000,1000001,1000002,1000003,1000004]', '[0,1,1000000,1000001,1000002,1000003,1000004,6]', 'The blue edges and nodes in the above figure indicate the result.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3128', '1353', '1', '[\"FrontMiddleBackQueue\", \"pushFront\", \"pushBack\", \"pushMiddle\", \"pushMiddle\", \"popFront\", \"popMiddle\", \"popMiddle\", \"popBack\", \"popFront\"]\n[[], [1], [2], [3], [4], [], [], [], [], []]', '[null, null, null, null, null, 1, 3, 4, 2, -1]', 'FrontMiddleBackQueue q = new FrontMiddleBackQueue();\nq.pushFront(1);   // [<u>1</u>]\nq.pushBack(2);    // [1, <u>2</u>]\nq.pushMiddle(3);  // [1, <u>3</u>, 2]\nq.pushMiddle(4);  // [1, <u>4</u>, 3, 2]\nq.popFront();     // return 1 -&gt; [4, 3, 2]\nq.popMiddle();    // return 3 -&gt; [4, 2]\nq.popMiddle();    // return 4 -&gt; [2]\nq.popBack();      // return 2 -&gt; []\nq.popFront();     // return -1 -&gt; [] (The queue is empty)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3129', '1354', '1', 'nums = [1,3,1]', '0', 'The array itself is a mountain array so we do not need to remove any elements.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3130', '1354', '2', 'nums = [2,1,1,5,6,2,3,1]', '3', 'One solution is to remove the elements at indices 0, 1, and 5, making the array nums = [1,5,6,3,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3131', '1355', '1', 'accounts = [[1,2,3],[3,2,1]]', '6', '<strong>:</strong>\n<code>1st customer has wealth = 1 + 2 + 3 = 6\n</code><code>2nd customer has wealth = 3 + 2 + 1 = 6\n</code>Both customers are considered the richest with a wealth of 6 each, so return 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3132', '1355', '2', 'accounts = [[1,5],[7,3],[3,5]]', '10', ': \n1st customer has wealth = 6\n2nd customer has wealth = 10 \n3rd customer has wealth = 8\nThe 2nd customer is the richest with a wealth of 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3133', '1355', '3', 'accounts = [[2,8,7],[7,1,3],[1,9,5]]', '17', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3134', '1356', '1', 'nums = [3,5,2,6], k = 2', '[2,6]', 'Among the set of every possible subsequence: {[3,5], [3,2], [3,6], [5,2], [5,6], [2,6]}, [2,6] is the most competitive.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3135', '1356', '2', 'nums = [2,4,3,3,5,4,9,6], k = 4', '[2,3,3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3136', '1357', '1', 'nums = [1,2,4,3], limit = 4', '1', 'In 1 move, you can change nums to [1,2,<u>2</u>,3] (underlined elements are changed).\nnums[0] + nums[3] = 1 + 3 = 4.\nnums[1] + nums[2] = 2 + 2 = 4.\nnums[2] + nums[1] = 2 + 2 = 4.\nnums[3] + nums[0] = 3 + 1 = 4.\nTherefore, nums[i] + nums[n-1-i] = 4 for every i, so nums is complementary.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3137', '1357', '2', 'nums = [1,2,2,1], limit = 2', '2', 'In 2 moves, you can change nums to [<u>2</u>,2,2,<u>2</u>]. You cannot change any number to 3 since 3 &gt; limit.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3138', '1357', '3', 'nums = [1,2,1,2], limit = 2', '0', 'nums is already complementary.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3139', '1358', '1', 'nums = [1,2,3,4]', '1', 'You can transform the array to [1,2,3,<u>2</u>], then to [<u>2</u>,2,3,2], then the deviation will be 3 - 2 = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3140', '1358', '2', 'nums = [4,1,5,20,3]', '3', 'You can transform the array after two operations to [4,<u>2</u>,5,<u>5</u>,3], then the deviation will be 5 - 2 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3141', '1358', '3', 'nums = [2,10,8]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3142', '1359', '1', 'command = \"G()(al)\"', '\"Goal\"', 'The Goal Parser interprets the command as follows:\nG -&gt; G\n() -&gt; o\n(al) -&gt; al\nThe final concatenated result is \"Goal\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3143', '1359', '2', 'command = \"G()()()()(al)\"', '\"Gooooal\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3144', '1359', '3', 'command = \"(al)G(al)()()G\"', '\"alGalooG\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3145', '1360', '1', 'nums = [1,2,3,4], k = 5', '2', 'Starting with nums = [1,2,3,4]:\n- Remove numbers 1 and 4, then nums = [2,3]\n- Remove numbers 2 and 3, then nums = []\nThere are no more pairs that sum up to 5, hence a total of 2 operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3146', '1360', '2', 'nums = [3,1,3,4,3], k = 6', '1', 'Starting with nums = [3,1,3,4,3]:\n- Remove the first two 3\'s, then nums = [1,4,3]\nThere are no more pairs that sum up to 6, hence a total of 1 operation.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3147', '1361', '1', 'n = 1', '1', '\"1\" in binary corresponds to the decimal value 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3148', '1361', '2', 'n = 3', '27', 'In binary, 1, 2, and 3 corresponds to \"1\", \"10\", and \"11\".\nAfter concatenating them, we have \"11011\", which corresponds to the decimal value 27.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3149', '1361', '3', 'n = 12', '505379714', ': The concatenation results in \"1101110010111011110001001101010111100\".\nThe decimal value of that is 118505380540.\nAfter modulo 10<sup>9</sup> + 7, the result is 505379714.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3150', '1362', '1', 'nums = [1,2,1,4], k = 2', '4', 'The optimal distribution of subsets is [1,2] and [1,4].\nThe incompatibility is (2-1) + (4-1) = 4.\nNote that [1,1] and [2,4] would result in a smaller sum, but the first subset contains 2 equal elements.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3151', '1362', '2', 'nums = [6,3,8,1,3,1,2,2], k = 4', '6', 'The optimal distribution of subsets is [1,2], [2,3], [6,8], and [1,3].\nThe incompatibility is (2-1) + (3-2) + (8-6) + (3-1) = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3152', '1362', '3', 'nums = [5,3,3,6,3,3], k = 3', '-1', 'It is impossible to distribute nums into 3 subsets where no two elements are equal in the same subset.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3153', '1363', '1', 'Tweets table:\n+----------+----------------------------------+\n| tweet_id | content                          |\n+----------+----------------------------------+\n| 1        | Vote for Biden                   |\n| 2        | Let us make America great again! |\n+----------+----------------------------------+', '+----------+\n| tweet_id |\n+----------+\n| 2        |\n+----------+', 'Tweet 1 has length = 14. It is a valid tweet.\nTweet 2 has length = 32. It is an invalid tweet.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3154', '1364', '1', 'allowed = \"ab\", words = [\"ad\",\"bd\",\"aaab\",\"baa\",\"badab\"]', '2', 'Strings \"aaab\" and \"baa\" are consistent since they only contain characters \'a\' and \'b\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3155', '1364', '2', 'allowed = \"abc\", words = [\"a\",\"b\",\"c\",\"ab\",\"ac\",\"bc\",\"abc\"]', '7', 'All strings are consistent.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3156', '1364', '3', 'allowed = \"cad\", words = [\"cc\",\"acd\",\"b\",\"ba\",\"bac\",\"bad\",\"ac\",\"d\"]', '4', 'Strings \"cc\", \"acd\", \"ac\", and \"d\" are consistent.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3157', '1365', '1', 'nums = [2,3,5]', '[4,3,5]', 'Assuming the arrays are 0-indexed, then\nresult[0] = |2-2| + |2-3| + |2-5| = 0 + 1 + 3 = 4,\nresult[1] = |3-2| + |3-3| + |3-5| = 1 + 0 + 2 = 3,\nresult[2] = |5-2| + |5-3| + |5-5| = 3 + 2 + 0 = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3158', '1365', '2', 'nums = [1,4,6,8,10]', '[24,15,13,15,21]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3159', '1366', '1', 'aliceValues = [1,3], bobValues = [2,1]', '1', 'If Alice takes stone 1 (0-indexed) first, Alice will receive 3 points.\nBob can only choose stone 0, and will only receive 2 points.\nAlice wins.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3160', '1366', '2', 'aliceValues = [1,2], bobValues = [3,1]', '0', 'If Alice takes stone 0, and Bob takes stone 1, they will both have 1 point.\nDraw.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3161', '1366', '3', 'aliceValues = [2,4,3], bobValues = [1,6,7]', '-1', 'Regardless of how Alice plays, Bob will be able to have more points than Alice.\nFor example, if Alice takes stone 1, Bob can take stone 2, and Alice takes stone 0, Alice will have 6 points to Bob\'s 7.\nBob wins.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3162', '1367', '1', 'boxes = [[1,1],[2,1],[1,1]], portsCount = 2, maxBoxes = 3, maxWeight = 3', '4', 'The optimal strategy is as follows: \n- The ship takes all the boxes in the queue, goes to port 1, then port 2, then port 1 again, then returns to storage. 4 trips.\nSo the total number of trips is 4.\nNote that the first and third boxes cannot be delivered together because the boxes need to be delivered in order (i.e. the second box needs to be delivered at port 2 before the third box).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3163', '1367', '2', 'boxes = [[1,2],[3,3],[3,1],[3,1],[2,4]], portsCount = 3, maxBoxes = 3, maxWeight = 6', '6', 'The optimal strategy is as follows: \n- The ship takes the first box, goes to port 1, then returns to storage. 2 trips.\n- The ship takes the second, third and fourth boxes, goes to port 3, then returns to storage. 2 trips.\n- The ship takes the fifth box, goes to port 2, then returns to storage. 2 trips.\nSo the total number of trips is 2 + 2 + 2 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3164', '1367', '3', 'boxes = [[1,4],[1,2],[2,1],[2,1],[3,2],[3,4]], portsCount = 3, maxBoxes = 6, maxWeight = 7', '6', 'The optimal strategy is as follows:\n- The ship takes the first and second boxes, goes to port 1, then returns to storage. 2 trips.\n- The ship takes the third and fourth boxes, goes to port 2, then returns to storage. 2 trips.\n- The ship takes the fifth and sixth boxes, goes to port 3, then returns to storage. 2 trips.\nSo the total number of trips is 2 + 2 + 2 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3165', '1368', '1', 'n = 7', '6', 'Details of the tournament: \n- 1st Round: Teams = 7, Matches = 3, and 4 teams advance.\n- 2nd Round: Teams = 4, Matches = 2, and 2 teams advance.\n- 3rd Round: Teams = 2, Matches = 1, and 1 team is declared the winner.\nTotal number of matches = 3 + 2 + 1 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3166', '1368', '2', 'n = 14', '13', 'Details of the tournament:\n- 1st Round: Teams = 14, Matches = 7, and 7 teams advance.\n- 2nd Round: Teams = 7, Matches = 3, and 4 teams advance.\n- 3rd Round: Teams = 4, Matches = 2, and 2 teams advance.\n- 4th Round: Teams = 2, Matches = 1, and 1 team is declared the winner.\nTotal number of matches = 7 + 3 + 2 + 1 = 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3167', '1369', '1', 'n = \"32\"', '3', '10 + 11 + 11 = 32');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3168', '1369', '2', 'n = \"82734\"', '8', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3169', '1369', '3', 'n = \"27346209830709182346\"', '9', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3170', '1370', '1', 'stones = [5,3,1,4,2]', '6', '- Alice removes 2 and gets 5 + 3 + 1 + 4 = 13 points. Alice = 13, Bob = 0, stones = [5,3,1,4].\n- Bob removes 5 and gets 3 + 1 + 4 = 8 points. Alice = 13, Bob = 8, stones = [3,1,4].\n- Alice removes 3 and gets 1 + 4 = 5 points. Alice = 18, Bob = 8, stones = [1,4].\n- Bob removes 1 and gets 4 points. Alice = 18, Bob = 12, stones = [4].\n- Alice removes 4 and gets 0 points. Alice = 18, Bob = 12, stones = [].\nThe score difference is 18 - 12 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3171', '1370', '2', 'stones = [7,90,5,1,100,10,10,2]', '122', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3172', '1371', '1', 'cuboids = [[50,45,20],[95,37,53],[45,23,12]]', '190', 'Cuboid 1 is placed on the bottom with the 53x37 side facing down with height 95.\nCuboid 0 is placed next with the 45x20 side facing down with height 50.\nCuboid 2 is placed next with the 23x12 side facing down with height 45.\nThe total height is 95 + 50 + 45 = 190.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3173', '1371', '2', 'cuboids = [[38,25,45],[76,35,3]]', '76', 'You can\'t place any of the cuboids on the other.\nWe choose cuboid 1 and rotate it so that the 35x3 side is facing down and its height is 76.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3174', '1371', '3', 'cuboids = [[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7]]', '102', 'After rearranging the cuboids, you can see that all cuboids have the same dimension.\nYou can place the 11x7 side down on all cuboids so their heights are 17.\nThe maximum height of stacked cuboids is 6 * 17 = 102.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3175', '1372', '1', 'DailySales table:\n+-----------+-----------+---------+------------+\n| date_id   | make_name | lead_id | partner_id |\n+-----------+-----------+---------+------------+\n| 2020-12-8 | toyota    | 0       | 1          |\n| 2020-12-8 | toyota    | 1       | 0          |\n| 2020-12-8 | toyota    | 1       | 2          |\n| 2020-12-7 | toyota    | 0       | 2          |\n| 2020-12-7 | toyota    | 0       | 1          |\n| 2020-12-8 | honda     | 1       | 2          |\n| 2020-12-8 | honda     | 2       | 1          |\n| 2020-12-7 | honda     | 0       | 1          |\n| 2020-12-7 | honda     | 1       | 2          |\n| 2020-12-7 | honda     | 2       | 1          |\n+-----------+-----------+---------+------------+', '+-----------+-----------+--------------+-----------------+\n| date_id   | make_name | unique_leads | unique_partners |\n+-----------+-----------+--------------+-----------------+\n| 2020-12-8 | toyota    | 2            | 3               |\n| 2020-12-7 | toyota    | 1            | 2               |\n| 2020-12-8 | honda     | 2            | 2               |\n| 2020-12-7 | honda     | 3            | 2               |\n+-----------+-----------+--------------+-----------------+', 'For 2020-12-8, toyota gets leads = [0, 1] and partners = [0, 1, 2] while honda gets leads = [1, 2] and partners = [1, 2].\nFor 2020-12-7, toyota gets leads = [0] and partners = [1, 2] while honda gets leads = [0, 1, 2] and partners = [1, 2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3176', '1373', '1', 'number = \"1-23-45 6\"', '\"123-456\"', 'The digits are \"123456\".\nStep 1: There are more than 4 digits, so group the next 3 digits. The 1st block is \"123\".\nStep 2: There are 3 digits remaining, so put them in a single block of length 3. The 2nd block is \"456\".\nJoining the blocks gives \"123-456\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3177', '1373', '2', 'number = \"123 4-567\"', '\"123-45-67\"', 'The digits are \"1234567\".\nStep 1: There are more than 4 digits, so group the next 3 digits. The 1st block is \"123\".\nStep 2: There are 4 digits left, so split them into two blocks of length 2. The blocks are \"45\" and \"67\".\nJoining the blocks gives \"123-45-67\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3178', '1373', '3', 'number = \"123 4-5678\"', '\"123-456-78\"', 'The digits are \"12345678\".\nStep 1: The 1st block is \"123\".\nStep 2: The 2nd block is \"456\".\nStep 3: There are 2 digits left, so put them in a single block of length 2. The 3rd block is \"78\".\nJoining the blocks gives \"123-456-78\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3179', '1374', '1', 'nums = [4,2,4,5,6]', '17', 'The optimal subarray here is [2,4,5,6].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3180', '1374', '2', 'nums = [5,2,1,2,5,2,1,2,5]', '8', 'The optimal subarray here is [5,2,1] or [1,2,5].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3181', '1375', '1', 'nums = [<u>1</u>,<u>-1</u>,-2,<u>4</u>,-7,<u>3</u>], k = 2', '7', 'You can choose your jumps forming the subsequence [1,-1,4,3] (underlined above). The sum is 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3182', '1375', '2', 'nums = [<u>10</u>,-5,-2,<u>4</u>,0,<u>3</u>], k = 3', '17', 'You can choose your jumps forming the subsequence [10,4,3] (underlined above). The sum is 17.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3183', '1375', '3', 'nums = [1,-5,-20,4,-1,3,-6,-3], k = 2', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3184', '1376', '1', 'n = 3, edgeList = [[0,1,2],[1,2,4],[2,0,8],[1,0,16]], queries = [[0,1,2],[0,2,5]]', '[false,true]', 'The above figure shows the given graph. Note that there are two overlapping edges between 0 and 1 with distances 2 and 16.\nFor the first query, between 0 and 1 there is no path where each distance is less than 2, thus we return false for this query.\nFor the second query, there is a path (0 -&gt; 1 -&gt; 2) of two edges with distances less than 5, thus we return true for this query.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3185', '1376', '2', 'n = 5, edgeList = [[0,1,10],[1,2,5],[2,3,9],[3,4,13]], queries = [[0,4,14],[1,4,13]]', '[true,false]', 'The above figure shows the given graph.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3186', '1377', '1', 'students = [1,1,0,0], sandwiches = [0,1,0,1]', '0<strong>', '</strong>\n- Front student leaves the top sandwich and returns to the end of the line making students = [1,0,0,1].\n- Front student leaves the top sandwich and returns to the end of the line making students = [0,0,1,1].\n- Front student takes the top sandwich and leaves the line making students = [0,1,1] and sandwiches = [1,0,1].\n- Front student leaves the top sandwich and returns to the end of the line making students = [1,1,0].\n- Front student takes the top sandwich and leaves the line making students = [1,0] and sandwiches = [0,1].\n- Front student leaves the top sandwich and returns to the end of the line making students = [0,1].\n- Front student takes the top sandwich and leaves the line making students = [1] and sandwiches = [1].\n- Front student takes the top sandwich and leaves the line making students = [] and sandwiches = [].\nHence all students are able to eat.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3187', '1377', '2', 'students = [1,1,1,0,0,1], sandwiches = [1,0,0,0,1,1]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3188', '1378', '1', 'customers = [[1,2],[2,5],[4,3]]', '5.00000\n<strong>', '</strong>1) The first customer arrives at time 1, the chef takes his order and starts preparing it immediately at time 1, and finishes at time 3, so the waiting time of the first customer is 3 - 1 = 2.\n2) The second customer arrives at time 2, the chef takes his order and starts preparing it at time 3, and finishes at time 8, so the waiting time of the second customer is 8 - 2 = 6.\n3) The third customer arrives at time 4, the chef takes his order and starts preparing it at time 8, and finishes at time 11, so the waiting time of the third customer is 11 - 4 = 7.\nSo the average waiting time = (2 + 6 + 7) / 3 = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3189', '1378', '2', 'customers = [[5,2],[5,4],[10,3],[20,1]]', '3.25000\n<strong>', '</strong>1) The first customer arrives at time 5, the chef takes his order and starts preparing it immediately at time 5, and finishes at time 7, so the waiting time of the first customer is 7 - 5 = 2.\n2) The second customer arrives at time 5, the chef takes his order and starts preparing it at time 7, and finishes at time 11, so the waiting time of the second customer is 11 - 5 = 6.\n3) The third customer arrives at time 10, the chef takes his order and starts preparing it at time 11, and finishes at time 14, so the waiting time of the third customer is 14 - 10 = 4.\n4) The fourth customer arrives at time 20, the chef takes his order and starts preparing it immediately at time 20, and finishes at time 21, so the waiting time of the fourth customer is 21 - 20 = 1.\nSo the average waiting time = (2 + 6 + 4 + 1) / 4 = 3.25.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3190', '1379', '1', 'binary = \"000110\"', '\"111011\"', 'A valid transformation sequence can be:\n\"0001<u>10</u>\" -&gt; \"0001<u>01</u>\" \n\"<u>00</u>0101\" -&gt; \"<u>10</u>0101\" \n\"1<u>00</u>101\" -&gt; \"1<u>10</u>101\" \n\"110<u>10</u>1\" -&gt; \"110<u>01</u>1\" \n\"11<u>00</u>11\" -&gt; \"11<u>10</u>11\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3191', '1379', '2', 'binary = \"01\"', '\"01\"', '\"01\" cannot be transformed any further.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3192', '1380', '1', 'nums = [1,0,0,1,0,1], k = 2', '1', 'In 1 move, nums could be [1,0,0,0,<u>1</u>,<u>1</u>] and have 2 consecutive 1\'s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3193', '1380', '2', 'nums = [1,0,0,0,0,0,1,1], k = 3', '5', 'In 5 moves, the leftmost 1 can be shifted right until nums = [0,0,0,0,0,<u>1</u>,<u>1</u>,<u>1</u>].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3194', '1380', '3', 'nums = [1,1,0,1], k = 2', '0', 'nums already has 2 consecutive 1\'s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3195', '1381', '1', 's = \"book\"', 'true', 'a = \"b<u>o</u>\" and b = \"<u>o</u>k\". a has 1 vowel and b has 1 vowel. Therefore, they are alike.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3196', '1381', '2', 's = \"textbook\"', 'false', 'a = \"t<u>e</u>xt\" and b = \"b<u>oo</u>k\". a has 1 vowel whereas b has 2. Therefore, they are not alike.\nNotice that the vowel o is counted twice.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3197', '1382', '1', 'apples = [1,2,3,5,2], days = [3,2,1,4,2]', '7', 'You can eat 7 apples:\n- On the first day, you eat an apple that grew on the first day.\n- On the second day, you eat an apple that grew on the second day.\n- On the third day, you eat an apple that grew on the second day. After this day, the apples that grew on the third day rot.\n- On the fourth to the seventh days, you eat apples that grew on the fourth day.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3198', '1382', '2', 'apples = [3,0,0,0,0,2], days = [3,0,0,0,0,2]', '5', 'You can eat 5 apples:\n- On the first to the third day you eat apples that grew on the first day.\n- Do nothing on the fouth and fifth days.\n- On the sixth and seventh days you eat apples that grew on the sixth day.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3199', '1383', '1', 'grid = [[1,1,1,-1,-1],[1,1,1,-1,-1],[-1,-1,-1,1,1],[1,1,1,1,-1],[-1,-1,-1,-1,-1]]', '[1,-1,-1,-1,-1]', 'This example is shown in the photo.\nBall b0 is dropped at column 0 and falls out of the box at column 1.\nBall b1 is dropped at column 1 and will get stuck in the box between column 2 and 3 and row 1.\nBall b2 is dropped at column 2 and will get stuck on the box between column 2 and 3 and row 0.\nBall b3 is dropped at column 3 and will get stuck on the box between column 2 and 3 and row 0.\nBall b4 is dropped at column 4 and will get stuck on the box between column 2 and 3 and row 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3200', '1383', '2', 'grid = [[-1]]', '[-1]', 'The ball gets stuck against the left wall.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3201', '1383', '3', 'grid = [[1,1,1,1,1,1],[-1,-1,-1,-1,-1,-1],[1,1,1,1,1,1],[-1,-1,-1,-1,-1,-1]]', '[0,1,2,3,4,-1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3202', '1384', '1', 'nums = [0,1,2,3,4], queries = [[3,1],[1,3],[5,6]]', '[3,3,7]', '1) 0 and 1 are the only two integers not greater than 1. 0 XOR 3 = 3 and 1 XOR 3 = 2. The larger of the two is 3.\n2) 1 XOR 2 = 3.\n3) 5 XOR 2 = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3203', '1384', '2', 'nums = [5,2,4,6,6,3], queries = [[12,4],[8,1],[6,3]]', '[15,-1,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3204', '1385', '1', 'boxTypes = [[1,3],[2,2],[3,1]], truckSize = 4', '8', 'There are:\n- 1 box of the first type that contains 3 units.\n- 2 boxes of the second type that contain 2 units each.\n- 3 boxes of the third type that contain 1 unit each.\nYou can take all the boxes of the first and second types, and one box of the third type.\nThe total number of units will be = (1 * 3) + (2 * 2) + (1 * 1) = 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3205', '1385', '2', 'boxTypes = [[5,10],[2,5],[4,7],[3,9]], truckSize = 10', '91', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3206', '1386', '1', 'deliciousness = [1,3,5,7,9]', '4', 'The good meals are (1,3), (1,7), (3,5) and, (7,9).\nTheir respective sums are 4, 8, 8, and 16, all of which are powers of 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3207', '1386', '2', 'deliciousness = [1,1,1,3,3,3,7]', '15', 'The good meals are (1,1) with 3 ways, (1,3) with 9 ways, and (1,7) with 3 ways.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3208', '1387', '1', 'nums = [1,1,1]', '1', 'The only good way to split nums is [1] [1] [1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3209', '1387', '2', 'nums = [1,2,2,2,5,0]', '3', 'There are three good ways of splitting nums:\n[1] [2] [2,2,5,0]\n[1] [2,2] [2,5,0]\n[1,2] [2,2] [5,0]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3210', '1387', '3', 'nums = [3,2,1]', '0', 'There is no good way to split nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3211', '1388', '1', 'target = [5,1,3], <code>arr</code> = [9,4,2,3,4]', '2', 'You can add 5 and 1 in such a way that makes <code>arr</code> = [<u>5</u>,9,4,<u>1</u>,2,3,4], then target will be a subsequence of <code>arr</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3212', '1388', '2', 'target = [6,4,8,1,3,2], <code>arr</code> = [4,7,6,2,3,8,6,1]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3213', '1389', '1', 'n = 4', '10', 'After the 4<sup>th</sup> day, the total is 1 + 2 + 3 + 4 = 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3214', '1389', '2', 'n = 10', '37', 'After the 10<sup>th</sup> day, the total is (1 + 2 + 3 + 4 + 5 + 6 + 7) + (2 + 3 + 4) = 37. Notice that on the 2<sup>nd</sup> Monday, Hercy only puts in $2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3215', '1389', '3', 'n = 20', '96', 'After the 20<sup>th</sup> day, the total is (1 + 2 + 3 + 4 + 5 + 6 + 7) + (2 + 3 + 4 + 5 + 6 + 7 + 8) + (3 + 4 + 5 + 6 + 7 + 8) = 96.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3216', '1390', '1', 's = \"cdbcbbaaabab\", x = 4, y = 5', '19', '- Remove the \"ba\" underlined in \"cdbcbbaaa<u>ba</u>b\". Now, s = \"cdbcbbaaab\" and 5 points are added to the score.\n- Remove the \"ab\" underlined in \"cdbcbbaa<u>ab</u>\". Now, s = \"cdbcbbaa\" and 4 points are added to the score.\n- Remove the \"ba\" underlined in \"cdbcb<u>ba</u>a\". Now, s = \"cdbcba\" and 5 points are added to the score.\n- Remove the \"ba\" underlined in \"cdbc<u>ba</u>\". Now, s = \"cdbc\" and 5 points are added to the score.\nTotal score = 5 + 4 + 5 + 5 = 19.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3217', '1390', '2', 's = \"aabbaaxybbaabb\", x = 5, y = 4', '20', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3218', '1391', '1', 'n = 3', '[3,1,2,3,2]', '[2,3,2,1,3] is also a valid sequence, but [3,1,2,3,2] is the lexicographically largest valid sequence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3219', '1391', '2', 'n = 5', '[5,3,1,4,3,5,2,4,2]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3220', '1392', '1', 'pairs = [[1,2],[2,3]]', '1', 'There is exactly one valid rooted tree, which is shown in the above figure.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3221', '1392', '2', 'pairs = [[1,2],[2,3],[1,3]]', '2', 'There are multiple valid rooted trees. Three of them are shown in the above figures.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3222', '1392', '3', 'pairs = [[1,2],[2,3],[2,4],[1,5]]', '0', 'There are no valid rooted trees.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3223', '1393', '1', 'encoded = [1,2,3], first = 1', '[1,0,2,1]', 'If arr = [1,0,2,1], then first = 1 and encoded = [1 XOR 0, 0 XOR 2, 2 XOR 1] = [1,2,3]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3224', '1393', '2', 'encoded = [6,2,7,3], first = 4', '[4,2,0,7,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3225', '1394', '1', 'head = [1,2,3,4,5], k = 2', '[1,4,3,2,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3226', '1394', '2', 'head = [7,9,6,6,7,8,3,0,9,5], k = 5', '[7,9,6,6,8,7,3,0,9,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3227', '1395', '1', 'source = [1,2,3,4], target = [2,1,4,5], allowedSwaps = [[0,1],[2,3]]', '1', 'source can be transformed the following way:\n- Swap indices 0 and 1: source = [<u>2</u>,<u>1</u>,3,4]\n- Swap indices 2 and 3: source = [2,1,<u>4</u>,<u>3</u>]\nThe Hamming distance of source and target is 1 as they differ in 1 position: index 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3228', '1395', '2', 'source = [1,2,3,4], target = [1,3,2,4], allowedSwaps = []', '2', 'There are no allowed swaps.\nThe Hamming distance of source and target is 2 as they differ in 2 positions: index 1 and index 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3229', '1395', '3', 'source = [5,1,2,4,3], target = [1,5,4,2,3], allowedSwaps = [[0,4],[4,2],[1,3],[1,4]]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3230', '1396', '1', 'jobs = [3,2,3], k = 3', '3', 'By assigning each person one job, the maximum time is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3231', '1396', '2', 'jobs = [1,2,4,7,8], k = 2', '11', 'Assign the jobs the following way:\nWorker 1: 1, 2, 8 (working time = 1 + 2 + 8 = 11)\nWorker 2: 4, 7 (working time = 4 + 7 = 11)\nThe maximum working time is 11.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3232', '1397', '1', 'rectangles = [[5,8],[3,9],[5,12],[16,5]]', '3', 'The largest squares you can get from each rectangle are of lengths [5,3,5,5].\nThe largest possible square is of length 5, and you can get it out of 3 rectangles.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3233', '1397', '2', 'rectangles = [[2,3],[3,7],[4,3],[3,7]]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3234', '1398', '1', 'nums = [2,3,4,6]', '8', 'There are 8 valid tuples:\n(2,6,3,4) , (2,6,4,3) , (6,2,3,4) , (6,2,4,3)\n(3,4,2,6) , (4,3,2,6) , (3,4,6,2) , (4,3,6,2)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3235', '1398', '2', 'nums = [1,2,4,5,10]', '16', 'There are 16 valid tuples:\n(1,10,2,5) , (1,10,5,2) , (10,1,2,5) , (10,1,5,2)\n(2,5,1,10) , (2,5,10,1) , (5,2,1,10) , (5,2,10,1)\n(2,10,4,5) , (2,10,5,4) , (10,2,4,5) , (10,2,5,4)\n(4,5,2,10) , (4,5,10,2) , (5,4,2,10) , (5,4,10,2)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3236', '1399', '1', 'matrix = [[0,0,1],[1,1,1],[1,0,1]]', '4', 'You can rearrange the columns as shown above.\nThe largest submatrix of 1s, in bold, has an area of 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3237', '1399', '2', 'matrix = [[1,0,1,0,1]]', '3', 'You can rearrange the columns as shown above.\nThe largest submatrix of 1s, in bold, has an area of 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3238', '1399', '3', 'matrix = [[1,1,0],[1,0,1]]', '2', 'Notice that you must rearrange entire columns, and there is no way to make a submatrix of 1s larger than an area of 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3239', '1400', '1', 'grid = [\"####F\",\"#C...\",\"M....\"], catJump = 1, mouseJump = 2', 'true', 'Cat cannot catch Mouse on its turn nor can it get the food before Mouse.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3240', '1400', '2', 'grid = [\"M.C...F\"], catJump = 1, mouseJump = 4', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3241', '1400', '3', 'grid = [\"M.C...F\"], catJump = 1, mouseJump = 3', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3242', '1401', '1', 'Followers table:\n+---------+-------------+\n| user_id | follower_id |\n+---------+-------------+\n| 0       | 1           |\n| 1       | 0           |\n| 2       | 0           |\n| 2       | 1           |\n+---------+-------------+', '+---------+----------------+\n| user_id | followers_count|\n+---------+----------------+\n| 0       | 1              |\n| 1       | 1              |\n| 2       | 2              |\n+---------+----------------+', 'The followers of 0 are {1}\nThe followers of 1 are {0}\nThe followers of 2 are {0,1}');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3243', '1402', '1', 'Employees table:\n+-------------+---------+------------+-----+\n| employee_id | name    | reports_to | age |\n+-------------+---------+------------+-----+\n| 9           | Hercy   | null       | 43  |\n| 6           | Alice   | 9          | 41  |\n| 4           | Bob     | 9          | 36  |\n| 2           | Winston | null       | 37  |\n+-------------+---------+------------+-----+', '+-------------+-------+---------------+-------------+\n| employee_id | name  | reports_count | average_age |\n+-------------+-------+---------------+-------------+\n| 9           | Hercy | 2             | 39          |\n+-------------+-------+---------------+-------------+', 'Hercy has 2 people report directly to him, Alice and Bob. Their average age is (41+36)/2 = 38.5, which is 39 after rounding it to the nearest integer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3244', '1403', '1', 'gain = [-5,1,5,0,-7]', '1', 'The altitudes are [0,-5,-4,1,1,-6]. The highest is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3245', '1403', '2', 'gain = [-4,-3,-2,-1,4,3,2]', '0', 'The altitudes are [0,-4,-7,-9,-10,-6,-3,-1]. The highest is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3246', '1404', '1', 'n = 2, languages = [[1],[2],[1,2]], friendships = [[1,2],[1,3],[2,3]]', '1', 'You can either teach user 1 the second language or user 2 the first language.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3247', '1404', '2', 'n = 3, languages = [[2],[1,3],[1,2],[3]], friendships = [[1,4],[1,2],[3,4],[2,3]]', '2', 'Teach the third language to users 1 and 3, yielding two users to teach.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3248', '1405', '1', 'encoded = [3,1]', '[1,2,3]', 'If perm = [1,2,3], then encoded = [1 XOR 2,2 XOR 3] = [3,1]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3249', '1405', '2', 'encoded = [6,5,4,6]', '[2,4,1,5,3]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3250', '1406', '1', 'queries = [[2,6],[5,1],[73,660]]', '[4,1,50734910]', 'Each query is independent.\n[2,6]: There are 4 ways to fill an array of size 2 that multiply to 6: [1,6], [2,3], [3,2], [6,1].\n[5,1]: There is 1 way to fill an array of size 5 that multiply to 1: [1,1,1,1,1].\n[73,660]: There are 1050734917 ways to fill an array of size 73 that multiply to 660. 1050734917 modulo 10<sup>9</sup> + 7 = 50734910.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3251', '1406', '2', 'queries = [[1,1],[2,2],[3,3],[4,4],[5,5]]', '[1,2,3,10,5]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3252', '1407', '1', 'time = \"2?:?0\"', '\"23:50\"', 'The latest hour beginning with the digit \'2\' is 23 and the latest minute ending with the digit \'0\' is 50.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3253', '1407', '2', 'time = \"0?:3?\"', '\"09:39\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3254', '1407', '3', 'time = \"1?:22\"', '\"19:22\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3255', '1408', '1', 'a = \"aba\", b = \"caa\"', '2', 'Consider the best way to make each condition true:\n1) Change b to \"ccc\" in 2 operations, then every letter in a is less than every letter in b.\n2) Change a to \"bbb\" and b to \"aaa\" in 3 operations, then every letter in b is less than every letter in a.\n3) Change a to \"aaa\" and b to \"aaa\" in 2 operations, then a and b consist of one distinct letter.\nThe best way was done in 2 operations (either condition 1 or condition 3).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3256', '1408', '2', 'a = \"dabadd\", b = \"cda\"', '3', 'The best way is to make condition 1 true by changing b to \"eee\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3257', '1410', '1', 'n = 3', '3', 'The figure above is for the placement of the three boxes.\nThese boxes are placed in the corner of the room, where the corner is on the left side.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3258', '1410', '2', 'n = 4', '3', 'The figure above is for the placement of the four boxes.\nThese boxes are placed in the corner of the room, where the corner is on the left side.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3259', '1410', '3', 'n = 10', '6', 'The figure above is for the placement of the ten boxes.\nThese boxes are placed in the corner of the room, where the corner is on the back side.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3260', '1411', '1', 'Employees table:\n+--------+------------+---------+----------+\n| emp_id | event_day  | in_time | out_time |\n+--------+------------+---------+----------+\n| 1      | 2020-11-28 | 4       | 32       |\n| 1      | 2020-11-28 | 55      | 200      |\n| 1      | 2020-12-03 | 1       | 42       |\n| 2      | 2020-11-28 | 3       | 33       |\n| 2      | 2020-12-09 | 47      | 74       |\n+--------+------------+---------+----------+', '+------------+--------+------------+\n| day        | emp_id | total_time |\n+------------+--------+------------+\n| 2020-11-28 | 1      | 173        |\n| 2020-11-28 | 2      | 30         |\n| 2020-12-03 | 1      | 41         |\n| 2020-12-09 | 2      | 27         |\n+------------+--------+------------+', 'Employee 1 has three events: two on day 2020-11-28 with a total of (32 - 4) + (200 - 55) = 173, and one on day 2020-12-03 with a total of (42 - 1) = 41.\nEmployee 2 has two events: one on day 2020-11-28 with a total of (33 - 3) = 30, and one on day 2020-12-09 with a total of (74 - 47) = 27.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3261', '1412', '1', 'lowLimit = 1, highLimit = 10', '2', 'Box Number:  1 2 3 4 5 6 7 8 9 10 11 ...\nBall Count:  2 1 1 1 1 1 1 1 1 0  0  ...\nBox 1 has the most number of balls with 2 balls.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3262', '1412', '2', 'lowLimit = 5, highLimit = 15', '2', 'Box Number:  1 2 3 4 5 6 7 8 9 10 11 ...\nBall Count:  1 1 1 1 2 2 1 1 1 0  0  ...\nBoxes 5 and 6 have the most number of balls with 2 balls in each.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3263', '1412', '3', 'lowLimit = 19, highLimit = 28', '2', 'Box Number:  1 2 3 4 5 6 7 8 9 10 11 12 ...\nBall Count:  0 1 1 1 1 1 1 1 1 2  0  0  ...\nBox 10 has the most number of balls with 2 balls.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3264', '1414', '1', 'candiesCount = [7,4,5,3,8], queries = [[0,2,2],[4,2,4],[2,13,1000000000]]', '[true,false,true]', '1- If you eat 2 candies (type 0) on day 0 and 2 candies (type 0) on day 1, you will eat a candy of type 0 on day 2.\n2- You can eat at most 4 candies each day.\n   If you eat 4 candies every day, you will eat 4 candies (type 0) on day 0 and 4 candies (type 0 and type 1) on day 1.\n   On day 2, you can only eat 4 candies (type 1 and type 2), so you cannot eat a candy of type 4 on day 2.\n3- If you eat 1 candy each day, you will eat a candy of type 2 on day 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3265', '1414', '2', 'candiesCount = [5,2,6,4,1], queries = [[3,1,2],[4,10,3],[3,10,100],[4,100,30],[1,3,1]]', '[false,true,true,false,false]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3266', '1415', '1', 's = \"abcbdd\"', 'true', '\"abcbdd\" = \"a\" + \"bcb\" + \"dd\", and all three substrings are palindromes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3267', '1415', '2', 's = \"bcbddxy\"', 'false', 's cannot be split into 3 palindromes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3268', '1416', '1', 'nums = [1,2,3,2]', '4', 'The unique elements are [1,3], and the sum is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3269', '1416', '2', 'nums = [1,1,1,1,1]', '0', 'There are no unique elements, and the sum is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3270', '1416', '3', 'nums = [1,2,3,4,5]', '15', 'The unique elements are [1,2,3,4,5], and the sum is 15.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3271', '1417', '1', 'nums = [1,-3,2,3,-4]', '5', 'The subarray [2,3] has absolute sum = abs(2+3) = abs(5) = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3272', '1417', '2', 'nums = [2,-5,1,-4,3,-2]', '8', 'The subarray [-5,1,-4] has absolute sum = abs(-5+1-4) = abs(-8) = 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3273', '1418', '1', 's = \"ca\"', '2', 'You can\'t remove any characters, so the string stays as is.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3274', '1418', '2', 's = \"cabaabac\"', '0', 'An optimal sequence of operations is:\n- Take prefix = \"c\" and suffix = \"c\" and remove them, s = \"abaaba\".\n- Take prefix = \"a\" and suffix = \"a\" and remove them, s = \"baab\".\n- Take prefix = \"b\" and suffix = \"b\" and remove them, s = \"aa\".\n- Take prefix = \"a\" and suffix = \"a\" and remove them, s = \"\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3275', '1418', '3', 's = \"aabccabba\"', '3', 'An optimal sequence of operations is:\n- Take prefix = \"aa\" and suffix = \"a\" and remove them, s = \"bccabb\".\n- Take prefix = \"b\" and suffix = \"bb\" and remove them, s = \"cca\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3276', '1419', '1', 'events = [[1,2,4],[3,4,3],[2,3,1]], k = 2', '7', 'Choose the green events, 0 and 1 (0-indexed) for a total value of 4 + 3 = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3277', '1419', '2', 'events = [[1,2,4],[3,4,3],[2,3,10]], k = 2', '10', 'Choose event 2 for a total value of 10.\nNotice that you cannot attend any other event as they overlap, and that you do <strong>not</strong> have to attend k events.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3278', '1419', '3', 'events = [[1,1,1],[2,2,2],[3,3,3],[4,4,4]], k = 3', '9', 'Although the events do not overlap, you can only attend 3 events. Pick the highest valued three.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3279', '1420', '1', 'nums = [3,4,5,1,2]', 'true', '[1,2,3,4,5] is the original sorted array.\nYou can rotate the array by x = 3 positions to begin on the the element of value 3: [3,4,5,1,2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3280', '1420', '2', 'nums = [2,1,3,4]', 'false', 'There is no sorted array once rotated that can make nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3281', '1420', '3', 'nums = [1,2,3]', 'true', '[1,2,3] is the original sorted array.\nYou can rotate the array by x = 0 positions (i.e. no rotation) to make nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3282', '1421', '1', 'a = 2, b = 4, c = 6', '6', 'The starting state is (2, 4, 6). One optimal set of moves is:\n- Take from 1st and 3rd piles, state is now (1, 4, 5)\n- Take from 1st and 3rd piles, state is now (0, 4, 4)\n- Take from 2nd and 3rd piles, state is now (0, 3, 3)\n- Take from 2nd and 3rd piles, state is now (0, 2, 2)\n- Take from 2nd and 3rd piles, state is now (0, 1, 1)\n- Take from 2nd and 3rd piles, state is now (0, 0, 0)\nThere are fewer than two non-empty piles, so the game ends. Total: 6 points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3283', '1421', '2', 'a = 4, b = 4, c = 6', '7', 'The starting state is (4, 4, 6). One optimal set of moves is:\n- Take from 1st and 2nd piles, state is now (3, 3, 6)\n- Take from 1st and 3rd piles, state is now (2, 3, 5)\n- Take from 1st and 3rd piles, state is now (1, 3, 4)\n- Take from 1st and 3rd piles, state is now (0, 3, 3)\n- Take from 2nd and 3rd piles, state is now (0, 2, 2)\n- Take from 2nd and 3rd piles, state is now (0, 1, 1)\n- Take from 2nd and 3rd piles, state is now (0, 0, 0)\nThere are fewer than two non-empty piles, so the game ends. Total: 7 points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3284', '1421', '3', 'a = 1, b = 8, c = 8', '8', 'One optimal set of moves is to take from the 2nd and 3rd piles for 8 turns until they are empty.\nAfter that, there are fewer than two non-empty piles, so the game ends.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3285', '1422', '1', 'word1 = \"cabaa\", word2 = \"bcaaa\"', '\"cbcabaaaaa\"', 'One way to get the lexicographically largest merge is:\n- Take from word1: merge = \"c\", word1 = \"abaa\", word2 = \"bcaaa\"\n- Take from word2: merge = \"cb\", word1 = \"abaa\", word2 = \"caaa\"\n- Take from word2: merge = \"cbc\", word1 = \"abaa\", word2 = \"aaa\"\n- Take from word1: merge = \"cbca\", word1 = \"baa\", word2 = \"aaa\"\n- Take from word1: merge = \"cbcab\", word1 = \"aa\", word2 = \"aaa\"\n- Append the remaining 5 a\'s from word1 and word2 at the end of merge.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3286', '1422', '2', 'word1 = \"abcabc\", word2 = \"abdcaba\"', '\"abdcabcabcaba\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3287', '1423', '1', 'nums = [5,-7,3,5], goal = 6', '0', 'Choose the whole array as a subsequence, with a sum of 6.\nThis is equal to the goal, so the absolute difference is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3288', '1423', '2', 'nums = [7,-9,15,-2], goal = -5', '1', 'Choose the subsequence [7,-9,-2], with a sum of -4.\nThe absolute difference is abs(-4 - (-5)) = abs(1) = 1, which is the minimum.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3289', '1423', '3', 'nums = [1,2,3], goal = -7', '7', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3290', '1425', '1', 's = \"0100\"', '1', 'If you change the last character to \'1\', s will be \"0101\", which is alternating.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3291', '1425', '2', 's = \"10\"', '0', 's is already alternating.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3292', '1425', '3', 's = \"1111\"', '2', 'You need two operations to reach \"0101\" or \"1010\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3293', '1426', '1', 's = \"abbcccaa\"', '13', 'The homogenous substrings are listed as below:\n\"a\"   appears 3 times.\n\"aa\"  appears 1 time.\n\"b\"   appears 2 times.\n\"bb\"  appears 1 time.\n\"c\"   appears 3 times.\n\"cc\"  appears 2 times.\n\"ccc\" appears 1 time.\n3 + 1 + 2 + 1 + 3 + 2 + 1 = 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3294', '1426', '2', 's = \"xy\"', '2', 'The homogenous substrings are \"x\" and \"y\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3295', '1426', '3', 's = \"zzzzz\"', '15', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3296', '1427', '1', 'nums = [9], maxOperations = 2', '3', '- Divide the bag with 9 balls into two bags of sizes 6 and 3. [<strong><u>9</u></strong>] -&gt; [6,3].\n- Divide the bag with 6 balls into two bags of sizes 3 and 3. [<strong><u>6</u></strong>,3] -&gt; [3,3,3].\nThe bag with the most number of balls has 3 balls, so your penalty is 3 and you should return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3297', '1427', '2', 'nums = [2,4,8,2], maxOperations = 4', '2', '- Divide the bag with 8 balls into two bags of sizes 4 and 4. [2,4,<strong><u>8</u></strong>,2] -&gt; [2,4,4,4,2].\n- Divide the bag with 4 balls into two bags of sizes 2 and 2. [2,<strong><u>4</u></strong>,4,4,2] -&gt; [2,2,2,4,4,2].\n- Divide the bag with 4 balls into two bags of sizes 2 and 2. [2,2,2,<strong><u>4</u></strong>,4,2] -&gt; [2,2,2,2,2,4,2].\n- Divide the bag with 4 balls into two bags of sizes 2 and 2. [2,2,2,2,2,<strong><u>4</u></strong>,2] -&gt; [2,2,2,2,2,2,2,2].\nThe bag with the most number of balls has 2 balls, so your penalty is 2, and you should return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3298', '1428', '1', 'n = 6, edges = [[1,2],[1,3],[3,2],[4,1],[5,2],[3,6]]', '3', 'There is exactly one trio, which is [1,2,3]. The edges that form its degree are bolded in the figure above.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3299', '1428', '2', 'n = 7, edges = [[1,3],[4,1],[4,3],[2,5],[5,6],[6,7],[7,5],[2,6]]', '0', 'There are exactly three trios:\n1) [1,4,3] with degree 0.\n2) [2,5,6] with degree 2.\n3) [5,6,7] with degree 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3300', '1429', '1', 's = \"YazaAay\"', '\"aAa\"', '\"aAa\" is a nice string because \'A/a\' is the only letter of the alphabet in s, and both \'A\' and \'a\' appear.\n\"aAa\" is the longest nice substring.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3301', '1429', '2', 's = \"Bb\"', '\"Bb\"', '\"Bb\" is a nice string because both \'B\' and \'b\' appear. The whole string is a substring.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3302', '1429', '3', 's = \"c\"', '\"\"', 'There are no nice substrings.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3303', '1430', '1', 'groups = [[1,-1,-1],[3,-2,0]], nums = [1,-1,0,1,-1,-1,3,-2,0]', 'true', 'You can choose the 0<sup>th</sup> subarray as [1,-1,0,<u><strong>1,-1,-1</strong></u>,3,-2,0] and the 1<sup>st</sup> one as [1,-1,0,1,-1,-1,<u><strong>3,-2,0</strong></u>].\nThese subarrays are disjoint as they share no common nums[k] element.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3304', '1430', '2', 'groups = [[10,-2],[1,2,3,4]], nums = [1,2,3,4,10,-2]', 'false', 'Note that choosing the subarrays [<u><strong>1,2,3,4</strong></u>,10,-2] and [1,2,3,4,<u><strong>10,-2</strong></u>] is incorrect because they are not in the same order as in groups.\n[10,-2] must come before [1,2,3,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3305', '1430', '3', 'groups = [[1,2,3],[3,4]], nums = [7,7,1,2,3,4,7,7]', 'false', 'Note that choosing the subarrays [7,7,<u><strong>1,2,3</strong></u>,4,7,7] and [7,7,1,2,<u><strong>3,4</strong></u>,7,7] is invalid because they are not disjoint.\nThey share a common elements nums[4] (0-indexed).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3306', '1431', '1', 'isWater = [[0,1],[0,0]]', '[[1,0],[2,1]]', 'The image shows the assigned heights of each cell.\nThe blue cell is the water cell, and the green cells are the land cells.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3307', '1431', '2', 'isWater = [[0,0,1],[1,0,0],[0,0,0]]', '[[1,1,0],[0,1,1],[1,2,2]]', 'A height of 2 is the maximum possible height of any assignment.\nAny height assignment that has a maximum height of 2 while still meeting the rules will also be accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3308', '1432', '1', 'nums = [2,3,3,2], edges = [[0,1],[1,2],[1,3]]', '[-1,0,0,1]', 'In the above figure, each node\'s value is in parentheses.\n- Node 0 has no coprime ancestors.\n- Node 1 has only one ancestor, node 0. Their values are coprime (gcd(2,3) == 1).\n- Node 2 has two ancestors, nodes 1 and 0. Node 1\'s value is not coprime (gcd(3,3) == 3), but node 0\'s\n  value is (gcd(2,3) == 1), so node 0 is the closest valid ancestor.\n- Node 3 has two ancestors, nodes 1 and 0. It is coprime with node 1 (gcd(3,2) == 1), so node 1 is its\n  closest valid ancestor.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3309', '1432', '2', 'nums = [5,6,10,2,3,6,15], edges = [[0,1],[0,2],[1,3],[1,4],[2,5],[2,6]]', '[-1,0,-1,0,0,0,-1]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3310', '1433', '1', 'word1 = \"abc\", word2 = \"pqr\"', '\"apbqcr\"', 'The merged string will be merged as so:\nword1:  a   b   c\nword2:    p   q   r\nmerged: a p b q c r');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3311', '1433', '2', 'word1 = \"ab\", word2 = \"pqrs\"', '\"apbqrs\"', 'Notice that as word2 is longer, \"rs\" is appended to the end.\nword1:  a   b \nword2:    p   q   r   s\nmerged: a p b q   r   s');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3312', '1433', '3', 'word1 = \"abcd\", word2 = \"pq\"', '\"apbqcd\"', 'Notice that as word1 is longer, \"cd\" is appended to the end.\nword1:  a   b   c   d\nword2:    p   q \nmerged: a p b q c   d');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3313', '1434', '1', 'boxes = \"110\"', '[1,1,3]', 'The answer for each box is as follows:\n1) First box: you will have to move one ball from the second box to the first box in one operation.\n2) Second box: you will have to move one ball from the first box to the second box in one operation.\n3) Third box: you will have to move one ball from the first box to the third box in two operations, and move one ball from the second box to the third box in one operation.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3314', '1434', '2', 'boxes = \"001011\"', '[11,8,5,4,3,4]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3315', '1435', '1', 'nums = [1,2,3], multipliers = [3,2,1]', '14', 'An optimal solution is as follows:\n- Choose from the end, [1,2,<strong><u>3</u></strong>], adding 3 * 3 = 9 to the score.\n- Choose from the end, [1,<strong><u>2</u></strong>], adding 2 * 2 = 4 to the score.\n- Choose from the end, [<strong><u>1</u></strong>], adding 1 * 1 = 1 to the score.\nThe total score is 9 + 4 + 1 = 14.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3316', '1435', '2', 'nums = [-5,-3,-3,-2,7,1], multipliers = [-10,-5,3,4,6]', '102', 'An optimal solution is as follows:\n- Choose from the start, [<u><strong>-5</strong></u>,-3,-3,-2,7,1], adding -5 * -10 = 50 to the score.\n- Choose from the start, [<strong><u>-3</u></strong>,-3,-2,7,1], adding -3 * -5 = 15 to the score.\n- Choose from the start, [<strong><u>-3</u></strong>,-2,7,1], adding -3 * 3 = -9 to the score.\n- Choose from the end, [-2,7,<strong><u>1</u></strong>], adding 1 * 4 = 4 to the score.\n- Choose from the end, [-2,<strong><u>7</u></strong>], adding 7 * 6 = 42 to the score. \nThe total score is 50 + 15 - 9 + 4 + 42 = 102.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3317', '1436', '1', 'word1 = \"cacb\", word2 = \"cbba\"', '5', 'Choose \"ab\" from word1 and \"cba\" from word2 to make \"abcba\", which is a palindrome.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3318', '1436', '2', 'word1 = \"ab\", word2 = \"ab\"', '3', 'Choose \"ab\" from word1 and \"a\" from word2 to make \"aba\", which is a palindrome.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3319', '1436', '3', 'word1 = \"aa\", word2 = \"bb\"', '0', 'You cannot construct a palindrome from the described method, so return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3320', '1437', '1', 'items = [[\"phone\",\"blue\",\"pixel\"],[\"computer\",\"silver\",\"lenovo\"],[\"phone\",\"gold\",\"iphone\"]], ruleKey = \"color\", ruleValue = \"silver\"', '1', 'There is only one item matching the given rule, which is [\"computer\",\"silver\",\"lenovo\"].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3321', '1437', '2', 'items = [[\"phone\",\"blue\",\"pixel\"],[\"computer\",\"silver\",\"phone\"],[\"phone\",\"gold\",\"iphone\"]], ruleKey = \"type\", ruleValue = \"phone\"', '2', 'There are only two items matching the given rule, which are [\"phone\",\"blue\",\"pixel\"] and [\"phone\",\"gold\",\"iphone\"]. Note that the item [\"computer\",\"silver\",\"phone\"] does not match.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3322', '1438', '1', 'baseCosts = [1,7], toppingCosts = [3,4], target = 10', '10', 'Consider the following combination (all 0-indexed):\n- Choose base 1: cost 7\n- Take 1 of topping 0: cost 1 x 3 = 3\n- Take 0 of topping 1: cost 0 x 4 = 0\nTotal: 7 + 3 + 0 = 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3323', '1438', '2', 'baseCosts = [2,3], toppingCosts = [4,5,100], target = 18', '17', 'Consider the following combination (all 0-indexed):\n- Choose base 1: cost 3\n- Take 1 of topping 0: cost 1 x 4 = 4\n- Take 2 of topping 1: cost 2 x 5 = 10\n- Take 0 of topping 2: cost 0 x 100 = 0\nTotal: 3 + 4 + 10 + 0 = 17. You cannot make a dessert with a total cost of 18.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3324', '1438', '3', 'baseCosts = [3,10], toppingCosts = [2,5], target = 9', '8', 'It is possible to make desserts with cost 8 and 10. Return 8 as it is the lower cost.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3325', '1439', '1', 'nums1 = [1,2,3,4,5,6], nums2 = [1,1,2,2,2,2]', '3', 'You can make the sums of nums1 and nums2 equal with 3 operations. All indices are 0-indexed.\n- Change nums2[0] to 6. nums1 = [1,2,3,4,5,6], nums2 = [<u><strong>6</strong></u>,1,2,2,2,2].\n- Change nums1[5] to 1. nums1 = [1,2,3,4,5,<strong><u>1</u></strong>], nums2 = [6,1,2,2,2,2].\n- Change nums1[2] to 2. nums1 = [1,2,<strong><u>2</u></strong>,4,5,1], nums2 = [6,1,2,2,2,2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3326', '1439', '2', 'nums1 = [1,1,1,1,1,1,1], nums2 = [6]', '-1', 'There is no way to decrease the sum of nums1 or to increase the sum of nums2 to make them equal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3327', '1439', '3', 'nums1 = [6,6], nums2 = [1]', '3', 'You can make the sums of nums1 and nums2 equal with 3 operations. All indices are 0-indexed. \n- Change nums1[0] to 2. nums1 = [<strong><u>2</u></strong>,6], nums2 = [1].\n- Change nums1[1] to 2. nums1 = [2,<strong><u>2</u></strong>], nums2 = [1].\n- Change nums2[0] to 4. nums1 = [2,2], nums2 = [<strong><u>4</u></strong>].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3328', '1440', '1', 'cars = [[1,2],[2,1],[4,3],[7,2]]', '[1.00000,-1.00000,3.00000,-1.00000]', 'After exactly one second, the first car will collide with the second car, and form a car fleet with speed 1 m/s. After exactly 3 seconds, the third car will collide with the fourth car, and form a car fleet with speed 2 m/s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3329', '1440', '2', 'cars = [[3,4],[5,4],[6,3],[9,1]]', '[2.00000,1.00000,1.50000,-1.00000]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3330', '1441', '1', 'x = 3, y = 4, points = [[1,2],[3,1],[2,4],[2,3],[4,4]]', '2', 'Of all the points, only [3,1], [2,4] and [4,4] are valid. Of the valid points, [2,4] and [4,4] have the smallest Manhattan distance from your current location, with a distance of 1. [2,4] has the smallest index, so return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3331', '1441', '2', 'x = 3, y = 4, points = [[3,4]]', '0', 'The answer is allowed to be on the same location as your current location.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3332', '1441', '3', 'x = 3, y = 4, points = [[2,3]]', '-1', 'There are no valid points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3333', '1442', '1', 'n = 12', 'true', '12 = 3<sup>1</sup> + 3<sup>2</sup>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3334', '1442', '2', 'n = 91', 'true', '91 = 3<sup>0</sup> + 3<sup>2</sup> + 3<sup>4</sup>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3335', '1442', '3', 'n = 21', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3336', '1443', '1', 's = \"aabcb\"', '5', 'The substrings with non-zero beauty are [\"aab\",\"aabc\",\"aabcb\",\"abcb\",\"bcb\"], each with beauty equal to 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3337', '1443', '2', 's = \"aabcbaa\"', '17', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3338', '1444', '1', 'n = 4, edges = [[1,2],[2,4],[1,3],[2,3],[2,1]], queries = [2,3]', '[6,5]', 'The calculations for incident(a, b) are shown in the table above.\nThe answers for each of the queries are as follows:\n- answers[0] = 6. All the pairs have an incident(a, b) value greater than 2.\n- answers[1] = 5. All the pairs except (3, 4) have an incident(a, b) value greater than 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3339', '1444', '2', 'n = 5, edges = [[1,5],[1,5],[3,4],[2,5],[1,3],[5,1],[2,3],[2,5]], queries = [1,2,3,4,5]', '[10,10,9,8,6]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3340', '1445', '1', 's = \"1001\"', 'false', 'The ones do not form a contiguous segment.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3341', '1445', '2', 's = \"110\"', 'true', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3342', '1446', '1', 'nums = [1,-1,1], limit = 3, goal = -4', '2', 'You can add -2 and -3, then the sum of the array will be 1 - 1 + 1 - 2 - 3 = -4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3343', '1446', '2', 'nums = [1,-10,9,1], limit = 100, goal = 0', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3344', '1447', '1', 'n = 5, edges = [[1,2,3],[1,3,3],[2,3,1],[1,4,2],[5,2,2],[3,5,1],[5,4,10]]', '3', 'Each circle contains the node number in black and its <code>distanceToLastNode value in blue. </code>The three restricted paths are:\n1) 1 --&gt; 2 --&gt; 5\n2) 1 --&gt; 2 --&gt; 3 --&gt; 5\n3) 1 --&gt; 3 --&gt; 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3345', '1447', '2', 'n = 7, edges = [[1,3,1],[4,1,2],[7,3,4],[2,5,3],[5,6,1],[6,7,2],[7,5,3],[2,6,4]]', '1', 'Each circle contains the node number in black and its <code>distanceToLastNode value in blue. </code>The only restricted path is 1 --&gt; 3 --&gt; 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3346', '1448', '1', 'nums = [1,2,0,3,0], k = 1', '3', 'Modify the array from [<u><strong>1</strong></u>,<u><strong>2</strong></u>,0,<u><strong>3</strong></u>,0] to from [<u><strong>0</strong></u>,<u><strong>0</strong></u>,0,<u><strong>0</strong></u>,0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3347', '1448', '2', 'nums = [3,4,5,2,1,7,3,4,7], k = 3', '3', 'Modify the array from [3,4,<strong><u>5</u></strong>,<strong><u>2</u></strong>,<strong><u>1</u></strong>,7,3,4,7] to [3,4,<strong><u>7</u></strong>,<strong><u>3</u></strong>,<strong><u>4</u></strong>,7,3,4,7].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3348', '1448', '3', 'nums = [1,2,4,1,2,5,1,2,6], k = 3', '3', 'Modify the array from [1,2,<strong><u>4,</u></strong>1,2,<strong><u>5</u></strong>,1,2,<strong><u>6</u></strong>] to [1,2,<strong><u>3</u></strong>,1,2,<strong><u>3</u></strong>,1,2,<strong><u>3</u></strong>].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3349', '1449', '1', 'Employee table:\n+-------------+---------------+--------------+\n| employee_id | department_id | primary_flag |\n+-------------+---------------+--------------+\n| 1           | 1             | N            |\n| 2           | 1             | Y            |\n| 2           | 2             | N            |\n| 3           | 3             | N            |\n| 4           | 2             | N            |\n| 4           | 3             | Y            |\n| 4           | 4             | N            |\n+-------------+---------------+--------------+', '+-------------+---------------+\n| employee_id | department_id |\n+-------------+---------------+\n| 1           | 1             |\n| 2           | 1             |\n| 3           | 3             |\n| 4           | 3             |\n+-------------+---------------+', '- The Primary department for employee 1 is 1.\n- The Primary department for employee 2 is 1.\n- The Primary department for employee 3 is 3.\n- The Primary department for employee 4 is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3350', '1450', '1', 's1 = \"bank\", s2 = \"kanb\"', 'true', 'For example, swap the first character with the last character of s2 to make \"bank\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3351', '1450', '2', 's1 = \"attack\", s2 = \"defend\"', 'false', 'It is impossible to make them equal with one string swap.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3352', '1450', '3', 's1 = \"kelb\", s2 = \"kelb\"', 'true', 'The two strings are already equal, so no string swap operation is required.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3353', '1451', '1', 'edges = [[1,2],[2,3],[4,2]]', '2', 'As shown in the figure above, node 2 is connected to every other node, so 2 is the center.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3354', '1451', '2', 'edges = [[1,2],[5,1],[1,3],[1,4]]', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3355', '1452', '1', 'classes = [[1,2],[3,5],[2,2]], <code>extraStudents</code> = 2', '0.78333', 'You can assign the two extra students to the first class. The average pass ratio will be equal to (3/4 + 3/5 + 2/2) / 3 = 0.78333.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3356', '1452', '2', 'classes = [[2,4],[3,9],[4,5],[2,10]], <code>extraStudents</code> = 4', '0.53485', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3357', '1453', '1', 'nums = [1,4,3,7,4,5], k = 3', '15', 'The optimal subarray is (1, 5) with a score of min(4,3,7,4,5) * (5-1+1) = 3 * 5 = 15.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3358', '1453', '2', 'nums = [5,5,4,5,4,1,1,1], k = 0', '20', 'The optimal subarray is (0, 4) with a score of min(5,5,4,5,4) * (4-0+1) = 4 * 5 = 20.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3359', '1454', '1', 'Products table:\n+------------+--------+--------+--------+\n| product_id | store1 | store2 | store3 |\n+------------+--------+--------+--------+\n| 0          | 95     | 100    | 105    |\n| 1          | 70     | null   | 80     |\n+------------+--------+--------+--------+', '+------------+--------+-------+\n| product_id | store  | price |\n+------------+--------+-------+\n| 0          | store1 | 95    |\n| 0          | store2 | 100   |\n| 0          | store3 | 105   |\n| 1          | store1 | 70    |\n| 1          | store3 | 80    |\n+------------+--------+-------+', 'Product 0 is available in all three stores with prices 95, 100, and 105 respectively.\nProduct 1 is available in store1 with price 70 and store3 with price 80. The product is not available in store2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3360', '1455', '1', 's = \"dfa12321afd\"', '2', 'The digits that appear in s are [1, 2, 3]. The second largest digit is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3361', '1455', '2', 's = \"abc1111\"', '-1', 'The digits that appear in s are [1]. There is no second largest digit.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3362', '1456', '1', '[\"AuthenticationManager\", \"<code>renew</code>\", \"generate\", \"<code>countUnexpiredTokens</code>\", \"generate\", \"<code>renew</code>\", \"<code>renew</code>\", \"<code>countUnexpiredTokens</code>\"]\n[[5], [\"aaa\", 1], [\"aaa\", 2], [6], [\"bbb\", 7], [\"aaa\", 8], [\"bbb\", 10], [15]]', '[null, null, null, 1, null, null, null, 0]', 'AuthenticationManager authenticationManager = new AuthenticationManager(5); // Constructs the AuthenticationManager with <code>timeToLive</code> = 5 seconds.\nauthenticationManager.<code>renew</code>(\"aaa\", 1); // No token exists with tokenId \"aaa\" at time 1, so nothing happens.\nauthenticationManager.generate(\"aaa\", 2); // Generates a new token with tokenId \"aaa\" at time 2.\nauthenticationManager.<code>countUnexpiredTokens</code>(6); // The token with tokenId \"aaa\" is the only unexpired one at time 6, so return 1.\nauthenticationManager.generate(\"bbb\", 7); // Generates a new token with tokenId \"bbb\" at time 7.\nauthenticationManager.<code>renew</code>(\"aaa\", 8); // The token with tokenId \"aaa\" expired at time 7, and 8 &gt;= 7, so at time 8 the <code>renew</code> request is ignored, and nothing happens.\nauthenticationManager.<code>renew</code>(\"bbb\", 10); // The token with tokenId \"bbb\" is unexpired at time 10, so the <code>renew</code> request is fulfilled and now the token will expire at time 15.\nauthenticationManager.<code>countUnexpiredTokens</code>(15); // The token with tokenId \"bbb\" expires at time 15, and the token with tokenId \"aaa\" expired at time 7, so currently no token is unexpired, so return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3363', '1457', '1', 'coins = [1,3]', '2', 'You can make the following values:\n- 0: take []\n- 1: take [1]\nYou can make 2 consecutive integer values starting from 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3364', '1457', '2', 'coins = [1,1,1,4]', '8', 'You can make the following values:\n- 0: take []\n- 1: take [1]\n- 2: take [1,1]\n- 3: take [1,1,1]\n- 4: take [4]\n- 5: take [4,1]\n- 6: take [4,1,1]\n- 7: take [4,1,1,1]\nYou can make 8 consecutive integer values starting from 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3365', '1457', '3', 'nums = [1,4,10,3,1]', '20', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3366', '1459', '1', 'nums = [10,20,30,5,10,50]', '65', '[5,10,50] is the ascending subarray with the maximum sum of 65.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3367', '1459', '2', 'nums = [10,20,30,40,50]', '150', '[10,20,30,40,50] is the ascending subarray with the maximum sum of 150.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3368', '1459', '3', 'nums = [12,17,15,13,10,11,12]', '33', '[10,11,12] is the ascending subarray with the maximum sum of 33.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3369', '1460', '1', 'orders = [[10,5,0],[15,2,1],[25,1,1],[30,4,0]]', '6', 'Here is what happens with the orders:\n- 5 orders of type buy with price 10 are placed. There are no sell orders, so the 5 orders are added to the backlog.\n- 2 orders of type sell with price 15 are placed. There are no buy orders with prices larger than or equal to 15, so the 2 orders are added to the backlog.\n- 1 order of type sell with price 25 is placed. There are no buy orders with prices larger than or equal to 25 in the backlog, so this order is added to the backlog.\n- 4 orders of type buy with price 30 are placed. The first 2 orders are matched with the 2 sell orders of the least price, which is 15 and these 2 sell orders are removed from the backlog. The 3<sup>rd</sup> order is matched with the sell order of the least price, which is 25 and this sell order is removed from the backlog. Then, there are no more sell orders in the backlog, so the 4<sup>th</sup> order is added to the backlog.\nFinally, the backlog has 5 buy orders with price 10, and 1 buy order with price 30. So the total number of orders in the backlog is 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3370', '1460', '2', 'orders = [[7,1000000000,1],[15,3,0],[5,999999995,0],[5,1,1]]', '999999984', 'Here is what happens with the orders:\n- 10<sup>9</sup> orders of type sell with price 7 are placed. There are no buy orders, so the 10<sup>9</sup> orders are added to the backlog.\n- 3 orders of type buy with price 15 are placed. They are matched with the 3 sell orders with the least price which is 7, and those 3 sell orders are removed from the backlog.\n- 999999995 orders of type buy with price 5 are placed. The least price of a sell order is 7, so the 999999995 orders are added to the backlog.\n- 1 order of type sell with price 5 is placed. It is matched with the buy order of the highest price, which is 5, and that buy order is removed from the backlog.\nFinally, the backlog has (1000000000-3) sell orders with price 7, and (999999995-1) buy orders with price 5. So the total number of orders = 1999999991, which is equal to 999999984 % (10<sup>9</sup> + 7).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3371', '1461', '1', 'n = 4, index = 2,  maxSum = 6', '2', 'nums = [1,2,<u><strong>2</strong></u>,1] is one array that satisfies all the conditions.\nThere are no arrays that satisfy all the conditions and have nums[2] == 3, so 2 is the maximum nums[2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3372', '1461', '2', 'n = 6, index = 1,  maxSum = 10', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3373', '1462', '1', 'nums = [1,4,2,7], low = 2, high = 6', '6', 'All nice pairs (i, j) are as follows:\n    - (0, 1): nums[0] XOR nums[1] = 5 \n    - (0, 2): nums[0] XOR nums[2] = 3\n    - (0, 3): nums[0] XOR nums[3] = 6\n    - (1, 2): nums[1] XOR nums[2] = 6\n    - (1, 3): nums[1] XOR nums[3] = 3\n    - (2, 3): nums[2] XOR nums[3] = 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3374', '1463', '1', 'word = \"a<u>123</u>bc<u>34</u>d<u>8</u>ef<u>34</u>\"', '3', 'The three different integers are \"123\", \"34\", and \"8\". Notice that \"34\" is only counted once.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3375', '1463', '2', 'word = \"leet<u>1234</u>code<u>234</u>\"', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3376', '1463', '3', 'word = \"a<u>1</u>b<u>01</u>c<u>001</u>\"', '1', 'The three integers \"1\", \"01\", and \"001\" all represent the same integer because\nthe leading zeros are ignored when comparing their decimal values.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3377', '1464', '1', 'n = 2', '1', 'perm = [0,1] initially.\nAfter the 1<sup>st</sup> operation, perm = [0,1]\nSo it takes only 1 operation.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3378', '1464', '2', 'n = 4', '2', 'perm = [0,1,2,3] initially.\nAfter the 1<sup>st</sup> operation, perm = [0,2,1,3]\nAfter the 2<sup>nd</sup> operation, perm = [0,1,2,3]\nSo it takes only 2 operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3379', '1464', '3', 'n = 6', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3380', '1465', '1', 's = \"(name)is(age)yearsold\", knowledge = [[\"name\",\"bob\"],[\"age\",\"two\"]]', '\"bobistwoyearsold\"', 'The key \"name\" has a value of \"bob\", so replace \"(name)\" with \"bob\".\nThe key \"age\" has a value of \"two\", so replace \"(age)\" with \"two\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3381', '1465', '2', 's = \"hi(name)\", knowledge = [[\"a\",\"b\"]]', '\"hi?\"', 'As you do not know the value of the key \"name\", replace \"(name)\" with \"?\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3382', '1465', '3', 's = \"(a)(a)(a)aaa\", knowledge = [[\"a\",\"yes\"]]', '\"yesyesyesaaa\"', 'The same key can appear multiple times.\nThe key \"a\" has a value of \"yes\", so replace all occurrences of \"(a)\" with \"yes\".\nNotice that the \"a\"s not in a bracket pair are not evaluated.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3383', '1466', '1', 'primeFactors = 5', '6', '200 is a valid value of n.\nIt has 5 prime factors: [2,2,2,5,5], and it has 6 nice divisors: [10,20,40,50,100,200].\nThere is not other value of n that has at most 5 prime factors and more nice divisors.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3384', '1466', '2', 'primeFactors = 8', '18', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3385', '1467', '1', 'coordinates = \"a1\"', 'false', 'From the chessboard above, the square with coordinates \"a1\" is black, so return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3386', '1467', '2', 'coordinates = \"h3\"', 'true', 'From the chessboard above, the square with coordinates \"h3\" is white, so return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3387', '1467', '3', 'coordinates = \"c7\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3388', '1468', '1', 'sentence1 = \"My name is Haley\", sentence2 = \"My Haley\"', 'true', 'sentence2 can be turned to sentence1 by inserting \"name is\" between \"My\" and \"Haley\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3389', '1468', '2', 'sentence1 = \"of\", sentence2 = \"A lot of words\"', 'false', 'No single sentence can be inserted inside one of the sentences to make it equal to the other.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3390', '1468', '3', 'sentence1 = \"Eating right now\", sentence2 = \"Eating\"', 'true', 'sentence2 can be turned to sentence1 by inserting \"right now\" at the end of the sentence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3391', '1469', '1', 'nums = [42,11,1,97]', '2', 'The two pairs are:\n - (0,3) : 42 + rev(97) = 42 + 79 = 121, 97 + rev(42) = 97 + 24 = 121.\n - (1,2) : 11 + rev(1) = 11 + 1 = 12, 1 + rev(11) = 1 + 11 = 12.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3392', '1469', '2', 'nums = [13,10,35,24,76]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3393', '1470', '1', 'batchSize = 3, groups = [1,2,3,4,5,6]', '4', 'You can arrange the groups as [6,2,4,5,1,3]. Then the 1<sup>st</sup>, 2<sup>nd</sup>, 4<sup>th</sup>, and 6<sup>th</sup> groups will be happy.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3394', '1470', '2', 'batchSize = 4, groups = [1,3,2,5,2,2,1,6]', '4', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3395', '1471', '1', 's = \"Hello how are you Contestant\", k = 4', '\"Hello how are you\"', 'The words in s are [\"Hello\", \"how\" \"are\", \"you\", \"Contestant\"].\nThe first 4 words are [\"Hello\", \"how\", \"are\", \"you\"].\nHence, you should return \"Hello how are you\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3396', '1471', '2', 's = \"What is the solution to this problem\", k = 4', '\"What is the solution\"', 'The words in s are [\"What\", \"is\" \"the\", \"solution\", \"to\", \"this\", \"problem\"].\nThe first 4 words are [\"What\", \"is\", \"the\", \"solution\"].\nHence, you should return \"What is the solution\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3397', '1471', '3', 's = \"chopper is not a tanuki\", k = 5', '\"chopper is not a tanuki\"', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3398', '1472', '1', 'logs = [[0,5],[1,2],[0,2],[0,5],[1,3]], k = 5', '[0,2,0,0,0]', 'The user with ID=0 performed actions at minutes 5, 2, and 5 again. Hence, they have a UAM of 2 (minute 5 is only counted once).\nThe user with ID=1 performed actions at minutes 2 and 3. Hence, they have a UAM of 2.\nSince both users have a UAM of 2, answer[2] is 2, and the remaining answer[j] values are 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3399', '1472', '2', 'logs = [[1,1],[2,2],[2,3]], k = 4', '[1,1,0,0]', 'The user with ID=1 performed a single action at minute 1. Hence, they have a UAM of 1.\nThe user with ID=2 performed actions at minutes 2 and 3. Hence, they have a UAM of 2.\nThere is one user with a UAM of 1 and one with a UAM of 2.\nHence, answer[1] = 1, answer[2] = 1, and the remaining values are 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3400', '1473', '1', 'nums1 = [1,7,5], nums2 = [2,3,5]', '3', 'There are two possible optimal solutions:\n- Replace the second element with the first: [1,<u><strong>7</strong></u>,5] =&gt; [1,<u><strong>1</strong></u>,5], or\n- Replace the second element with the third: [1,<u><strong>7</strong></u>,5] =&gt; [1,<u><strong>5</strong></u>,5].\nBoth will yield an absolute sum difference of <code>|1-2| + (|1-3| or |5-3|) + |5-5| = </code>3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3401', '1473', '2', 'nums1 = [2,4,6,8,10], nums2 = [2,4,6,8,10]', '0', 'nums1 is equal to nums2 so no replacement is needed. This will result in an \nabsolute sum difference of 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3402', '1473', '3', 'nums1 = [1,10,4,4,2,7], nums2 = [9,3,5,1,7,4]', '20', 'Replace the first element with the second: [<u><strong>1</strong></u>,10,4,4,2,7] =&gt; [<u><strong>10</strong></u>,10,4,4,2,7].\nThis yields an absolute sum difference of <code>|10-9| + |10-3| + |4-5| + |4-1| + |2-7| + |7-4| = 20</code>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3403', '1474', '1', 'nums = [6,10,3]', '5', 'The figure shows all the non-empty subsequences and their GCDs.\nThe different GCDs are 6, 10, 3, 2, and 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3404', '1474', '2', 'nums = [5,15,40,5,6]', '7', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3405', '1475', '1', 'nums = [-1,-2,-3,-4,3,2,1]', '1', 'The product of all values in the array is 144, and signFunc(144) = 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3406', '1475', '2', 'nums = [1,5,0,2,-3]', '0', 'The product of all values in the array is 0, and signFunc(0) = 0');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3407', '1475', '3', 'nums = [-1,1,-1,1,-1]', '-1', 'The product of all values in the array is -1, and signFunc(-1) = -1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3408', '1476', '1', 'n = 5, k = 2', '3', 'Here are the steps of the game:\n1) Start at friend 1.\n2) Count 2 friends clockwise, which are friends 1 and 2.\n3) Friend 2 leaves the circle. Next start is friend 3.\n4) Count 2 friends clockwise, which are friends 3 and 4.\n5) Friend 4 leaves the circle. Next start is friend 5.\n6) Count 2 friends clockwise, which are friends 5 and 1.\n7) Friend 1 leaves the circle. Next start is friend 3.\n8) Count 2 friends clockwise, which are friends 3 and 5.\n9) Friend 5 leaves the circle. Only friend 3 is left, so they are the winner.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3409', '1476', '2', 'n = 6, k = 5', '1', 'The friends leave in this order: 5, 4, 6, 2, 3. The winner is friend 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3410', '1477', '1', 'obstacles = [0,1,2,3,0]', '2', 'The optimal solution is shown by the arrows above. There are 2 side jumps (red arrows).\nNote that the frog can jump over obstacles only when making side jumps (as shown at point 2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3411', '1477', '2', 'obstacles = [0,1,1,3,3,0]', '0', 'There are no obstacles on lane 2. No side jumps are required.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3412', '1477', '3', 'obstacles = [0,2,1,0,3,0]', '2', 'The optimal solution is shown by the arrows above. There are 2 side jumps.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3413', '1478', '1', '[\"MKAverage\", \"addElement\", \"addElement\", \"calculateMKAverage\", \"addElement\", \"calculateMKAverage\", \"addElement\", \"addElement\", \"addElement\", \"calculateMKAverage\"]\n[[3, 1], [3], [1], [], [10], [], [5], [5], [5], []]', '[null, null, null, -1, null, 3, null, null, null, 5]', '<code>MKAverage obj = new MKAverage(3, 1); \nobj.addElement(3);        // current elements are [3]\nobj.addElement(1);        // current elements are [3,1]\nobj.calculateMKAverage(); // return -1, because m = 3 and only 2 elements exist.\nobj.addElement(10);       // current elements are [3,1,10]\nobj.calculateMKAverage(); // The last 3 elements are [3,1,10].\n                          // After removing smallest and largest 1 element the container will be [3].\n                          // The average of [3] equals 3/1 = 3, return 3\nobj.addElement(5);        // current elements are [3,1,10,5]\nobj.addElement(5);        // current elements are [3,1,10,5,5]\nobj.addElement(5);        // current elements are [3,1,10,5,5,5]\nobj.calculateMKAverage(); // The last 3 elements are [5,5,5].\n                          // After removing smallest and largest 1 element the container will be [5].\n                          // The average of [5] equals 5/1 = 5, return 5\n</code>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3414', '1479', '1', 'nums = [1,1,1]', '3', 'You can do the following operations:\n1) Increment nums[2], so nums becomes [1,1,<u><strong>2</strong></u>].\n2) Increment nums[1], so nums becomes [1,<u><strong>2</strong></u>,2].\n3) Increment nums[2], so nums becomes [1,2,<u><strong>3</strong></u>].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3415', '1479', '2', 'nums = [1,5,2,4,1]', '14', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3416', '1479', '3', 'nums = [8]', '0', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3417', '1480', '1', 'points = [[1,3],[3,3],[5,3],[2,2]], queries = [[2,3,1],[4,3,1],[1,1,2]]', '[3,2,2]\n<b>', '</b>The points and circles are shown above.\nqueries[0] is the green circle, queries[1] is the red circle, and queries[2] is the blue circle.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3418', '1480', '2', 'points = [[1,1],[2,2],[3,3],[4,4],[5,5]], queries = [[1,2,2],[2,2,2],[4,3,2],[4,3,3]]', '[2,3,2,4]\n<b>', '</b>The points and circles are shown above.\nqueries[0] is green, queries[1] is red, queries[2] is blue, and queries[3] is purple.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3419', '1481', '1', 'nums = [0,1,1,3], maximumBit = 2', '[0,3,2,3]', ': The queries are answered as follows:\n1<sup>st</sup> query: nums = [0,1,1,3], k = 0 since 0 XOR 1 XOR 1 XOR 3 XOR 0 = 3.\n2<sup>nd</sup> query: nums = [0,1,1], k = 3 since 0 XOR 1 XOR 1 XOR 3 = 3.\n3<sup>rd</sup> query: nums = [0,1], k = 2 since 0 XOR 1 XOR 2 = 3.\n4<sup>th</sup> query: nums = [0], k = 3 since 0 XOR 3 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3420', '1481', '2', 'nums = [2,3,4,7], maximumBit = 3', '[5,2,6,5]', ': The queries are answered as follows:\n1<sup>st</sup> query: nums = [2,3,4,7], k = 5 since 2 XOR 3 XOR 4 XOR 7 XOR 5 = 7.\n2<sup>nd</sup> query: nums = [2,3,4], k = 2 since 2 XOR 3 XOR 4 XOR 2 = 7.\n3<sup>rd</sup> query: nums = [2,3], k = 6 since 2 XOR 3 XOR 6 = 7.\n4<sup>th</sup> query: nums = [2], k = 5 since 2 XOR 5 = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3421', '1481', '3', 'nums = [0,1,2,2,5,7], maximumBit = 3', '[4,3,6,4,6,7]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3422', '1482', '1', 's = \"cba\"', '5', 'The simulation goes as follows:\nOperation 1: i=2, j=2. Swap s[1] and s[2] to get s=\"cab\", then reverse the suffix starting at 2. Now, s=\"cab\".\nOperation 2: i=1, j=2. Swap s[0] and s[2] to get s=\"bac\", then reverse the suffix starting at 1. Now, s=\"bca\".\nOperation 3: i=2, j=2. Swap s[1] and s[2] to get s=\"bac\", then reverse the suffix starting at 2. Now, s=\"bac\".\nOperation 4: i=1, j=1. Swap s[0] and s[1] to get s=\"abc\", then reverse the suffix starting at 1. Now, s=\"acb\".\nOperation 5: i=2, j=2. Swap s[1] and s[2] to get s=\"abc\", then reverse the suffix starting at 2. Now, s=\"abc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3423', '1482', '2', 's = \"aabaa\"', '2', 'The simulation goes as follows:\nOperation 1: i=3, j=4. Swap s[2] and s[4] to get s=\"aaaab\", then reverse the substring starting at 3. Now, s=\"aaaba\".\nOperation 2: i=4, j=4. Swap s[3] and s[4] to get s=\"aaaab\", then reverse the substring starting at 4. Now, s=\"aaaab\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3424', '1483', '1', 'sentence = \"thequickbrownfoxjumpsoverthelazydog\"', 'true', 'sentence contains at least one of every letter of the English alphabet.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3425', '1483', '2', 'sentence = \"leetcode\"', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3426', '1484', '1', 'costs = [1,3,2,4,1], coins = 7', '4', 'The boy can buy ice cream bars at indices 0,1,2,4 for a total price of 1 + 3 + 2 + 1 = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3427', '1484', '2', 'costs = [10,6,8,7,7,8], coins = 5', '0', 'The boy cannot afford any of the ice cream bars.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3428', '1484', '3', 'costs = [1,6,3,1,2,5], coins = 20', '6', 'The boy can buy all the ice cream bars for a total price of 1 + 6 + 3 + 1 + 2 + 5 = 18.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3429', '1485', '1', 'tasks = [[1,2],[2,4],[3,2],[4,1]]', '[0,2,3,1]', 'The events go as follows: \n- At time = 1, task 0 is available to process. Available tasks = {0}.\n- Also at time = 1, the idle CPU starts processing task 0. Available tasks = {}.\n- At time = 2, task 1 is available to process. Available tasks = {1}.\n- At time = 3, task 2 is available to process. Available tasks = {1, 2}.\n- Also at time = 3, the CPU finishes task 0 and starts processing task 2 as it is the shortest. Available tasks = {1}.\n- At time = 4, task 3 is available to process. Available tasks = {1, 3}.\n- At time = 5, the CPU finishes task 2 and starts processing task 3 as it is the shortest. Available tasks = {1}.\n- At time = 6, the CPU finishes task 3 and starts processing task 1. Available tasks = {}.\n- At time = 10, the CPU finishes task 1 and becomes idle.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3430', '1485', '2', 'tasks = [[7,10],[7,12],[7,5],[7,4],[7,2]]', '[4,3,2,0,1]', '<strong>: </strong>The events go as follows:\n- At time = 7, all the tasks become available. Available tasks = {0,1,2,3,4}.\n- Also at time = 7, the idle CPU starts processing task 4. Available tasks = {0,1,2,3}.\n- At time = 9, the CPU finishes task 4 and starts processing task 3. Available tasks = {0,1,2}.\n- At time = 13, the CPU finishes task 3 and starts processing task 2. Available tasks = {0,1}.\n- At time = 18, the CPU finishes task 2 and starts processing task 0. Available tasks = {1}.\n- At time = 28, the CPU finishes task 0 and starts processing task 1. Available tasks = {}.\n- At time = 40, the CPU finishes task 1 and becomes idle.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3431', '1486', '1', 'arr1 = [1,2,3], arr2 = [6,5]', '0', 'The list = [1 AND 6, 1 AND 5, 2 AND 6, 2 AND 5, 3 AND 6, 3 AND 5] = [0,1,2,0,2,1].\nThe XOR sum = 0 XOR 1 XOR 2 XOR 0 XOR 2 XOR 1 = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3432', '1486', '2', 'arr1 = [12], arr2 = [4]', '4', 'The list = [12 AND 4] = [4]. The XOR sum = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3433', '1487', '1', 'n = 34, k = 6', '9', '34 (base 10) expressed in base 6 is 54. 5 + 4 = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3434', '1487', '2', 'n = 10, k = 10', '1', 'n is already in base 10. 1 + 0 = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3435', '1488', '1', 'nums = [1,2,4], k = 5', '3<strong>', '</strong> Increment the first element three times and the second element two times to make nums = [4,4,4].\n4 has a frequency of 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3436', '1488', '2', 'nums = [1,4,8,13], k = 5', '2', 'There are multiple optimal solutions:\n- Increment the first element three times to make nums = [4,4,8,13]. 4 has a frequency of 2.\n- Increment the second element four times to make nums = [1,8,8,13]. 8 has a frequency of 2.\n- Increment the third element five times to make nums = [1,4,13,13]. 13 has a frequency of 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3437', '1488', '3', 'nums = [3,9,6], k = 2', '1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3438', '1489', '1', 'word = \"aeiaaio<u>aaaaeiiiiouuu</u>ooaauuaeiu\"', '13', 'The longest beautiful substring in word is \"aaaaeiiiiouuu\" of length 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3439', '1489', '2', 'word = \"aeeeiiiioooauuu<u>aeiou</u>\"', '5', 'The longest beautiful substring in word is \"aeiou\" of length 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3440', '1489', '3', 'word = \"a\"', '0', 'There is no beautiful substring, so return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3441', '1490', '1', 'n = 5, restrictions = [[2,1],[4,1]]', '2', 'The green area in the image indicates the maximum allowed height for each building.\nWe can build the buildings with heights [0,1,2,1,2], and the tallest building has a height of 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3442', '1490', '2', 'n = 6, restrictions = []', '5', 'The green area in the image indicates the maximum allowed height for each building.\nWe can build the buildings with heights [0,1,2,3,4,5], and the tallest building has a height of 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3443', '1490', '3', 'n = 10, restrictions = [[5,3],[2,5],[7,4],[10,3]]', '5', 'The green area in the image indicates the maximum allowed height for each building.\nWe can build the buildings with heights [0,1,2,3,3,4,4,5,4,3], and the tallest building has a height of 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3444', '1491', '1', 's = \"a1c1e1\"', '\"abcdef\"', 'The digits are replaced as follows:\n- s[1] -&gt; shift(\'a\',1) = \'b\'\n- s[3] -&gt; shift(\'c\',1) = \'d\'\n- s[5] -&gt; shift(\'e\',1) = \'f\'');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3445', '1491', '2', 's = \"a1b2c3d4e\"', '\"abbdcfdhe\"', 'The digits are replaced as follows:\n- s[1] -&gt; shift(\'a\',1) = \'b\'\n- s[3] -&gt; shift(\'b\',2) = \'d\'\n- s[5] -&gt; shift(\'c\',3) = \'f\'\n- s[7] -&gt; shift(\'d\',4) = \'h\'');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3446', '1492', '1', '[\"SeatManager\", \"reserve\", \"reserve\", \"unreserve\", \"reserve\", \"reserve\", \"reserve\", \"reserve\", \"unreserve\"]\n[[5], [], [], [2], [], [], [], [], [5]]', '[null, 1, 2, null, 2, 3, 4, 5, null]', 'SeatManager seatManager = new SeatManager(5); // Initializes a SeatManager with 5 seats.\nseatManager.reserve();    // All seats are available, so return the lowest numbered seat, which is 1.\nseatManager.reserve();    // The available seats are [2,3,4,5], so return the lowest of them, which is 2.\nseatManager.unreserve(2); // Unreserve seat 2, so now the available seats are [2,3,4,5].\nseatManager.reserve();    // The available seats are [2,3,4,5], so return the lowest of them, which is 2.\nseatManager.reserve();    // The available seats are [3,4,5], so return the lowest of them, which is 3.\nseatManager.reserve();    // The available seats are [4,5], so return the lowest of them, which is 4.\nseatManager.reserve();    // The only available seat is seat 5, so return 5.\nseatManager.unreserve(5); // Unreserve seat 5, so now the available seats are [5].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3447', '1493', '1', 'arr = [2,2,1,2,1]', '2', 'We can satisfy the conditions by rearranging <code>arr</code> so it becomes <code>[1,2,2,2,1]</code>.\nThe largest element in <code>arr</code> is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3448', '1493', '2', 'arr = [100,1,1000]', '3', 'One possible way to satisfy the conditions is by doing the following:\n1. Rearrange <code>arr</code> so it becomes <code>[1,100,1000]</code>.\n2. Decrease the value of the second element to 2.\n3. Decrease the value of the third element to 3.\nNow <code>arr = [1,2,3], which </code>satisfies the conditions.\nThe largest element in <code>arr is 3.</code>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3449', '1493', '3', 'arr = [1,2,3,4,5]', '5', 'The array already satisfies the conditions, and the largest element is 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3450', '1494', '1', 'rooms = [[2,2],[1,2],[3,2]], queries = [[3,1],[3,3],[5,2]]', '[3,-1,3]', 'The answers to the queries are as follows:\nQuery = [3,1]: Room number 3 is the closest as abs(3 - 3) = 0, and its size of 2 is at least 1. The answer is 3.\nQuery = [3,3]: There are no rooms with a size of at least 3, so the answer is -1.\nQuery = [5,2]: Room number 3 is the closest as abs(3 - 5) = 2, and its size of 2 is at least 2. The answer is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3451', '1494', '2', 'rooms = [[1,4],[2,3],[3,5],[4,1],[5,2]], queries = [[2,3],[2,4],[2,5]]', '[2,1,3]', 'The answers to the queries are as follows:\nQuery = [2,3]: Room number 2 is the closest as abs(2 - 2) = 0, and its size of 3 is at least 3. The answer is 2.\nQuery = [2,4]: Room numbers 1 and 3 both have sizes of at least 4. The answer is 1 since it is smaller.\nQuery = [2,5]: Room number 3 is the only room with a size of at least 5. The answer is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3452', '1495', '1', 'nums = [1,2,3,4,5], target = 5, start = 3', '1', 'nums[4] = 5 is the only value equal to target, so the answer is abs(4 - 3) = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3453', '1495', '2', 'nums = [1], target = 1, start = 0', '0', 'nums[0] = 1 is the only value equal to target, so the answer is abs(0 - 0) = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3454', '1495', '3', 'nums = [1,1,1,1,1,1,1,1,1,1], target = 1, start = 0', '0', 'Every value of nums is 1, but nums[0] minimizes abs(i - start), which is abs(0 - 0) = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3455', '1496', '1', 's = \"1234\"', 'false', 'There is no valid way to split s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3456', '1496', '2', 's = \"050043\"', 'true', 's can be split into [\"05\", \"004\", \"3\"] with numerical values [5,4,3].\nThe values are in descending order with adjacent values differing by 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3457', '1496', '3', 's = \"9080701\"', 'false', 'There is no valid way to split s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3458', '1497', '1', 'num = \"5489355142\", k = 4', '2', 'The 4<sup>th</sup> smallest wonderful number is \"5489355421\". To get this number:\n- Swap index 7 with index 8: \"5489355<u>14</u>2\" -&gt; \"5489355<u>41</u>2\"\n- Swap index 8 with index 9: \"54893554<u>12</u>\" -&gt; \"54893554<u>21</u>\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3459', '1497', '2', 'num = \"11112\", k = 4', '4', 'The 4<sup>th</sup> smallest wonderful number is \"21111\". To get this number:\n- Swap index 3 with index 4: \"111<u>12</u>\" -&gt; \"111<u>21</u>\"\n- Swap index 2 with index 3: \"11<u>12</u>1\" -&gt; \"11<u>21</u>1\"\n- Swap index 1 with index 2: \"1<u>12</u>11\" -&gt; \"1<u>21</u>11\"\n- Swap index 0 with index 1: \"<u>12</u>111\" -&gt; \"<u>21</u>111\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3460', '1497', '3', 'num = \"00123\", k = 1', '1', 'The 1<sup>st</sup> smallest wonderful number is \"00132\". To get this number:\n- Swap index 3 with index 4: \"001<u>23</u>\" -&gt; \"001<u>32</u>\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3461', '1498', '1', 'intervals = [[1,4],[2,4],[3,6],[4,4]], queries = [2,3,4,5]', '[3,3,1,4]', 'The queries are processed as follows:\n- Query = 2: The interval [2,4] is the smallest interval containing 2. The answer is 4 - 2 + 1 = 3.\n- Query = 3: The interval [2,4] is the smallest interval containing 3. The answer is 4 - 2 + 1 = 3.\n- Query = 4: The interval [4,4] is the smallest interval containing 4. The answer is 4 - 4 + 1 = 1.\n- Query = 5: The interval [3,6] is the smallest interval containing 5. The answer is 6 - 3 + 1 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3462', '1498', '2', 'intervals = [[2,3],[2,5],[1,8],[20,25]], queries = [2,19,5,22]', '[2,-1,4,6]', 'The queries are processed as follows:\n- Query = 2: The interval [2,3] is the smallest interval containing 2. The answer is 3 - 2 + 1 = 2.\n- Query = 19: None of the intervals contain 19. The answer is -1.\n- Query = 5: The interval [2,5] is the smallest interval containing 5. The answer is 5 - 2 + 1 = 4.\n- Query = 22: The interval [20,25] is the smallest interval containing 22. The answer is 25 - 20 + 1 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3463', '1499', '1', 'logs = [[1993,1999],[2000,2010]]', '1993', 'The maximum population is 1, and 1993 is the earliest year with this population.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3464', '1499', '2', 'logs = [[1950,1961],[1960,1971],[1970,1981]]', '1960', 'The maximum population is 2, and it had happened in years 1960 and 1970.\nThe earlier year between them is 1960.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3465', '1500', '1', 'nums1 = [55,30,5,4,2], nums2 = [100,20,10,10,5]', '2', 'The valid pairs are (0,0), (2,2), (2,3), (2,4), (3,3), (3,4), and (4,4).\nThe maximum distance is 2 with pair (2,4).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3466', '1500', '2', 'nums1 = [2,2,2], nums2 = [10,10,1]', '1', 'The valid pairs are (0,0), (0,1), and (1,1).\nThe maximum distance is 1 with pair (0,1).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3467', '1500', '3', 'nums1 = [30,29,19,5], nums2 = [25,25,25,25,25]', '2', 'The valid pairs are (2,2), (2,3), (2,4), (3,3), and (3,4).\nThe maximum distance is 2 with pair (2,4).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3468', '1501', '1', 'nums = [1,<u>2,3,2</u>]', '14', 'The maximum min-product is achieved with the subarray [2,3,2] (minimum value is 2).\n2 * (2+3+2) = 2 * 7 = 14.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3469', '1501', '2', 'nums = [2,<u>3,3</u>,1,2]', '18', 'The maximum min-product is achieved with the subarray [3,3] (minimum value is 3).\n3 * (3+3) = 3 * 6 = 18.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3470', '1501', '3', 'nums = [3,1,<u>5,6,4</u>,2]', '60', 'The maximum min-product is achieved with the subarray [5,6,4] (minimum value is 4).\n4 * (5+6+4) = 4 * 15 = 60.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3471', '1502', '1', 'colors = \"abaca\", edges = [[0,1],[0,2],[2,3],[3,4]]', '3', 'The path 0 -&gt; 2 -&gt; 3 -&gt; 4 contains 3 nodes that are colored <code>\"a\" (red in the above image)</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3472', '1502', '2', 'colors = \"a\", edges = [[0,0]]', '-1', 'There is a cycle from 0 to 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3473', '1503', '1', 's = \"is2 sentence4 This1 a3\"', '\"This is a sentence\"', 'Sort the words in s to their original positions \"This1 is2 a3 sentence4\", then remove the numbers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3474', '1503', '2', 's = \"Myself2 Me1 I4 and3\"', '\"Me Myself and I\"', 'Sort the words in s to their original positions \"Me1 Myself2 and3 I4\", then remove the numbers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3475', '1504', '1', 'memory1 = 2, memory2 = 2', '[3,1,0]', 'The memory is allocated as follows:\n- At the 1<sup>st</sup> second, 1 bit of memory is allocated to stick 1. The first stick now has 1 bit of available memory.\n- At the 2<sup>nd</sup> second, 2 bits of memory are allocated to stick 2. The second stick now has 0 bits of available memory.\n- At the 3<sup>rd</sup> second, the program crashes. The sticks have 1 and 0 bits available respectively.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3476', '1504', '2', 'memory1 = 8, memory2 = 11', '[6,0,4]', 'The memory is allocated as follows:\n- At the 1<sup>st</sup> second, 1 bit of memory is allocated to stick 2. The second stick now has 10 bit of available memory.\n- At the 2<sup>nd</sup> second, 2 bits of memory are allocated to stick 2. The second stick now has 8 bits of available memory.\n- At the 3<sup>rd</sup> second, 3 bits of memory are allocated to stick 1. The first stick now has 5 bits of available memory.\n- At the 4<sup>th</sup> second, 4 bits of memory are allocated to stick 2. The second stick now has 4 bits of available memory.\n- At the 5<sup>th</sup> second, 5 bits of memory are allocated to stick 1. The first stick now has 0 bits of available memory.\n- At the 6<sup>th</sup> second, the program crashes. The sticks have 0 and 4 bits available respectively.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3477', '1505', '1', 'box = [[\"#\",\".\",\"#\"]]', '[[\".\"],\n         [\"#\"],\n         [\"#\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3478', '1505', '2', 'box = [[\"#\",\".\",\"*\",\".\"],\n              [\"#\",\"#\",\"*\",\".\"]]', '[[\"#\",\".\"],\n         [\"#\",\"#\"],\n         [\"*\",\"*\"],\n         [\".\",\".\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3479', '1505', '3', 'box = [[\"#\",\"#\",\"*\",\".\",\"*\",\".\"],\n              [\"#\",\"#\",\"#\",\"*\",\".\",\".\"],\n              [\"#\",\"#\",\"#\",\".\",\"#\",\".\"]]', '[[\".\",\"#\",\"#\"],\n         [\".\",\"#\",\"#\"],\n         [\"#\",\"#\",\"*\"],\n         [\"#\",\"*\",\".\"],\n         [\"#\",\".\",\"*\"],\n         [\"#\",\".\",\".\"]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3480', '1506', '1', 'nums = [2,5,9]', '10', 'floor(2 / 5) = floor(2 / 9) = floor(5 / 9) = 0\nfloor(2 / 2) = floor(5 / 5) = floor(9 / 9) = 1\nfloor(5 / 2) = 2\nfloor(9 / 2) = 4\nfloor(9 / 5) = 1\nWe calculate the floor of the division for every pair of indices in the array then sum them up.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3481', '1506', '2', 'nums = [7,7,7,7,7,7,7]', '49', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3482', '1507', '1', 'nums = [1,3]', '6', 'The 4 subsets of [1,3] are:\n- The empty subset has an XOR total of 0.\n- [1] has an XOR total of 1.\n- [3] has an XOR total of 3.\n- [1,3] has an XOR total of 1 XOR 3 = 2.\n0 + 1 + 3 + 2 = 6');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3483', '1507', '2', 'nums = [5,1,6]', '28', 'The 8 subsets of [5,1,6] are:\n- The empty subset has an XOR total of 0.\n- [5] has an XOR total of 5.\n- [1] has an XOR total of 1.\n- [6] has an XOR total of 6.\n- [5,1] has an XOR total of 5 XOR 1 = 4.\n- [5,6] has an XOR total of 5 XOR 6 = 3.\n- [1,6] has an XOR total of 1 XOR 6 = 7.\n- [5,1,6] has an XOR total of 5 XOR 1 XOR 6 = 2.\n0 + 5 + 1 + 6 + 4 + 3 + 7 + 2 = 28');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3484', '1507', '3', 'nums = [3,4,5,6,7,8]', '480', 'The sum of all XOR totals for every subset is 480.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3485', '1508', '1', 's = \"111000\"', '1', 'Swap positions 1 and 4: \"1<u>1</u>10<u>0</u>0\" -&gt; \"1<u>0</u>10<u>1</u>0\"\nThe string is now alternating.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3486', '1508', '2', 's = \"010\"', '0', 'The string is already alternating, no swaps are needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3487', '1508', '3', 's = \"1110\"', '-1', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3488', '1509', '1', '[\"FindSumPairs\", \"count\", \"add\", \"count\", \"count\", \"add\", \"add\", \"count\"]\n[[[1, 1, 2, 2, 2, 3], [1, 4, 5, 2, 5, 4]], [7], [3, 2], [8], [4], [0, 1], [1, 1], [7]]', '[null, 8, null, 2, 1, null, null, 11]', 'FindSumPairs findSumPairs = new FindSumPairs([1, 1, 2, 2, 2, 3], [1, 4, 5, 2, 5, 4]);\nfindSumPairs.count(7);  // return 8; pairs (2,2), (3,2), (4,2), (2,4), (3,4), (4,4) make 2 + 5 and pairs (5,1), (5,5) make 3 + 4\nfindSumPairs.add(3, 2); // now nums2 = [1,4,5,<strong><u>4</u></strong><code>,5,4</code>]\nfindSumPairs.count(8);  // return 2; pairs (5,2), (5,4) make 3 + 5\nfindSumPairs.count(4);  // return 1; pair (5,0) makes 3 + 1\nfindSumPairs.add(0, 1); // now nums2 = [<strong><u><code>2</code></u></strong>,4,5,4<code>,5,4</code>]\nfindSumPairs.add(1, 1); // now nums2 = [<code>2</code>,<strong><u>5</u></strong>,5,4<code>,5,4</code>]\nfindSumPairs.count(7);  // return 11; pairs (2,1), (2,2), (2,4), (3,1), (3,2), (3,4), (4,1), (4,2), (4,4) make 2 + 5 and pairs (5,3), (5,5) make 3 + 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3489', '1510', '1', 'n = 3, k = 2', '3', '[<u>1</u>,<u>3</u>,2], [<u>2</u>,<u>3</u>,1], and [<u>2</u>,1,<u>3</u>] are the only arrangements such that exactly 2 sticks are visible.\nThe visible sticks are underlined.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3490', '1510', '2', 'n = 5, k = 5', '1', '[<u>1</u>,<u>2</u>,<u>3</u>,<u>4</u>,<u>5</u>] is the only arrangement such that all 5 sticks are visible.\nThe visible sticks are underlined.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3491', '1510', '3', 'n = 20, k = 11', '647427950', 'There are 647427950 (mod 10<sup>9 </sup>+ 7) ways to rearrange the sticks such that exactly 11 sticks are visible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3492', '1511', '1', 's = \"1101\"', 'true', 'The longest contiguous segment of 1s has length 2: \"<u>11</u>01\"\nThe longest contiguous segment of 0s has length 1: \"11<u>0</u>1\"\nThe segment of 1s is longer, so return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3493', '1511', '2', 's = \"111000\"', 'false', 'The longest contiguous segment of 1s has length 3: \"<u>111</u>000\"\nThe longest contiguous segment of 0s has length 3: \"111<u>000</u>\"\nThe segment of 1s is not longer, so return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3494', '1511', '3', 's = \"110100010\"', 'false', 'The longest contiguous segment of 1s has length 2: \"<u>11</u>0100010\"\nThe longest contiguous segment of 0s has length 3: \"1101<u>000</u>10\"\nThe segment of 1s is not longer, so return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3495', '1512', '1', 'dist = [1,3,2], hour = 6', '1', 'At speed 1:\n- The first train ride takes 1/1 = 1 hour.\n- Since we are already at an integer hour, we depart immediately at the 1 hour mark. The second train takes 3/1 = 3 hours.\n- Since we are already at an integer hour, we depart immediately at the 4 hour mark. The third train takes 2/1 = 2 hours.\n- You will arrive at exactly the 6 hour mark.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3496', '1512', '2', 'dist = [1,3,2], hour = 2.7', '3', 'At speed 3:\n- The first train ride takes 1/3 = 0.33333 hours.\n- Since we are not at an integer hour, we wait until the 1 hour mark to depart. The second train ride takes 3/3 = 1 hour.\n- Since we are already at an integer hour, we depart immediately at the 2 hour mark. The third train takes 2/3 = 0.66667 hours.\n- You will arrive at the 2.66667 hour mark.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3497', '1512', '3', 'dist = [1,3,2], hour = 1.9', '-1', 'It is impossible because the earliest the third train can depart is at the 2 hour mark.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3498', '1513', '1', 's = \"<u>0</u>11<u>0</u>1<u>0</u>\", minJump = 2, maxJump = 3', 'true', 'In the first step, move from index 0 to index 3. \nIn the second step, move from index 3 to index 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3499', '1513', '2', 's = \"01101110\", minJump = 2, maxJump = 3', 'false', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3500', '1514', '1', 'stones = [-1,2,-3,4,-5]', '5', '- Alice removes the first 4 stones, adds (-1) + 2 + (-3) + 4 = 2 to her score, and places a stone of\n  value 2 on the left. stones = [2,-5].\n- Bob removes the first 2 stones, adds 2 + (-5) = -3 to his score, and places a stone of value -3 on\n  the left. stones = [-3].\nThe difference between their scores is 2 - (-3) = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3501', '1514', '2', 'stones = [7,-6,5,10,5,-2,-6]', '13', '- Alice removes all stones, adds 7 + (-6) + 5 + 10 + 5 + (-2) + (-6) = 13 to her score, and places a\n  stone of value 13 on the left. stones = [13].\nThe difference between their scores is 13 - 0 = 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3502', '1514', '3', 'stones = [-10,-12]', '-22', '- Alice can only make one move, which is to remove both stones. She adds (-10) + (-12) = -22 to her\n  score and places a stone of value -22 on the left. stones = [-22].\nThe difference between their scores is (-22) - 0 = -22.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3503', '1515', '1', 'Employees table:\n+-------------+---------+--------+\n| employee_id | name    | salary |\n+-------------+---------+--------+\n| 2           | Meir    | 3000   |\n| 3           | Michael | 3800   |\n| 7           | Addilyn | 7400   |\n| 8           | Juan    | 6100   |\n| 9           | Kannon  | 7700   |\n+-------------+---------+--------+', '+-------------+-------+\n| employee_id | bonus |\n+-------------+-------+\n| 2           | 0     |\n| 3           | 0     |\n| 7           | 7400  |\n| 8           | 0     |\n| 9           | 7700  |\n+-------------+-------+', 'The employees with IDs 2 and 8 get 0 bonus because they have an even employee_id.\nThe employee with ID 3 gets 0 bonus because their name starts with \'M\'.\nThe rest of the employees get a 100% bonus.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3504', '1517', '1', 'nums = [3,5,2,3]', '7', 'The elements can be paired up into pairs (3,3) and (5,2).\nThe maximum pair sum is max(3+3, 5+2) = max(6, 7) = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3505', '1517', '2', 'nums = [3,5,4,2,4,6]', '8', 'The elements can be paired up into pairs (3,5), (4,4), and (6,2).\nThe maximum pair sum is max(3+5, 4+4, 6+2) = max(8, 8, 8) = 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3506', '1518', '1', 'grid = [[3,4,5,1,3],[3,3,4,2,3],[20,30,200,40,10],[1,5,5,4,1],[4,3,2,2,5]]', '[228,216,211]', 'The rhombus shapes for the three biggest distinct rhombus sums are depicted above.\n- Blue: 20 + 3 + 200 + 5 = 228\n- Red: 200 + 2 + 10 + 4 = 216\n- Green: 5 + 200 + 4 + 2 = 211');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3507', '1518', '2', 'grid = [[1,2,3],[4,5,6],[7,8,9]]', '[20,9,8]', 'The rhombus shapes for the three biggest distinct rhombus sums are depicted above.\n- Blue: 4 + 2 + 6 + 8 = 20\n- Red: 9 (area 0 rhombus in the bottom right corner)\n- Green: 8 (area 0 rhombus in the bottom middle)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3508', '1518', '3', 'grid = [[7,7,7]]', '[7]', 'All three possible rhombus sums are the same, so return [7].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3509', '1520', '1', 'firstWord = \"acb\", secondWord = \"cba\", targetWord = \"cdb\"', 'true', 'The numerical value of firstWord is \"acb\" -&gt; \"021\" -&gt; 21.\nThe numerical value of secondWord is \"cba\" -&gt; \"210\" -&gt; 210.\nThe numerical value of targetWord is \"cdb\" -&gt; \"231\" -&gt; 231.\nWe return true because 21 + 210 == 231.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3510', '1520', '2', 'firstWord = \"aaa\", secondWord = \"a\", targetWord = \"aab\"', 'false', 'The numerical value of firstWord is \"aaa\" -&gt; \"000\" -&gt; 0.\nThe numerical value of secondWord is \"a\" -&gt; \"0\" -&gt; 0.\nThe numerical value of targetWord is \"aab\" -&gt; \"001\" -&gt; 1.\nWe return false because 0 + 0 != 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3511', '1520', '3', 'firstWord = \"aaa\", secondWord = \"a\", targetWord = \"aaaa\"', 'true', 'The numerical value of firstWord is \"aaa\" -&gt; \"000\" -&gt; 0.\nThe numerical value of secondWord is \"a\" -&gt; \"0\" -&gt; 0.\nThe numerical value of targetWord is \"aaaa\" -&gt; \"0000\" -&gt; 0.\nWe return true because 0 + 0 == 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3512', '1521', '1', 'n = \"99\", x = 9', '\"999\"', 'The result is the same regardless of where you insert 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3513', '1521', '2', 'n = \"-13\", x = 2', '\"-123\"', 'You can make n one of {-213, -123, -132}, and the largest of those three is -123.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3514', '1522', '1', 'servers = [3,3,2], tasks = [1,2,3,2,1,2]', '[2,2,0,2,1,2]', 'Events in chronological order go as follows:\n- At second 0, task 0 is added and processed using server 2 until second 1.\n- At second 1, server 2 becomes free. Task 1 is added and processed using server 2 until second 3.\n- At second 2, task 2 is added and processed using server 0 until second 5.\n- At second 3, server 2 becomes free. Task 3 is added and processed using server 2 until second 5.\n- At second 4, task 4 is added and processed using server 1 until second 5.\n- At second 5, all servers become free. Task 5 is added and processed using server 2 until second 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3515', '1522', '2', 'servers = [5,1,4,3,2], tasks = [2,1,2,4,5,2,1]', '[1,4,1,4,1,3,2]', 'Events in chronological order go as follows: \n- At second 0, task 0 is added and processed using server 1 until second 2.\n- At second 1, task 1 is added and processed using server 4 until second 2.\n- At second 2, servers 1 and 4 become free. Task 2 is added and processed using server 1 until second 4. \n- At second 3, task 3 is added and processed using server 4 until second 7.\n- At second 4, server 1 becomes free. Task 4 is added and processed using server 1 until second 9. \n- At second 5, task 5 is added and processed using server 3 until second 7.\n- At second 6, task 6 is added and processed using server 2 until second 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3516', '1523', '1', 'dist = [1,3,2], speed = 4, hoursBefore = 2', '1', 'Without skipping any rests, you will arrive in (1/4 + 3/4) + (3/4 + 1/4) + (2/4) = 2.5 hours.\nYou can skip the first rest to arrive in ((1/4 + <u>0</u>) + (3/4 + 0)) + (2/4) = 1.5 hours.\nNote that the second rest is shortened because you finish traveling the second road at an integer hour due to skipping the first rest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3517', '1523', '2', 'dist = [7,3,5,5], speed = 2, hoursBefore = 10', '2', 'Without skipping any rests, you will arrive in (7/2 + 1/2) + (3/2 + 1/2) + (5/2 + 1/2) + (5/2) = 11.5 hours.\nYou can skip the first and third rest to arrive in ((7/2 + <u>0</u>) + (3/2 + 0)) + ((5/2 + <u>0</u>) + (5/2)) = 10 hours.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3518', '1523', '3', 'dist = [7,3,5,5], speed = 1, hoursBefore = 10', '-1', 'It is impossible to arrive at the meeting on time even if you skip all the rests.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3519', '1524', '1', 'n = 2', '2', 'We can drop the first egg from floor 1 and the second egg from floor 2.\nIf the first egg breaks, we know that f = 0.\nIf the second egg breaks but the first egg didn\'t, we know that f = 1.\nOtherwise, if both eggs survive, we know that f = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3520', '1524', '2', 'n = 100', '14', 'One optimal strategy is:\n- Drop the 1st egg at floor 9. If it breaks, we know f is between 0 and 8. Drop the 2nd egg starting from floor 1 and going up one at a time to find f within 8 more drops. Total drops is 1 + 8 = 9.\n- If the 1st egg does not break, drop the 1st egg again at floor 22. If it breaks, we know f is between 9 and 21. Drop the 2nd egg starting from floor 10 and going up one at a time to find f within 12 more drops. Total drops is 2 + 12 = 14.\n- If the 1st egg does not break again, follow a similar process dropping the 1st egg from floors 34, 45, 55, 64, 72, 79, 85, 90, 94, 97, 99, and 100.\nRegardless of the outcome, it takes at most 14 drops to determine f.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3521', '1525', '1', 'mat = [[0,1],[1,0]], target = [[1,0],[0,1]]', 'true', 'We can rotate mat 90 degrees clockwise to make mat equal target.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3522', '1525', '2', 'mat = [[0,1],[1,1]], target = [[1,0],[0,1]]', 'false', 'It is impossible to make mat equal to target by rotating mat.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3523', '1525', '3', 'mat = [[0,0,0],[0,1,0],[1,1,1]], target = [[1,1,1],[0,1,0],[0,0,0]]', 'true', 'We can rotate mat 90 degrees clockwise two times to make mat equal target.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3524', '1527', '1', 's = \"111000\"', '2', ': Use the first operation two times to make s = \"100011\".\nThen, use the second operation on the third and sixth elements to make s = \"10<u>1</u>01<u>0</u>\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3525', '1527', '2', 's = \"010\"', '0', ': The string is already alternating.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3526', '1527', '3', 's = \"1110\"', '1', ': Use the second operation on the second element to make s = \"1<u>0</u>10\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3527', '1528', '1', 'packages = [2,3,5], boxes = [[4,8],[2,8]]', '6', ': It is optimal to choose the first supplier, using two size-4 boxes and one size-8 box.\nThe total waste is (4-2) + (4-3) + (8-5) = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3528', '1528', '2', 'packages = [2,3,5], boxes = [[1,4],[2,3],[3,4]]', '-1', 'There is no box that the package of size 5 can fit in.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3529', '1528', '3', 'packages = [3,5,8,10,11,12], boxes = [[12],[11,9],[10,5,14]]', '9', 'It is optimal to choose the third supplier, using two size-5 boxes, two size-10 boxes, and two size-14 boxes.\nThe total waste is (5-3) + (5-5) + (10-8) + (10-10) + (14-11) + (14-12) = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3530', '1529', '1', 'Logins table:\n+---------+---------------------+\n| user_id | time_stamp          |\n+---------+---------------------+\n| 6       | 2020-06-30 15:06:07 |\n| 6       | 2021-04-21 14:06:06 |\n| 6       | 2019-03-07 00:18:15 |\n| 8       | 2020-02-01 05:10:53 |\n| 8       | 2020-12-30 00:46:50 |\n| 2       | 2020-01-16 02:49:50 |\n| 2       | 2019-08-25 07:59:08 |\n| 14      | 2019-07-14 09:00:00 |\n| 14      | 2021-01-06 11:59:59 |\n+---------+---------------------+', '+---------+---------------------+\n| user_id | last_stamp          |\n+---------+---------------------+\n| 6       | 2020-06-30 15:06:07 |\n| 8       | 2020-12-30 00:46:50 |\n| 2       | 2020-01-16 02:49:50 |\n+---------+---------------------+', 'User 6 logged into their account 3 times but only once in 2020, so we include this login in the result table.\nUser 8 logged into their account 2 times in 2020, once in February and once in December. We include only the latest one (December) in the result table.\nUser 2 logged into their account 2 times but only once in 2020, so we include this login in the result table.\nUser 14 did not login in 2020, so we do not include them in the result table.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3531', '1530', '1', 'ranges = [[1,2],[3,4],[5,6]], left = 2, right = 5', 'true', 'Every integer between 2 and 5 is covered:\n- 2 is covered by the first range.\n- 3 and 4 are covered by the second range.\n- 5 is covered by the third range.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3532', '1530', '2', 'ranges = [[1,10],[10,20]], left = 21, right = 21', 'false', '21 is not covered by any range.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3533', '1531', '1', 'chalk = [5,1,5], k = 22', '0', 'The students go in turns as follows:\n- Student number 0 uses 5 chalk, so k = 17.\n- Student number 1 uses 1 chalk, so k = 16.\n- Student number 2 uses 5 chalk, so k = 11.\n- Student number 0 uses 5 chalk, so k = 6.\n- Student number 1 uses 1 chalk, so k = 5.\n- Student number 2 uses 5 chalk, so k = 0.\nStudent number 0 does not have enough chalk, so they will have to replace it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3534', '1531', '2', 'chalk = [3,4,1,2], k = 25', '1', 'The students go in turns as follows:\n- Student number 0 uses 3 chalk so k = 22.\n- Student number 1 uses 4 chalk so k = 18.\n- Student number 2 uses 1 chalk so k = 17.\n- Student number 3 uses 2 chalk so k = 15.\n- Student number 0 uses 3 chalk so k = 12.\n- Student number 1 uses 4 chalk so k = 8.\n- Student number 2 uses 1 chalk so k = 7.\n- Student number 3 uses 2 chalk so k = 5.\n- Student number 0 uses 3 chalk so k = 2.\nStudent number 1 does not have enough chalk, so they will have to replace it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3535', '1532', '1', 'grid = [[7,1,4,5,6],[2,5,1,6,4],[1,5,4,3,2],[1,2,7,3,4]]', '3', 'The largest magic square has a size of 3.\nEvery row sum, column sum, and diagonal sum of this magic square is equal to 12.\n- Row sums: 5+1+6 = 5+4+3 = 2+7+3 = 12\n- Column sums: 5+5+2 = 1+4+7 = 6+3+3 = 12\n- Diagonal sums: 5+4+3 = 6+4+2 = 12');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3536', '1532', '2', 'grid = [[5,1,3,1],[9,3,3,1],[1,3,3,8]]', '2', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3537', '1533', '1', 'expression = \"1&amp;(0|1)\"', '1', 'We can turn \"1&amp;(0<u><strong>|</strong></u>1)\" into \"1&amp;(0<u><strong>&amp;</strong></u>1)\" by changing the \'|\' to a \'&amp;\' using 1 operation.\nThe new expression evaluates to 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3538', '1533', '2', 'expression = \"(0&amp;0)&amp;(0&amp;0&amp;0)\"', '3', 'We can turn \"(0<u><strong>&amp;0</strong></u>)<strong><u>&amp;</u></strong>(0&amp;0&amp;0)\" into \"(0<u><strong>|1</strong></u>)<u><strong>|</strong></u>(0&amp;0&amp;0)\" using 3 operations.\nThe new expression evaluates to 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3539', '1533', '3', 'expression = \"(0|(1|0&amp;1))\"', '1', 'We can turn \"(0|(<u><strong>1</strong></u>|0&amp;1))\" into \"(0|(<u><strong>0</strong></u>|0&amp;1))\" using 1 operation.\nThe new expression evaluates to 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3540', '1534', '1', 'words = [\"abc\",\"aabc\",\"bc\"]', 'true', 'Move the first \'a\' in <code>words[1] to the front of words[2],\nto make </code><code>words[1]</code> = \"abc\" and words[2] = \"abc\".\nAll the strings are now equal to \"abc\", so return <code>true</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3541', '1534', '2', 'words = [\"ab\",\"a\"]', 'false', 'It is impossible to make all the strings equal using the operation.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3542', '1535', '1', 's = \"abcacb\", p = \"ab\", removable = [3,1,0]', '2', ': After removing the characters at indices 3 and 1, \"a<s><strong>b</strong></s>c<s><strong>a</strong></s>cb\" becomes \"accb\".\n\"ab\" is a subsequence of \"<strong><u>a</u></strong>cc<strong><u>b</u></strong>\".\nIf we remove the characters at indices 3, 1, and 0, \"<s><strong>ab</strong></s>c<s><strong>a</strong></s>cb\" becomes \"ccb\", and \"ab\" is no longer a subsequence.\nHence, the maximum k is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3543', '1535', '2', 's = \"abcbddddd\", p = \"abcd\", removable = [3,2,1,4,5,6]', '1', ': After removing the character at index 3, \"abc<s><strong>b</strong></s>ddddd\" becomes \"abcddddd\".\n\"abcd\" is a subsequence of \"<u><strong>abcd</strong></u>dddd\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3544', '1535', '3', 's = \"abcab\", p = \"abc\", removable = [0,1,2,3,4]', '0', ': If you remove the first index in the array removable, \"abc\" is no longer a subsequence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3545', '1536', '1', 'triplets = [[2,5,3],[1,8,4],[1,7,5]], target = [2,7,5]', 'true', 'Perform the following operations:\n- Choose the first and last triplets [<u>[2,5,3]</u>,[1,8,4],<u>[1,7,5]</u>]. Update the last triplet to be [max(2,1), max(5,7), max(3,5)] = [2,7,5]. triplets = [[2,5,3],[1,8,4],<u>[2,7,5]</u>]\nThe target triplet [2,7,5] is now an element of triplets.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3546', '1536', '2', 'triplets = [[3,4,5],[4,5,6]], target = [3,2,5]', 'false', 'It is impossible to have [3,2,5] as an element because there is no 2 in any of the triplets.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3547', '1536', '3', 'triplets = [[2,5,3],[2,3,4],[1,2,5],[5,2,3]], target = [5,5,5]', 'true', 'Perform the following operations:\n- Choose the first and third triplets [<u>[2,5,3]</u>,[2,3,4],<u>[1,2,5]</u>,[5,2,3]]. Update the third triplet to be [max(2,1), max(5,2), max(3,5)] = [2,5,5]. triplets = [[2,5,3],[2,3,4],<u>[2,5,5]</u>,[5,2,3]].\n- Choose the third and fourth triplets [[2,5,3],[2,3,4],<u>[2,5,5]</u>,<u>[5,2,3]</u>]. Update the fourth triplet to be [max(2,5), max(5,2), max(5,3)] = [5,5,5]. triplets = [[2,5,3],[2,3,4],[2,5,5],<u>[5,5,5]</u>].\nThe target triplet [5,5,5] is now an element of triplets.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3548', '1537', '1', 'n = 11, firstPlayer = 2, secondPlayer = 4', '[3,4]', 'One possible scenario which leads to the earliest round number:\nFirst round: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\nSecond round: 2, 3, 4, 5, 6, 11\nThird round: 2, 3, 4\nOne possible scenario which leads to the latest round number:\nFirst round: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\nSecond round: 1, 2, 3, 4, 5, 6\nThird round: 1, 2, 4\nFourth round: 2, 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3549', '1537', '2', 'n = 5, firstPlayer = 1, secondPlayer = 5', '[1,1]', 'The players numbered 1 and 5 compete in the first round.\nThere is no way to make them compete in any other round.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3550', '1538', '1', 'mat = [[1,4],[3,2]]', '[0,1]', 'Both 3 and 4 are peak elements so [1,0] and [0,1] are both acceptable answers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3551', '1538', '2', 'mat = [[10,20,15],[21,30,14],[7,16,32]]', '[1,1]', 'Both 30 and 32 are peak elements so [1,1] and [2,2] are both acceptable answers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3552', '1539', '1', 'num = \"52\"', '\"5\"', 'The only non-empty substrings are \"5\", \"2\", and \"52\". \"5\" is the only odd number.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3553', '1539', '2', 'num = \"4206\"', '\"\"', 'There are no odd numbers in \"4206\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3554', '1539', '3', 'num = \"35427\"', '\"35427\"', '\"35427\" is already an odd number.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3555', '1540', '1', 'loginTime = \"09:31\", logoutTime = \"10:14\"', '1', 'You played one full round from 09:45 to 10:00.\nYou did not play the full round from 09:30 to 09:45 because you logged in at 09:31 after it began.\nYou did not play the full round from 10:00 to 10:15 because you logged out at 10:14 before it ended.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3556', '1540', '2', 'loginTime = \"21:30\", logoutTime = \"03:00\"', '22', 'You played 10 full rounds from 21:30 to 00:00 and 12 full rounds from 00:00 to 03:00.\n10 + 12 = 22.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3557', '1541', '1', 'grid1 = [[1,1,1,0,0],[0,1,1,1,1],[0,0,0,0,0],[1,0,0,0,0],[1,1,0,1,1]], grid2 = [[1,1,1,0,0],[0,0,1,1,1],[0,1,0,0,0],[1,0,1,1,0],[0,1,0,1,0]]', '3', 'In the picture above, the grid on the left is grid1 and the grid on the right is grid2.\nThe 1s colored red in grid2 are those considered to be part of a sub-island. There are three sub-islands.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3558', '1541', '2', 'grid1 = [[1,0,1,0,1],[1,1,1,1,1],[0,0,0,0,0],[1,1,1,1,1],[1,0,1,0,1]], grid2 = [[0,0,0,0,0],[1,1,1,1,1],[0,1,0,1,0],[0,1,0,1,0],[1,0,0,0,1]]', '2', 'In the picture above, the grid on the left is grid1 and the grid on the right is grid2.\nThe 1s colored red in grid2 are those considered to be part of a sub-island. There are two sub-islands.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3559', '1542', '1', 'nums = [1,3,4,8], queries = [[0,1],[1,2],[2,3],[0,3]]', '[2,1,4,1]', 'The queries are processed as follows:\n- queries[0] = [0,1]: The subarray is [<u>1</u>,<u>3</u>] and the minimum absolute difference is |1-3| = 2.\n- queries[1] = [1,2]: The subarray is [<u>3</u>,<u>4</u>] and the minimum absolute difference is |3-4| = 1.\n- queries[2] = [2,3]: The subarray is [<u>4</u>,<u>8</u>] and the minimum absolute difference is |4-8| = 4.\n- queries[3] = [0,3]: The subarray is [1,<u>3</u>,<u>4</u>,8] and the minimum absolute difference is |3-4| = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3560', '1542', '2', 'nums = [4,5,2,2,7,10], queries = [[2,3],[0,2],[0,5],[3,5]]', '[-1,1,1,3]', 'The queries are processed as follows:\n- queries[0] = [2,3]: The subarray is [2,2] and the minimum absolute difference is -1 because all the\n  elements are the same.\n- queries[1] = [0,2]: The subarray is [<u>4</u>,<u>5</u>,2] and the minimum absolute difference is |4-5| = 1.\n- queries[2] = [0,5]: The subarray is [<u>4</u>,<u>5</u>,2,2,7,10] and the minimum absolute difference is |4-5| = 1.\n- queries[3] = [3,5]: The subarray is [2,<u>7</u>,<u>10</u>] and the minimum absolute difference is |7-10| = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3561', '1543', '1', 'Accounts table:\n+------------+--------+\n| account_id | income |\n+------------+--------+\n| 3          | 108939 |\n| 2          | 12747  |\n| 8          | 87709  |\n| 6          | 91796  |\n+------------+--------+', '+----------------+----------------+\n| category       | accounts_count |\n+----------------+----------------+\n| Low Salary     | 1              |\n| Average Salary | 0              |\n| High Salary    | 3              |\n+----------------+----------------+', 'Low Salary: Account 2.\nAverage Salary: No accounts.\nHigh Salary: Accounts 3, 6, and 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3562', '1544', '1', 'nums = [1,2,<u>10</u>,5,7]', 'true', 'By removing 10 at index 2 from nums, it becomes [1,2,5,7].\n[1,2,5,7] is strictly increasing, so return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3563', '1544', '2', 'nums = [2,3,1,2]', 'false', '[3,1,2] is the result of removing the element at index 0.\n[2,1,2] is the result of removing the element at index 1.\n[2,3,2] is the result of removing the element at index 2.\n[2,3,1] is the result of removing the element at index 3.\nNo resulting array is strictly increasing, so return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3564', '1544', '3', 'nums = [1,1,1]', 'false', 'The result of removing any element is [1,1].\n[1,1] is not strictly increasing, so return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3565', '1545', '1', 's = \"daabcbaabcbc\", part = \"abc\"', '\"dab\"', 'The following operations are done:\n- s = \"da<strong><u>abc</u></strong>baabcbc\", remove \"abc\" starting at index 2, so s = \"dabaabcbc\".\n- s = \"daba<strong><u>abc</u></strong>bc\", remove \"abc\" starting at index 4, so s = \"dababc\".\n- s = \"dab<strong><u>abc</u></strong>\", remove \"abc\" starting at index 3, so s = \"dab\".\nNow s has no occurrences of \"abc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3566', '1545', '2', 's = \"axxxxyyyyb\", part = \"xy\"', '\"ab\"', 'The following operations are done:\n- s = \"axxx<strong><u>xy</u></strong>yyyb\", remove \"xy\" starting at index 4 so s = \"axxxyyyb\".\n- s = \"axx<strong><u>xy</u></strong>yyb\", remove \"xy\" starting at index 3 so s = \"axxyyb\".\n- s = \"ax<strong><u>xy</u></strong>yb\", remove \"xy\" starting at index 2 so s = \"axyb\".\n- s = \"a<strong><u>xy</u></strong>b\", remove \"xy\" starting at index 1 so s = \"ab\".\nNow s has no occurrences of \"xy\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3567', '1546', '1', 'nums = [<u>4</u>,<u>2</u>,<u>5</u>,3]', '7', 'It is optimal to choose the subsequence [4,2,5] with alternating sum (4 + 5) - 2 = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3568', '1546', '2', 'nums = [5,6,7,<u>8</u>]', '8', 'It is optimal to choose the subsequence [8] with alternating sum 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3569', '1546', '3', 'nums = [<u>6</u>,2,<u>1</u>,2,4,<u>5</u>]', '10', 'It is optimal to choose the subsequence [6,1,5] with alternating sum (6 + 5) - 1 = 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3570', '1547', '1', '[\"MovieRentingSystem\", \"search\", \"rent\", \"rent\", \"report\", \"drop\", \"search\"]\n[[3, [[0, 1, 5], [0, 2, 6], [0, 3, 7], [1, 1, 4], [1, 2, 7], [2, 1, 5]]], [1], [0, 1], [1, 2], [], [1, 2], [2]]', '[null, [1, 0, 2], null, null, [[0, 1], [1, 2]], null, [0, 1]]', 'MovieRentingSystem movieRentingSystem = new MovieRentingSystem(3, [[0, 1, 5], [0, 2, 6], [0, 3, 7], [1, 1, 4], [1, 2, 7], [2, 1, 5]]);\nmovieRentingSystem.search(1);  // return [1, 0, 2], Movies of ID 1 are unrented at shops 1, 0, and 2. Shop 1 is cheapest; shop 0 and 2 are the same price, so order by shop number.\nmovieRentingSystem.rent(0, 1); // Rent movie 1 from shop 0. Unrented movies at shop 0 are now [2,3].\nmovieRentingSystem.rent(1, 2); // Rent movie 2 from shop 1. Unrented movies at shop 1 are now [1].\nmovieRentingSystem.report();   // return [[0, 1], [1, 2]]. Movie 1 from shop 0 is cheapest, followed by movie 2 from shop 1.\nmovieRentingSystem.drop(1, 2); // Drop off movie 2 at shop 1. Unrented movies at shop 1 are now [1,2].\nmovieRentingSystem.search(2);  // return [0, 1]. Movies of ID 2 are unrented at shops 0 and 1. Shop 0 is cheapest, followed by shop 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3571', '1548', '1', 'nums = [5,6,2,7,4]', '34', 'We can choose indices 1 and 3 for the first pair (6, 7) and indices 2 and 4 for the second pair (2, 4).\nThe product difference is (6 * 7) - (2 * 4) = 34.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3572', '1548', '2', 'nums = [4,2,5,9,7,4,8]', '64', 'We can choose indices 3 and 6 for the first pair (9, 8) and indices 1 and 5 for the second pair (2, 4).\nThe product difference is (9 * 8) - (2 * 4) = 64.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3573', '1549', '1', 'grid = [[40,10],[30,20]], k = 1', '[[10,20],[40,30]]', 'The figures above represent the grid at every state.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3574', '1549', '2', 'grid = [[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]], k = 2', '[[3,4,8,12],[2,11,10,16],[1,7,6,15],[5,9,13,14]]', 'The figures above represent the grid at every state.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3575', '1550', '1', 'word = \"aba\"', '4', 'The four wonderful substrings are underlined below:\n- \"<u><strong>a</strong></u>ba\" -&gt; \"a\"\n- \"a<u><strong>b</strong></u>a\" -&gt; \"b\"\n- \"ab<u><strong>a</strong></u>\" -&gt; \"a\"\n- \"<u><strong>aba</strong></u>\" -&gt; \"aba\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3576', '1550', '2', 'word = \"aabb\"', '9', 'The nine wonderful substrings are underlined below:\n- \"<strong><u>a</u></strong>abb\" -&gt; \"a\"\n- \"<u><strong>aa</strong></u>bb\" -&gt; \"aa\"\n- \"<u><strong>aab</strong></u>b\" -&gt; \"aab\"\n- \"<u><strong>aabb</strong></u>\" -&gt; \"aabb\"\n- \"a<u><strong>a</strong></u>bb\" -&gt; \"a\"\n- \"a<u><strong>abb</strong></u>\" -&gt; \"abb\"\n- \"aa<u><strong>b</strong></u>b\" -&gt; \"b\"\n- \"aa<u><strong>bb</strong></u>\" -&gt; \"bb\"\n- \"aab<u><strong>b</strong></u>\" -&gt; \"b\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3577', '1550', '3', 'word = \"he\"', '2', 'The two wonderful substrings are underlined below:\n- \"<b><u>h</u></b>e\" -&gt; \"h\"\n- \"h<strong><u>e</u></strong>\" -&gt; \"e\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3578', '1552', '1', 'nums = [0,2,1,5,3,4]', '[0,1,2,4,5,3]<strong>', 'The array ans is built as follows: \nans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]]\n    = [nums[0], nums[2], nums[1], nums[5], nums[3], nums[4]]\n    = [0,1,2,4,5,3]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3579', '1552', '2', 'nums = [5,0,1,2,3,4]', '[4,5,0,1,2,3]', 'The array ans is built as follows:\nans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]]\n    = [nums[5], nums[0], nums[1], nums[2], nums[3], nums[4]]\n    = [4,5,0,1,2,3]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3580', '1553', '1', 'dist = [1,3,4], speed = [1,1,1]', '3', 'In the beginning, the distances of the monsters are [1,3,4]. You eliminate the first monster.\nAfter a minute, the distances of the monsters are [X,2,3]. You eliminate the second monster.\nAfter a minute, the distances of the monsters are [X,X,2]. You eliminate the thrid monster.\nAll 3 monsters can be eliminated.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3581', '1553', '2', 'dist = [1,1,2,3], speed = [1,1,1,1]', '1', 'In the beginning, the distances of the monsters are [1,1,2,3]. You eliminate the first monster.\nAfter a minute, the distances of the monsters are [X,0,1,2], so you lose.\nYou can only eliminate 1 monster.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3582', '1553', '3', 'dist = [3,2,4], speed = [5,3,2]', '1', 'In the beginning, the distances of the monsters are [3,2,4]. You eliminate the first monster.\nAfter a minute, the distances of the monsters are [X,0,2], so you lose.\nYou can only eliminate 1 monster.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3583', '1554', '1', 'n = 1', '5', 'The good numbers of length 1 are \"0\", \"2\", \"4\", \"6\", \"8\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3584', '1554', '2', 'n = 4', '400', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3585', '1554', '3', 'n = 50', '564908303', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3586', '1555', '1', 'n = 5, paths = [[0,1,<u>2,3</u>,4],\n                       [<u>2,3</u>,4],\n                       [4,0,1,<u>2,3</u>]]', '2', 'The longest common subpath is [2,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3587', '1555', '2', 'n = 3, paths = [[0],[1],[2]]', '0', 'There is no common subpath shared by the three paths.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3588', '1555', '3', 'n = 5, paths = [[<u>0</u>,1,2,3,4],\n                       [4,3,2,1,<u>0</u>]]', '1', 'The possible longest common subpaths are [0], [1], [2], [3], and [4]. All have a length of 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3589', '1556', '1', 'n = 5', '2', ': The square triples are (3,4,5) and (4,3,5).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3590', '1556', '2', 'n = 10', '4', ': The square triples are (3,4,5), (4,3,5), (6,8,10), and (8,6,10).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3591', '1557', '1', 'maze = [[\"+\",\"+\",\".\",\"+\"],[\".\",\".\",\".\",\"+\"],[\"+\",\"+\",\"+\",\".\"]], entrance = [1,2]', '1', 'There are 3 exits in this maze at [1,0], [0,2], and [2,3].\nInitially, you are at the entrance cell [1,2].\n- You can reach [1,0] by moving 2 steps left.\n- You can reach [0,2] by moving 1 step up.\nIt is impossible to reach [2,3] from the entrance.\nThus, the nearest exit is [0,2], which is 1 step away.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3592', '1557', '2', 'maze = [[\"+\",\"+\",\"+\"],[\".\",\".\",\".\"],[\"+\",\"+\",\"+\"]], entrance = [1,0]', '2', 'There is 1 exit in this maze at [1,2].\n[1,0] does not count as an exit since it is the entrance cell.\nInitially, you are at the entrance cell [1,0].\n- You can reach [1,2] by moving 2 steps right.\nThus, the nearest exit is [1,2], which is 2 steps away.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3593', '1557', '3', 'maze = [[\".\",\"+\"]], entrance = [0,0]', '-1', 'There are no exits in this maze.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3594', '1558', '1', 'num = \"5023\"', 'false', 'There are no moves to be made.\nThe sum of the first half is equal to the sum of the second half: 5 + 0 = 2 + 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3595', '1558', '2', 'num = \"25??\"', 'true', 'Alice can replace one of the \'?\'s with \'9\' and it will be impossible for Bob to make the sums equal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3596', '1558', '3', 'num = \"?3295???\"', 'false', 'It can be proven that Bob will always win. One possible outcome is:\n- Alice replaces the first \'?\' with \'9\'. num = \"93295???\".\n- Bob replaces one of the \'?\' in the right half with \'9\'. num = \"932959??\".\n- Alice replaces one of the \'?\' in the right half with \'2\'. num = \"9329592?\".\n- Bob replaces the last \'?\' in the right half with \'7\'. num = \"93295927\".\nBob wins because 9 + 3 + 2 + 9 = 5 + 9 + 2 + 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3597', '1559', '1', 'maxTime = 30, edges = [[0,1,10],[1,2,10],[2,5,10],[0,3,1],[3,4,10],[4,5,15]], passingFees = [5,1,2,20,20,3]', '11', 'The path to take is 0 -&gt; 1 -&gt; 2 -&gt; 5, which takes 30 minutes and has $11 worth of passing fees.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3598', '1559', '2', 'maxTime = 29, edges = [[0,1,10],[1,2,10],[2,5,10],[0,3,1],[3,4,10],[4,5,15]], passingFees = [5,1,2,20,20,3]', '48', 'The path to take is 0 -&gt; 3 -&gt; 4 -&gt; 5, which takes 26 minutes and has $48 worth of passing fees.\nYou cannot take path 0 -&gt; 1 -&gt; 2 -&gt; 5 since it would take too long.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3599', '1559', '3', 'maxTime = 25, edges = [[0,1,10],[1,2,10],[2,5,10],[0,3,1],[3,4,10],[4,5,15]], passingFees = [5,1,2,20,20,3]', '-1', 'There is no way to reach city 5 from city 0 within 25 minutes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3600', '1560', '1', 'nums = [1,2,1]', '[1,2,1,1,2,1]', 'The array ans is formed as follows:\n- ans = [nums[0],nums[1],nums[2],nums[0],nums[1],nums[2]]\n- ans = [1,2,1,1,2,1]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3601', '1560', '2', 'nums = [1,3,2,1]', '[1,3,2,1,1,3,2,1]', 'The array ans is formed as follows:\n- ans = [nums[0],nums[1],nums[2],nums[3],nums[0],nums[1],nums[2],nums[3]]\n- ans = [1,3,2,1,1,3,2,1]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3602', '1561', '1', 's = \"aabca\"', '3', 'The 3 palindromic subsequences of length 3 are:\n- \"aba\" (subsequence of \"<u>a</u>a<u>b</u>c<u>a</u>\")\n- \"aaa\" (subsequence of \"<u>aa</u>bc<u>a</u>\")\n- \"aca\" (subsequence of \"<u>a</u>ab<u>ca</u>\")');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3603', '1561', '2', 's = \"adc\"', '0', 'There are no palindromic subsequences of length 3 in \"adc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3604', '1561', '3', 's = \"bbcbaba\"', '4', 'The 4 palindromic subsequences of length 3 are:\n- \"bbb\" (subsequence of \"<u>bb</u>c<u>b</u>aba\")\n- \"bcb\" (subsequence of \"<u>b</u>b<u>cb</u>aba\")\n- \"bab\" (subsequence of \"<u>b</u>bcb<u>ab</u>a\")\n- \"aba\" (subsequence of \"bbcb<u>aba</u>\")');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3605', '1562', '1', 'm = 1, n = 1', '3', 'The three possible colorings are shown in the image above.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3606', '1562', '2', 'm = 1, n = 2', '6', 'The six possible colorings are shown in the image above.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3607', '1562', '3', 'm = 5, n = 5', '580986', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3608', '1563', '1', 'trees = [[2,1],[3,2,5],[5,4]]', '[3,2,5,1,null,4]', 'In the first operation, pick i=1 and j=0, and merge trees[0] into trees[1].\nDelete trees[0], so trees = [[3,2,5,1],[5,4]].\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/06/24/diagram.png\" style=\"width:450px;height:181px\"/>\nIn the second operation, pick i=0 and j=1, and merge trees[1] into trees[0].\nDelete trees[1], so trees = [[3,2,5,1,null,4]].\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/06/24/diagram-2.png\" style=\"width:220px;height:165px\"/>\nThe resulting tree, shown above, is a valid BST, so return its root.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3609', '1563', '2', 'trees = [[5,3,8],[3,2,6]]', '[]', 'Pick i=0 and j=1 and merge trees[1] into trees[0].\nDelete trees[1], so trees = [[5,3,8,2,6]].\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/06/24/diagram-3.png\" style=\"width:240px;height:196px\"/>\nThe resulting tree is shown above. This is the only valid operation that can be performed, but the resulting tree is not a valid BST, so return null.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3610', '1563', '3', 'trees = [[5,4],[3]]', '[]', 'It is impossible to perform any operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3611', '1564', '1', 'Signups table:\n+---------+---------------------+\n| user_id | time_stamp          |\n+---------+---------------------+\n| 3       | 2020-03-21 10:16:13 |\n| 7       | 2020-01-04 13:57:59 |\n| 2       | 2020-07-29 23:09:44 |\n| 6       | 2020-12-09 10:39:37 |\n+---------+---------------------+\nConfirmations table:\n+---------+---------------------+-----------+\n| user_id | time_stamp          | action    |\n+---------+---------------------+-----------+\n| 3       | 2021-01-06 03:30:46 | timeout   |\n| 3       | 2021-07-14 14:00:00 | timeout   |\n| 7       | 2021-06-12 11:57:29 | confirmed |\n| 7       | 2021-06-13 12:58:28 | confirmed |\n| 7       | 2021-06-14 13:59:27 | confirmed |\n| 2       | 2021-01-22 00:00:00 | confirmed |\n| 2       | 2021-02-28 23:59:59 | timeout   |\n+---------+---------------------+-----------+', '+---------+-------------------+\n| user_id | confirmation_rate |\n+---------+-------------------+\n| 6       | 0.00              |\n| 3       | 0.00              |\n| 7       | 1.00              |\n| 2       | 0.50              |\n+---------+-------------------+', 'User 6 did not request any confirmation messages. The confirmation rate is 0.\nUser 3 made 2 requests and both timed out. The confirmation rate is 0.\nUser 7 made 3 requests and all were confirmed. The confirmation rate is 1.\nUser 2 made 2 requests where one was confirmed and the other timed out. The confirmation rate is 1 / 2 = 0.5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3612', '1565', '1', 'text = \"hello world\", brokenLetters = \"ad\"', '1', 'We cannot type \"world\" because the \'d\' key is broken.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3613', '1565', '2', 'text = \"leet code\", brokenLetters = \"lt\"', '1', 'We cannot type \"leet\" because the \'l\' and \'t\' keys are broken.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3614', '1565', '3', 'text = \"leet code\", brokenLetters = \"e\"', '0', 'We cannot type either word because the \'e\' key is broken.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3615', '1116', '1', 'flips = [3,2,4,1,5]', '2', 'The binary string is initially \"00000\".\nAfter applying step 1: The string becomes \"00100\", which is not prefix-aligned.\nAfter applying step 2: The string becomes \"01100\", which is not prefix-aligned.\nAfter applying step 3: The string becomes \"01110\", which is not prefix-aligned.\nAfter applying step 4: The string becomes \"11110\", which is prefix-aligned.\nAfter applying step 5: The string becomes \"11111\", which is prefix-aligned.\nWe can see that the string was prefix-aligned 2 times, so we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3616', '1116', '2', 'flips = [4,1,2,3]', '1', 'The binary string is initially \"0000\".\nAfter applying step 1: The string becomes \"0001\", which is not prefix-aligned.\nAfter applying step 2: The string becomes \"1001\", which is not prefix-aligned.\nAfter applying step 3: The string becomes \"1101\", which is not prefix-aligned.\nAfter applying step 4: The string becomes \"1111\", which is prefix-aligned.\nWe can see that the string was prefix-aligned 1 time, so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3617', '1274', '1', 'mat = [[<strong>1</strong>,2,<strong>3</strong>],\n              [4,<strong>5</strong>,6],\n              [<strong>7</strong>,8,<strong>9</strong>]]', '25', 'Diagonals sum: 1 + 5 + 9 + 3 + 7 = 25\nNotice that element mat[1][1] = 5 is counted only once.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3618', '1274', '2', 'mat = [[<strong>1</strong>,1,1,<strong>1</strong>],\n              [1,<strong>1</strong>,<strong>1</strong>,1],\n              [1,<strong>1</strong>,<strong>1</strong>,1],\n              [<strong>1</strong>,1,1,<strong>1</strong>]]', '8', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3619', '1274', '3', 'mat = [[<strong>5</strong>]]', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3620', '1305', '1', 'root = [1,10,4,3,null,7,9,12,8,6,null,null,2]', 'true', 'The node values on each level are:\nLevel 0: [1]\nLevel 1: [10,4]\nLevel 2: [3,7,9]\nLevel 3: [12,8,6,2]\nSince levels 0 and 2 are all odd and increasing and levels 1 and 3 are all even and decreasing, the tree is Even-Odd.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3621', '1305', '2', 'root = [5,4,2,3,3,7]', 'false', 'The node values on each level are:\nLevel 0: [5]\nLevel 1: [4,2]\nLevel 2: [3,3,7]\nNode values in level 2 must be in strictly increasing order, so the tree is not Even-Odd.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3622', '1305', '3', 'root = [5,9,1,3,5,7]', 'false', 'Node values in the level 1 should be even integers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3623', '1335', '1', 'inventory = [2,5], orders = 4', '14', 'Sell the 1st color 1 time (2) and the 2nd color 3 times (5 + 4 + 3).\nThe maximum total value is 2 + 5 + 4 + 3 = 14.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3624', '1335', '2', 'inventory = [3,5], orders = 6', '19', 'Sell the 1st color 2 times (3 + 2) and the 2nd color 4 times (5 + 4 + 3 + 2).\nThe maximum total value is 3 + 2 + 5 + 4 + 3 + 2 = 19.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3625', '1409', '1', 'matrix = [[5,2],[1,6]], k = 1', '7', 'The value of coordinate (0,1) is 5 XOR 2 = 7, which is the largest value.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3626', '1409', '2', 'matrix = [[5,2],[1,6]], k = 2', '5', 'The value of coordinate (0,0) is 5 = 5, which is the 2nd largest value.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3627', '1409', '3', 'matrix = [[5,2],[1,6]], k = 3', '4', 'The value of coordinate (1,0) is 5 XOR 1 = 4, which is the 3rd largest value.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3628', '1413', '1', 'adjacentPairs = [[2,1],[3,4],[3,2]]', '[1,2,3,4]', 'This array has all its adjacent pairs in adjacentPairs.\nNotice that adjacentPairs[i] may not be in left-to-right order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3629', '1413', '2', 'adjacentPairs = [[4,-2],[1,4],[-3,1]]', '[-2,4,1,-3]', 'There can be negative numbers.\nAnother solution is [-3,1,4,-2], which would also be accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3630', '1413', '3', 'adjacentPairs = [[100000,-100000]]', '[100000,-100000]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3631', '1424', '1', 'Products table:\n+-------------+----------+------------+\n| product_id  | low_fats | recyclable |\n+-------------+----------+------------+\n| 0           | Y        | N          |\n| 1           | Y        | Y          |\n| 2           | N        | Y          |\n| 3           | Y        | Y          |\n| 4           | N        | N          |\n+-------------+----------+------------+', '+-------------+\n| product_id  |\n+-------------+\n| 1           |\n| 3           |\n+-------------+', 'Only products 1 and 3 are both low fat and recyclable.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3632', '1458', '1', 'nums = [1,2]', '1', 'The optimal choice of operations is:\n(1 * gcd(1, 2)) = 1');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3633', '1458', '2', 'nums = [3,4,6,8]', '11', 'The optimal choice of operations is:\n(1 * gcd(3, 6)) + (2 * gcd(4, 8)) = 3 + 8 = 11');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3634', '1458', '3', 'nums = [1,2,3,4,5,6]', '14', 'The optimal choice of operations is:\n(1 * gcd(1, 5)) + (2 * gcd(2, 4)) + (3 * gcd(3, 6)) = 1 + 4 + 9 = 14');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3635', '1516', '1', 's = \"xyzzaz\"', '1', 'There are 4 substrings of size 3: \"xyz\", \"yzz\", \"zza\", and \"zaz\". \nThe only good substring of length 3 is \"xyz\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3636', '1516', '2', 's = \"aababcabc\"', '4', 'There are 7 substrings of size 3: \"aab\", \"aba\", \"bab\", \"abc\", \"bca\", \"cab\", and \"abc\".\nThe good substrings are \"abc\", \"bca\", \"cab\", and \"abc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3637', '1519', '1', 'nums1 = [1,2], nums2 = [2,3]', '2', 'Rearrange <code>nums2</code> so that it becomes <code>[3,2]</code>.\nThe XOR sum is (1 XOR 3) + (2 XOR 2) = 2 + 0 = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3638', '1519', '2', 'nums1 = [1,0,3], nums2 = [5,3,4]', '8', 'Rearrange <code>nums2</code> so that it becomes <code>[5,4,3]</code>. \nThe XOR sum is (1 XOR 5) + (0 XOR 4) + (3 XOR 3) = 4 + 4 + 0 = 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3639', '1526', '1', 'nums = [5,1,3]', '3', 'It takes 3 operations to make all elements in nums equal:\n1. largest = 5 at index 0. nextLargest = 3. Reduce nums[0] to 3. nums = [<u>3</u>,1,3].\n2. largest = 3 at index 0. nextLargest = 1. Reduce nums[0] to 1. nums = [<u>1</u>,1,3].\n3. largest = 3 at index 2. nextLargest = 1. Reduce nums[2] to 1. nums = [1,1,<u>1</u>].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3640', '1526', '2', 'nums = [1,1,1]', '0', 'All elements in nums are already equal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3641', '1526', '3', 'nums = [1,1,2,2,3]', '4', 'It takes 4 operations to make all elements in nums equal:\n1. largest = 3 at index 4. nextLargest = 2. Reduce nums[4] to 2. nums = [1,1,2,2,<u>2</u>].\n2. largest = 2 at index 2. nextLargest = 1. Reduce nums[2] to 1. nums = [1,1,<u>1</u>,2,2].\n3. largest = 2 at index 3. nextLargest = 1. Reduce nums[3] to 1. nums = [1,1,1,<u>1</u>,2].\n4. largest = 2 at index 4. nextLargest = 1. Reduce nums[4] to 1. nums = [1,1,1,1,<u>1</u>].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3642', '1566', '1', 'rungs = [1,3,5,10], dist = 2', '2\n<strong>', '</strong>You currently cannot reach the last rung.\nAdd rungs at heights 7 and 8 to climb this ladder. \nThe ladder will now have rungs at [1,3,5,<u>7</u>,<u>8</u>,10].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3643', '1566', '2', 'rungs = [3,6,8,10], dist = 3', '0', 'This ladder can be climbed without adding additional rungs.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3644', '1566', '3', 'rungs = [3,4,6,7], dist = 2', '1', 'You currently cannot reach the first rung from the ground.\nAdd a rung at height 1 to climb this ladder.\nThe ladder will now have rungs at [<u>1</u>,3,4,6,7].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3645', '1567', '1', 'points = [[1,2,3],[1,5,1],[3,1,1]]', '9', 'The blue cells denote the optimal cells to pick, which have coordinates (0, 2), (1, 1), and (2, 0).\nYou add 3 + 5 + 3 = 11 to your score.\nHowever, you must subtract abs(2 - 1) + abs(1 - 0) = 2 from your score.\nYour final score is 11 - 2 = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3646', '1567', '2', 'points = [[1,5],[2,3],[4,2]]', '11', 'The blue cells denote the optimal cells to pick, which have coordinates (0, 1), (1, 1), and (2, 0).\nYou add 5 + 3 + 4 = 12 to your score.\nHowever, you must subtract abs(1 - 1) + abs(1 - 0) = 1 from your score.\nYour final score is 12 - 1 = 11.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3647', '1568', '1', 'parents = [-1,0,1,1], queries = [[0,2],[3,2],[2,5]]', '[2,3,7]', 'The queries are processed as follows:\n- [0,2]: The node with the maximum genetic difference is 0, with a difference of 2 XOR 0 = 2.\n- [3,2]: The node with the maximum genetic difference is 1, with a difference of 2 XOR 1 = 3.\n- [2,5]: The node with the maximum genetic difference is 2, with a difference of 5 XOR 2 = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3648', '1568', '2', 'parents = [3,7,-1,2,0,7,0,2], queries = [[4,6],[1,15],[0,5]]', '[6,14,7]', 'The queries are processed as follows:\n- [4,6]: The node with the maximum genetic difference is 0, with a difference of 6 XOR 0 = 6.\n- [1,15]: The node with the maximum genetic difference is 1, with a difference of 15 XOR 1 = 14.\n- [0,5]: The node with the maximum genetic difference is 2, with a difference of 5 XOR 2 = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3649', '1570', '1', 'times = [[1,4],[2,3],[4,6]], targetFriend = 1', '1', '- Friend 0 arrives at time 1 and sits on chair 0.\n- Friend 1 arrives at time 2 and sits on chair 1.\n- Friend 1 leaves at time 3 and chair 1 becomes empty.\n- Friend 0 leaves at time 4 and chair 0 becomes empty.\n- Friend 2 arrives at time 4 and sits on chair 0.\nSince friend 1 sat on chair 1, we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3650', '1570', '2', 'times = [[3,10],[1,5],[2,6]], targetFriend = 0', '2', '- Friend 1 arrives at time 1 and sits on chair 0.\n- Friend 2 arrives at time 2 and sits on chair 1.\n- Friend 0 arrives at time 3 and sits on chair 2.\n- Friend 1 leaves at time 5 and chair 0 becomes empty.\n- Friend 2 leaves at time 6 and chair 1 becomes empty.\n- Friend 0 leaves at time 10 and chair 2 becomes empty.\nSince friend 0 sat on chair 2, we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3651', '1571', '1', 'segments = [[1,4,5],[4,7,7],[1,7,9]]', '[[1,4,14],[4,7,16]]', 'The painting can be described as follows:\n- [1,4) is colored {5,9} (with a sum of 14) from the first and third segments.\n- [4,7) is colored {7,9} (with a sum of 16) from the second and third segments.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3652', '1571', '2', 'segments = [[1,7,9],[6,8,15],[8,10,7]]', '[[1,6,9],[6,7,24],[7,8,15],[8,10,7]]', 'The painting can be described as follows:\n- [1,6) is colored 9 from the first segment.\n- [6,7) is colored {9,15} (with a sum of 24) from the first and second segments.\n- [7,8) is colored 15 from the second segment.\n- [8,10) is colored 7 from the third segment.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3653', '1571', '3', 'segments = [[1,4,5],[1,4,7],[4,7,1],[4,7,11]]', '[[1,4,12],[4,7,12]]', 'The painting can be described as follows:\n- [1,4) is colored {5,7} (with a sum of 12) from the first and second segments.\n- [4,7) is colored {1,11} (with a sum of 12) from the third and fourth segments.\nNote that returning a single segment [1,7) is incorrect because the mixed color sets are different.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3654', '1572', '1', 'heights = [10,6,8,5,11,9]', '[3,1,2,1,1,0]', 'Person 0 can see person 1, 2, and 4.\nPerson 1 can see person 2.\nPerson 2 can see person 3 and 4.\nPerson 3 can see person 4.\nPerson 4 can see person 5.\nPerson 5 can see no one since nobody is to the right of them.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3655', '1572', '2', 'heights = [5,1,2,3,10]', '[4,1,1,1,0]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3656', '1573', '3', 's = \"zbax\", k = 2', '8', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3657', '1574', '1', 'num = \"<u>1</u>32\", change = [9,8,5,0,3,6,4,2,6,8]', '\"<u>8</u>32\"', 'Replace the substring \"1\":\n- 1 maps to change[1] = 8.\nThus, \"<u>1</u>32\" becomes \"<u>8</u>32\".\n\"832\" is the largest number that can be created, so return it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3658', '1574', '2', 'num = \"<u>021</u>\", change = [9,4,3,5,7,2,1,9,0,6]', '\"<u>934</u>\"', 'Replace the substring \"021\":\n- 0 maps to change[0] = 9.\n- 2 maps to change[2] = 3.\n- 1 maps to change[1] = 4.\nThus, \"<u>021</u>\" becomes \"<u>934</u>\".\n\"934\" is the largest number that can be created, so return it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3659', '1574', '3', 'num = \"5\", change = [1,4,7,5,3,2,5,6,9,4]', '\"5\"', '\"5\" is already the largest number that can be created, so return it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3660', '1575', '1', 'students = [[1,1,0],[1,0,1],[0,0,1]], mentors = [[1,0,0],[0,0,1],[1,1,0]]', '8', 'We assign students to mentors in the following way:\n- student 0 to mentor 2 with a compatibility score of 3.\n- student 1 to mentor 0 with a compatibility score of 2.\n- student 2 to mentor 1 with a compatibility score of 3.\nThe compatibility score sum is 3 + 2 + 3 = 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3661', '1575', '2', 'students = [[0,0],[0,0],[0,0]], mentors = [[1,1],[1,1],[1,1]]', '0', 'The compatibility score of any student-mentor pair is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3662', '1576', '1', 'paths = [[\"a\"],[\"c\"],[\"d\"],[\"a\",\"b\"],[\"c\",\"b\"],[\"d\",\"a\"]]', '[[\"d\"],[\"d\",\"a\"]]', 'The file structure is as shown.\nFolders \"/a\" and \"/c\" (and their subfolders) are marked for deletion because they both contain an empty\nfolder named \"b\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3663', '1576', '2', 'paths = [[\"a\"],[\"c\"],[\"a\",\"b\"],[\"c\",\"b\"],[\"a\",\"b\",\"x\"],[\"a\",\"b\",\"x\",\"y\"],[\"w\"],[\"w\",\"y\"]]', '[[\"c\"],[\"c\",\"b\"],[\"a\"],[\"a\",\"b\"]]', 'The file structure is as shown. \nFolders \"/a/b/x\" and \"/w\" (and their subfolders) are marked for deletion because they both contain an empty folder named \"y\".\nNote that folders \"/a\" and \"/c\" are identical after the deletion, but they are not deleted because they were not marked beforehand.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3664', '1576', '3', 'paths = [[\"a\",\"b\"],[\"c\",\"d\"],[\"c\"],[\"a\"]]', '[[\"c\"],[\"c\",\"d\"],[\"a\"],[\"a\",\"b\"]]', 'All folders are unique in the file system.\nNote that the returned array can be in a different order as the order does not matter.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3665', '1577', '1', 'n = 2', 'false\n<strong>Explantion:</strong> 2 has only two divisors: 1 and 2.', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3666', '1577', '2', 'n = 4', 'true\n<strong>Explantion:</strong> 4 has three divisors: 1, 2, and 4.', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3667', '1578', '2', 'milestones = [5,2,1]', '7', 'One possible scenario is:\n- During the 1<sup>st</sup> week, you will work on a milestone of project 0.\n- During the 2<sup>nd</sup> week, you will work on a milestone of project 1.\n- During the 3<sup>rd</sup> week, you will work on a milestone of project 0.\n- During the 4<sup>th</sup> week, you will work on a milestone of project 1.\n- During the 5<sup>th</sup> week, you will work on a milestone of project 0.\n- During the 6<sup>th</sup> week, you will work on a milestone of project 2.\n- During the 7<sup>th</sup> week, you will work on a milestone of project 0.\nThe total number of weeks is 7.\nNote that you cannot work on the last milestone of project 0 on 8<sup>th</sup> week because it would violate the rules.\nThus, one milestone in project 0 will remain unfinished.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3668', '1579', '1', 'neededApples = 1', '8', 'A square plot of side length 1 does not contain any apples.\nHowever, a square plot of side length 2 has 12 apples inside (as depicted in the image above).\nThe perimeter is 2 * 4 = 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3669', '1579', '2', 'neededApples = 13', '16', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3670', '1579', '3', 'neededApples = 1000000000', '5040', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3671', '1580', '1', 'nums = [0,1,2,2]', '3', 'The special subsequences are bolded [<strong><u>0</u></strong>,<strong><u>1</u></strong>,<strong><u>2</u></strong>,2], [<strong><u>0</u></strong>,<strong><u>1</u></strong>,2,<strong><u>2</u></strong>], and [<strong><u>0</u></strong>,<strong><u>1</u></strong>,<strong><u>2</u></strong>,<strong><u>2</u></strong>].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3672', '1580', '2', 'nums = [2,2,0,0]', '0', 'There are no special subsequences in [2,2,0,0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3673', '1580', '3', 'nums = [0,1,2,0,1,2]', '7', 'The special subsequences are bolded:\n- [<strong><u>0</u></strong>,<strong><u>1</u></strong>,<strong><u>2</u></strong>,0,1,2]\n- [<strong><u>0</u></strong>,<strong><u>1</u></strong>,2,0,1,<strong><u>2</u></strong>]\n- [<strong><u>0</u></strong>,<strong><u>1</u></strong>,<strong><u>2</u></strong>,0,1,<strong><u>2</u></strong>]\n- [<strong><u>0</u></strong>,<strong><u>1</u></strong>,2,0,<strong><u>1</u></strong>,<strong><u>2</u></strong>]\n- [<strong><u>0</u></strong>,1,2,<strong><u>0</u></strong>,<strong><u>1</u></strong>,<strong><u>2</u></strong>]\n- [<strong><u>0</u></strong>,1,2,0,<strong><u>1</u></strong>,<strong><u>2</u></strong>]\n- [0,1,2,<strong><u>0</u></strong>,<strong><u>1</u></strong>,<strong><u>2</u></strong>]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3674', '1581', '1', 's = \"le<u>e</u>etcode\"', '\"leetcode\"', 'Remove an \'e\' from the first group of \'e\'s to create \"leetcode\".\nNo three consecutive characters are equal, so return \"leetcode\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3675', '1581', '2', 's = \"<u>a</u>aab<u>aa</u>aa\"', '\"aabaa\"', 'Remove an \'a\' from the first group of \'a\'s to create \"aabaaaa\".\nRemove two \'a\'s from the second group of \'a\'s to create \"aabaa\".\nNo three consecutive characters are equal, so return \"aabaa\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3676', '1581', '3', 's = \"aab\"', '\"aab\"', 'No three consecutive characters are equal, so return \"aab\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3677', '1582', '1', 'board = [[\".\",\".\",\".\",\"B\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"W\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"W\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"W\",\".\",\".\",\".\",\".\"],[\"W\",\"B\",\"B\",\".\",\"W\",\"W\",\"W\",\"B\"],[\".\",\".\",\".\",\"B\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"B\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"W\",\".\",\".\",\".\",\".\"]], rMove = 4, cMove = 3, color = \"B\"', 'true', '\'.\', \'W\', and \'B\' are represented by the colors blue, white, and black respectively, and cell (rMove, cMove) is marked with an \'X\'.\nThe two good lines with the chosen cell as an endpoint are annotated above with the red rectangles.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3678', '1582', '2', 'board = [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\"B\",\".\",\".\",\"W\",\".\",\".\",\".\"],[\".\",\".\",\"W\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"W\",\"B\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\"B\",\"W\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\"W\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\"B\"]], rMove = 4, cMove = 4, color = \"W\"', 'false', 'While there are good lines with the chosen cell as a middle cell, there are no good lines with the chosen cell as an endpoint.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3679', '1583', '1', 'nums = [10,20], k = 0', '10', 'size = [20,20].\nWe can set the initial size to be 20.\nThe total wasted space is (20 - 10) + (20 - 20) = 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3680', '1583', '2', 'nums = [10,20,30], k = 1', '10', 'size = [20,20,30].\nWe can set the initial size to be 20 and resize to 30 at time 2. \nThe total wasted space is (20 - 10) + (20 - 20) + (30 - 30) = 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3681', '1583', '3', 'nums = [10,20,15,30,20], k = 2', '15', 'size = [10,20,20,30,30].\nWe can set the initial size to 10, resize to 20 at time 1, and resize to 30 at time 3.\nThe total wasted space is (10 - 10) + (20 - 20) + (20 - 15) + (30 - 30) + (30 - 20) = 15.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3682', '1584', '1', 's = \"ababbb\"', '9', 'Substrings \"aba\" and \"bbb\" are palindromes with odd length. product = 3 * 3 = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3683', '1584', '2', 's = \"zaaaxbbby\"', '9', 'Substrings \"aaa\" and \"bbb\" are palindromes with odd length. product = 3 * 3 = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3684', '1585', '1', 's = \"iloveleetcode\", words = [\"i\",\"love\",\"leetcode\",\"apples\"]', 'true', 's can be made by concatenating \"i\", \"love\", and \"leetcode\" together.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3685', '1585', '2', 's = \"iloveleetcode\", words = [\"apples\",\"i\",\"love\",\"leetcode\"]', 'false', 'It is impossible to make s using a prefix of arr.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3686', '1586', '1', 'piles = [5,4,9], k = 2', '12', 'Steps of a possible scenario are:\n- Apply the operation on pile 2. The resulting piles are [5,4,<u>5</u>].\n- Apply the operation on pile 0. The resulting piles are [<u>3</u>,4,5].\nThe total number of stones in [3,4,5] is 12.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3687', '1586', '2', 'piles = [4,3,6,7], k = 3', '12', 'Steps of a possible scenario are:\n- Apply the operation on pile 2. The resulting piles are [4,3,<u>3</u>,7].\n- Apply the operation on pile 3. The resulting piles are [4,3,3,<u>4</u>].\n- Apply the operation on pile 0. The resulting piles are [<u>2</u>,3,3,4].\nThe total number of stones in [2,3,3,4] is 12.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3688', '1587', '1', 's = \"][][\"', '1', 'You can make the string balanced by swapping index 0 with index 3.\nThe resulting string is \"[[]]\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3689', '1587', '2', 's = \"]]][[[\"', '2', 'You can do the following to make the string balanced:\n- Swap index 0 with index 4. s = \"[]][][\".\n- Swap index 1 with index 5. s = \"[[][]]\".\nThe resulting string is \"[[][]]\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3690', '1587', '3', 's = \"[]\"', '0', 'The string is already balanced.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3691', '1588', '1', 'obstacles = [1,2,3,2]', '[1,2,3,3]', 'The longest valid obstacle course at each position is:\n- i = 0: [<u>1</u>], [1] has length 1.\n- i = 1: [<u>1</u>,<u>2</u>], [1,2] has length 2.\n- i = 2: [<u>1</u>,<u>2</u>,<u>3</u>], [1,2,3] has length 3.\n- i = 3: [<u>1</u>,<u>2</u>,3,<u>2</u>], [1,2,2] has length 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3692', '1588', '2', 'obstacles = [2,2,1]', '[1,2,1]', 'The longest valid obstacle course at each position is:\n- i = 0: [<u>2</u>], [2] has length 1.\n- i = 1: [<u>2</u>,<u>2</u>], [2,2] has length 2.\n- i = 2: [2,2,<u>1</u>], [1] has length 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3693', '1588', '3', 'obstacles = [3,1,5,6,4,2]', '[1,1,2,3,2,2]', 'The longest valid obstacle course at each position is:\n- i = 0: [<u>3</u>], [3] has length 1.\n- i = 1: [3,<u>1</u>], [1] has length 1.\n- i = 2: [<u>3</u>,1,<u>5</u>], [3,5] has length 2. [1,5] is also valid.\n- i = 3: [<u>3</u>,1,<u>5</u>,<u>6</u>], [3,5,6] has length 3. [1,5,6] is also valid.\n- i = 4: [<u>3</u>,1,5,6,<u>4</u>], [3,4] has length 2. [1,4] is also valid.\n- i = 5: [3,<u>1</u>,5,6,4,<u>2</u>], [1,2] has length 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3694', '1590', '1', 'patterns = [\"a\",\"abc\",\"bc\",\"d\"], word = \"abc\"', '3', '- \"a\" appears as a substring in \"<u>a</u>bc\".\n- \"abc\" appears as a substring in \"<u>abc</u>\".\n- \"bc\" appears as a substring in \"a<u>bc</u>\".\n- \"d\" does not appear as a substring in \"abc\".\n3 of the strings in patterns appear as a substring in word.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3695', '1590', '2', 'patterns = [\"a\",\"b\",\"c\"], word = \"aaaaabbbbb\"', '2', '- \"a\" appears as a substring in \"a<u>a</u>aaabbbbb\".\n- \"b\" appears as a substring in \"aaaaabbbb<u>b</u>\".\n- \"c\" does not appear as a substring in \"aaaaabbbbb\".\n2 of the strings in patterns appear as a substring in word.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3696', '1590', '3', 'patterns = [\"a\",\"a\",\"a\"], word = \"ab\"', '3', 'Each of the patterns appears as a substring in word \"<u>a</u>b\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3697', '1591', '1', 'nums = [1,2,3,4,5]', '[1,2,4,5,3]', 'When i=1, nums[i] = 2, and the average of its neighbors is (1+4) / 2 = 2.5.\nWhen i=2, nums[i] = 4, and the average of its neighbors is (2+5) / 2 = 3.5.\nWhen i=3, nums[i] = 5, and the average of its neighbors is (4+3) / 2 = 3.5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3698', '1591', '2', 'nums = [6,2,0,9,7]', '[9,7,6,2,0]', 'When i=1, nums[i] = 7, and the average of its neighbors is (9+6) / 2 = 7.5.\nWhen i=2, nums[i] = 6, and the average of its neighbors is (7+2) / 2 = 4.5.\nWhen i=3, nums[i] = 2, and the average of its neighbors is (6+0) / 2 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3699', '1592', '1', 'p = 1', '1', 'nums = [1].\nThere is only one element, so the product equals that element.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3700', '1592', '2', 'p = 2', '6', 'nums = [01, 10, 11].\nAny swap would either make the product 0 or stay the same.\nThus, the array product of 1 * 2 * 3 = 6 is already minimized.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3701', '1592', '3', 'p = 3', '1512', 'nums = [001, 010, 011, 100, 101, 110, 111]\n- In the first operation we can swap the leftmost bit of the second and fifth elements.\n    - The resulting array is [001, <u>1</u>10, 011, 100, <u>0</u>01, 110, 111].\n- In the second operation we can swap the middle bit of the third and fourth elements.\n    - The resulting array is [001, 110, 0<u>0</u>1, 1<u>1</u>0, 001, 110, 111].\nThe array product is 1 * 6 * 1 * 6 * 1 * 6 * 7 = 1512, which is the minimum possible product.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3702', '1593', '1', 'row = 2, col = 2, cells = [[1,1],[2,1],[1,2],[2,2]]', '2', 'The above image depicts how the matrix changes each day starting from day 0.\nThe last day where it is possible to cross from top to bottom is on day 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3703', '1593', '2', 'row = 2, col = 2, cells = [[1,1],[1,2],[2,1],[2,2]]', '1', 'The above image depicts how the matrix changes each day starting from day 0.\nThe last day where it is possible to cross from top to bottom is on day 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3704', '1593', '3', 'row = 3, col = 3, cells = [[1,2],[2,1],[3,3],[2,2],[1,1],[1,3],[2,3],[3,2],[3,1]]', '3', 'The above image depicts how the matrix changes each day starting from day 0.\nThe last day where it is possible to cross from top to bottom is on day 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3705', '1594', '2', 'n = 6, edges = [[0,1],[0,2],[3,5],[5,4],[4,3]], source = 0, destination = 5', 'false', 'There is no path from vertex 0 to vertex 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3706', '1595', '1', 'word = \"abc\"', '5\n<strong>', '</strong>The characters are printed as follows:\n- Type the character \'a\' in 1 second since the pointer is initially on \'a\'.\n- Move the pointer clockwise to \'b\' in 1 second.\n- Type the character \'b\' in 1 second.\n- Move the pointer clockwise to \'c\' in 1 second.\n- Type the character \'c\' in 1 second.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3707', '1595', '2', 'word = \"bza\"', '7\n<strong>', '</strong>The characters are printed as follows:\n- Move the pointer clockwise to \'b\' in 1 second.\n- Type the character \'b\' in 1 second.\n- Move the pointer counterclockwise to \'z\' in 2 seconds.\n- Type the character \'z\' in 1 second.\n- Move the pointer clockwise to \'a\' in 1 second.\n- Type the character \'a\' in 1 second.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3708', '1595', '3', 'word = \"zjpc\"', '34', 'The characters are printed as follows:\n- Move the pointer counterclockwise to \'z\' in 1 second.\n- Type the character \'z\' in 1 second.\n- Move the pointer clockwise to \'j\' in 10 seconds.\n- Type the character \'j\' in 1 second.\n- Move the pointer clockwise to \'p\' in 6 seconds.\n- Type the character \'p\' in 1 second.\n- Move the pointer counterclockwise to \'c\' in 13 seconds.\n- Type the character \'c\' in 1 second.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3709', '1596', '1', 'matrix = [[1,-1],[-1,1]]', '4', 'We can follow the following steps to reach sum equals 4:\n- Multiply the 2 elements in the first row by -1.\n- Multiply the 2 elements in the first column by -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3710', '1596', '2', 'matrix = [[1,2,3],[-1,-2,-3],[1,2,3]]', '16', 'We can follow the following step to reach sum equals 16:\n- Multiply the 2 last elements in the second row by -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3711', '1597', '2', 'n = 2, roads = [[1,0,10]]', '1', 'There is only one way to go from intersection 0 to intersection 1, and it takes 10 minutes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3712', '1598', '1', 'num = \"327\"', '2', 'You could have written down the numbers:\n3, 27\n327');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3713', '1598', '2', 'num = \"094\"', '0', 'No numbers can have leading zeros and all numbers must be positive.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3714', '1598', '3', 'num = \"0\"', '0', 'No numbers can have leading zeros and all numbers must be positive.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3715', '1599', '1', 'Employees table:\n+-------------+-----------+------------+--------+\n| employee_id | name      | manager_id | salary |\n+-------------+-----------+------------+--------+\n| 3           | Mila      | 9          | 60301  |\n| 12          | Antonella | null       | 31000  |\n| 13          | Emery     | null       | 67084  |\n| 1           | Kalel     | 11         | 21241  |\n| 9           | Mikaela   | null       | 50937  |\n| 11          | Joziah    | 6          | 28485  |\n+-------------+-----------+------------+--------+', '+-------------+\n| employee_id |\n+-------------+\n| 11          |\n+-------------+', 'The employees with a salary less than $30000 are 1 (Kalel) and 11 (Joziah).\nKalel\'s manager is employee 11, who is still in the company (Joziah).\nJoziah\'s manager is employee 6, who left the company because there is no row for employee 6 as it was deleted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3716', '1600', '1', 'nums = [2,5,6,9,10]', '2', 'The smallest number in nums is 2.\nThe largest number in nums is 10.\nThe greatest common divisor of 2 and 10 is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3717', '1600', '2', 'nums = [7,5,6,8,3]', '1', 'The smallest number in nums is 3.\nThe largest number in nums is 8.\nThe greatest common divisor of 3 and 8 is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3718', '1600', '3', 'nums = [3,3]', '3', 'The smallest number in nums is 3.\nThe largest number in nums is 3.\nThe greatest common divisor of 3 and 3 is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3719', '1569', '1', 's = \"abacbc\"', 'true', 'The characters that appear in s are \'a\', \'b\', and \'c\'. All characters occur 2 times in s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3720', '1569', '2', 's = \"aaabb\"', 'false', 'The characters that appear in s are \'a\' and \'b\'.\n\'a\' occurs 3 times while \'b\' occurs 2 times, which is not the same number of times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3721', '1589', '1', 'Employees table:\n+-------------+----------+\n| employee_id | name     |\n+-------------+----------+\n| 2           | Crew     |\n| 4           | Haven    |\n| 5           | Kristian |\n+-------------+----------+\nSalaries table:\n+-------------+--------+\n| employee_id | salary |\n+-------------+--------+\n| 5           | 76071  |\n| 1           | 22517  |\n| 4           | 63539  |\n+-------------+--------+', '+-------------+\n| employee_id |\n+-------------+\n| 1           |\n| 2           |\n+-------------+', 'Employees 1, 2, 4, and 5 are working at this company.\nThe name of employee 1 is missing.\nThe salary of employee 2 is missing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3722', '1601', '1', 'nums = [\"01\",\"10\"]', '\"11\"', '\"11\" does not appear in nums. \"00\" would also be correct.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3723', '1601', '2', 'nums = [\"00\",\"01\"]', '\"11\"', '\"11\" does not appear in nums. \"10\" would also be correct.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3724', '1601', '3', 'nums = [\"111\",\"011\",\"001\"]', '\"101\"', '\"101\" does not appear in nums. \"000\", \"010\", \"100\", and \"110\" would also be correct.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3725', '1602', '1', 'mat = [[1,2,3],[4,5,6],[7,8,9]], target = 13', '0', 'One possible choice is to:\n- Choose 1 from the first row.\n- Choose 5 from the second row.\n- Choose 7 from the third row.\nThe sum of the chosen elements is 13, which equals the target, so the absolute difference is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3726', '1602', '2', 'mat = [[1],[2],[3]], target = 100', '94', 'The best possible choice is to:\n- Choose 1 from the first row.\n- Choose 2 from the second row.\n- Choose 3 from the third row.\nThe sum of the chosen elements is 6, and the absolute difference is 94.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3727', '1602', '3', 'mat = [[1,2,9,8,7]], target = 6', '1', 'The best choice is to choose 7 from the first row.\nThe absolute difference is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3728', '1603', '1', 'n = 3, sums = [-3,-2,-1,0,0,1,2,3]', '[1,2,-3]', '[1,2,-3] is able to achieve the given subset sums:\n- []: sum is 0\n- [1]: sum is 1\n- [2]: sum is 2\n- [1,2]: sum is 3\n- [-3]: sum is -3\n- [1,-3]: sum is -2\n- [2,-3]: sum is -1\n- [1,2,-3]: sum is 0\nNote that any permutation of [1,2,-3] and also any permutation of [-1,-2,3] will also be accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3729', '1603', '2', 'n = 2, sums = [0,0,0,0]', '[0,0]', 'The only correct answer is [0,0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3730', '1603', '3', 'n = 4, sums = [0,0,5,5,4,-1,4,9,9,-1,4,3,4,8,3,8]', '[0,-1,4,5]', '[0,-1,4,5] is able to achieve the given subset sums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3731', '1604', '1', 'nums = [90], k = 1', '0', 'There is one way to pick score(s) of one student:\n- [<strong><u>90</u></strong>]. The difference between the highest and lowest score is 90 - 90 = 0.\nThe minimum possible difference is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3732', '1604', '2', 'nums = [9,4,1,7], k = 2', '2', 'There are six ways to pick score(s) of two students:\n- [<strong><u>9</u></strong>,<strong><u>4</u></strong>,1,7]. The difference between the highest and lowest score is 9 - 4 = 5.\n- [<strong><u>9</u></strong>,4,<strong><u>1</u></strong>,7]. The difference between the highest and lowest score is 9 - 1 = 8.\n- [<strong><u>9</u></strong>,4,1,<strong><u>7</u></strong>]. The difference between the highest and lowest score is 9 - 7 = 2.\n- [9,<strong><u>4</u></strong>,<strong><u>1</u></strong>,7]. The difference between the highest and lowest score is 4 - 1 = 3.\n- [9,<strong><u>4</u></strong>,1,<strong><u>7</u></strong>]. The difference between the highest and lowest score is 7 - 4 = 3.\n- [9,4,<strong><u>1</u></strong>,<strong><u>7</u></strong>]. The difference between the highest and lowest score is 7 - 1 = 6.\nThe minimum possible difference is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3733', '1605', '1', 'nums = [\"3\",\"6\",\"7\",\"10\"], k = 4', '\"3\"', 'The numbers in nums sorted in non-decreasing order are [\"3\",\"6\",\"7\",\"10\"].\nThe 4<sup>th</sup> largest integer in nums is \"3\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3734', '1605', '2', 'nums = [\"2\",\"21\",\"12\",\"1\"], k = 3', '\"2\"', 'The numbers in nums sorted in non-decreasing order are [\"1\",\"2\",\"12\",\"21\"].\nThe 3<sup>rd</sup> largest integer in nums is \"2\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3735', '1605', '3', 'nums = [\"0\",\"0\"], k = 2', '\"0\"', 'The numbers in nums sorted in non-decreasing order are [\"0\",\"0\"].\nThe 2<sup>nd</sup> largest integer in nums is \"0\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3736', '1606', '1', 'tasks = [1,2,3], sessionTime = 3', '2', 'You can finish the tasks in two work sessions.\n- First work session: finish the first and the second tasks in 1 + 2 = 3 hours.\n- Second work session: finish the third task in 3 hours.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3737', '1606', '2', 'tasks = [3,1,3,1,1], sessionTime = 8', '2', 'You can finish the tasks in two work sessions.\n- First work session: finish all the tasks except the last one in 3 + 1 + 3 + 1 = 8 hours.\n- Second work session: finish the last task in 1 hour.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3738', '1606', '3', 'tasks = [1,2,3,4,5], sessionTime = 15', '1', 'You can finish all the tasks in one work session.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3739', '1607', '1', 'binary = \"001\"', '2', 'The good subsequences of binary are [\"0\", \"0\", \"1\"].\nThe unique good subsequences are \"0\" and \"1\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3740', '1607', '2', 'binary = \"11\"', '2', 'The good subsequences of binary are [\"1\", \"1\", \"11\"].\nThe unique good subsequences are \"1\" and \"11\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3741', '1607', '3', 'binary = \"101\"', '5', 'The good subsequences of binary are [\"1\", \"0\", \"1\", \"10\", \"11\", \"101\"]. \nThe unique good subsequences are \"0\", \"1\", \"10\", \"11\", and \"101\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3742', '1608', '1', 'nums = [2,3,-1,<u>8</u>,4]', '3', 'The sum of the numbers before index 3 is: 2 + 3 + -1 = 4\nThe sum of the numbers after index 3 is: 4 = 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3743', '1608', '2', 'nums = [1,-1,<u>4</u>]', '2', 'The sum of the numbers before index 2 is: 1 + -1 = 0\nThe sum of the numbers after index 2 is: 0');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3744', '1608', '3', 'nums = [2,5]', '-1', 'There is no valid middleIndex.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3745', '1609', '1', 'land = [[1,0,0],[0,1,1],[0,1,1]]', '[[0,0,0,0],[1,1,2,2]]', 'The first group has a top left corner at land[0][0] and a bottom right corner at land[0][0].\nThe second group has a top left corner at land[1][1] and a bottom right corner at land[2][2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3746', '1609', '2', 'land = [[1,1],[1,1]]', '[[0,0,1,1]]', 'The first group has a top left corner at land[0][0] and a bottom right corner at land[1][1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3747', '1609', '3', 'land = [[0]]', '[]', 'There are no groups of farmland.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3748', '1610', '1', '[\"LockingTree\", \"lock\", \"unlock\", \"unlock\", \"lock\", \"upgrade\", \"lock\"]\n[[[-1, 0, 0, 1, 1, 2, 2]], [2, 2], [2, 3], [2, 2], [4, 5], [0, 1], [0, 1]]', '[null, true, false, true, true, true, false]', 'LockingTree lockingTree = new LockingTree([-1, 0, 0, 1, 1, 2, 2]);\nlockingTree.lock(2, 2);    // return true because node 2 is unlocked.\n                           // Node 2 will now be locked by user 2.\nlockingTree.unlock(2, 3);  // return false because user 3 cannot unlock a node locked by user 2.\nlockingTree.unlock(2, 2);  // return true because node 2 was previously locked by user 2.\n                           // Node 2 will now be unlocked.\nlockingTree.lock(4, 5);    // return true because node 4 is unlocked.\n                           // Node 4 will now be locked by user 5.\nlockingTree.upgrade(0, 1); // return true because node 0 is unlocked and has at least one locked descendant (node 4).\n                           // Node 0 will now be locked by user 1 and node 4 will now be unlocked.\nlockingTree.lock(0, 1);    // return false because node 0 is already locked.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3749', '1612', '1', 'nums = [1,2,3,6]', '1', 'The only quadruplet that satisfies the requirement is (0, 1, 2, 3) because 1 + 2 + 3 == 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3750', '1612', '2', 'nums = [3,3,6,4,5]', '0', 'There are no such quadruplets in [3,3,6,4,5].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3751', '1612', '3', 'nums = [1,1,1,3,5]', '4', 'The 4 quadruplets that satisfy the requirement are:\n- (0, 1, 2, 3): 1 + 1 + 1 == 3\n- (0, 1, 3, 4): 1 + 1 + 3 == 5\n- (0, 2, 3, 4): 1 + 1 + 3 == 5\n- (1, 2, 3, 4): 1 + 1 + 3 == 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3752', '1613', '1', 'properties = [[5,5],[6,3],[3,6]]', '0', 'No character has strictly greater attack and defense than the other.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3753', '1613', '2', 'properties = [[2,2],[3,3]]', '1', 'The first character is weak because the second character has a strictly greater attack and defense.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3754', '1613', '3', 'properties = [[1,5],[10,4],[4,3]]', '1', 'The third character is weak because the second character has a strictly greater attack and defense.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3755', '1614', '1', 'nextVisit = [0,0]', '2', '- On day 0, you visit room 0. The total times you have been in room 0 is 1, which is odd.\n  On the next day you will visit room nextVisit[0] = 0\n- On day 1, you visit room 0, The total times you have been in room 0 is 2, which is even.\n  On the next day you will visit room (0 + 1) mod 2 = 1\n- On day 2, you visit room 1. This is the first day where you have been in all the rooms.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3756', '1614', '2', 'nextVisit = [0,0,2]', '6', 'Your room visiting order for each day is: [0,0,1,0,0,1,2,...].\nDay 6 is the first day where you have been in all the rooms.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3757', '1614', '3', 'nextVisit = [0,1,2,0]', '6', 'Your room visiting order for each day is: [0,0,1,1,2,2,3,...].\nDay 6 is the first day where you have been in all the rooms.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3758', '1615', '1', 'nums = [7,21,3]', 'true', 'We can sort [7,21,3] by performing the following operations:\n- Swap 7 and 21 because gcd(7,21) = 7. nums = [<u><strong>21</strong></u>,<u><strong>7</strong></u>,3]\n- Swap 21 and 3 because gcd(21,3) = 3. nums = [<u><strong>3</strong></u>,7,<u><strong>21</strong></u>]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3759', '1615', '2', 'nums = [5,2,6,2]', 'false', 'It is impossible to sort the array because 5 cannot be swapped with any other element.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3760', '1615', '3', 'nums = [10,5,9,3,15]', 'true\nWe can sort [10,5,9,3,15] by performing the following operations:\n- Swap 10 and 15 because gcd(10,15) = 5. nums = [<u><strong>15</strong></u>,5,9,3,<u><strong>10</strong></u>]\n- Swap 15 and 3 because gcd(15,3) = 3. nums = [<u><strong>3</strong></u>,5,9,<u><strong>15</strong></u>,10]\n- Swap 10 and 15 because gcd(10,15) = 5. nums = [3,5,9,<u><strong>10</strong></u>,<u><strong>15</strong></u>]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3761', '1616', '1', 'word = \"<u>abcd</u>efd\", ch = \"d\"', '\"<u>dcba</u>efd\"', 'The first occurrence of \"d\" is at index 3. \nReverse the part of word from 0 to 3 (inclusive), the resulting string is \"dcbaefd\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3762', '1616', '2', 'word = \"<u>xyxz</u>xe\", ch = \"z\"', '\"<u>zxyx</u>xe\"', 'The first and only occurrence of \"z\" is at index 3.\nReverse the part of word from 0 to 3 (inclusive), the resulting string is \"zxyxxe\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3763', '1616', '3', 'word = \"abcd\", ch = \"z\"', '\"abcd\"', '\"z\" does not exist in word.\nYou should not do any reverse operation, the resulting string is \"abcd\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3764', '1617', '1', 'rectangles = [[4,8],[3,6],[10,20],[15,30]]', '6', 'The following are the interchangeable pairs of rectangles by index (0-indexed):\n- Rectangle 0 with rectangle 1: 4/8 == 3/6.\n- Rectangle 0 with rectangle 2: 4/8 == 10/20.\n- Rectangle 0 with rectangle 3: 4/8 == 15/30.\n- Rectangle 1 with rectangle 2: 3/6 == 10/20.\n- Rectangle 1 with rectangle 3: 3/6 == 15/30.\n- Rectangle 2 with rectangle 3: 10/20 == 15/30.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3765', '1617', '2', 'rectangles = [[4,5],[7,8]]', '0', 'There are no interchangeable pairs of rectangles.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3766', '1618', '1', 's = \"leetcodecom\"', '9', ': An optimal solution is to choose \"ete\" for the 1<sup>st</sup> subsequence and \"cdc\" for the 2<sup>nd</sup> subsequence.\nThe product of their lengths is: 3 * 3 = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3767', '1618', '2', 's = \"bb\"', '1', ': An optimal solution is to choose \"b\" (the first character) for the 1<sup>st</sup> subsequence and \"b\" (the second character) for the 2<sup>nd</sup> subsequence.\nThe product of their lengths is: 1 * 1 = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3768', '1618', '3', 's = \"accbcaxxcxx\"', '25', ': An optimal solution is to choose \"accca\" for the 1<sup>st</sup> subsequence and \"xxcxx\" for the 2<sup>nd</sup> subsequence.\nThe product of their lengths is: 5 * 5 = 25.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3769', '1619', '1', 'parents = [-1,0,0,2], nums = [1,2,3,4]', '[5,1,1,1]', 'The answer for each subtree is calculated as follows:\n- 0: The subtree contains nodes [0,1,2,3] with values [1,2,3,4]. 5 is the smallest missing value.\n- 1: The subtree contains only node 1 with value 2. 1 is the smallest missing value.\n- 2: The subtree contains nodes [2,3] with values [3,4]. 1 is the smallest missing value.\n- 3: The subtree contains only node 3 with value 4. 1 is the smallest missing value.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3770', '1619', '2', 'parents = [-1,0,1,0,3,3], nums = [5,4,6,2,1,3]', '[7,1,1,4,2,1]', 'The answer for each subtree is calculated as follows:\n- 0: The subtree contains nodes [0,1,2,3,4,5] with values [5,4,6,2,1,3]. 7 is the smallest missing value.\n- 1: The subtree contains nodes [1,2] with values [4,6]. 1 is the smallest missing value.\n- 2: The subtree contains only node 2 with value 6. 1 is the smallest missing value.\n- 3: The subtree contains nodes [3,4,5] with values [2,1,3]. 4 is the smallest missing value.\n- 4: The subtree contains only node 4 with value 1. 2 is the smallest missing value.\n- 5: The subtree contains only node 5 with value 3. 1 is the smallest missing value.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3771', '1619', '3', 'parents = [-1,2,3,0,2,4,1], nums = [2,3,4,5,6,7,8]', '[1,1,1,1,1,1,1]', 'The value 1 is missing from all the subtrees.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3772', '1620', '1', 'nums = [1,2,2,1], k = 1', '4', 'The pairs with an absolute difference of 1 are:\n- [<strong><u>1</u></strong>,<strong><u>2</u></strong>,2,1]\n- [<strong><u>1</u></strong>,2,<strong><u>2</u></strong>,1]\n- [1,<strong><u>2</u></strong>,2,<strong><u>1</u></strong>]\n- [1,2,<strong><u>2</u></strong>,<strong><u>1</u></strong>]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3773', '1620', '2', 'nums = [1,3], k = 3', '0', 'There are no pairs with an absolute difference of 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3774', '1620', '3', 'nums = [3,2,1,5,4], k = 2', '3', 'The pairs with an absolute difference of 2 are:\n- [<strong><u>3</u></strong>,2,<strong><u>1</u></strong>,5,4]\n- [<strong><u>3</u></strong>,2,1,<strong><u>5</u></strong>,4]\n- [3,<strong><u>2</u></strong>,1,5,<strong><u>4</u></strong>]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3775', '1621', '1', 'changed = [1,3,4,2,6,8]', '[1,3,4]', 'One possible original array could be [1,3,4]:\n- Twice the value of 1 is 1 * 2 = 2.\n- Twice the value of 3 is 3 * 2 = 6.\n- Twice the value of 4 is 4 * 2 = 8.\nOther original arrays could be [4,3,1] or [3,1,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3776', '1621', '2', 'changed = [6,3,0,1]', '[]', 'changed is not a doubled array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3777', '1621', '3', 'changed = [1]', '[]', 'changed is not a doubled array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3778', '1622', '1', 'n = 5, rides = [<u>[2,5,4]</u>,[1,5,1]]', '7', 'We can pick up passenger 0 to earn 5 - 2 + 4 = 7 dollars.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3779', '1622', '2', 'n = 20, rides = [[1,6,1],<u>[3,10,2]</u>,<u>[10,12,3]</u>,[11,12,2],[12,15,2],<u>[13,18,1]</u>]', '20', 'We will pick up the following passengers:\n- Drive passenger 1 from point 3 to point 10 for a profit of 10 - 3 + 2 = 9 dollars.\n- Drive passenger 2 from point 10 to point 12 for a profit of 12 - 10 + 3 = 5 dollars.\n- Drive passenger 5 from point 13 to point 18 for a profit of 18 - 13 + 1 = 6 dollars.\nWe earn 9 + 5 + 6 = 20 dollars in total.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3780', '1624', '1', 'operations = [\"--X\",\"X++\",\"X++\"]', '1', 'The operations are performed as follows:\nInitially, X = 0.\n--X: X is decremented by 1, X =  0 - 1 = -1.\nX++: X is incremented by 1, X = -1 + 1 =  0.\nX++: X is incremented by 1, X =  0 + 1 =  1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3781', '1624', '2', 'operations = [\"++X\",\"++X\",\"X++\"]', '3', 'The operations are performed as follows:\nInitially, X = 0.\n++X: X is incremented by 1, X = 0 + 1 = 1.\n++X: X is incremented by 1, X = 1 + 1 = 2.\nX++: X is incremented by 1, X = 2 + 1 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3782', '1624', '3', 'operations = [\"X++\",\"++X\",\"--X\",\"X--\"]', '0', 'The operations are performed as follows:\nInitially, X = 0.\nX++: X is incremented by 1, X = 0 + 1 = 1.\n++X: X is incremented by 1, X = 1 + 1 = 2.\n--X: X is decremented by 1, X = 2 - 1 = 1.\nX--: X is decremented by 1, X = 1 - 1 = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3783', '1625', '1', 'nums = [1,2,3]', '2', 'For each index i in the range 1 &lt;= i &lt;= 1:\n- The beauty of nums[1] equals 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3784', '1625', '2', 'nums = [2,4,6,4]', '1', 'For each index i in the range 1 &lt;= i &lt;= 2:\n- The beauty of nums[1] equals 1.\n- The beauty of nums[2] equals 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3785', '1625', '3', 'nums = [3,2,1]', '0', 'For each index i in the range 1 &lt;= i &lt;= 1:\n- The beauty of nums[1] equals 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3786', '1626', '1', '[\"DetectSquares\", \"add\", \"add\", \"add\", \"count\", \"count\", \"add\", \"count\"]\n[[], [[3, 10]], [[11, 2]], [[3, 2]], [[11, 10]], [[14, 8]], [[11, 2]], [[11, 10]]]', '[null, null, null, null, 1, 0, null, 2]', 'DetectSquares detectSquares = new DetectSquares();\ndetectSquares.add([3, 10]);\ndetectSquares.add([11, 2]);\ndetectSquares.add([3, 2]);\ndetectSquares.count([11, 10]); // return 1. You can choose:\n                               //   - The first, second, and third points\ndetectSquares.count([14, 8]);  // return 0. The query point cannot form a square with any points in the data structure.\ndetectSquares.add([11, 2]);    // Adding duplicate points is allowed.\ndetectSquares.count([11, 10]); // return 2. You can choose:\n                               //   - The first, second, and third points\n                               //   - The first, third, and fourth points');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3787', '1627', '1', 's = \"letsleetcode\", k = 2', '\"let\"', 'There are two longest subsequences repeated 2 times: \"let\" and \"ete\".\n\"let\" is the lexicographically largest one.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3788', '1627', '2', 's = \"bb\", k = 2', '\"b\"', 'The longest subsequence repeated 2 times is \"b\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3789', '1627', '3', 's = \"ab\", k = 2', '\"\"', 'There is no subsequence repeated 2 times. Empty string is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3790', '1628', '1', 'nums = [7,<strong><u>1</u></strong>,<strong><u>5</u></strong>,4]', '4', 'The maximum difference occurs with i = 1 and j = 2, nums[j] - nums[i] = 5 - 1 = 4.\nNote that with i = 1 and j = 0, the difference nums[j] - nums[i] = 7 - 1 = 6, but i &gt; j, so it is not valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3791', '1628', '2', 'nums = [9,4,3,2]', '-1', 'There is no i and j such that i &lt; j and nums[i] &lt; nums[j].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3792', '1628', '3', 'nums = [<strong><u>1</u></strong>,5,2,<strong><u>10</u></strong>]', '9', 'The maximum difference occurs with i = 0 and j = 3, nums[j] - nums[i] = 10 - 1 = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3793', '1629', '1', 'grid = [[2,5,4],[1,5,1]]', '4', 'The optimal path taken by the first robot is shown in red, and the optimal path taken by the second robot is shown in blue.\nThe cells visited by the first robot are set to 0.\nThe second robot will collect 0 + 0 + 4 + 0 = 4 points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3794', '1629', '2', 'grid = [[3,3,1],[8,5,2]]', '4', 'The optimal path taken by the first robot is shown in red, and the optimal path taken by the second robot is shown in blue.\nThe cells visited by the first robot are set to 0.\nThe second robot will collect 0 + 3 + 1 + 0 = 4 points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3795', '1629', '3', 'grid = [[1,3,1,15],[1,3,3,1]]', '7', 'The optimal path taken by the first robot is shown in red, and the optimal path taken by the second robot is shown in blue.\nThe cells visited by the first robot are set to 0.\nThe second robot will collect 0 + 1 + 3 + 3 + 0 = 7 points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3796', '1630', '1', 'board = [[\"#\", \" \", \"#\"], [\" \", \" \", \"#\"], [\"#\", \"c\", \" \"]], word = \"abc\"', 'true', 'The word \"abc\" can be placed as shown above (top to bottom).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3797', '1630', '2', 'board = [[\" \", \"#\", \"a\"], [\" \", \"#\", \"c\"], [\" \", \"#\", \"a\"]], word = \"ac\"', 'false', 'It is impossible to place the word because there will always be a space/letter above or below it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3798', '1630', '3', 'board = [[\"#\", \" \", \"#\"], [\" \", \" \", \"#\"], [\"#\", \" \", \"c\"]], word = \"ca\"', 'true', 'The word \"ca\" can be placed as shown above (right to left).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3799', '1631', '1', 's = \"7+3*1*2\", answers = [20,13,42]', '7', 'As illustrated above, the correct answer of the expression is 13, therefore one student is rewarded 5 points: [20,<u><strong>13</strong></u>,42]\nA student might have applied the operators in this wrong order: ((7+3)*1)*2 = 20. Therefore one student is rewarded 2 points: [<u><strong>20</strong></u>,13,42]\nThe points for the students are: [2,5,0]. The sum of the points is 2+5+0=7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3800', '1631', '2', 's = \"3+5*2\", answers = [13,0,10,13,13,16,16]', '19', 'The correct answer of the expression is 13, therefore three students are rewarded 5 points each: [<strong><u>13</u></strong>,0,10,<strong><u>13</u></strong>,<strong><u>13</u></strong>,16,16]\nA student might have applied the operators in this wrong order: ((3+5)*2 = 16. Therefore two students are rewarded 2 points: [13,0,10,13,13,<strong><u>16</u></strong>,<strong><u>16</u></strong>]\nThe points for the students are: [5,0,0,5,5,2,2]. The sum of the points is 5+0+0+5+5+2+2=19.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3801', '1631', '3', 's = \"6+0*1\", answers = [12,9,6,4,8,6]', '10', 'The correct answer of the expression is 6.\nIf a student had incorrectly done (6+0)*1, the answer would also be 6.\nBy the rules of grading, the students will still be rewarded 5 points (as they got the correct answer), not 2 points.\nThe points for the students are: [0,0,5,0,0,5]. The sum of the points is 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3802', '1632', '1', 'original = [1,2,3,4], m = 2, n = 2', '[[1,2],[3,4]]', 'The constructed 2D array should contain 2 rows and 2 columns.\nThe first group of n=2 elements in original, [1,2], becomes the first row in the constructed 2D array.\nThe second group of n=2 elements in original, [3,4], becomes the second row in the constructed 2D array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3803', '1632', '2', 'original = [1,2,3], m = 1, n = 3', '[[1,2,3]]', 'The constructed 2D array should contain 1 row and 3 columns.\nPut all three elements in original into the first row of the constructed 2D array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3804', '1632', '3', 'original = [1,2], m = 1, n = 1', '[]', 'There are 2 elements in original.\nIt is impossible to fit 2 elements in a 1x1 2D array, so return an empty 2D array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3805', '1633', '1', 'nums = [\"777\",\"7\",\"77\",\"77\"], target = \"7777\"', '4', 'Valid pairs are:\n- (0, 1): \"777\" + \"7\"\n- (1, 0): \"7\" + \"777\"\n- (2, 3): \"77\" + \"77\"\n- (3, 2): \"77\" + \"77\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3806', '1633', '2', 'nums = [\"123\",\"4\",\"12\",\"34\"], target = \"1234\"', '2', 'Valid pairs are:\n- (0, 1): \"123\" + \"4\"\n- (2, 3): \"12\" + \"34\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3807', '1633', '3', 'nums = [\"1\",\"1\",\"1\"], target = \"11\"', '6', 'Valid pairs are:\n- (0, 1): \"1\" + \"1\"\n- (1, 0): \"1\" + \"1\"\n- (0, 2): \"1\" + \"1\"\n- (2, 0): \"1\" + \"1\"\n- (1, 2): \"1\" + \"1\"\n- (2, 1): \"1\" + \"1\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3808', '1634', '1', 'answerKey = \"TTFF\", k = 2', '4', 'We can replace both the \'F\'s with \'T\'s to make answerKey = \"<u>TTTT</u>\".\nThere are four consecutive \'T\'s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3809', '1634', '2', 'answerKey = \"TFFT\", k = 1', '3', 'We can replace the first \'T\' with an \'F\' to make answerKey = \"<u>FFF</u>T\".\nAlternatively, we can replace the second \'T\' with an \'F\' to make answerKey = \"T<u>FFF</u>\".\nIn both cases, there are three consecutive \'F\'s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3810', '1634', '3', 'answerKey = \"TTFTTFTT\", k = 1', '5', 'We can replace the first \'F\' to make answerKey = \"<u>TTTTT</u>FTT\"\nAlternatively, we can replace the second \'F\' to make answerKey = \"TTF<u>TTTTT</u>\". \nIn both cases, there are five consecutive \'T\'s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3811', '1635', '1', 'nums = [2,-1,2], k = 3', '1', 'One optimal approach is to change nums[0] to k. The array becomes [<strong><u>3</u></strong>,-1,2].\nThere is one way to partition the array:\n- For pivot = 2, we have the partition [3,-1 | 2]: 3 + -1 == 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3812', '1635', '2', 'nums = [0,0,0], k = 1', '2', 'The optimal approach is to leave the array unchanged.\nThere are two ways to partition the array:\n- For pivot = 1, we have the partition [0 | 0,0]: 0 == 0 + 0.\n- For pivot = 2, we have the partition [0,0 | 0]: 0 + 0 == 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3813', '1635', '3', 'nums = [22,4,-25,-20,-15,15,-16,7,19,-10,0,-13,-14], k = -33', '4', 'One optimal approach is to change nums[2] to k. The array becomes [22,4,<u><strong>-33</strong></u>,-20,-15,15,-16,7,19,-10,0,-13,-14].\nThere are four ways to partition the array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3814', '1636', '1', 's = \"XXX\"', '1', '<u>XXX</u> -&gt; OOO\nWe select all the 3 characters and convert them in one move.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3815', '1636', '2', 's = \"XXOX\"', '2', '<u>XXO</u>X -&gt; O<u>OOX</u> -&gt; OOOO\nWe select the first 3 characters in the first move, and convert them to <code>\'O\'</code>.\nThen we select the last 3 characters and convert them so that the final string contains all <code>\'O\'</code>s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3816', '1636', '3', 's = \"OOOO\"', '0', 'There are no <code>\'X\'s</code> in <code>s</code> to convert.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3817', '1637', '1', 'rolls = [3,2,4,3], mean = 4, n = 2', '[6,6]', 'The mean of all n + m rolls is (3 + 2 + 4 + 3 + 6 + 6) / 6 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3818', '1637', '2', 'rolls = [1,5,6], mean = 3, n = 4', '[2,3,2,2]', 'The mean of all n + m rolls is (1 + 5 + 6 + 2 + 3 + 2 + 2) / 7 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3819', '1637', '3', 'rolls = [1,2,3,4], mean = 6, n = 4', '[]', 'It is impossible for the mean to be 6 no matter what the 4 missing rolls are.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3820', '1638', '1', 'stones = [2,1]', 'true', 'The game will be played as follows:\n- Turn 1: Alice can remove either stone.\n- Turn 2: Bob removes the remaining stone. \nThe sum of the removed stones is 1 + 2 = 3 and is divisible by 3. Therefore, Bob loses and Alice wins the game.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3821', '1638', '2', 'stones = [2]', 'false', 'Alice will remove the only stone, and the sum of the values on the removed stones is 2. \nSince all the stones are removed and the sum of values is not divisible by 3, Bob wins the game.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3822', '1638', '3', 'stones = [5,1,2,4,3]', 'false', 'Bob will always win. One possible way for Bob to win is shown below:\n- Turn 1: Alice can remove the second stone with value 1. Sum of removed stones = 1.\n- Turn 2: Bob removes the fifth stone with value 3. Sum of removed stones = 1 + 3 = 4.\n- Turn 3: Alices removes the fourth stone with value 4. Sum of removed stones = 1 + 3 + 4 = 8.\n- Turn 4: Bob removes the third stone with value 2. Sum of removed stones = 1 + 3 + 4 + 2 = 10.\n- Turn 5: Alice removes the first stone with value 5. Sum of removed stones = 1 + 3 + 4 + 2 + 5 = 15.\nAlice loses the game because the sum of the removed stones (15) is divisible by 3. Bob wins the game.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3823', '1639', '1', 's = \"leet\", k = 3, letter = \"e\", repetition = 1', '\"eet\"', 'There are four subsequences of length 3 that have the letter \'e\' appear at least 1 time:\n- \"lee\" (from \"<strong><u>lee</u></strong>t\")\n- \"let\" (from \"<strong><u>le</u></strong>e<u><strong>t</strong></u>\")\n- \"let\" (from \"<u><strong>l</strong></u>e<u><strong>et</strong></u>\")\n- \"eet\" (from \"l<u><strong>eet</strong></u>\")\nThe lexicographically smallest subsequence among them is \"eet\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3824', '1639', '2', 's = \"leetcode\", k = 4, letter = \"e\", repetition = 2', '\"ecde\"', '\"ecde\" is the lexicographically smallest subsequence of length 4 that has the letter \"e\" appear at least 2 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3825', '1639', '3', 's = \"bb\", k = 2, letter = \"b\", repetition = 2', '\"bb\"', '\"bb\" is the only subsequence of length 2 that has the letter \"b\" appear at least 2 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3826', '1640', '1', 'nums1 = [1,1,3,2], nums2 = [2,3], nums3 = [3]', '[3,2]', 'The values that are present in at least two arrays are:\n- 3, in all three arrays.\n- 2, in nums1 and nums2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3827', '1640', '2', 'nums1 = [3,1], nums2 = [2,3], nums3 = [1,2]', '[2,3,1]', 'The values that are present in at least two arrays are:\n- 2, in nums2 and nums3.\n- 3, in nums1 and nums2.\n- 1, in nums1 and nums3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3828', '1640', '3', 'nums1 = [1,2,2], nums2 = [4,3,3], nums3 = [5]', '[]', 'No value is present in at least two arrays.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3829', '1641', '1', 'grid = [[2,4],[6,8]], x = 2', '4', 'We can make every element equal to 4 by doing the following: \n- Add x to 2 once.\n- Subtract x from 6 once.\n- Subtract x from 8 twice.\nA total of 4 operations were used.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3830', '1641', '2', 'grid = [[1,5],[2,3]], x = 1', '5', 'We can make every element equal to 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3831', '1641', '3', 'grid = [[1,2],[3,4]], x = 2', '-1', 'It is impossible to make every element equal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3832', '1642', '1', '[\"StockPrice\", \"update\", \"update\", \"current\", \"maximum\", \"update\", \"maximum\", \"update\", \"minimum\"]\n[[], [1, 10], [2, 5], [], [], [1, 3], [], [4, 2], []]', '[null, null, null, 5, 10, null, 5, null, 2]', 'StockPrice stockPrice = new StockPrice();\nstockPrice.update(1, 10); // Timestamps are [1] with corresponding prices [10].\nstockPrice.update(2, 5);  // Timestamps are [1,2] with corresponding prices [10,5].\nstockPrice.current();     // return 5, the latest timestamp is 2 with the price being 5.\nstockPrice.maximum();     // return 10, the maximum price is 10 at timestamp 1.\nstockPrice.update(1, 3);  // The previous timestamp 1 had the wrong price, so it is updated to 3.\n                          // Timestamps are [1,2] with corresponding prices [3,5].\nstockPrice.maximum();     // return 5, the maximum price is 5 after the correction.\nstockPrice.update(4, 2);  // Timestamps are [1,2,4] with corresponding prices [3,5,2].\nstockPrice.minimum();     // return 2, the minimum price is 2 at timestamp 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3833', '1643', '1', 'nums = [3,9,7,3]', '2', 'One optimal partition is: [3,9] and [7,3].\nThe absolute difference between the sums of the arrays is abs((3 + 9) - (7 + 3)) = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3834', '1643', '2', 'nums = [-36,36]', '72', 'One optimal partition is: [-36] and [36].\nThe absolute difference between the sums of the arrays is abs((-36) - (36)) = 72.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3835', '1643', '3', 'nums = [2,-1,0,4,-2,-9]', '0', 'One optimal partition is: [2,4,-9] and [-1,0,-2].\nThe absolute difference between the sums of the arrays is abs((2 + 4 + -9) - (-1 + 0 + -2)) = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3836', '1644', '1', 'seats = [3,1,5], students = [2,7,4]', '4', 'The students are moved as follows:\n- The first student is moved from from position 2 to position 1 using 1 move.\n- The second student is moved from from position 7 to position 5 using 2 moves.\n- The third student is moved from from position 4 to position 3 using 1 move.\nIn total, 1 + 2 + 1 = 4 moves were used.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3837', '1644', '2', 'seats = [4,1,5,9], students = [1,3,2,6]', '7', 'The students are moved as follows:\n- The first student is not moved.\n- The second student is moved from from position 3 to position 4 using 1 move.\n- The third student is moved from from position 2 to position 5 using 3 moves.\n- The fourth student is moved from from position 6 to position 9 using 3 moves.\nIn total, 0 + 1 + 3 + 3 = 7 moves were used.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3838', '1644', '3', 'seats = [2,2,6,6], students = [1,3,2,6]', '4', 'Note that there are two seats at position 2 and two seats at position 6.\nThe students are moved as follows:\n- The first student is moved from from position 1 to position 2 using 1 move.\n- The second student is moved from from position 3 to position 6 using 3 moves.\n- The third student is not moved.\n- The fourth student is not moved.\nIn total, 1 + 3 + 0 + 0 = 4 moves were used.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3839', '1645', '1', 'colors = \"AAABABB\"', 'true', 'A<u>A</u>ABABB -&gt; AABABB\nAlice moves first.\nShe removes the second \'A\' from the left since that is the only \'A\' whose neighbors are both \'A\'.\n\nNow it\'s Bob\'s turn.\nBob cannot make a move on his turn since there are no \'B\'s whose neighbors are both \'B\'.\nThus, Alice wins, so return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3840', '1645', '2', 'colors = \"AA\"', 'false', 'Alice has her turn first.\nThere are only two \'A\'s and both are on the edge of the line, so she cannot move on her turn.\nThus, Bob wins, so return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3841', '1645', '3', 'colors = \"ABBBBBBBAAA\"', 'false', 'ABBBBBBBA<u>A</u>A -&gt; ABBBBBBBAA\nAlice moves first.\nHer only option is to remove the second to last \'A\' from the right.\n\nABBBB<u>B</u>BBAA -&gt; ABBBBBBAA\nNext is Bob\'s turn.\nHe has many options for which \'B\' piece to remove. He can pick any.\n\nOn Alice\'s second turn, she has no more pieces that she can remove.\nThus, Bob wins, so return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3842', '1647', '1', 'nums1 = [2,5], nums2 = [3,4], k = 2', '8', 'The 2 smallest products are:\n- nums1[0] * nums2[0] = 2 * 3 = 6\n- nums1[0] * nums2[1] = 2 * 4 = 8\nThe 2<sup>nd</sup> smallest product is 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3843', '1647', '2', 'nums1 = [-4,-2,0,3], nums2 = [2,4], k = 6', '0', 'The 6 smallest products are:\n- nums1[0] * nums2[1] = (-4) * 4 = -16\n- nums1[0] * nums2[0] = (-4) * 2 = -8\n- nums1[1] * nums2[1] = (-2) * 4 = -8\n- nums1[1] * nums2[0] = (-2) * 2 = -4\n- nums1[2] * nums2[0] = 0 * 2 = 0\n- nums1[2] * nums2[1] = 0 * 4 = 0\nThe 6<sup>th</sup> smallest product is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3844', '1647', '3', 'nums1 = [-2,-1,0,1,2], nums2 = [-3,-1,2,4,5], k = 3', '-6', 'The 3 smallest products are:\n- nums1[0] * nums2[4] = (-2) * 5 = -10\n- nums1[0] * nums2[3] = (-2) * 4 = -8\n- nums1[4] * nums2[0] = 2 * (-3) = -6\nThe 3<sup>rd</sup> smallest product is -6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3845', '1648', '1', 's = \"1 box has 3 blue 4 red 6 green and 12 yellow marbles\"', 'true', 'The numbers in s are: 1, 3, 4, 6, 12.\nThey are strictly increasing from left to right: 1 &lt; 3 &lt; 4 &lt; 6 &lt; 12.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3846', '1648', '2', 's = \"hello world 5 x 5\"', 'false', 'The numbers in s are: <u><strong>5</strong></u>, <strong><u>5</u></strong>. They are not strictly increasing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3847', '1648', '3', 's = \"sunset is at 7 51 pm overnight lows will be in the low 50 and 60 s\"', 'false', 'The numbers in s are: 7, <u><strong>51</strong></u>, <u><strong>50</strong></u>, 60. They are not strictly increasing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3848', '1649', '1', '[\"Bank\", \"withdraw\", \"transfer\", \"deposit\", \"transfer\", \"withdraw\"]\n[[[10, 100, 20, 50, 30]], [3, 10], [5, 1, 20], [5, 20], [3, 4, 15], [10, 50]]', '[null, true, true, true, false, false]', 'Bank bank = new Bank([10, 100, 20, 50, 30]);\nbank.withdraw(3, 10);    // return true, account 3 has a balance of $20, so it is valid to withdraw $10.\n                         // Account 3 has $20 - $10 = $10.\nbank.transfer(5, 1, 20); // return true, account 5 has a balance of $30, so it is valid to transfer $20.\n                         // Account 5 has $30 - $20 = $10, and account 1 has $10 + $20 = $30.\nbank.deposit(5, 20);     // return true, it is valid to deposit $20 to account 5.\n                         // Account 5 has $10 + $20 = $30.\nbank.transfer(3, 4, 15); // return false, the current balance of account 3 is $10,\n                         // so it is invalid to transfer $15 from it.\nbank.withdraw(10, 50);   // return false, it is invalid because account 10 does not exist.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3849', '1650', '1', 'nums = [3,1]', '2', 'The maximum possible bitwise OR of a subset is 3. There are 2 subsets with a bitwise OR of 3:\n- [3]\n- [3,1]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3850', '1650', '2', 'nums = [2,2,2]', '7', 'All non-empty subsets of [2,2,2] have a bitwise OR of 2. There are 2<sup>3</sup> - 1 = 7 total subsets.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3851', '1650', '3', 'nums = [3,2,1,5]', '6', 'The maximum possible bitwise OR of a subset is 7. There are 6 subsets with a bitwise OR of 7:\n- [3,5]\n- [3,1,5]\n- [3,2,5]\n- [3,2,1,5]\n- [2,5]\n- [2,1,5]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3852', '1651', '1', 'n = 5, edges = [[1,2],[1,3],[1,4],[3,4],[4,5]], time = 3, change = 5', '13', 'The figure on the left shows the given graph.\nThe blue path in the figure on the right is the minimum time path.\nThe time taken is:\n- Start at 1, time elapsed=0\n- 1 -&gt; 4: 3 minutes, time elapsed=3\n- 4 -&gt; 5: 3 minutes, time elapsed=6\nHence the minimum time needed is 6 minutes.\n\nThe red path shows the path to get the second minimum time.\n- Start at 1, time elapsed=0\n- 1 -&gt; 3: 3 minutes, time elapsed=3\n- 3 -&gt; 4: 3 minutes, time elapsed=6\n- Wait at 4 for 4 minutes, time elapsed=10\n- 4 -&gt; 5: 3 minutes, time elapsed=13\nHence the second minimum time is 13 minutes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3853', '1651', '2', 'n = 2, edges = [[1,2]], time = 3, change = 2', '11', 'The minimum time path is 1 -&gt; 2 with time = 3 minutes.\nThe second minimum time path is 1 -&gt; 2 -&gt; 1 -&gt; 2 with time = 11 minutes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3854', '1652', '1', 'sentence = \"<u>cat</u> <u>and</u>  <u>dog</u>\"', '3', 'The valid words in the sentence are \"cat\", \"and\", and \"dog\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3855', '1652', '2', 'sentence = \"!this  1-s b8d!\"', '0', 'There are no valid words in the sentence.\n\"!this\" is invalid because it starts with a punctuation mark.\n\"1-s\" and \"b8d\" are invalid because they contain digits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3856', '1652', '3', 'sentence = \"<u>alice</u> <u>and</u>  <u>bob</u> <u>are</u> <u>playing</u> stone-game10\"', '5', 'The valid words in the sentence are \"alice\", \"and\", \"bob\", \"are\", and \"playing\".\n\"stone-game10\" is invalid because it contains digits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3857', '1653', '1', 'n = 1', '22', '22 is numerically balanced since:\n- The digit 2 occurs 2 times. \nIt is also the smallest numerically balanced number strictly greater than 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3858', '1653', '2', 'n = 1000', '1333', '1333 is numerically balanced since:\n- The digit 1 occurs 1 time.\n- The digit 3 occurs 3 times. \nIt is also the smallest numerically balanced number strictly greater than 1000.\nNote that 1022 cannot be the answer because 0 appeared more than 0 times.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3859', '1653', '3', 'n = 3000', '3133', '3133 is numerically balanced since:\n- The digit 1 occurs 1 time.\n- The digit 3 occurs 3 times.\nIt is also the smallest numerically balanced number strictly greater than 3000.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3860', '1654', '1', 'parents = [-1,2,0,2,0]', '3', '- The score of node 0 is: 3 * 1 = 3\n- The score of node 1 is: 4 = 4\n- The score of node 2 is: 1 * 1 * 2 = 2\n- The score of node 3 is: 4 = 4\n- The score of node 4 is: 4 = 4\nThe highest score is 4, and three nodes (node 1, node 3, and node 4) have the highest score.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3861', '1654', '2', 'parents = [-1,2,0]', '2', '- The score of node 0 is: 2 = 2\n- The score of node 1 is: 2 = 2\n- The score of node 2 is: 1 * 1 = 1\nThe highest score is 2, and two nodes (node 0 and node 1) have the highest score.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3862', '1655', '1', 'n = 3, relations = [[1,3],[2,3]], time = [3,2,5]', '8', 'The figure above represents the given graph and the time required to complete each course. \nWe start course 1 and course 2 simultaneously at month 0.\nCourse 1 takes 3 months and course 2 takes 2 months to complete respectively.\nThus, the earliest time we can start course 3 is at month 3, and the total time required is 3 + 5 = 8 months.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3863', '1655', '2', 'n = 5, relations = [[1,5],[2,5],[3,5],[3,4],[4,5]], time = [1,2,3,4,5]', '12', 'The figure above represents the given graph and the time required to complete each course.\nYou can start courses 1, 2, and 3 at month 0.\nYou can complete them after 1, 2, and 3 months respectively.\nCourse 4 can be taken only after course 3 is completed, i.e., after 3 months. It is completed after 3 + 4 = 7 months.\nCourse 5 can be taken only after courses 1, 2, 3, and 4 have been completed, i.e., after max(1,2,3,7) = 7 months.\nThus, the minimum time needed to complete all the courses is 7 + 5 = 12 months.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3864', '1656', '1', 'arr = [\"d\",\"b\",\"c\",\"b\",\"c\",\"a\"], k = 2', '\"a\"', 'The only distinct strings in arr are \"d\" and \"a\".\n\"d\" appears 1<sup>st</sup>, so it is the 1<sup>st</sup> distinct string.\n\"a\" appears 2<sup>nd</sup>, so it is the 2<sup>nd</sup> distinct string.\nSince k == 2, \"a\" is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3865', '1656', '2', 'arr = [\"aaa\",\"aa\",\"a\"], k = 1', '\"aaa\"', 'All strings in arr are distinct, so the 1<sup>st</sup> string \"aaa\" is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3866', '1656', '3', 'arr = [\"a\",\"b\",\"a\"], k = 3', '\"\"', 'The only distinct string is \"b\". Since there are fewer than 3 distinct strings, we return an empty string \"\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3867', '1657', '1', 'events = [[1,3,2],[4,5,2],[2,4,3]]', '4', 'Choose the green events, 0 and 1 for a sum of 2 + 2 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3868', '1657', '2', 'events = [[1,3,2],[4,5,2],[1,5,5]]', '5', 'Choose event 2 for a sum of 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3869', '1657', '3', 'events = [[1,5,3],[1,5,1],[6,6,5]]', '8', 'Choose events 0 and 2 for a sum of 3 + 5 = 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3870', '1658', '1', 's = \"**|**|***|\", queries = [[2,5],[5,9]]', '[2,3]', '- queries[0] has two plates between candles.\n- queries[1] has three plates between candles.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3871', '1658', '2', 's = \"***|**|*****|**||**|*\", queries = [[1,17],[4,5],[14,17],[5,11],[15,16]]', '[9,0,0,0,0]', '- queries[0] has nine plates between candles.\n- The other queries have zero plates between candles.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3872', '1659', '1', 'pieces = [\"rook\"], positions = [[1,1]]', '15', 'The image above shows the possible squares the piece can move to.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3873', '1659', '2', 'pieces = [\"queen\"], positions = [[1,1]]', '22', 'The image above shows the possible squares the piece can move to.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3874', '1659', '3', 'pieces = [\"bishop\"], positions = [[4,3]]', '12', 'The image above shows the possible squares the piece can move to.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3875', '1660', '1', 'nums = [0,1,2]', '0', 'i=0: 0 mod 10 = 0 == nums[0].\ni=1: 1 mod 10 = 1 == nums[1].\ni=2: 2 mod 10 = 2 == nums[2].\nAll indices have i mod 10 == nums[i], so we return the smallest index 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3876', '1660', '2', 'nums = [4,3,2,1]', '2', 'i=0: 0 mod 10 = 0 != nums[0].\ni=1: 1 mod 10 = 1 != nums[1].\ni=2: 2 mod 10 = 2 == nums[2].\ni=3: 3 mod 10 = 3 != nums[3].\n2 is the only index which has i mod 10 == nums[i].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3877', '1660', '3', 'nums = [1,2,3,4,5,6,7,8,9,0]', '-1', 'No index satisfies i mod 10 == nums[i].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3878', '1661', '1', 'head = [3,1]', '[-1,-1]', 'There are no critical points in [3,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3879', '1661', '2', 'head = [5,3,1,2,5,1,2]', '[1,3]', 'There are three critical points:\n- [5,3,<strong><u>1</u></strong>,2,5,1,2]: The third node is a local minima because 1 is less than 3 and 2.\n- [5,3,1,2,<u><strong>5</strong></u>,1,2]: The fifth node is a local maxima because 5 is greater than 2 and 1.\n- [5,3,1,2,5,<u><strong>1</strong></u>,2]: The sixth node is a local minima because 1 is less than 5 and 2.\nThe minimum distance is between the fifth and the sixth node. minDistance = 6 - 5 = 1.\nThe maximum distance is between the third and the sixth node. maxDistance = 6 - 3 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3880', '1661', '3', 'head = [1,3,2,2,3,2,2,2,7]', '[3,3]', 'There are two critical points:\n- [1,<u><strong>3</strong></u>,2,2,3,2,2,2,7]: The second node is a local maxima because 3 is greater than 1 and 2.\n- [1,3,2,2,<u><strong>3</strong></u>,2,2,2,7]: The fifth node is a local maxima because 3 is greater than 2 and 2.\nBoth the minimum and maximum distances are between the second and the fifth node.\nThus, minDistance and maxDistance is 5 - 2 = 3.\nNote that the last node is not considered a local maxima because it does not have a next node.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3881', '1662', '3', 'nums = [2,8,16], start = 0, goal = 1', '-1', 'There is no way to convert 0 into 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3882', '1663', '1', 's1 = \"internationalization\", s2 = \"i18n\"', 'true', 'It is possible that \"internationalization\" was the original string.\n- \"internationalization\" \n  -&gt; Split:       [\"internationalization\"]\n  -&gt; Do not replace any element\n  -&gt; Concatenate:  \"internationalization\", which is s1.\n- \"internationalization\"\n  -&gt; Split:       [\"i\", \"nternationalizatio\", \"n\"]\n  -&gt; Replace:     [\"i\", \"18\",                 \"n\"]\n  -&gt; Concatenate:  \"i18n\", which is s2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3883', '1663', '2', 's1 = \"l123e\", s2 = \"44\"', 'true', 'It is possible that \"leetcode\" was the original string.\n- \"leetcode\" \n  -&gt; Split:      [\"l\", \"e\", \"et\", \"cod\", \"e\"]\n  -&gt; Replace:    [\"l\", \"1\", \"2\",  \"3\",   \"e\"]\n  -&gt; Concatenate: \"l123e\", which is s1.\n- \"leetcode\" \n  -&gt; Split:      [\"leet\", \"code\"]\n  -&gt; Replace:    [\"4\",    \"4\"]\n  -&gt; Concatenate: \"44\", which is s2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3884', '1663', '3', 's1 = \"a5b\", s2 = \"c5b\"', 'false', 'It is impossible.\n- The original string encoded as s1 must start with the letter \'a\'.\n- The original string encoded as s2 must start with the letter \'c\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3885', '1664', '1', 'word = \"aeiouu\"', '2', 'The vowel substrings of word are as follows (underlined):\n- \"<strong><u>aeiou</u></strong>u\"\n- \"<strong><u>aeiouu</u></strong>\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3886', '1664', '2', 'word = \"unicornarihan\"', '0', 'Not all 5 vowels are present, so there are no vowel substrings.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3887', '1664', '3', 'word = \"cuaieuouac\"', '7', 'The vowel substrings of word are as follows (underlined):\n- \"c<strong><u>uaieuo</u></strong>uac\"\n- \"c<strong><u>uaieuou</u></strong>ac\"\n- \"c<strong><u>uaieuoua</u></strong>c\"\n- \"cu<strong><u>aieuo</u></strong>uac\"\n- \"cu<strong><u>aieuou</u></strong>ac\"\n- \"cu<strong><u>aieuoua</u></strong>c\"\n- \"cua<strong><u>ieuoua</u></strong>c\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3888', '1665', '1', 'word = \"aba\"', '6', 'All possible substrings are: \"a\", \"ab\", \"aba\", \"b\", \"ba\", and \"a\".\n- \"b\" has 0 vowels in it\n- \"a\", \"ab\", \"ba\", and \"a\" have 1 vowel each\n- \"aba\" has 2 vowels in it\nHence, the total sum of vowels = 0 + 1 + 1 + 1 + 1 + 2 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3889', '1665', '2', 'word = \"abc\"', '3', 'All possible substrings are: \"a\", \"ab\", \"abc\", \"b\", \"bc\", and \"c\".\n- \"a\", \"ab\", and \"abc\" have 1 vowel each\n- \"b\", \"bc\", and \"c\" have 0 vowels each\nHence, the total sum of vowels = 1 + 1 + 1 + 0 + 0 + 0 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3890', '1665', '3', 'word = \"ltcd\"', '0', 'There are no vowels in any substring of \"ltcd\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3891', '1666', '1', 'n = 6, quantities = [11,6]', '3', 'One optimal way is:\n- The 11 products of type 0 are distributed to the first four stores in these amounts: 2, 3, 3, 3\n- The 6 products of type 1 are distributed to the other two stores in these amounts: 3, 3\nThe maximum number of products given to any store is max(2, 3, 3, 3, 3, 3) = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3892', '1666', '2', 'n = 7, quantities = [15,10,10]', '5', 'One optimal way is:\n- The 15 products of type 0 are distributed to the first three stores in these amounts: 5, 5, 5\n- The 10 products of type 1 are distributed to the next two stores in these amounts: 5, 5\n- The 10 products of type 2 are distributed to the last two stores in these amounts: 5, 5\nThe maximum number of products given to any store is max(5, 5, 5, 5, 5, 5, 5) = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3893', '1666', '3', 'n = 1, quantities = [100000]', '100000', 'The only optimal way is:\n- The 100000 products of type 0 are distributed to the only store.\nThe maximum number of products given to any store is max(100000) = 100000.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3894', '1667', '1', 'values = [0,32,10,43], edges = [[0,1,10],[1,2,15],[0,3,10]], maxTime = 49', '75', 'One possible path is 0 -&gt; 1 -&gt; 0 -&gt; 3 -&gt; 0. The total time taken is 10 + 10 + 10 + 10 = 40 &lt;= 49.\nThe nodes visited are 0, 1, and 3, giving a maximal path quality of 0 + 32 + 43 = 75.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3895', '1667', '2', 'values = [5,10,15,20], edges = [[0,1,10],[1,2,10],[0,3,10]], maxTime = 30', '25', 'One possible path is 0 -&gt; 3 -&gt; 0. The total time taken is 10 + 10 = 20 &lt;= 30.\nThe nodes visited are 0 and 3, giving a maximal path quality of 5 + 20 = 25.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3896', '1667', '3', 'values = [1,2,3,4], edges = [[0,1,10],[1,2,11],[2,3,12],[1,3,13]], maxTime = 50', '7', 'One possible path is 0 -&gt; 1 -&gt; 3 -&gt; 1 -&gt; 0. The total time taken is 10 + 13 + 13 + 10 = 46 &lt;= 50.\nThe nodes visited are 0, 1, and 3, giving a maximal path quality of 1 + 2 + 4 = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3897', '1668', '1', 'word1 = \"aaaa\", word2 = \"bccb\"', 'false', 'There are 4 \'a\'s in \"aaaa\" but 0 \'a\'s in \"bccb\".\nThe difference is 4, which is more than the allowed 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3898', '1668', '2', 'word1 = \"abcdeef\", word2 = \"abaaacc\"', 'true', 'The differences between the frequencies of each letter in word1 and word2 are at most 3:\n- \'a\' appears 1 time in word1 and 4 times in word2. The difference is 3.\n- \'b\' appears 1 time in word1 and 1 time in word2. The difference is 0.\n- \'c\' appears 1 time in word1 and 2 times in word2. The difference is 1.\n- \'d\' appears 1 time in word1 and 0 times in word2. The difference is 1.\n- \'e\' appears 2 times in word1 and 0 times in word2. The difference is 2.\n- \'f\' appears 1 time in word1 and 0 times in word2. The difference is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3899', '1668', '3', 'word1 = \"cccddabba\", word2 = \"babababab\"', 'true', 'The differences between the frequencies of each letter in word1 and word2 are at most 3:\n- \'a\' appears 2 times in word1 and 4 times in word2. The difference is 2.\n- \'b\' appears 2 times in word1 and 5 times in word2. The difference is 3.\n- \'c\' appears 3 times in word1 and 0 times in word2. The difference is 3.\n- \'d\' appears 2 times in word1 and 0 times in word2. The difference is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3900', '1669', '1', '[\"Robot\", \"step\", \"step\", \"getPos\", \"getDir\", \"step\", \"step\", \"step\", \"getPos\", \"getDir\"]\n[[6, 3], [2], [2], [], [], [2], [1], [4], [], []]', '[null, null, null, [4, 0], \"East\", null, null, null, [1, 2], \"West\"]', 'Robot robot = new Robot(6, 3); // Initialize the grid and the robot at (0, 0) facing East.\nrobot.step(2);  // It moves two steps East to (2, 0), and faces East.\nrobot.step(2);  // It moves two steps East to (4, 0), and faces East.\nrobot.getPos(); // return [4, 0]\nrobot.getDir(); // return \"East\"\nrobot.step(2);  // It moves one step East to (5, 0), and faces East.\n                // Moving the next step East would be out of bounds, so it turns and faces North.\n                // Then, it moves one step North to (5, 1), and faces North.\nrobot.step(1);  // It moves one step North to (5, 2), and faces <strong>North</strong> (not West).\nrobot.step(4);  // Moving the next step North would be out of bounds, so it turns and faces West.\n                // Then, it moves four steps West to (1, 2), and faces West.\nrobot.getPos(); // return [1, 2]\nrobot.getDir(); // return \"West\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3901', '1670', '1', 'items = [[1,2],[3,2],[2,4],[5,6],[3,5]], queries = [1,2,3,4,5,6]', '[2,4,5,5,6,6]', '- For queries[0]=1, [1,2] is the only item which has price &lt;= 1. Hence, the answer for this query is 2.\n- For queries[1]=2, the items which can be considered are [1,2] and [2,4]. \n  The maximum beauty among them is 4.\n- For queries[2]=3 and queries[3]=4, the items which can be considered are [1,2], [3,2], [2,4], and [3,5].\n  The maximum beauty among them is 5.\n- For queries[4]=5 and queries[5]=6, all items can be considered.\n  Hence, the answer for them is the maximum beauty of all items, i.e., 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3902', '1670', '2', 'items = [[1,2],[1,2],[1,3],[1,4]], queries = [1]', '[4]', 'The price of every item is equal to 1, so we choose the item with the maximum beauty 4. \nNote that multiple items can have the same price and/or beauty.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3903', '1670', '3', 'items = [[10,1000]], queries = [5]', '[0]', 'No item has a price less than or equal to 5, so no item can be chosen.\nHence, the answer to the query is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3904', '1671', '1', 'tasks = [<u><strong>3</strong></u>,<u><strong>2</strong></u>,<u><strong>1</strong></u>], workers = [<u><strong>0</strong></u>,<u><strong>3</strong></u>,<u><strong>3</strong></u>], pills = 1, strength = 1', '3', 'We can assign the magical pill and tasks as follows:\n- Give the magical pill to worker 0.\n- Assign worker 0 to task 2 (0 + 1 &gt;= 1)\n- Assign worker 1 to task 1 (3 &gt;= 2)\n- Assign worker 2 to task 0 (3 &gt;= 3)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3905', '1671', '2', 'tasks = [<u><strong>5</strong></u>,4], workers = [<u><strong>0</strong></u>,0,0], pills = 1, strength = 5', '1', 'We can assign the magical pill and tasks as follows:\n- Give the magical pill to worker 0.\n- Assign worker 0 to task 0 (0 + 5 &gt;= 5)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3906', '1671', '3', 'tasks = [<u><strong>10</strong></u>,<u><strong>15</strong></u>,30], workers = [<u><strong>0</strong></u>,<u><strong>10</strong></u>,10,10,10], pills = 3, strength = 10', '2', 'We can assign the magical pills and tasks as follows:\n- Give the magical pill to worker 0 and worker 1.\n- Assign worker 0 to task 0 (0 + 10 &gt;= 10)\n- Assign worker 1 to task 1 (10 + 10 &gt;= 15)\nThe last pill is not given because it will not make any worker strong enough for the last task.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3907', '1672', '1', 'tickets = [2,3,2], k = 2', '6', '- In the first pass, everyone in the line buys a ticket and the line becomes [1, 2, 1].\n- In the second pass, everyone in the line buys a ticket and the line becomes [0, 1, 0].\nThe person at position 2 has successfully bought 2 tickets and it took 3 + 3 = 6 seconds.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3908', '1672', '2', 'tickets = [5,1,1,1], k = 0', '8', '- In the first pass, everyone in the line buys a ticket and the line becomes [4, 0, 0, 0].\n- In the next 4 passes, only the person in position 0 is buying tickets.\nThe person at position 0 has successfully bought 5 tickets and it took 4 + 1 + 1 + 1 + 1 = 8 seconds.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3909', '1673', '1', 'head = [5,2,6,3,9,1,7,3,8,4]', '[5,6,2,3,9,1,4,8,3,7]', '- The length of the first group is 1, which is odd, hence no reversal occurs.\n- The length of the second group is 2, which is even, hence the nodes are reversed.\n- The length of the third group is 3, which is odd, hence no reversal occurs.\n- The length of the last group is 4, which is even, hence the nodes are reversed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3910', '1673', '2', 'head = [1,1,0,6]', '[1,0,1,6]', '- The length of the first group is 1. No reversal occurs.\n- The length of the second group is 2. The nodes are reversed.\n- The length of the last group is 1. No reversal occurs.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3911', '1673', '3', 'head = [1,1,0,6,5]', '[1,0,1,5,6]', '- The length of the first group is 1. No reversal occurs.\n- The length of the second group is 2. The nodes are reversed.\n- The length of the last group is 2. The nodes are reversed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3912', '1674', '1', 'encodedText = \"ch   ie   pr\", rows = 3', '\"cipher\"', 'This is the same example described in the problem description.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3913', '1674', '2', 'encodedText = \"iveo    eed   l te   olc\", rows = 4', '\"i love leetcode\"', 'The figure above denotes the matrix that was used to encode originalText. \nThe blue arrows show how we can find originalText from encodedText.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3914', '1674', '3', 'encodedText = \"coding\", rows = 1', '\"coding\"', 'Since there is only 1 row, both originalText and encodedText are the same.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3915', '1675', '1', 'n = 3, restrictions = [[0,1]], requests = [[0,2],[2,1]]', '[true,false]\n<strong>', '</strong>Request 0: Person 0 and person 2 can be friends, so they become direct friends. \nRequest 1: Person 2 and person 1 cannot be friends since person 0 and person 1 would be indirect friends (1--2--0).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3916', '1675', '2', 'n = 3, restrictions = [[0,1]], requests = [[1,2],[0,2]]', '[true,false]\n<strong>', '</strong>Request 0: Person 1 and person 2 can be friends, so they become direct friends.\nRequest 1: Person 0 and person 2 cannot be friends since person 0 and person 1 would be indirect friends (0--2--1).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3917', '1675', '3', 'n = 5, restrictions = [[0,1],[1,2],[2,3]], requests = [[0,4],[1,2],[3,1],[3,4]]', '[true,false,true,false]\n<strong>', '</strong>Request 0: Person 0 and person 4 can be friends, so they become direct friends.\nRequest 1: Person 1 and person 2 cannot be friends since they are directly restricted.\nRequest 2: Person 3 and person 1 can be friends, so they become direct friends.\nRequest 3: Person 3 and person 4 cannot be friends since person 0 and person 1 would be indirect friends (0--4--3--1).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3918', '1676', '1', 'colors = [<u><strong>1</strong></u>,1,1,<strong><u>6</u></strong>,1,1,1]', '3', 'In the above image, color 1 is blue, and color 6 is red.\nThe furthest two houses with different colors are house 0 and house 3.\nHouse 0 has color 1, and house 3 has color 6. The distance between them is abs(0 - 3) = 3.\nNote that houses 3 and 6 can also produce the optimal answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3919', '1676', '2', 'colors = [<u><strong>1</strong></u>,8,3,8,<u><strong>3</strong></u>]', '4', 'In the above image, color 1 is blue, color 8 is yellow, and color 3 is green.\nThe furthest two houses with different colors are house 0 and house 4.\nHouse 0 has color 1, and house 4 has color 3. The distance between them is abs(0 - 4) = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3920', '1676', '3', 'colors = [<u><strong>0</strong></u>,<strong><u>1</u></strong>]', '1', 'The furthest two houses with different colors are house 0 and house 1.\nHouse 0 has color 0, and house 1 has color 1. The distance between them is abs(0 - 1) = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3921', '1677', '1', 'plants = [2,2,3,3], capacity = 5', '14', 'Start at the river with a full watering can:\n- Walk to plant 0 (1 step) and water it. Watering can has 3 units of water.\n- Walk to plant 1 (1 step) and water it. Watering can has 1 unit of water.\n- Since you cannot completely water plant 2, walk back to the river to refill (2 steps).\n- Walk to plant 2 (3 steps) and water it. Watering can has 2 units of water.\n- Since you cannot completely water plant 3, walk back to the river to refill (3 steps).\n- Walk to plant 3 (4 steps) and water it.\nSteps needed = 1 + 1 + 2 + 3 + 3 + 4 = 14.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3922', '1677', '2', 'plants = [1,1,1,4,2,3], capacity = 4', '30', 'Start at the river with a full watering can:\n- Water plants 0, 1, and 2 (3 steps). Return to river (3 steps).\n- Water plant 3 (4 steps). Return to river (4 steps).\n- Water plant 4 (5 steps). Return to river (5 steps).\n- Water plant 5 (6 steps).\nSteps needed = 3 + 3 + 4 + 4 + 5 + 5 + 6 = 30.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3923', '1677', '3', 'plants = [7,7,7,7,7,7,7], capacity = 8', '49', 'You have to refill before watering each plant.\nSteps needed = 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 = 49.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3924', '1678', '1', '[\"RangeFreqQuery\", \"query\", \"query\"]\n[[[12, 33, 4, 56, 22, 2, 34, 33, 22, 12, 34, 56]], [1, 2, 4], [0, 11, 33]]', '[null, 1, 2]', 'RangeFreqQuery rangeFreqQuery = new RangeFreqQuery([12, 33, 4, 56, 22, 2, 34, 33, 22, 12, 34, 56]);\nrangeFreqQuery.query(1, 2, 4); // return 1. The value 4 occurs 1 time in the subarray [33, 4]\nrangeFreqQuery.query(0, 11, 33); // return 2. The value 33 occurs 2 times in the whole array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3925', '1679', '1', 'k = 2, n = 5', '25\n<strong>', '</strong>The 5 smallest 2-mirror numbers and their representations in base-2 are listed as follows:\n  base-10    base-2\n    1          1\n    3          11\n    5          101\n    7          111\n    9          1001\nTheir sum = 1 + 3 + 5 + 7 + 9 = 25.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3926', '1679', '2', 'k = 3, n = 7', '499\n<strong>', '</strong>The 7 smallest 3-mirror numbers are and their representations in base-3 are listed as follows:\n  base-10    base-3\n    1          1\n    2          2\n    4          11\n    8          22\n    121        11111\n    151        12121\n    212        21212\nTheir sum = 1 + 2 + 4 + 8 + 121 + 151 + 212 = 499.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3927', '1679', '3', 'k = 7, n = 17', '20379000', 'The 17 smallest 7-mirror numbers are:\n1, 2, 3, 4, 5, 6, 8, 121, 171, 242, 292, 16561, 65656, 2137312, 4602064, 6597956, 6958596');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3928', '1680', '1', 'words1 = [\"leetcode\",\"is\",\"amazing\",\"as\",\"is\"], words2 = [\"amazing\",\"leetcode\",\"is\"]', '2', '- \"leetcode\" appears exactly once in each of the two arrays. We count this string.\n- \"amazing\" appears exactly once in each of the two arrays. We count this string.\n- \"is\" appears in each of the two arrays, but there are 2 occurrences of it in words1. We do not count this string.\n- \"as\" appears once in words1, but does not appear in words2. We do not count this string.\nThus, there are 2 strings that appear exactly once in each of the two arrays.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3929', '1680', '2', 'words1 = [\"b\",\"bb\",\"bbb\"], words2 = [\"a\",\"aa\",\"aaa\"]', '0', 'There are no strings that appear in each of the two arrays.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3930', '1680', '3', 'words1 = [\"a\",\"ab\"], words2 = [\"a\",\"a\",\"a\",\"ab\"]', '1', 'The only string that appears exactly once in each of the two arrays is \"ab\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3931', '1681', '1', 'hamsters = \"H..H\"', '2', 'We place two food buckets at indices 1 and 2.\nIt can be shown that if we place only one food bucket, one of the hamsters will not be fed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3932', '1681', '2', 'hamsters = \".H.H.\"', '1', 'We place one food bucket at index 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3933', '1681', '3', 'hamsters = \".HHH.\"', '-1', 'If we place a food bucket at every empty index as shown, the hamster at index 2 will not be able to eat.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3934', '1682', '1', 'startPos = [1, 0], homePos = [2, 3], rowCosts = [5, 4, 3], colCosts = [8, 2, 6, 7]', '18', 'One optimal path is that:\nStarting from (1, 0)\n-&gt; It goes down to (<u><strong>2</strong></u>, 0). This move costs rowCosts[2] = 3.\n-&gt; It goes right to (2, <u><strong>1</strong></u>). This move costs colCosts[1] = 2.\n-&gt; It goes right to (2, <u><strong>2</strong></u>). This move costs colCosts[2] = 6.\n-&gt; It goes right to (2, <u><strong>3</strong></u>). This move costs colCosts[3] = 7.\nThe total cost is 3 + 2 + 6 + 7 = 18');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3935', '1682', '2', 'startPos = [0, 0], homePos = [0, 0], rowCosts = [5], colCosts = [26]', '0', 'The robot is already at its home. Since no moves occur, the total cost is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3936', '1683', '1', 'grid = [[0,1,1,0],[1,1,1,1]]', '2', 'The 2 possible pyramidal plots are shown in blue and red respectively.\nThere are no inverse pyramidal plots in this grid. \nHence total number of pyramidal and inverse pyramidal plots is 2 + 0 = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3937', '1683', '2', 'grid = [[1,1,1],[1,1,1]]', '2', 'The pyramidal plot is shown in blue, and the inverse pyramidal plot is shown in red. \nHence the total number of plots is 1 + 1 = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3938', '1683', '3', 'grid = [[1,1,1,1,0],[1,1,1,1,1],[1,1,1,1,1],[0,1,0,0,1]]', '13', 'There are 7 pyramidal plots, 3 of which are shown in the 2nd and 3rd figures.\nThere are 6 inverse pyramidal plots, 2 of which are shown in the last figure.\nThe total number of plots is 7 + 6 = 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3939', '1684', '1', 'nums = [1,2,5,2,3], target = 2', '[1,2]', 'After sorting, nums is [1,<u><strong>2</strong></u>,<u><strong>2</strong></u>,3,5].\nThe indices where nums[i] == 2 are 1 and 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3940', '1684', '2', 'nums = [1,2,5,2,3], target = 3', '[3]', 'After sorting, nums is [1,2,2,<u><strong>3</strong></u>,5].\nThe index where nums[i] == 3 is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3941', '1684', '3', 'nums = [1,2,5,2,3], target = 5', '[4]', 'After sorting, nums is [1,2,2,3,<u><strong>5</strong></u>].\nThe index where nums[i] == 5 is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3942', '1685', '1', 'nums = [7,4,3,9,1,8,5,2,6], k = 3', '[-1,-1,-1,5,4,4,-1,-1,-1]', '- avg[0], avg[1], and avg[2] are -1 because there are less than k elements <strong>before</strong> each index.\n- The sum of the subarray centered at index 3 with radius 3 is: 7 + 4 + 3 + 9 + 1 + 8 + 5 = 37.\n  Using <strong>integer division</strong>, avg[3] = 37 / 7 = 5.\n- For the subarray centered at index 4, avg[4] = (4 + 3 + 9 + 1 + 8 + 5 + 2) / 7 = 4.\n- For the subarray centered at index 5, avg[5] = (3 + 9 + 1 + 8 + 5 + 2 + 6) / 7 = 4.\n- avg[6], avg[7], and avg[8] are -1 because there are less than k elements <strong>after</strong> each index.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3943', '1685', '2', 'nums = [100000], k = 0', '[100000]', '- The sum of the subarray centered at index 0 with radius 0 is: 100000.\n  avg[0] = 100000 / 1 = 100000.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3944', '1685', '3', 'nums = [8], k = 100000', '[-1]', '- avg[0] is -1 because there are less than k elements before and after index 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3945', '1686', '1', 'nums = [2,<u><strong>10</strong></u>,7,5,4,<u><strong>1</strong></u>,8,6]', '5', 'The minimum element in the array is nums[5], which is 1.\nThe maximum element in the array is nums[1], which is 10.\nWe can remove both the minimum and maximum by removing 2 elements from the front and 3 elements from the back.\nThis results in 2 + 3 = 5 deletions, which is the minimum number possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3946', '1686', '2', 'nums = [0,<u><strong>-4</strong></u>,<u><strong>19</strong></u>,1,8,-2,-3,5]', '3', 'The minimum element in the array is nums[1], which is -4.\nThe maximum element in the array is nums[2], which is 19.\nWe can remove both the minimum and maximum by removing 3 elements from the front.\nThis results in only 3 deletions, which is the minimum number possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3947', '1686', '3', 'nums = [<u><strong>101</strong></u>]', '1', 'There is only one element in the array, which makes it both the minimum and maximum element.\nWe can remove it with 1 deletion.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3948', '1687', '2', 'n = 4, meetings = [[3,1,3],[1,2,2],[0,3,3]], firstPerson = 3', '[0,1,3]', 'At time 0, person 0 shares the secret with person 3.\nAt time 2, neither person 1 nor person 2 know the secret.\nAt time 3, person 3 shares the secret with person 0 and person 1.\nThus, people 0, 1, and 3 know the secret after all the meetings.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3949', '1687', '3', 'n = 5, meetings = [[3,4,2],[1,2,1],[2,3,1]], firstPerson = 1', '[0,1,2,3,4]', 'At time 0, person 0 shares the secret with person 1.\nAt time 1, person 1 shares the secret with person 2, and person 2 shares the secret with person 3.\nNote that person 2 can share the secret at the same time as receiving it.\nAt time 2, person 3 shares the secret with person 4.\nThus, people 0, 1, 2, 3, and 4 know the secret after all the meetings.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3950', '1688', '1', 'digits = [2,1,3,0]', '[102,120,130,132,210,230,302,310,312,320]', 'All the possible integers that follow the requirements are in the output array. \nNotice that there are no <strong>odd</strong> integers or integers with <strong>leading zeros</strong>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3951', '1688', '2', 'digits = [2,2,8,8,2]', '[222,228,282,288,822,828,882]', 'The same digit can be used as many times as it appears in digits. \nIn this example, the digit 8 is used twice each time in 288, 828, and 882.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3952', '1688', '3', 'digits = [3,7,5]', '[]', 'No <strong>even</strong> integers can be formed using the given digits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3953', '1689', '1', 'head = [1,3,4,7,1,2,6]', '[1,3,4,1,2,6]', 'The above figure represents the given linked list. The indices of the nodes are written below.\nSince n = 7, node 3 with value 7 is the middle node, which is marked in red.\nWe return the new list after removing this node.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3954', '1689', '2', 'head = [1,2,3,4]', '[1,2,4]', 'The above figure represents the given linked list.\nFor n = 4, node 2 with value 3 is the middle node, which is marked in red.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3955', '1689', '3', 'head = [2,1]', '[2]', 'The above figure represents the given linked list.\nFor n = 2, node 1 with value 1 is the middle node, which is marked in red.\nNode 0 with value 2 is the only node remaining after removing node 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3956', '1691', '1', 'pairs = [[5,1],[4,5],[11,9],[9,4]]', '[[11,9],[9,4],[4,5],[5,1]]\n<strong>', '</strong>This is a valid arrangement since end<sub>i-1</sub> always equals start<sub>i</sub>.\nend<sub>0</sub> = 9 == 9 = start<sub>1</sub> \nend<sub>1</sub> = 4 == 4 = start<sub>2</sub>\nend<sub>2</sub> = 5 == 5 = start<sub>3</sub>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3957', '1691', '2', 'pairs = [[1,3],[3,2],[2,1]]', '[[1,3],[3,2],[2,1]]', 'This is a valid arrangement since end<sub>i-1</sub> always equals start<sub>i</sub>.\nend<sub>0</sub> = 3 == 3 = start<sub>1</sub>\nend<sub>1</sub> = 2 == 2 = start<sub>2</sub>\nThe arrangements [[2,1],[1,3],[3,2]] and [[3,2],[2,1],[1,3]] are also valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3958', '1691', '3', 'pairs = [[1,2],[1,3],[2,1]]', '[[1,2],[2,1],[1,3]]', 'This is a valid arrangement since end<sub>i-1</sub> always equals start<sub>i</sub>.\nend<sub>0</sub> = 2 == 2 = start<sub>1</sub>\nend<sub>1</sub> = 1 == 1 = start<sub>2</sub>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3959', '1692', '1', 'nums = [2,1,3,3], k = 2', '[3,3]', 'The subsequence has the largest sum of 3 + 3 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3960', '1692', '2', 'nums = [-1,-2,3,4], k = 3', '[-1,3,4]', 'The subsequence has the largest sum of -1 + 3 + 4 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3961', '1692', '3', 'nums = [3,4,3,3], k = 2', '[3,4]', 'The subsequence has the largest sum of 3 + 4 = 7. \nAnother possible subsequence is [4, 3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3962', '1693', '1', 'security = [5,3,3,3,5,6,2], time = 2', '[2,3]', 'On day 2, we have security[0] &gt;= security[1] &gt;= security[2] &lt;= security[3] &lt;= security[4].\nOn day 3, we have security[1] &gt;= security[2] &gt;= security[3] &lt;= security[4] &lt;= security[5].\nNo other days satisfy this condition, so days 2 and 3 are the only good days to rob the bank.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3963', '1693', '2', 'security = [1,1,1,1,1], time = 0', '[0,1,2,3,4]', 'Since time equals 0, every day is a good day to rob the bank, so return every day.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3964', '1693', '3', 'security = [1,2,3,4,5,6], time = 2', '[]', 'No day has 2 days before it that have a non-increasing number of guards.\nThus, no day is a good day to rob the bank, so return an empty list.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3965', '1694', '1', 'bombs = [[2,1,3],[6,1,4]]', '2', 'The above figure shows the positions and ranges of the 2 bombs.\nIf we detonate the left bomb, the right bomb will not be affected.\nBut if we detonate the right bomb, both bombs will be detonated.\nSo the maximum bombs that can be detonated is max(1, 2) = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3966', '1694', '2', 'bombs = [[1,1,5],[10,10,5]]', '1\n<strong>', '</strong>Detonating either bomb will not detonate the other bomb, so the maximum number of bombs that can be detonated is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3967', '1694', '3', 'bombs = [[1,2,3],[2,3,1],[3,4,2],[4,5,3],[5,6,4]]', '5', 'The best bomb to detonate is bomb 0 because:\n- Bomb 0 detonates bombs 1 and 2. The red circle denotes the range of bomb 0.\n- Bomb 2 detonates bomb 3. The blue circle denotes the range of bomb 2.\n- Bomb 3 detonates bomb 4. The green circle denotes the range of bomb 3.\nThus all 5 bombs are detonated.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3968', '1695', '1', '[\"SORTracker\", \"add\", \"add\", \"get\", \"add\", \"get\", \"add\", \"get\", \"add\", \"get\", \"add\", \"get\", \"get\"]\n[[], [\"bradford\", 2], [\"branford\", 3], [], [\"alps\", 2], [], [\"orland\", 2], [], [\"orlando\", 3], [], [\"alpine\", 2], [], []]', '[null, null, null, \"branford\", null, \"alps\", null, \"bradford\", null, \"bradford\", null, \"bradford\", \"orland\"]', 'SORTracker tracker = new SORTracker(); // Initialize the tracker system.\ntracker.add(\"bradford\", 2); // Add location with name=\"bradford\" and score=2 to the system.\ntracker.add(\"branford\", 3); // Add location with name=\"branford\" and score=3 to the system.\ntracker.get();              // The sorted locations, from best to worst, are: branford, bradford.\n                            // Note that branford precedes bradford due to its <strong>higher score</strong> (3 &gt; 2).\n                            // This is the 1<sup>st</sup> time get() is called, so return the best location: \"branford\".\ntracker.add(\"alps\", 2);     // Add location with name=\"alps\" and score=2 to the system.\ntracker.get();              // Sorted locations: branford, alps, bradford.\n                            // Note that alps precedes bradford even though they have the same score (2).\n                            // This is because \"alps\" is <strong>lexicographically smaller</strong> than \"bradford\".\n                            // Return the 2<sup>nd</sup> best location \"alps\", as it is the 2<sup>nd</sup> time get() is called.\ntracker.add(\"orland\", 2);   // Add location with name=\"orland\" and score=2 to the system.\ntracker.get();              // Sorted locations: branford, alps, bradford, orland.\n                            // Return \"bradford\", as it is the 3<sup>rd</sup> time get() is called.\ntracker.add(\"orlando\", 3);  // Add location with name=\"orlando\" and score=3 to the system.\ntracker.get();              // Sorted locations: branford, orlando, alps, bradford, orland.\n                            // Return \"bradford\".\ntracker.add(\"alpine\", 2);   // Add location with name=\"alpine\" and score=2 to the system.\ntracker.get();              // Sorted locations: branford, orlando, alpine, alps, bradford, orland.\n                            // Return \"bradford\".\ntracker.get();              // Sorted locations: branford, orlando, alpine, alps, bradford, orland.\n                            // Return \"orland\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3969', '1696', '1', 'rings = \"B0B6G0R6R0R6G9\"', '1', '- The rod labeled 0 holds 3 rings with all colors: red, green, and blue.\n- The rod labeled 6 holds 3 rings, but it only has red and blue.\n- The rod labeled 9 holds only a green ring.\nThus, the number of rods with all three colors is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3970', '1696', '2', 'rings = \"B0R0G0R9R0B0G0\"', '1', '- The rod labeled 0 holds 6 rings with all colors: red, green, and blue.\n- The rod labeled 9 holds only a red ring.\nThus, the number of rods with all three colors is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3971', '1696', '3', 'rings = \"G4\"', '0', 'Only one ring is given. Thus, no rods have all three colors.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3972', '1697', '1', 'nums = [1,2,3]', '4', 'The 6 subarrays of nums are the following:\n[1], range = largest - smallest = 1 - 1 = 0 \n[2], range = 2 - 2 = 0\n[3], range = 3 - 3 = 0\n[1,2], range = 2 - 1 = 1\n[2,3], range = 3 - 2 = 1\n[1,2,3], range = 3 - 1 = 2\nSo the sum of all ranges is 0 + 0 + 0 + 1 + 1 + 2 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3973', '1697', '2', 'nums = [1,3,3]', '4', 'The 6 subarrays of nums are the following:\n[1], range = largest - smallest = 1 - 1 = 0\n[3], range = 3 - 3 = 0\n[3], range = 3 - 3 = 0\n[1,3], range = 3 - 1 = 2\n[3,3], range = 3 - 3 = 0\n[1,3,3], range = 3 - 1 = 2\nSo the sum of all ranges is 0 + 0 + 0 + 2 + 0 + 2 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3974', '1697', '3', 'nums = [4,-2,-3,4,1]', '59', 'The sum of all subarray ranges of nums is 59.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3975', '1698', '1', 'plants = [2,2,3,3], capacityA = 5, capacityB = 5', '1', '- Initially, Alice and Bob have 5 units of water each in their watering cans.\n- Alice waters plant 0, Bob waters plant 3.\n- Alice and Bob now have 3 units and 2 units of water respectively.\n- Alice has enough water for plant 1, so she waters it. Bob does not have enough water for plant 2, so he refills his can then waters it.\nSo, the total number of times they have to refill to water all the plants is 0 + 0 + 1 + 0 = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3976', '1698', '2', 'plants = [2,2,3,3], capacityA = 3, capacityB = 4', '2', '- Initially, Alice and Bob have 3 units and 4 units of water in their watering cans respectively.\n- Alice waters plant 0, Bob waters plant 3.\n- Alice and Bob now have 1 unit of water each, and need to water plants 1 and 2 respectively.\n- Since neither of them have enough water for their current plants, they refill their cans and then water the plants.\nSo, the total number of times they have to refill to water all the plants is 0 + 1 + 1 + 0 = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3977', '1698', '3', 'plants = [5], capacityA = 10, capacityB = 8', '0', '- There is only one plant.\n- Alice\'s watering can has 10 units of water, whereas Bob\'s can has 8 units. Since Alice has more water in her can, she waters this plant.\nSo, the total number of times they have to refill is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3978', '1699', '1', 'fruits = [[2,8],[6,3],[8,6]], startPos = 5, k = 4', '9', 'The optimal way is to:\n- Move right to position 6 and harvest 3 fruits\n- Move right to position 8 and harvest 6 fruits\nYou moved 3 steps and harvested 3 + 6 = 9 fruits in total.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3979', '1699', '2', 'fruits = [[0,9],[4,1],[5,7],[6,2],[7,4],[10,9]], startPos = 5, k = 4', '14', 'You can move at most k = 4 steps, so you cannot reach position 0 nor 10.\nThe optimal way is to:\n- Harvest the 7 fruits at the starting position 5\n- Move left to position 4 and harvest 1 fruit\n- Move right to position 6 and harvest 2 fruits\n- Move right to position 7 and harvest 4 fruits\nYou moved 1 + 3 = 4 steps and harvested 7 + 1 + 2 + 4 = 14 fruits in total.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3980', '1699', '3', 'fruits = [[0,3],[6,4],[8,5]], startPos = 3, k = 2', '0', 'You can move at most k = 2 steps and cannot reach any position with fruits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3981', '1700', '1', 'words = [\"abc\",\"car\",\"ada\",\"racecar\",\"cool\"]', '\"ada\"', 'The first string that is palindromic is \"ada\".\nNote that \"racecar\" is also palindromic, but it is not the first.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3982', '1700', '2', 'words = [\"notapalindrome\",\"racecar\"]', '\"racecar\"', 'The first and only string that is palindromic is \"racecar\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3983', '1700', '3', 'words = [\"def\",\"ghi\"]', '\"\"', 'There are no palindromic strings, so the empty string is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3984', '1701', '1', 's = \"LeetcodeHelpsMeLearn\", spaces = [8,13,15]', '\"Leetcode Helps Me Learn\"', 'The indices 8, 13, and 15 correspond to the underlined characters in \"Leetcode<u><strong>H</strong></u>elps<u><strong>M</strong></u>e<u><strong>L</strong></u>earn\".\nWe then place spaces before those characters.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3985', '1701', '2', 's = \"icodeinpython\", spaces = [1,5,7,9]', '\"i code in py thon\"', 'The indices 1, 5, 7, and 9 correspond to the underlined characters in \"i<u><strong>c</strong></u>ode<u><strong>i</strong></u>n<u><strong>p</strong></u>y<u><strong>t</strong></u>hon\".\nWe then place spaces before those characters.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3986', '1701', '3', 's = \"spacing\", spaces = [0,1,2,3,4,5,6]', '\" s p a c i n g\"', 'We are also able to place spaces before the first character of the string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3987', '1702', '1', 'prices = [3,2,1,4]', '7', 'There are 7 smooth descent periods:\n[3], [2], [1], [4], [3,2], [2,1], and [3,2,1]\nNote that a period with one day is a smooth descent period by the definition.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3988', '1702', '3', 'prices = [1]', '1', 'There is 1 smooth descent period: [1]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3989', '1703', '1', 'arr = [5,4,3,2,1], k = 1', '4\n<strong>', '</strong>For k = 1, the resultant array has to be non-decreasing.\nSome of the K-increasing arrays that can be formed are [5,<u><strong>6</strong></u>,<u><strong>7</strong></u>,<u><strong>8</strong></u>,<u><strong>9</strong></u>], [<u><strong>1</strong></u>,<u><strong>1</strong></u>,<u><strong>1</strong></u>,<u><strong>1</strong></u>,1], [<u><strong>2</strong></u>,<u><strong>2</strong></u>,3,<u><strong>4</strong></u>,<u><strong>4</strong></u>]. All of them require 4 operations.\nIt is suboptimal to change the array to, for example, [<u><strong>6</strong></u>,<u><strong>7</strong></u>,<u><strong>8</strong></u>,<u><strong>9</strong></u>,<u><strong>10</strong></u>] because it would take 5 operations.\nIt can be shown that we cannot make the array K-increasing in less than 4 operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3990', '1703', '2', 'arr = [4,1,5,2,6,2], k = 2', '0', 'This is the same example as the one in the problem description.\nHere, for every index i where 2 &lt;= i &lt;= 5, arr[i-2] &lt;=<b> </b>arr[i].\nSince the given array is already K-increasing, we do not need to perform any operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3991', '1703', '3', 'arr = [4,1,5,2,6,2], k = 3', '2', 'Indices 3 and 5 are the only ones not satisfying arr[i-3] &lt;= arr[i] for 3 &lt;= i &lt;= 5.\nOne of the ways we can make the array K-increasing is by changing arr[3] to 4 and arr[5] to 5.\nThe array will now be [4,1,5,<u><strong>4</strong></u>,6,<u><strong>5</strong></u>].\nNote that there can be other ways to make the array K-increasing, but none of them require less than 2 operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3992', '1704', '1', 'sentences = [\"alice and bob love leetcode\", \"i think so too\", <u>\"this is great thanks very much\"</u>]', '6', '- The first sentence, \"alice and bob love leetcode\", has 5 words in total.\n- The second sentence, \"i think so too\", has 4 words in total.\n- The third sentence, \"this is great thanks very much\", has 6 words in total.\nThus, the maximum number of words in a single sentence comes from the third sentence, which has 6 words.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3993', '1704', '2', 'sentences = [\"please wait\", <u>\"continue to fight\"</u>, <u>\"continue to win\"</u>]', '3', 'It is possible that multiple sentences contain the same number of words. \nIn this example, the second and third sentences (underlined) have the same number of words.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3994', '1705', '1', 'recipes = [\"bread\"], ingredients = [[\"yeast\",\"flour\"]], supplies = [\"yeast\",\"flour\",\"corn\"]', '[\"bread\"]', 'We can create \"bread\" since we have the ingredients \"yeast\" and \"flour\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3995', '1705', '2', 'recipes = [\"bread\",\"sandwich\"], ingredients = [[\"yeast\",\"flour\"],[\"bread\",\"meat\"]], supplies = [\"yeast\",\"flour\",\"meat\"]', '[\"bread\",\"sandwich\"]', 'We can create \"bread\" since we have the ingredients \"yeast\" and \"flour\".\nWe can create \"sandwich\" since we have the ingredient \"meat\" and can create the ingredient \"bread\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3996', '1705', '3', 'recipes = [\"bread\",\"sandwich\",\"burger\"], ingredients = [[\"yeast\",\"flour\"],[\"bread\",\"meat\"],[\"sandwich\",\"meat\",\"bread\"]], supplies = [\"yeast\",\"flour\",\"meat\"]', '[\"bread\",\"sandwich\",\"burger\"]', 'We can create \"bread\" since we have the ingredients \"yeast\" and \"flour\".\nWe can create \"sandwich\" since we have the ingredient \"meat\" and can create the ingredient \"bread\".\nWe can create \"burger\" since we have the ingredient \"meat\" and can create the ingredients \"bread\" and \"sandwich\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3997', '1706', '1', 's = \"))()))\", locked = \"010100\"', 'true', 'locked[1] == \'1\' and locked[3] == \'1\', so we cannot change s[1] or s[3].\nWe change s[0] and s[4] to \'(\' while leaving s[2] and s[5] unchanged to make s valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3998', '1706', '2', 's = \"()()\", locked = \"0000\"', 'true', 'We do not need to make any changes because s is already valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('3999', '1706', '3', 's = \")\", locked = \"0\"', 'false', 'locked permits us to change s[0]. \nChanging s[0] to either \'(\' or \')\' will not make s valid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4000', '1707', '1', 'left = 1, right = 4', '\"24e0\"', 'The product is 1 × 2 × 3 × 4 = 24.\nThere are no trailing zeros, so 24 remains the same. The abbreviation will end with \"e0\".\nSince the number of digits is 2, which is less than 10, we do not have to abbreviate it further.\nThus, the final representation is \"24e0\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4001', '1707', '2', 'left = 2, right = 11', '\"399168e2\"', 'The product is 39916800.\nThere are 2 trailing zeros, which we remove to get 399168. The abbreviation will end with \"e2\".\nThe number of digits after removing the trailing zeros is 6, so we do not abbreviate it further.\nHence, the abbreviated product is \"399168e2\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4002', '1707', '3', 'left = 371, right = 375', '\"7219856259e3\"', 'The product is 7219856259000.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4003', '1708', '1', 'num = 526', 'true', 'Reverse num to get 625, then reverse 625 to get 526, which equals num.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4004', '1708', '2', 'num = 1800', 'false', 'Reverse num to get 81, then reverse 81 to get 18, which does not equal num.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4005', '1708', '3', 'num = 0', 'true', 'Reverse num to get 0, then reverse 0 to get 0, which equals num.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4006', '1709', '1', 'n = 3, startPos = [0,1], s = \"RRDDLU\"', '[1,5,4,3,1,0]', 'Starting from startPos and beginning execution from the i<sup>th</sup> instruction:\n- 0<sup>th</sup>: \"<u><strong>R</strong></u>RDDLU\". Only one instruction \"R\" can be executed before it moves off the grid.\n- 1<sup>st</sup>:  \"<u><strong>RDDLU</strong></u>\". All five instructions can be executed while it stays in the grid and ends at (1, 1).\n- 2<sup>nd</sup>:   \"<u><strong>DDLU</strong></u>\". All four instructions can be executed while it stays in the grid and ends at (1, 0).\n- 3<sup>rd</sup>:    \"<u><strong>DLU</strong></u>\". All three instructions can be executed while it stays in the grid and ends at (0, 0).\n- 4<sup>th</sup>:     \"<u><strong>L</strong></u>U\". Only one instruction \"L\" can be executed before it moves off the grid.\n- 5<sup>th</sup>:      \"U\". If moving up, it would move off the grid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4007', '1709', '2', 'n = 2, startPos = [1,1], s = \"LURD\"', '[4,1,0,0]', '- 0<sup>th</sup>: \"<u><strong>LURD</strong></u>\".\n- 1<sup>st</sup>:  \"<u><strong>U</strong></u>RD\".\n- 2<sup>nd</sup>:   \"RD\".\n- 3<sup>rd</sup>:    \"D\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4008', '1709', '3', 'n = 1, startPos = [0,0], s = \"LRUD\"', '[0,0,0,0]', 'No matter which instruction the robot begins execution from, it would move off the grid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4009', '1710', '1', 'arr = [2,1,3,1,2,3,3]', '[4,2,7,2,4,4,5]', '- Index 0: Another 2 is found at index 4. |0 - 4| = 4\n- Index 1: Another 1 is found at index 3. |1 - 3| = 2\n- Index 2: Two more 3s are found at indices 5 and 6. |2 - 5| + |2 - 6| = 7\n- Index 3: Another 1 is found at index 1. |3 - 1| = 2\n- Index 4: Another 2 is found at index 0. |4 - 0| = 4\n- Index 5: Two more 3s are found at indices 2 and 6. |5 - 2| + |5 - 6| = 4\n- Index 6: Two more 3s are found at indices 2 and 5. |6 - 2| + |6 - 5| = 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4010', '1710', '2', 'arr = [10,5,10,10]', '[5,0,3,4]', '- Index 0: Two more 10s are found at indices 2 and 3. |0 - 2| + |0 - 3| = 5\n- Index 1: There is only one 5 in the array, so its sum of intervals to identical elements is 0.\n- Index 2: Two more 10s are found at indices 0 and 3. |2 - 0| + |2 - 3| = 3\n- Index 3: Two more 10s are found at indices 0 and 2. |3 - 0| + |3 - 2| = 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4011', '1711', '1', 'nums = [2,10,6,4,8,12]', '[3,7,11]', 'If arr = [3,7,11] and k = 1, we get lower = [2,6,10] and higher = [4,8,12].\nCombining lower and higher gives us [2,6,10,4,8,12], which is a permutation of nums.\nAnother valid possibility is that arr = [5,7,9] and k = 3. In that case, lower = [2,4,6] and higher = [8,10,12].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4012', '1711', '2', 'nums = [1,1,3,3]', '[2,2]', 'If arr = [2,2] and k = 1, we get lower = [1,1] and higher = [3,3].\nCombining lower and higher gives us [1,1,3,3], which is equal to nums.\nNote that arr cannot be [1,3] because in that case, the only possible way to obtain [1,1,3,3] is with k = 0.\nThis is invalid since k must be positive.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4013', '1711', '3', 'nums = [5,435]', '[220]', 'The only possible combination is arr = [220] and k = 215. Using them, we get lower = [5] and higher = [435].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4014', '1712', '1', 's = \"aaabbb\"', 'true', 'The \'a\'s are at indices 0, 1, and 2, while the \'b\'s are at indices 3, 4, and 5.\nHence, every \'a\' appears before every \'b\' and we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4015', '1712', '2', 's = \"abab\"', 'false', 'There is an \'a\' at index 2 and a \'b\' at index 1.\nHence, not every \'a\' appears before every \'b\' and we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4016', '1712', '3', 's = \"bbb\"', 'true', 'There are no \'a\'s, hence, every \'a\' appears before every \'b\' and we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4017', '1713', '1', 'bank = [\"011001\",\"000000\",\"010100\",\"001000\"]', '8', 'Between each of the following device pairs, there is one beam. In total, there are 8 beams:\n * bank[0][1] -- bank[2][1]\n * bank[0][1] -- bank[2][3]\n * bank[0][2] -- bank[2][1]\n * bank[0][2] -- bank[2][3]\n * bank[0][5] -- bank[2][1]\n * bank[0][5] -- bank[2][3]\n * bank[2][1] -- bank[3][2]\n * bank[2][3] -- bank[3][2]\nNote that there is no beam between any device on the 0<sup>th</sup> row with any on the 3<sup>rd</sup> row.\nThis is because the 2<sup>nd</sup> row contains security devices, which breaks the second condition.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4018', '1713', '2', 'bank = [\"000\",\"111\",\"000\"]', '0', 'There does not exist two devices located on two different rows.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4019', '1715', '1', 'favorite = [2,2,1,2]', '3', 'The above figure shows how the company can invite employees 0, 1, and 2, and seat them at the round table.\nAll employees cannot be invited because employee 2 cannot sit beside employees 0, 1, and 3, simultaneously.\nNote that the company can also invite employees 1, 2, and 3, and give them their desired seats.\nThe maximum number of employees that can be invited to the meeting is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4020', '1715', '2', 'favorite = [1,2,0]', '3', 'Each employee is the favorite person of at least one other employee, and the only way the company can invite them is if they invite every employee.\nThe seating arrangement will be the same as that in the figure given in example 1:\n- Employee 0 will sit between employees 2 and 1.\n- Employee 1 will sit between employees 0 and 2.\n- Employee 2 will sit between employees 1 and 0.\nThe maximum number of employees that can be invited to the meeting is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4021', '1715', '3', 'favorite = [3,0,1,4,1]', '4', 'The above figure shows how the company will invite employees 0, 1, 3, and 4, and seat them at the round table.\nEmployee 2 cannot be invited because the two spots next to their favorite employee 1 are taken.\nSo the company leaves them out of the meeting.\nThe maximum number of employees that can be invited to the meeting is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4022', '1716', '1', 'title = \"capiTalIze tHe titLe\"', '\"Capitalize The Title\"', 'Since all the words have a length of at least 3, the first letter of each word is uppercase, and the remaining letters are lowercase.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4023', '1716', '2', 'title = \"First leTTeR of EACH Word\"', '\"First Letter of Each Word\"', 'The word \"of\" has length 2, so it is all lowercase.\nThe remaining words have a length of at least 3, so the first letter of each remaining word is uppercase, and the remaining letters are lowercase.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4024', '1716', '3', 'title = \"i lOve leetcode\"', '\"i Love Leetcode\"', 'The word \"i\" has length 1, so it is lowercase.\nThe remaining words have a length of at least 3, so the first letter of each remaining word is uppercase, and the remaining letters are lowercase.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4025', '1717', '1', 'head = [5,4,2,1]', '6', 'Nodes 0 and 1 are the twins of nodes 3 and 2, respectively. All have twin sum = 6.\nThere are no other nodes with twins in the linked list.\nThus, the maximum twin sum of the linked list is 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4026', '1717', '2', 'head = [4,2,2,3]', '7', 'The nodes with twins present in this linked list are:\n- Node 0 is the twin of node 3 having a twin sum of 4 + 3 = 7.\n- Node 1 is the twin of node 2 having a twin sum of 2 + 2 = 4.\nThus, the maximum twin sum of the linked list is max(7, 4) = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4027', '1717', '3', 'head = [1,100000]', '100001', 'There is only one node with a twin in the linked list having twin sum of 1 + 100000 = 100001.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4028', '1718', '1', 'words = [\"lc\",\"cl\",\"gg\"]', '6', 'One longest palindrome is \"lc\" + \"gg\" + \"cl\" = \"lcggcl\", of length 6.\nNote that \"clgglc\" is another longest palindrome that can be created.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4029', '1718', '2', 'words = [\"ab\",\"ty\",\"yt\",\"lc\",\"cl\",\"ab\"]', '8', 'One longest palindrome is \"ty\" + \"lc\" + \"cl\" + \"yt\" = \"tylcclyt\", of length 8.\nNote that \"lcyttycl\" is another longest palindrome that can be created.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4030', '1718', '3', 'words = [\"cc\",\"ll\",\"xx\"]', '2', 'One longest palindrome is \"cc\", of length 2.\nNote that \"ll\" is another longest palindrome that can be created, and so is \"xx\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4031', '1719', '1', 'grid = [[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,0,0,0],[1,0,0,0]], stampHeight = 4, stampWidth = 3', 'true', 'We have two overlapping stamps (labeled 1 and 2 in the image) that are able to cover all the empty cells.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4032', '1719', '2', 'grid = [[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]], stampHeight = 2, stampWidth = 2', 'false', 'There is no way to fit the stamps onto all the empty cells without the stamps going outside the grid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4033', '1720', '1', 'matrix = [[1,2,3],[3,1,2],[2,3,1]]', 'true', 'In this case, n = 3, and every row and column contains the numbers 1, 2, and 3.\nHence, we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4034', '1720', '2', 'matrix = [[1,1,1],[1,2,3],[1,2,3]]', 'false', 'In this case, n = 3, but the first row and the first column do not contain the numbers 2 or 3.\nHence, we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4035', '1721', '1', 'nums = [0,1,0,1,1,0,0]', '1', 'Here are a few of the ways to group all the 1\'s together:\n[0,<u>0</u>,<u>1</u>,1,1,0,0] using 1 swap.\n[0,1,<u>1</u>,1,<u>0</u>,0,0] using 1 swap.\n[1,1,0,0,0,0,1] using 2 swaps (using the circular property of the array).\nThere is no way to group all 1\'s together with 0 swaps.\nThus, the minimum number of swaps required is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4036', '1721', '2', 'nums = [0,1,1,1,0,0,1,1,0]', '2', 'Here are a few of the ways to group all the 1\'s together:\n[1,1,1,0,0,0,0,1,1] using 2 swaps (using the circular property of the array).\n[1,1,1,1,1,0,0,0,0] using 2 swaps.\nThere is no way to group all 1\'s together with 0 or 1 swaps.\nThus, the minimum number of swaps required is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4037', '1721', '3', 'nums = [1,1,0,0,1]', '0', 'All the 1\'s are already grouped together due to the circular property of the array.\nThus, the minimum number of swaps required is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4038', '1722', '1', 'startWords = [\"ant\",\"act\",\"tack\"], targetWords = [\"tack\",\"act\",\"acti\"]', '2', '- In order to form targetWords[0] = \"tack\", we use startWords[1] = \"act\", append \'k\' to it, and rearrange \"actk\" to \"tack\".\n- There is no string in startWords that can be used to obtain targetWords[1] = \"act\".\n  Note that \"act\" does exist in startWords, but we <strong>must</strong> append one letter to the string before rearranging it.\n- In order to form targetWords[2] = \"acti\", we use startWords[1] = \"act\", append \'i\' to it, and rearrange \"acti\" to \"acti\" itself.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4039', '1722', '2', 'startWords = [\"ab\",\"a\"], targetWords = [\"abc\",\"abcd\"]', '1', '- In order to form targetWords[0] = \"abc\", we use startWords[0] = \"ab\", add \'c\' to it, and rearrange it to \"abc\".\n- There is no string in startWords that can be used to obtain targetWords[1] = \"abcd\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4040', '1723', '1', 'plantTime = [1,4,3], growTime = [2,3,1]', '9', 'The grayed out pots represent planting days, colored pots represent growing days, and the flower represents the day it blooms.\nOne optimal way is:\nOn day 0, plant the 0<sup>th</sup> seed. The seed grows for 2 full days and blooms on day 3.\nOn days 1, 2, 3, and 4, plant the 1<sup>st</sup> seed. The seed grows for 3 full days and blooms on day 8.\nOn days 5, 6, and 7, plant the 2<sup>nd</sup> seed. The seed grows for 1 full day and blooms on day 9.\nThus, on day 9, all the seeds are blooming.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4041', '1723', '2', 'plantTime = [1,2,3,2], growTime = [2,1,2,1]', '9', 'The grayed out pots represent planting days, colored pots represent growing days, and the flower represents the day it blooms.\nOne optimal way is:\nOn day 1, plant the 0<sup>th</sup> seed. The seed grows for 2 full days and blooms on day 4.\nOn days 0 and 3, plant the 1<sup>st</sup> seed. The seed grows for 1 full day and blooms on day 5.\nOn days 2, 4, and 5, plant the 2<sup>nd</sup> seed. The seed grows for 2 full days and blooms on day 8.\nOn days 6 and 7, plant the 3<sup>rd</sup> seed. The seed grows for 1 full day and blooms on day 9.\nThus, on day 9, all the seeds are blooming.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4042', '1723', '3', 'plantTime = [1], growTime = [1]', '2', 'On day 0, plant the 0<sup>th</sup> seed. The seed grows for 1 full day and blooms on day 2.\nThus, on day 2, all the seeds are blooming.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4043', '1724', '1', 's = \"abcdefghi\", k = 3, fill = \"x\"', '[\"abc\",\"def\",\"ghi\"]', 'The first 3 characters \"abc\" form the first group.\nThe next 3 characters \"def\" form the second group.\nThe last 3 characters \"ghi\" form the third group.\nSince all groups can be completely filled by characters from the string, we do not need to use fill.\nThus, the groups formed are \"abc\", \"def\", and \"ghi\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4044', '1724', '2', 's = \"abcdefghij\", k = 3, fill = \"x\"', '[\"abc\",\"def\",\"ghi\",\"jxx\"]', 'Similar to the previous example, we are forming the first three groups \"abc\", \"def\", and \"ghi\".\nFor the last group, we can only use the character \'j\' from the string. To complete this group, we add \'x\' twice.\nThus, the 4 groups formed are \"abc\", \"def\", \"ghi\", and \"jxx\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4045', '1725', '1', 'target = 5, maxDoubles = 0', '4', 'Keep incrementing by 1 until you reach target.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4046', '1725', '2', 'target = 19, maxDoubles = 2', '7', 'Initially, x = 1\nIncrement 3 times so x = 4\nDouble once so x = 8\nIncrement once so x = 9\nDouble again so x = 18\nIncrement once so x = 19');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4047', '1725', '3', 'target = 10, maxDoubles = 4', '4', '<b> </b>Initially, x = 1\nIncrement once so x = 2\nDouble once so x = 4\nIncrement once so x = 5\nDouble again so x = 10');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4048', '1726', '1', 'questions = [[3,2],[4,3],[4,4],[2,5]]', '5', 'The maximum points can be earned by solving questions 0 and 3.\n- Solve question 0: Earn 3 points, will be unable to solve the next 2 questions\n- Unable to solve questions 1 and 2\n- Solve question 3: Earn 2 points\nTotal points earned: 3 + 2 = 5. There is no other way to earn 5 or more points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4049', '1726', '2', 'questions = [[1,1],[2,2],[3,3],[4,4],[5,5]]', '7', 'The maximum points can be earned by solving questions 1 and 4.\n- Skip question 0\n- Solve question 1: Earn 2 points, will be unable to solve the next 2 questions\n- Unable to solve questions 2 and 3\n- Solve question 4: Earn 5 points\nTotal points earned: 2 + 5 = 7. There is no other way to earn 7 or more points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4050', '1727', '1', 'n = 2, batteries = [3,3,3]', '4', 'Initially, insert battery 0 into the first computer and battery 1 into the second computer.\nAfter two minutes, remove battery 1 from the second computer and insert battery 2 instead. Note that battery 1 can still run for one minute.\nAt the end of the third minute, battery 0 is drained, and you need to remove it from the first computer and insert battery 1 instead.\nBy the end of the fourth minute, battery 1 is also drained, and the first computer is no longer running.\nWe can run the two computers simultaneously for at most 4 minutes, so we return 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4051', '1727', '2', 'n = 2, batteries = [1,1,1,1]', '2', 'Initially, insert battery 0 into the first computer and battery 2 into the second computer. \nAfter one minute, battery 0 and battery 2 are drained so you need to remove them and insert battery 1 into the first computer and battery 3 into the second computer. \nAfter another minute, battery 1 and battery 3 are also drained so the first and second computers are no longer running.\nWe can run the two computers simultaneously for at most 2 minutes, so we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4052', '1728', '1', 'cost = [1,2,3]', '5', 'We buy the candies with costs 2 and 3, and take the candy with cost 1 for free.\nThe total cost of buying all candies is 2 + 3 = 5. This is the <strong>only</strong> way we can buy the candies.\nNote that we cannot buy candies with costs 1 and 3, and then take the candy with cost 2 for free.\nThe cost of the free candy has to be less than or equal to the minimum cost of the purchased candies.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4053', '1728', '2', 'cost = [6,5,7,9,2,2]', '23', 'The way in which we can get the minimum cost is described below:\n- Buy candies with costs 9 and 7\n- Take the candy with cost 6 for free\n- We buy candies with costs 5 and 2\n- Take the last remaining candy with cost 2 for free\nHence, the minimum cost to buy all candies is 9 + 7 + 5 + 2 = 23.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4054', '1728', '3', 'cost = [5,5]', '10', 'Since there are only 2 candies, we buy both of them. There is not a third candy we can take for free.\nHence, the minimum cost to buy all candies is 5 + 5 = 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4055', '1729', '1', 'differences = [1,-3,4], lower = 1, upper = 6', '2', 'The possible hidden sequences are:\n- [3, 4, 1, 5]\n- [4, 5, 2, 6]\nThus, we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4056', '1729', '2', 'differences = [3,-4,5,1,-2], lower = -4, upper = 5', '4', 'The possible hidden sequences are:\n- [-3, 0, -4, 1, 2, 0]\n- [-2, 1, -3, 2, 3, 1]\n- [-1, 2, -2, 3, 4, 2]\n- [0, 3, -1, 4, 5, 3]\nThus, we return 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4057', '1729', '3', 'differences = [4,-7,2], lower = 3, upper = 6', '0', 'There are no possible hidden sequences. Thus, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4058', '1730', '1', 'grid = [[1,2,0,1],[1,3,0,1],[0,2,5,1]], pricing = [2,5], start = [0,0], k = 3', '[[0,1],[1,1],[2,1]]', 'You start at (0,0).\nWith a price range of [2,5], we can take items from (0,1), (1,1), (2,1) and (2,2).\nThe ranks of these items are:\n- (0,1) with distance 1\n- (1,1) with distance 2\n- (2,1) with distance 3\n- (2,2) with distance 4\nThus, the 3 highest ranked items in the price range are (0,1), (1,1), and (2,1).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4059', '1730', '2', 'grid = [[1,2,0,1],[1,3,3,1],[0,2,5,1]], pricing = [2,3], start = [2,3], k = 2', '[[2,1],[1,2]]', 'You start at (2,3).\nWith a price range of [2,3], we can take items from (0,1), (1,1), (1,2) and (2,1).\nThe ranks of these items are:\n- (2,1) with distance 2, price 2\n- (1,2) with distance 2, price 3\n- (1,1) with distance 3\n- (0,1) with distance 4\nThus, the 2 highest ranked items in the price range are (2,1) and (1,2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4060', '1730', '3', 'grid = [[1,1,1],[0,0,1],[2,3,4]], pricing = [2,3], start = [0,0], k = 3', '[[2,1],[2,0]]', 'You start at (0,0).\nWith a price range of [2,3], we can take items from (2,0) and (2,1). \nThe ranks of these items are: \n- (2,1) with distance 5\n- (2,0) with distance 6\nThus, the 2 highest ranked items in the price range are (2,1) and (2,0). \nNote that k = 3 but there are only 2 reachable items within the price range.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4061', '1731', '1', 'corridor = \"SSPPSPS\"', '3', 'There are 3 different ways to divide the corridor.\nThe black bars in the above image indicate the two room dividers already installed.\nNote that in each of the ways, <strong>each</strong> section has exactly <strong>two</strong> seats.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4062', '1731', '2', 'corridor = \"PPSPSP\"', '1', 'There is only 1 way to divide the corridor, by not installing any additional dividers.\nInstalling any would create some section that does not have exactly two seats.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4063', '1731', '3', 'corridor = \"S\"', '0', 'There is no way to divide the corridor because there will always be a section that does not have exactly two seats.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4064', '1732', '1', 'nums = [11,7,2,15]', '2', 'The element 7 has the element 2 strictly smaller than it and the element 11 strictly greater than it.\nElement 11 has element 7 strictly smaller than it and element 15 strictly greater than it.\nIn total there are 2 elements having both a strictly smaller and a strictly greater element appear in <code>nums</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4065', '1732', '2', 'nums = [-3,3,3,90]', '2', 'The element 3 has the element -3 strictly smaller than it and the element 90 strictly greater than it.\nSince there are two elements with the value 3, in total there are 2 elements having both a strictly smaller and a strictly greater element appear in <code>nums</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4066', '1733', '1', 'nums = [3,1,-2,-5,2,-4]', '[3,-2,1,-5,2,-4]', 'The positive integers in nums are [3,1,2]. The negative integers are [-2,-5,-4].\nThe only possible way to rearrange them such that they satisfy all conditions is [3,-2,1,-5,2,-4].\nOther ways such as [1,-2,2,-5,3,-4], [3,1,2,-2,-5,-4], [-2,3,-5,1,-4,2] are incorrect because they do not satisfy one or more conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4067', '1733', '2', 'nums = [-1,1]', '[1,-1]', '1 is the only positive integer and -1 the only negative integer in nums.\nSo nums is rearranged to [1,-1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4068', '1734', '1', 'nums = [10,6,5,8]', '[10,8]', '- 10 is a lonely number since it appears exactly once and 9 and 11 does not appear in nums.\n- 8 is a lonely number since it appears exactly once and 7 and 9 does not appear in nums.\n- 5 is not a lonely number since 6 appears in nums and vice versa.\nHence, the lonely numbers in nums are [10, 8].\nNote that [8, 10] may also be returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4069', '1734', '2', 'nums = [1,3,5,3]', '[1,5]', '- 1 is a lonely number since it appears exactly once and 0 and 2 does not appear in nums.\n- 5 is a lonely number since it appears exactly once and 4 and 6 does not appear in nums.\n- 3 is not a lonely number since it appears twice.\nHence, the lonely numbers in nums are [1, 5].\nNote that [5, 1] may also be returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4070', '1735', '1', 'statements = [[2,1,2],[1,2,2],[2,0,2]]', '2', 'Each person makes a single statement.\n- Person 0 states that person 1 is good.\n- Person 1 states that person 0 is good.\n- Person 2 states that person 1 is bad.\nLet\'s take person 2 as the key.\n- Assuming that person 2 is a good person:\n    - Based on the statement made by person 2, person 1 is a bad person.\n    - Now we know for sure that person 1 is bad and person 2 is good.\n    - Based on the statement made by person 1, and since person 1 is bad, they could be:\n        - telling the truth. There will be a contradiction in this case and this assumption is invalid.\n        - lying. In this case, person 0 is also a bad person and lied in their statement.\n    - <strong>Following that person 2 is a good person, there will be only one good person in the group</strong>.\n- Assuming that person 2 is a bad person:\n    - Based on the statement made by person 2, and since person 2 is bad, they could be:\n        - telling the truth. Following this scenario, person 0 and 1 are both bad as explained before.\n            - <strong>Following that person 2 is bad but told the truth, there will be no good persons in the group</strong>.\n        - lying. In this case person 1 is a good person.\n            - Since person 1 is a good person, person 0 is also a good person.\n            - <strong>Following that person 2 is bad and lied, there will be two good persons in the group</strong>.\nWe can see that at most 2 persons are good in the best case, so we return 2.\nNote that there is more than one way to arrive at this conclusion.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4071', '1735', '2', 'statements = [[2,0],[0,2]]', '1', 'Each person makes a single statement.\n- Person 0 states that person 1 is bad.\n- Person 1 states that person 0 is bad.\nLet\'s take person 0 as the key.\n- Assuming that person 0 is a good person:\n    - Based on the statement made by person 0, person 1 is a bad person and was lying.\n    - <strong>Following that person 0 is a good person, there will be only one good person in the group</strong>.\n- Assuming that person 0 is a bad person:\n    - Based on the statement made by person 0, and since person 0 is bad, they could be:\n        - telling the truth. Following this scenario, person 0 and 1 are both bad.\n            - <strong>Following that person 0 is bad but told the truth, there will be no good persons in the group</strong>.\n        - lying. In this case person 1 is a good person.\n            - <strong>Following that person 0 is bad and lied, there will be only one good person in the group</strong>.\nWe can see that at most, one person is good in the best case, so we return 1.\nNote that there is more than one way to arrive at this conclusion.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4072', '1736', '1', 'nums = [5,3,6,1,12], original = 3', '24', '- 3 is found in nums. 3 is multiplied by 2 to obtain 6.\n- 6 is found in nums. 6 is multiplied by 2 to obtain 12.\n- 12 is found in nums. 12 is multiplied by 2 to obtain 24.\n- 24 is not found in nums. Thus, 24 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4073', '1736', '2', 'nums = [2,7,9], original = 4', '4', '- 4 is not found in nums. Thus, 4 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4074', '1737', '1', 'nums = [0,0,1,0]', '[2,4]', 'Division at index\n- 0: nums<sub>left</sub> is []. nums<sub>right</sub> is [0,0,<u><strong>1</strong></u>,0]. The score is 0 + 1 = 1.\n- 1: nums<sub>left</sub> is [<u><strong>0</strong></u>]. nums<sub>right</sub> is [0,<u><strong>1</strong></u>,0]. The score is 1 + 1 = 2.\n- 2: nums<sub>left</sub> is [<u><strong>0</strong></u>,<u><strong>0</strong></u>]. nums<sub>right</sub> is [<u><strong>1</strong></u>,0]. The score is 2 + 1 = 3.\n- 3: nums<sub>left</sub> is [<u><strong>0</strong></u>,<u><strong>0</strong></u>,1]. nums<sub>right</sub> is [0]. The score is 2 + 0 = 2.\n- 4: nums<sub>left</sub> is [<u><strong>0</strong></u>,<u><strong>0</strong></u>,1,<u><strong>0</strong></u>]. nums<sub>right</sub> is []. The score is 3 + 0 = 3.\nIndices 2 and 4 both have the highest possible division score 3.\nNote the answer [4,2] would also be accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4075', '1737', '2', 'nums = [0,0,0]', '[3]', 'Division at index\n- 0: nums<sub>left</sub> is []. nums<sub>right</sub> is [0,0,0]. The score is 0 + 0 = 0.\n- 1: nums<sub>left</sub> is [<u><strong>0</strong></u>]. nums<sub>right</sub> is [0,0]. The score is 1 + 0 = 1.\n- 2: nums<sub>left</sub> is [<u><strong>0</strong></u>,<u><strong>0</strong></u>]. nums<sub>right</sub> is [0]. The score is 2 + 0 = 2.\n- 3: nums<sub>left</sub> is [<u><strong>0</strong></u>,<u><strong>0</strong></u>,<u><strong>0</strong></u>]. nums<sub>right</sub> is []. The score is 3 + 0 = 3.\nOnly index 3 has the highest possible division score 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4076', '1737', '3', 'nums = [1,1]', '[0]', 'Division at index\n- 0: nums<sub>left</sub> is []. nums<sub>right</sub> is [<u><strong>1</strong></u>,<u><strong>1</strong></u>]. The score is 0 + 2 = 2.\n- 1: nums<sub>left</sub> is [1]. nums<sub>right</sub> is [<u><strong>1</strong></u>]. The score is 0 + 1 = 1.\n- 2: nums<sub>left</sub> is [1,1]. nums<sub>right</sub> is []. The score is 0 + 0 = 0.\nOnly index 0 has the highest possible division score 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4077', '1738', '1', 's = \"leetcode\", power = 7, modulo = 20, k = 2, hashValue = 0', '\"ee\"', 'The hash of \"ee\" can be computed to be hash(\"ee\", 7, 20) = (5 * 1 + 5 * 7) mod 20 = 40 mod 20 = 0. \n\"ee\" is the first substring of length 2 with hashValue 0. Hence, we return \"ee\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4078', '1738', '2', 's = \"fbxzaad\", power = 31, modulo = 100, k = 3, hashValue = 32', '\"fbx\"', 'The hash of \"fbx\" can be computed to be hash(\"fbx\", 31, 100) = (6 * 1 + 2 * 31 + 24 * 31<sup>2</sup>) mod 100 = 23132 mod 100 = 32. \nThe hash of \"bxz\" can be computed to be hash(\"bxz\", 31, 100) = (2 * 1 + 24 * 31 + 26 * 31<sup>2</sup>) mod 100 = 25732 mod 100 = 32. \n\"fbx\" is the first substring of length 3 with hashValue 32. Hence, we return \"fbx\".\nNote that \"bxz\" also has a hash of 32 but it appears later than \"fbx\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4079', '1739', '1', 'words = [\"a\",\"b\",\"ab\",\"cde\"]', '[2,3]', '- words[0] can be used to obtain words[1] (by replacing \'a\' with \'b\'), and words[2] (by adding \'b\'). So words[0] is connected to words[1] and words[2].\n- words[1] can be used to obtain words[0] (by replacing \'b\' with \'a\'), and words[2] (by adding \'a\'). So words[1] is connected to words[0] and words[2].\n- words[2] can be used to obtain words[0] (by deleting \'b\'), and words[1] (by deleting \'a\'). So words[2] is connected to words[0] and words[1].\n- words[3] is not connected to any string in words.\nThus, words can be divided into 2 groups [\"a\",\"b\",\"ab\"] and [\"cde\"]. The size of the largest group is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4080', '1739', '2', 'words = [\"a\",\"ab\",\"abc\"]', '[1,3]', '- words[0] is connected to words[1].\n- words[1] is connected to words[0] and words[2].\n- words[2] is connected to words[1].\nSince all strings are connected to each other, they should be grouped together.\nThus, the size of the largest group is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4081', '1740', '1', 'num = 2932', '52', 'Some possible pairs [new1, new2] are [29, 23], [223, 9], etc.\nThe minimum sum can be obtained by the pair [29, 23]: 29 + 23 = 52.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4082', '1740', '2', 'num = 4009', '13', 'Some possible pairs [new1, new2] are [0, 49], [490, 0], etc. \nThe minimum sum can be obtained by the pair [4, 9]: 4 + 9 = 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4083', '1741', '1', 'nums = [9,12,5,10,14,3,10], pivot = 10', '[9,5,3,10,10,12,14]', 'The elements 9, 5, and 3 are less than the pivot so they are on the left side of the array.\nThe elements 12 and 14 are greater than the pivot so they are on the right side of the array.\nThe relative ordering of the elements less than and greater than pivot is also maintained. [9, 5, 3] and [12, 14] are the respective orderings.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4084', '1741', '2', 'nums = [-3,4,3,2], pivot = 2', '[-3,2,4,3]', 'The element -3 is less than the pivot so it is on the left side of the array.\nThe elements 4 and 3 are greater than the pivot so they are on the right side of the array.\nThe relative ordering of the elements less than and greater than pivot is also maintained. [-3] and [4, 3] are the respective orderings.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4085', '1742', '1', 'startAt = 1, moveCost = 2, pushCost = 1, targetSeconds = 600', '6', 'The following are the possible ways to set the cooking time.\n- 1 0 0 0, interpreted as 10 minutes and 0 seconds.\n  The finger is already on digit 1, pushes 1 (with cost 1), moves to 0 (with cost 2), pushes 0 (with cost 1), pushes 0 (with cost 1), and pushes 0 (with cost 1).\n  The cost is: 1 + 2 + 1 + 1 + 1 = 6. This is the minimum cost.\n- 0 9 6 0, interpreted as 9 minutes and 60 seconds. That is also 600 seconds.\n  The finger moves to 0 (with cost 2), pushes 0 (with cost 1), moves to 9 (with cost 2), pushes 9 (with cost 1), moves to 6 (with cost 2), pushes 6 (with cost 1), moves to 0 (with cost 2), and pushes 0 (with cost 1).\n  The cost is: 2 + 1 + 2 + 1 + 2 + 1 + 2 + 1 = 12.\n- 9 6 0, normalized as 0960 and interpreted as 9 minutes and 60 seconds.\n  The finger moves to 9 (with cost 2), pushes 9 (with cost 1), moves to 6 (with cost 2), pushes 6 (with cost 1), moves to 0 (with cost 2), and pushes 0 (with cost 1).\n  The cost is: 2 + 1 + 2 + 1 + 2 + 1 = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4086', '1742', '2', 'startAt = 0, moveCost = 1, pushCost = 2, targetSeconds = 76', '6', 'The optimal way is to push two digits: 7 6, interpreted as 76 seconds.\nThe finger moves to 7 (with cost 1), pushes 7 (with cost 2), moves to 6 (with cost 1), and pushes 6 (with cost 2). The total cost is: 1 + 2 + 1 + 2 = 6\nNote other possible ways are 0076, 076, 0116, and 116, but none of them produces the minimum cost.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4087', '1743', '1', 'nums = [3,1,2]', '-1', 'Here, nums has 3 elements, so n = 1. \nThus we have to remove 1 element from nums and divide the array into two equal parts.\n- If we remove nums[0] = 3, the array will be [1,2]. The difference in sums of the two parts will be 1 - 2 = -1.\n- If we remove nums[1] = 1, the array will be [3,2]. The difference in sums of the two parts will be 3 - 2 = 1.\n- If we remove nums[2] = 2, the array will be [3,1]. The difference in sums of the two parts will be 3 - 1 = 2.\nThe minimum difference between sums of the two parts is min(-1,1,2) = -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4088', '1743', '2', 'nums = [7,9,5,8,1,3]', '1', 'Here n = 2. So we must remove 2 elements and divide the remaining array into two parts containing two elements each.\nIf we remove nums[2] = 5 and nums[3] = 8, the resultant array will be [7,9,1,3]. The difference in sums will be (7+9) - (1+3) = 12.\nTo obtain the minimum difference, we should remove nums[1] = 9 and nums[4] = 1. The resultant array becomes [7,5,8,3]. The difference in sums of the two parts is (7+5) - (8+3) = 1.\nIt can be shown that it is not possible to obtain a difference smaller than 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4089', '1744', '1', 'nums = [4,1,2,3]', '[2,3,4,1]', 'First, we sort the values present at odd indices (1 and 3) in non-increasing order.\nSo, nums changes from [4,<strong><u>1</u></strong>,2,<strong><u>3</u></strong>] to [4,<u><strong>3</strong></u>,2,<strong><u>1</u></strong>].\nNext, we sort the values present at even indices (0 and 2) in non-decreasing order.\nSo, nums changes from [<u><strong>4</strong></u>,1,<strong><u>2</u></strong>,3] to [<u><strong>2</strong></u>,3,<u><strong>4</strong></u>,1].\nThus, the array formed after rearranging the values is [2,3,4,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4090', '1744', '2', 'nums = [2,1]', '[2,1]', 'Since there is exactly one odd index and one even index, no rearrangement of values takes place.\nThe resultant array formed is [2,1], which is the same as the initial array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4091', '1745', '1', 'num = 310', '103', 'The possible arrangements for the digits of 310 are 013, 031, 103, 130, 301, 310. \nThe arrangement with the smallest value that does not contain any leading zeros is 103.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4092', '1745', '2', 'num = -7605', '-7650', 'Some possible arrangements for the digits of -7605 are -7650, -6705, -5076, -0567.\nThe arrangement with the smallest value that does not contain any leading zeros is -7650.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4093', '1746', '1', '[\"Bitset\", \"fix\", \"fix\", \"flip\", \"all\", \"unfix\", \"flip\", \"one\", \"unfix\", \"count\", \"toString\"]\n[[5], [3], [1], [], [], [0], [], [], [0], [], []]', '[null, null, null, null, false, null, null, true, null, 2, \"01010\"]', 'Bitset bs = new Bitset(5); // bitset = \"00000\".\nbs.fix(3);     // the value at idx = 3 is updated to 1, so bitset = \"00010\".\nbs.fix(1);     // the value at idx = 1 is updated to 1, so bitset = \"01010\". \nbs.flip();     // the value of each bit is flipped, so bitset = \"10101\". \nbs.all();      // return False, as not all values of the bitset are 1.\nbs.unfix(0);   // the value at idx = 0 is updated to 0, so bitset = \"00101\".\nbs.flip();     // the value of each bit is flipped, so bitset = \"11010\". \nbs.one();      // return True, as there is at least 1 index with value 1.\nbs.unfix(0);   // the value at idx = 0 is updated to 0, so bitset = \"01010\".\nbs.count();    // return 2, as there are 2 bits with value 1.\nbs.toString(); // return \"01010\", which is the composition of bitset.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4094', '1747', '1', 's = \"<strong><u>11</u></strong>00<strong><u>1</u></strong>0<strong><u>1</u></strong>\"', '5', 'One way to remove all the cars containing illegal goods from the sequence is to\n- remove a car from the left end 2 times. Time taken is 2 * 1 = 2.\n- remove a car from the right end. Time taken is 1.\n- remove the car containing illegal goods found in the middle. Time taken is 2.\nThis obtains a total time of 2 + 1 + 2 = 5. \n\nAn alternative way is to\n- remove a car from the left end 2 times. Time taken is 2 * 1 = 2.\n- remove a car from the right end 3 times. Time taken is 3 * 1 = 3.\nThis also obtains a total time of 2 + 3 = 5.\n\n5 is the minimum time taken to remove all the cars containing illegal goods. \nThere are no other ways to remove them with less time.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4095', '1747', '2', 's = \"00<strong><u>1</u></strong>0\"', '2', 'One way to remove all the cars containing illegal goods from the sequence is to\n- remove a car from the left end 3 times. Time taken is 3 * 1 = 3.\nThis obtains a total time of 3.\n\nAnother way to remove all the cars containing illegal goods from the sequence is to\n- remove the car containing illegal goods found in the middle. Time taken is 2.\nThis obtains a total time of 2.\n\nAnother way to remove all the cars containing illegal goods from the sequence is to \n- remove a car from the right end 2 times. Time taken is 2 * 1 = 2. \nThis obtains a total time of 2.\n\n2 is the minimum time taken to remove all the cars containing illegal goods. \nThere are no other ways to remove them with less time.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4096', '1748', '1', 'num1 = 2, num2 = 3', '3', '- Operation 1: num1 = 2, num2 = 3. Since num1 &lt; num2, we subtract num1 from num2 and get num1 = 2, num2 = 3 - 2 = 1.\n- Operation 2: num1 = 2, num2 = 1. Since num1 &gt; num2, we subtract num2 from num1.\n- Operation 3: num1 = 1, num2 = 1. Since num1 == num2, we subtract num2 from num1.\nNow num1 = 0 and num2 = 1. Since num1 == 0, we do not need to perform any further operations.\nSo the total number of operations required is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4097', '1748', '2', 'num1 = 10, num2 = 10', '1', '- Operation 1: num1 = 10, num2 = 10. Since num1 == num2, we subtract num2 from num1 and get num1 = 10 - 10 = 0.\nNow num1 = 0 and num2 = 10. Since num1 == 0, we are done.\nSo the total number of operations required is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4098', '1749', '1', 'nums = [3,1,3,2,4,3]', '3', 'One way to make the array alternating is by converting it to [3,1,3,<u><strong>1</strong></u>,<u><strong>3</strong></u>,<u><strong>1</strong></u>].\nThe number of operations required in this case is 3.\nIt can be proven that it is not possible to make the array alternating in less than 3 operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4099', '1749', '2', 'nums = [1,2,2,2,2]', '2', 'One way to make the array alternating is by converting it to [1,2,<u><strong>1</strong></u>,2,<u><strong>1</strong></u>].\nThe number of operations required in this case is 2.\nNote that the array cannot be converted to [<u><strong>2</strong></u>,2,2,2,2] because in this case nums[0] == nums[1] which violates the conditions of an alternating array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4100', '1750', '1', 'beans = [4,<u><strong>1</strong></u>,6,5]', '4', '- We remove 1 bean from the bag with only 1 bean.\n  This results in the remaining bags: [4,<b><u>0</u></b>,6,5]\n- Then we remove 2 beans from the bag with 6 beans.\n  This results in the remaining bags: [4,0,<strong><u>4</u></strong>,5]\n- Then we remove 1 bean from the bag with 5 beans.\n  This results in the remaining bags: [4,0,4,<b><u>4</u></b>]\nWe removed a total of 1 + 2 + 1 = 4 beans to make the remaining non-empty bags have an equal number of beans.\nThere are no other solutions that remove 4 beans or fewer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4101', '1750', '2', 'beans = [<strong><u>2</u></strong>,10,<u><strong>3</strong></u>,<strong><u>2</u></strong>]', '7', '- We remove 2 beans from one of the bags with 2 beans.\n  This results in the remaining bags: [<u><strong>0</strong></u>,10,3,2]\n- Then we remove 2 beans from the other bag with 2 beans.\n  This results in the remaining bags: [0,10,3,<u><strong>0</strong></u>]\n- Then we remove 3 beans from the bag with 3 beans. \n  This results in the remaining bags: [0,10,<u><strong>0</strong></u>,0]\nWe removed a total of 2 + 2 + 3 = 7 beans to make the remaining non-empty bags have an equal number of beans.\nThere are no other solutions that removes 7 beans or fewer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4102', '1751', '1', 'nums = [1,2,3,4,5,6], numSlots = 3', '9', 'One possible placement is [1, 4] into slot <u>1</u>, [2, 6] into slot <u>2</u>, and [3, 5] into slot <u>3</u>. \nThis gives the maximum AND sum of (1 AND <u>1</u>) + (4 AND <u>1</u>) + (2 AND <u>2</u>) + (6 AND <u>2</u>) + (3 AND <u>3</u>) + (5 AND <u>3</u>) = 1 + 0 + 2 + 2 + 3 + 1 = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4103', '1751', '2', 'nums = [1,3,10,4,7,1], numSlots = 9', '24', 'One possible placement is [1, 1] into slot <u>1</u>, [3] into slot <u>3</u>, [4] into slot <u>4</u>, [7] into slot <u>7</u>, and [10] into slot <u>9</u>.\nThis gives the maximum AND sum of (1 AND <u>1</u>) + (1 AND <u>1</u>) + (3 AND <u>3</u>) + (4 AND <u>4</u>) + (7 AND <u>7</u>) + (10 AND <u>9</u>) = 1 + 1 + 3 + 4 + 7 + 8 = 24.\nNote that slots 2, 5, 6, and 8 are empty which is permitted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4104', '1752', '1', 'nums = [3,1,2,2,2,1,3], k = 2', '4', 'There are 4 pairs that meet all the requirements:\n- nums[0] == nums[6], and 0 * 6 == 0, which is divisible by 2.\n- nums[2] == nums[3], and 2 * 3 == 6, which is divisible by 2.\n- nums[2] == nums[4], and 2 * 4 == 8, which is divisible by 2.\n- nums[3] == nums[4], and 3 * 4 == 12, which is divisible by 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4105', '1752', '2', 'nums = [1,2,3,4], k = 1', '0', 'Since no value in nums is repeated, there are no pairs (i,j) that meet all the requirements.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4106', '1753', '1', 'num = 33', '[10,11,12]', '33 can be expressed as 10 + 11 + 12 = 33.\n10, 11, 12 are 3 consecutive integers, so we return [10, 11, 12].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4107', '1753', '2', 'num = 4', '[]', 'There is no way to express 4 as the sum of 3 consecutive integers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4108', '1754', '1', 'finalSum = 12', '[2,4,6]', 'The following are valid splits: <code>(12)</code>, <code>(2 + 10)</code>, <code>(2 + 4 + 6)</code>, and <code>(4 + 8)</code>.\n(2 + 4 + 6) has the maximum number of integers, which is 3. Thus, we return [2,4,6].\nNote that [2,6,4], [6,2,4], etc. are also accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4109', '1754', '2', 'finalSum = 7', '[]', 'There are no valid splits for the given finalSum.\nThus, we return an empty array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4110', '1754', '3', 'finalSum = 28', '[6,8,2,12]', 'The following are valid splits: <code>(2 + 26)</code>, <code>(6 + 8 + 2 + 12)</code>, and <code>(4 + 24)</code>. \n<code>(6 + 8 + 2 + 12)</code> has the maximum number of integers, which is 4. Thus, we return [6,8,2,12].\nNote that [10,2,4,12], [6,2,4,16], etc. are also accepted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4111', '1755', '1', 'nums1 = [2,0,1,3], nums2 = [0,1,2,3]', '1', 'There are 4 triplets (x,y,z) such that pos1<sub>x</sub> &lt; pos1<sub>y</sub> &lt; pos1<sub>z</sub>. They are (2,0,1), (2,0,3), (2,1,3), and (0,1,3). \nOut of those triplets, only the triplet (0,1,3) satisfies pos2<sub>x</sub> &lt; pos2<sub>y</sub> &lt; pos2<sub>z</sub>. Hence, there is only 1 good triplet.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4112', '1755', '2', 'nums1 = [4,0,1,3,2], nums2 = [4,1,0,2,3]', '4', 'The 4 good triplets are (4,0,3), (4,0,2), (4,1,3), and (4,1,2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4113', '1756', '1', 'num = 4', '2', 'The only integers less than or equal to 4 whose digit sums are even are 2 and 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4114', '1756', '2', 'num = 30', '14', 'The 14 integers less than or equal to 30 whose digit sums are even are\n2, 4, 6, 8, 11, 13, 15, 17, 19, 20, 22, 24, 26, and 28.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4115', '1757', '1', 'head = [0,3,1,0,4,5,2,0]', '[4,11]', 'The above figure represents the given linked list. The modified list contains\n- The sum of the nodes marked in green: 3 + 1 = 4.\n- The sum of the nodes marked in red: 4 + 5 + 2 = 11.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4116', '1757', '2', 'head = [0,1,0,3,0,2,2,0]', '[1,3,4]', 'The above figure represents the given linked list. The modified list contains\n- The sum of the nodes marked in green: 1 = 1.\n- The sum of the nodes marked in red: 3 = 3.\n- The sum of the nodes marked in yellow: 2 + 2 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4117', '1758', '1', 's = \"cczazcc\", repeatLimit = 3', '\"zzcccac\"', 'We use all of the characters from s to construct the repeatLimitedString \"zzcccac\".\nThe letter \'a\' appears at most 1 time in a row.\nThe letter \'c\' appears at most 3 times in a row.\nThe letter \'z\' appears at most 2 times in a row.\nHence, no letter appears more than repeatLimit times in a row and the string is a valid repeatLimitedString.\nThe string is the lexicographically largest repeatLimitedString possible so we return \"zzcccac\".\nNote that the string \"zzcccca\" is lexicographically larger but the letter \'c\' appears more than 3 times in a row, so it is not a valid repeatLimitedString.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4118', '1758', '2', 's = \"aababab\", repeatLimit = 2', '\"bbabaa\"', 'We use only some of the characters from s to construct the repeatLimitedString \"bbabaa\". \nThe letter \'a\' appears at most 2 times in a row.\nThe letter \'b\' appears at most 2 times in a row.\nHence, no letter appears more than repeatLimit times in a row and the string is a valid repeatLimitedString.\nThe string is the lexicographically largest repeatLimitedString possible so we return \"bbabaa\".\nNote that the string \"bbabaaa\" is lexicographically larger but the letter \'a\' appears more than 2 times in a row, so it is not a valid repeatLimitedString.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4119', '1760', '1', 'words = [\"pay\",\"<strong><u>at</u></strong>tention\",\"practice\",\"<u><strong>at</strong></u>tend\"], <code>pref </code>= \"at\"', '2', 'The 2 strings that contain \"at\" as a prefix are: \"<u><strong>at</strong></u>tention\" and \"<u><strong>at</strong></u>tend\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4120', '1760', '2', 'words = [\"leetcode\",\"win\",\"loops\",\"success\"], <code>pref </code>= \"code\"', '0', 'There are no strings that contain \"code\" as a prefix.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4121', '1761', '1', 's = \"<strong><u>lee</u></strong>tco<u><strong>de</strong></u>\", t = \"co<u><strong>a</strong></u>t<u><strong>s</strong></u>\"', '7', '- In 2 steps, we can append the letters in \"as\" onto s = \"leetcode\", forming s = \"leetcode<strong><u>as</u></strong>\".\n- In 5 steps, we can append the letters in \"leede\" onto t = \"coats\", forming t = \"coats<u><strong>leede</strong></u>\".\n\"leetcodeas\" and \"coatsleede\" are now anagrams of each other.\nWe used a total of 2 + 5 = 7 steps.\nIt can be shown that there is no way to make them anagrams of each other with less than 7 steps.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4122', '1761', '2', 's = \"night\", t = \"thing\"', '0', 'The given strings are already anagrams of each other. Thus, we do not need any further steps.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4123', '1762', '1', 'time = [1,2,3], totalTrips = 5', '3', '- At time t = 1, the number of trips completed by each bus are [1,0,0]. \n  The total number of trips completed is 1 + 0 + 0 = 1.\n- At time t = 2, the number of trips completed by each bus are [2,1,0]. \n  The total number of trips completed is 2 + 1 + 0 = 3.\n- At time t = 3, the number of trips completed by each bus are [3,1,1]. \n  The total number of trips completed is 3 + 1 + 1 = 5.\nSo the minimum time needed for all buses to complete at least 5 trips is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4124', '1762', '2', 'time = [2], totalTrips = 1', '2', 'There is only one bus, and it will complete its first trip at t = 2.\nSo the minimum time needed to complete 1 trip is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4125', '1763', '1', 'tires = [[2,3],[3,4]], changeTime = 5, numLaps = 4', '21', 'Lap 1: Start with tire 0 and finish the lap in 2 seconds.\nLap 2: Continue with tire 0 and finish the lap in 2 * 3 = 6 seconds.\nLap 3: Change tires to a new tire 0 for 5 seconds and then finish the lap in another 2 seconds.\nLap 4: Continue with tire 0 and finish the lap in 2 * 3 = 6 seconds.\nTotal time = 2 + 6 + 5 + 2 + 6 = 21 seconds.\nThe minimum time to complete the race is 21 seconds.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4126', '1763', '2', 'tires = [[1,10],[2,2],[3,4]], changeTime = 6, numLaps = 5', '25', 'Lap 1: Start with tire 1 and finish the lap in 2 seconds.\nLap 2: Continue with tire 1 and finish the lap in 2 * 2 = 4 seconds.\nLap 3: Change tires to a new tire 1 for 6 seconds and then finish the lap in another 2 seconds.\nLap 4: Continue with tire 1 and finish the lap in 2 * 2 = 4 seconds.\nLap 5: Change tires to tire 0 for 6 seconds then finish the lap in another 1 second.\nTotal time = 2 + 4 + 6 + 2 + 4 + 6 + 1 = 25 seconds.\nThe minimum time to complete the race is 25 seconds.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4127', '1764', '1', 'nums = [1,100,200,1,100], key = 1', '100', 'For target = 100, there are 2 occurrences at indices 1 and 4 which follow an occurrence of key.\nNo other integers follow an occurrence of key, so we return 100.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4128', '1764', '2', 'nums = [2,2,2,2,3], key = 2', '2', 'For target = 2, there are 3 occurrences at indices 1, 2, and 3 which follow an occurrence of key.\nFor target = 3, there is only one occurrence at index 4 which follows an occurrence of key.\ntarget = 2 has the maximum number of occurrences following an occurrence of key, so we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4129', '1765', '1', 'mapping = [8,9,4,0,2,1,3,5,7,6], nums = [991,338,38]', '[338,38,991]', 'Map the number 991 as follows:\n1. mapping[9] = 6, so all occurrences of the digit 9 will become 6.\n2. mapping[1] = 9, so all occurrences of the digit 1 will become 9.\nTherefore, the mapped value of 991 is 669.\n338 maps to 007, or 7 after removing the leading zeros.\n38 maps to 07, which is also 7 after removing leading zeros.\nSince 338 and 38 share the same mapped value, they should remain in the same relative order, so 338 comes before 38.\nThus, the sorted array is [338,38,991].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4130', '1765', '2', 'mapping = [0,1,2,3,4,5,6,7,8,9], nums = [789,456,123]', '[123,456,789]', '789 maps to 789, 456 maps to 456, and 123 maps to 123. Thus, the sorted array is [123,456,789].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4131', '1767', '1', 's = \"aabb\"', '2', 'We can obtain two palindromes from s, \"abba\" and \"baab\". \n- We can obtain \"abba\" from s in 2 moves: \"a<u><strong>ab</strong></u>b\" -&gt; \"ab<u><strong>ab</strong></u>\" -&gt; \"abba\".\n- We can obtain \"baab\" from s in 2 moves: \"a<u><strong>ab</strong></u>b\" -&gt; \"<u><strong>ab</strong></u>ab\" -&gt; \"baab\".\nThus, the minimum number of moves needed to make s a palindrome is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4132', '1767', '2', 's = \"letelt\"', '2', 'One of the palindromes we can obtain from s in 2 moves is \"lettel\".\nOne of the ways we can obtain it is \"lete<u><strong>lt</strong></u>\" -&gt; \"let<u><strong>et</strong></u>l\" -&gt; \"lettel\".\nOther palindromes such as \"tleelt\" can also be obtained in 2 moves.\nIt can be shown that it is not possible to obtain a palindrome in less than 2 moves.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4133', '1768', '1', 's = \"K1:L2\"', '[\"K1\",\"K2\",\"L1\",\"L2\"]', 'The above diagram shows the cells which should be present in the list.\nThe red arrows denote the order in which the cells should be presented.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4134', '1768', '2', 's = \"A1:F1\"', '[\"A1\",\"B1\",\"C1\",\"D1\",\"E1\",\"F1\"]', 'The above diagram shows the cells which should be present in the list.\nThe red arrow denotes the order in which the cells should be presented.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4135', '1769', '1', 'nums = [1,4,25,10,25], k = 2', '5', 'The two unique positive integers that do not appear in nums which we append are 2 and 3.\nThe resulting sum of nums is 1 + 4 + 25 + 10 + 25 + 2 + 3 = 70, which is the minimum.\nThe sum of the two integers appended is 2 + 3 = 5, so we return 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4136', '1769', '2', 'nums = [5,6], k = 6', '25', 'The six unique positive integers that do not appear in nums which we append are 1, 2, 3, 4, 7, and 8.\nThe resulting sum of nums is 5 + 6 + 1 + 2 + 3 + 4 + 7 + 8 = 36, which is the minimum. \nThe sum of the six integers appended is 1 + 2 + 3 + 4 + 7 + 8 = 25, so we return 25.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4137', '1770', '1', 'descriptions = [[20,15,1],[20,17,0],[50,20,1],[50,80,0],[80,19,1]]', '[50,20,80,15,17,19]', 'The root node is the node with value 50 since it has no parent.\nThe resulting binary tree is shown in the diagram.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4138', '1770', '2', 'descriptions = [[1,2,1],[2,3,0],[3,4,1]]', '[1,2,null,null,3,4]', 'The root node is the node with value 1 since it has no parent.\nThe resulting binary tree is shown in the diagram.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4139', '1771', '1', 'nums = [6,4,3,2,7,6,2]', '[12,7,6]', '- (6, 4) are non-coprime with LCM(6, 4) = 12. Now, nums = [<strong><u>12</u></strong>,3,2,7,6,2].\n- (12, 3) are non-coprime with LCM(12, 3) = 12. Now, nums = [<strong><u>12</u></strong>,2,7,6,2].\n- (12, 2) are non-coprime with LCM(12, 2) = 12. Now, nums = [<strong><u>12</u></strong>,7,6,2].\n- (6, 2) are non-coprime with LCM(6, 2) = 6. Now, nums = [12,7,<u><strong>6</strong></u>].\nThere are no more adjacent non-coprime numbers in nums.\nThus, the final modified array is [12,7,6].\nNote that there are other ways to obtain the same resultant array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4140', '1771', '2', 'nums = [2,2,1,1,3,3,3]', '[2,1,1,3]', '- (3, 3) are non-coprime with LCM(3, 3) = 3. Now, nums = [2,2,1,1,<u><strong>3</strong></u>,3].\n- (3, 3) are non-coprime with LCM(3, 3) = 3. Now, nums = [2,2,1,1,<u><strong>3</strong></u>].\n- (2, 2) are non-coprime with LCM(2, 2) = 2. Now, nums = [<u><strong>2</strong></u>,1,1,3].\nThere are no more adjacent non-coprime numbers in nums.\nThus, the final modified array is [2,1,1,3].\nNote that there are other ways to obtain the same resultant array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4141', '1772', '1', 'nums = [3,4,9,1,3,9,5], key = 9, k = 1', '[1,2,3,4,5,6]', 'Here, <code>nums[2] == key</code> and <code>nums[5] == key.\n- For index 0, |0 - 2| &gt; k and |0 - 5| &gt; k, so there is no j</code> where <code>|0 - j| &lt;= k</code> and <code>nums[j] == key. Thus, 0 is not a k-distant index.\n- For index 1, |1 - 2| &lt;= k and nums[2] == key, so 1 is a k-distant index.\n- For index 2, |2 - 2| &lt;= k and nums[2] == key, so 2 is a k-distant index.\n- For index 3, |3 - 2| &lt;= k and nums[2] == key, so 3 is a k-distant index.\n- For index 4, |4 - 5| &lt;= k and nums[5] == key, so 4 is a k-distant index.\n- For index 5, |5 - 5| &lt;= k and nums[5] == key, so 5 is a k-distant index.\n- For index 6, |6 - 5| &lt;= k and nums[5] == key, so 6 is a k-distant index.\n</code>Thus, we return [1,2,3,4,5,6] which is sorted in increasing order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4142', '1772', '2', 'nums = [2,2,2,2,2], key = 2, k = 2', '[0,1,2,3,4]', 'For all indices i in nums, there exists some index j such that |i - j| &lt;= k and nums[j] == key, so every index is a k-distant index. \nHence, we return [0,1,2,3,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4143', '1773', '1', 'n = 2, artifacts = [[0,0,0,0],[0,1,1,1]], dig = [[0,0],[0,1]]', '1', 'The different colors represent different artifacts. Excavated cells are labeled with a \'D\' in the grid.\nThere is 1 artifact that can be extracted, namely the red artifact.\nThe blue artifact has one part in cell (1,1) which remains uncovered, so we cannot extract it.\nThus, we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4144', '1773', '2', 'n = 2, artifacts = [[0,0,0,0],[0,1,1,1]], dig = [[0,0],[0,1],[1,1]]', '2', 'Both the red and blue artifacts have all parts uncovered (labeled with a \'D\') and can be extracted, so we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4145', '1774', '1', 'nums = [5,2,2,4,0,6], k = 4', '5', 'One of the ways we can end with 5 at the top of the pile after 4 moves is as follows:\n- Step 1: Remove the topmost element = 5. The pile becomes [2,2,4,0,6].\n- Step 2: Remove the topmost element = 2. The pile becomes [2,4,0,6].\n- Step 3: Remove the topmost element = 2. The pile becomes [4,0,6].\n- Step 4: Add 5 back onto the pile. The pile becomes [5,4,0,6].\nNote that this is not the only way to end with 5 at the top of the pile. It can be shown that 5 is the largest answer possible after 4 moves.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4146', '1774', '2', 'nums = [2], k = 1', '-1', 'In the first move, our only option is to pop the topmost element of the pile.\nSince it is not possible to obtain a non-empty pile after one move, we return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4147', '1775', '1', 'n = 6, edges = [[0,2,2],[0,5,6],[1,0,3],[1,4,5],[2,1,1],[2,3,3],[2,3,4],[3,4,2],[4,5,1]], src1 = 0, src2 = 1, dest = 5', '9', 'The above figure represents the input graph.\nThe blue edges represent one of the subgraphs that yield the optimal answer.\nNote that the subgraph [[1,0,3],[0,5,6]] also yields the optimal answer. It is not possible to get a subgraph with less weight satisfying all the constraints.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4148', '1775', '2', 'n = 3, edges = [[0,1,1],[2,1,1]], src1 = 0, src2 = 1, dest = 2', '-1', 'The above figure represents the input graph.\nIt can be seen that there does not exist any path from node 1 to node 2, hence there are no subgraphs satisfying all the constraints.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4149', '1776', '1', 'nums = [3,2,3,2,2,2]', 'true', 'There are 6 elements in nums, so they should be divided into 6 / 2 = 3 pairs.\nIf nums is divided into the pairs (2, 2), (3, 3), and (2, 2), it will satisfy all the conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4150', '1776', '2', 'nums = [1,2,3,4]', 'false', 'There is no way to divide nums into 4 / 2 = 2 pairs such that the pairs satisfy every condition.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4151', '1777', '1', 'text = \"abdcdbc\", pattern = \"ac\"', '4', 'If we add pattern[0] = \'a\' in between text[1] and text[2], we get \"ab<u><strong>a</strong></u>dcdbc\". Now, the number of times \"ac\" occurs as a subsequence is 4.\nSome other strings which have 4 subsequences \"ac\" after adding a character to text are \"<u><strong>a</strong></u>abdcdbc\" and \"abd<u><strong>a</strong></u>cdbc\".\nHowever, strings such as \"abdc<u><strong>a</strong></u>dbc\", \"abd<u><strong>c</strong></u>cdbc\", and \"abdcdbc<u><strong>c</strong></u>\", although obtainable, have only 3 subsequences \"ac\" and are thus suboptimal.\nIt can be shown that it is not possible to get more than 4 subsequences \"ac\" by adding only one character.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4152', '1777', '2', 'text = \"aabb\", pattern = \"ab\"', '6', 'Some of the strings which can be obtained from text and have 6 subsequences \"ab\" are \"<u><strong>a</strong></u>aabb\", \"aa<u><strong>a</strong></u>bb\", and \"aab<u><strong>b</strong></u>b\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4153', '1779', '1', 'floor = \"10110101\", numCarpets = 2, carpetLen = 2', '2', 'The figure above shows one way of covering the tiles with the carpets such that only 2 white tiles are visible.\nNo other way of covering the tiles with the carpets can leave less than 2 white tiles visible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4154', '1779', '2', 'floor = \"11111\", numCarpets = 2, carpetLen = 3', '0', 'The figure above shows one way of covering the tiles with the carpets such that no white tiles are visible.\nNote that the carpets are able to overlap one another.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4155', '1780', '1', 'nums = [2,4,1,1,6,5]', '3', 'At index 0: There is no non-equal neighbor of 2 on the left, so index 0 is neither a hill nor a valley.\nAt index 1: The closest non-equal neighbors of 4 are 2 and 1. Since 4 &gt; 2 and 4 &gt; 1, index 1 is a hill. \nAt index 2: The closest non-equal neighbors of 1 are 4 and 6. Since 1 &lt; 4 and 1 &lt; 6, index 2 is a valley.\nAt index 3: The closest non-equal neighbors of 1 are 4 and 6. Since 1 &lt; 4 and 1 &lt; 6, index 3 is a valley, but note that it is part of the same valley as index 2.\nAt index 4: The closest non-equal neighbors of 6 are 1 and 5. Since 6 &gt; 1 and 6 &gt; 5, index 4 is a hill.\nAt index 5: There is no non-equal neighbor of 5 on the right, so index 5 is neither a hill nor a valley. \nThere are 3 hills and valleys so we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4156', '1780', '2', 'nums = [6,6,5,5,4,1]', '0', 'At index 0: There is no non-equal neighbor of 6 on the left, so index 0 is neither a hill nor a valley.\nAt index 1: There is no non-equal neighbor of 6 on the left, so index 1 is neither a hill nor a valley.\nAt index 2: The closest non-equal neighbors of 5 are 6 and 4. Since 5 &lt; 6 and 5 &gt; 4, index 2 is neither a hill nor a valley.\nAt index 3: The closest non-equal neighbors of 5 are 6 and 4. Since 5 &lt; 6 and 5 &gt; 4, index 3 is neither a hill nor a valley.\nAt index 4: The closest non-equal neighbors of 4 are 5 and 1. Since 4 &lt; 5 and 4 &gt; 1, index 4 is neither a hill nor a valley.\nAt index 5: There is no non-equal neighbor of 1 on the right, so index 5 is neither a hill nor a valley.\nThere are 0 hills and valleys so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4157', '1781', '1', 'directions = \"RLRSLL\"', '5', 'The collisions that will happen on the road are:\n- Cars 0 and 1 will collide with each other. Since they are moving in opposite directions, the number of collisions becomes 0 + 2 = 2.\n- Cars 2 and 3 will collide with each other. Since car 3 is stationary, the number of collisions becomes 2 + 1 = 3.\n- Cars 3 and 4 will collide with each other. Since car 3 is stationary, the number of collisions becomes 3 + 1 = 4.\n- Cars 4 and 5 will collide with each other. After car 4 collides with car 3, it will stay at the point of collision and get hit by car 5. The number of collisions becomes 4 + 1 = 5.\nThus, the total number of collisions that will happen on the road is 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4158', '1781', '2', 'directions = \"LLRR\"', '0', 'No cars will collide with each other. Thus, the total number of collisions that will happen on the road is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4159', '1782', '1', 'numArrows = 9, aliceArrows = [1,1,0,1,0,0,2,1,0,1,2,0]', '[0,0,0,0,1,1,0,0,1,2,3,1]', 'The table above shows how the competition is scored. \nBob earns a total point of 4 + 5 + 8 + 9 + 10 + 11 = 47.\nIt can be shown that Bob cannot obtain a score higher than 47 points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4160', '1782', '2', 'numArrows = 3, aliceArrows = [0,0,1,0,0,0,0,0,0,0,0,2]', '[0,0,0,0,0,0,0,0,1,1,1,0]', 'The table above shows how the competition is scored.\nBob earns a total point of 8 + 9 + 10 = 27.\nIt can be shown that Bob cannot obtain a score higher than 27 points.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4161', '1783', '1', 's = \"babacc\", queryCharacters = \"bcb\", queryIndices = [1,3,3]', '[3,3,4]', '- 1<sup>st</sup> query updates s = \"<u>b<strong>b</strong>b</u>acc\". The longest substring consisting of one repeating character is \"bbb\" with length 3.\n- 2<sup>nd</sup> query updates s = \"bbb<u><strong>c</strong>cc</u>\". \n  The longest substring consisting of one repeating character can be \"bbb\" or \"ccc\" with length 3.\n- 3<sup>rd</sup> query updates s = \"<u>bbb<strong>b</strong></u>cc\". The longest substring consisting of one repeating character is \"bbbb\" with length 4.\nThus, we return [3,3,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4162', '1783', '2', 's = \"abyzz\", queryCharacters = \"aa\", queryIndices = [2,1]', '[2,3]', '- 1<sup>st</sup> query updates s = \"ab<strong>a</strong><u>zz</u>\". The longest substring consisting of one repeating character is \"zz\" with length 2.\n- 2<sup>nd</sup> query updates s = \"<u>a<strong>a</strong>a</u>zz\". The longest substring consisting of one repeating character is \"aaa\" with length 3.\nThus, we return [2,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4163', '1784', '1', 'nums1 = [1,2,3], nums2 = [2,4,6]', '[[1,3],[4,6]]\n<strong>', '</strong>For nums1, nums1[1] = 2 is present at index 0 of nums2, whereas nums1[0] = 1 and nums1[2] = 3 are not present in nums2. Therefore, answer[0] = [1,3].\nFor nums2, nums2[0] = 2 is present at index 1 of nums1, whereas nums2[1] = 4 and nums2[2] = 6 are not present in nums2. Therefore, answer[1] = [4,6].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4164', '1784', '2', 'nums1 = [1,2,3,3], nums2 = [1,1,2,2]', '[[3],[]]\n<strong>', '</strong>For nums1, nums1[2] and nums1[3] are not present in nums2. Since nums1[2] == nums1[3], their value is only included once and answer[0] = [3].\nEvery integer in nums2 is present in nums1. Therefore, answer[1] = [].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4165', '1785', '1', 'nums = [1,1,2,3,5]', '1', 'You can delete either <code>nums[0]</code> or <code>nums[1]</code> to make <code>nums</code> = [1,2,3,5] which is beautiful. It can be proven you need at least 1 deletion to make <code>nums</code> beautiful.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4166', '1785', '2', 'nums = [1,1,2,2,3,3]', '2', 'You can delete <code>nums[0]</code> and <code>nums[5]</code> to make nums = [1,2,2,3] which is beautiful. It can be proven you need at least 2 deletions to make nums beautiful.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4167', '1786', '1', 'queries = [1,2,3,4,5,90], intLength = 3', '[101,111,121,131,141,999]', 'The first few palindromes of length 3 are:\n101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 202, ...\nThe 90<sup>th</sup> palindrome of length 3 is 999.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4168', '1786', '2', 'queries = [2,4,6], intLength = 4', '[1111,1331,1551]', 'The first six palindromes of length 4 are:\n1001, 1111, 1221, 1331, 1441, and 1551.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4169', '1787', '1', 'piles = [[1,100,3],[7,8,9]], k = 2', '101', 'The above diagram shows the different ways we can choose k coins.\nThe maximum total we can obtain is 101.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4170', '1787', '2', 'piles = [[100],[100],[100],[100],[100],[100],[1,1,1,1,1,1,700]], k = 7', '706\n<strong>', '</strong>The maximum total can be obtained if we choose all coins from the last pile.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4171', '1788', '1', 'start = 10, goal = 7', '3', 'The binary representation of 10 and 7 are 1010 and 0111 respectively. We can convert 10 to 7 in 3 steps:\n- Flip the first bit from the right: 101<u>0</u> -&gt; 101<u>1</u>.\n- Flip the third bit from the right: 1<u>0</u>11 -&gt; 1<u>1</u>11.\n- Flip the fourth bit from the right: <u>1</u>111 -&gt; <u>0</u>111.\nIt can be shown we cannot convert 10 to 7 in less than 3 steps. Hence, we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4172', '1788', '2', 'start = 3, goal = 4', '3', 'The binary representation of 3 and 4 are 011 and 100 respectively. We can convert 3 to 4 in 3 steps:\n- Flip the first bit from the right: 01<u>1</u> -&gt; 01<u>0</u>.\n- Flip the second bit from the right: 0<u>1</u>0 -&gt; 0<u>0</u>0.\n- Flip the third bit from the right: <u>0</u>00 -&gt; <u>1</u>00.\nIt can be shown we cannot convert 3 to 4 in less than 3 steps. Hence, we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4173', '1789', '1', 'nums = [1,2,3,4,5]', '8', 'The above diagram depicts the process from which we obtain the triangular sum of the array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4174', '1789', '2', 'nums = [5]', '5', 'Since there is only one element in nums, the triangular sum is the value of that element itself.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4175', '1790', '1', 's = \"001101\"', '6', 'The following sets of indices selected are valid:\n- [0,2,4] from \"<u><strong>0</strong></u>0<strong><u>1</u></strong>1<strong><u>0</u></strong>1\" forms \"010\"\n- [0,3,4] from \"<u><strong>0</strong></u>01<u><strong>10</strong></u>1\" forms \"010\"\n- [1,2,4] from \"0<u><strong>01</strong></u>1<u><strong>0</strong></u>1\" forms \"010\"\n- [1,3,4] from \"0<u><strong>0</strong></u>1<u><strong>10</strong></u>1\" forms \"010\"\n- [2,4,5] from \"00<u><strong>1</strong></u>1<u><strong>01</strong></u>\" forms \"101\"\n- [3,4,5] from \"001<u><strong>101</strong></u>\" forms \"101\"\nNo other selection is valid. Thus, there are 6 total ways.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4176', '1790', '2', 's = \"11100\"', '0', 'It can be shown that there are no valid selections.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4177', '1791', '1', 's = \"babab\"', '9', 'For s<sub>1</sub> == \"b\", the longest common prefix is \"b\" which has a score of 1.\nFor s<sub>2</sub> == \"ab\", there is no common prefix so the score is 0.\nFor s<sub>3</sub> == \"bab\", the longest common prefix is \"bab\" which has a score of 3.\nFor s<sub>4</sub> == \"abab\", there is no common prefix so the score is 0.\nFor s<sub>5</sub> == \"babab\", the longest common prefix is \"babab\" which has a score of 5.\nThe sum of the scores is 1 + 0 + 3 + 0 + 5 = 9, so we return 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4178', '1791', '2', 's = \"azbazbzaz\"', '14', 'For s<sub>2</sub> == \"az\", the longest common prefix is \"az\" which has a score of 2.\nFor s<sub>6</sub> == \"azbzaz\", the longest common prefix is \"azb\" which has a score of 3.\nFor s<sub>9</sub> == \"azbazbzaz\", the longest common prefix is \"azbazbzaz\" which has a score of 9.\nFor all other s<sub>i</sub>, the score is 0.\nThe sum of the scores is 2 + 3 + 9 = 14, so we return 14.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4179', '1792', '1', 'current = \"02:30\", correct = \"04:35\"', '3\n<strong>', '</strong>We can convert current to correct in 3 operations as follows:\n- Add 60 minutes to current. current becomes \"03:30\".\n- Add 60 minutes to current. current becomes \"04:30\".\n- Add 5 minutes to current. current becomes \"04:35\".\nIt can be proven that it is not possible to convert current to correct in fewer than 3 operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4180', '1792', '2', 'current = \"11:00\", correct = \"11:01\"', '1', 'We only have to add one minute to current, so the minimum number of operations needed is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4181', '1793', '1', 'matches = [[1,3],[2,3],[3,6],[5,6],[5,7],[4,5],[4,8],[4,9],[10,4],[10,9]]', '[[1,2,10],[4,5,7,8]]', 'Players 1, 2, and 10 have not lost any matches.\nPlayers 4, 5, 7, and 8 each have lost one match.\nPlayers 3, 6, and 9 each have lost two matches.\nThus, answer[0] = [1,2,10] and answer[1] = [4,5,7,8].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4182', '1793', '2', 'matches = [[2,3],[1,3],[5,4],[6,4]]', '[[1,2,5,6],[]]', 'Players 1, 2, 5, and 6 have not lost any matches.\nPlayers 3 and 4 each have lost two matches.\nThus, answer[0] = [1,2,5,6] and answer[1] = [].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4183', '1794', '1', 'candies = [5,8,6], k = 3', '5', 'We can divide candies[1] into 2 piles of size 5 and 3, and candies[2] into 2 piles of size 5 and 1. We now have five piles of candies of sizes 5, 5, 3, 5, and 1. We can allocate the 3 piles of size 5 to 3 children. It can be proven that each child cannot receive more than 5 candies.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4184', '1794', '2', 'candies = [2,5], k = 11', '0', 'There are 11 children but only 7 candies in total, so it is impossible to ensure each child receives at least one candy. Thus, each child gets no candy and the answer is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4185', '1795', '1', '[\"Encrypter\", \"encrypt\", \"decrypt\"]\n[[[\'a\', \'b\', \'c\', \'d\'], [\"ei\", \"zf\", \"ei\", \"am\"], [\"abcd\", \"acbd\", \"adbc\", \"badc\", \"dacb\", \"cadb\", \"cbda\", \"abad\"]], [\"abcd\"], [\"eizfeiam\"]]', '[null, \"eizfeiam\", 2]', 'Encrypter encrypter = new Encrypter([[\'a\', \'b\', \'c\', \'d\'], [\"ei\", \"zf\", \"ei\", \"am\"], [\"abcd\", \"acbd\", \"adbc\", \"badc\", \"dacb\", \"cadb\", \"cbda\", \"abad\"]);\nencrypter.encrypt(\"abcd\"); // return \"eizfeiam\". \n                           // \'a\' maps to \"ei\", \'b\' maps to \"zf\", \'c\' maps to \"ei\", and \'d\' maps to \"am\".\nencrypter.decrypt(\"eizfeiam\"); // return 2. \n                              // \"ei\" can map to \'a\' or \'c\', \"zf\" maps to \'b\', and \"am\" maps to \'d\'. \n                              // Thus, the possible strings after decryption are \"abad\", \"cbad\", \"abcd\", and \"cbcd\". \n                              // 2 of those strings, \"abad\" and \"abcd\", appear in dictionary, so the answer is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4186', '1796', '1', 'num = 1234', '3412', 'Swap the digit 3 with the digit 1, this results in the number 3214.\nSwap the digit 2 with the digit 4, this results in the number 3412.\nNote that there may be other sequences of swaps but it can be shown that 3412 is the largest possible number.\nAlso note that we may not swap the digit 4 with the digit 1 since they are of different parities.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4187', '1796', '2', 'num = 65875', '87655', 'Swap the digit 8 with the digit 6, this results in the number 85675.\nSwap the first digit 5 with the digit 7, this results in the number 87655.\nNote that there may be other sequences of swaps but it can be shown that 87655 is the largest possible number.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4188', '1797', '1', 'expression = \"247+38\"', '\"2(47+38)\"', 'The <code>expression</code> evaluates to 2 * (47 + 38) = 2 * 85 = 170.\nNote that \"2(4)7+38\" is invalid because the right parenthesis must be to the right of the <code>\'+\'</code>.\nIt can be shown that 170 is the smallest possible value.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4189', '1797', '2', 'expression = \"12+34\"', '\"1(2+3)4\"', 'The expression evaluates to 1 * (2 + 3) * 4 = 1 * 5 * 4 = 20.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4190', '1797', '3', 'expression = \"999+999\"', '\"(999+999)\"', 'The <code>expression</code> evaluates to 999 + 999 = 1998.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4191', '1798', '1', 'nums = [0,4], k = 5', '20', 'Increment the first number 5 times.\nNow nums = [5, 4], with a product of 5 * 4 = 20.\nIt can be shown that 20 is maximum product possible, so we return 20.\nNote that there may be other ways to increment nums to have the maximum product.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4192', '1798', '2', 'nums = [6,3,3,2], k = 2', '216', 'Increment the second number 1 time and increment the fourth number 1 time.\nNow nums = [6, 4, 3, 3], with a product of 6 * 4 * 3 * 3 = 216.\nIt can be shown that 216 is maximum product possible, so we return 216.\nNote that there may be other ways to increment nums to have the maximum product.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4193', '1799', '1', 'flowers = [1,3,1,1], newFlowers = 7, target = 6, full = 12, partial = 1', '14', 'Alice can plant\n- 2 flowers in the 0<sup>th</sup> garden\n- 3 flowers in the 1<sup>st</sup> garden\n- 1 flower in the 2<sup>nd</sup> garden\n- 1 flower in the 3<sup>rd</sup> garden\nThe gardens will then be [3,6,2,2]. She planted a total of 2 + 3 + 1 + 1 = 7 flowers.\nThere is 1 garden that is complete.\nThe minimum number of flowers in the incomplete gardens is 2.\nThus, the total beauty is 1 * 12 + 2 * 1 = 12 + 2 = 14.\nNo other way of planting flowers can obtain a total beauty higher than 14.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4194', '1799', '2', 'flowers = [2,4,5,3], newFlowers = 10, target = 5, full = 2, partial = 6', '30', 'Alice can plant\n- 3 flowers in the 0<sup>th</sup> garden\n- 0 flowers in the 1<sup>st</sup> garden\n- 0 flowers in the 2<sup>nd</sup> garden\n- 2 flowers in the 3<sup>rd</sup> garden\nThe gardens will then be [5,4,5,5]. She planted a total of 3 + 0 + 0 + 2 = 5 flowers.\nThere are 3 gardens that are complete.\nThe minimum number of flowers in the incomplete gardens is 4.\nThus, the total beauty is 3 * 2 + 4 * 6 = 6 + 24 = 30.\nNo other way of planting flowers can obtain a total beauty higher than 30.\nNote that Alice could make all the gardens complete but in this case, she would obtain a lower total beauty.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4195', '1800', '1', 'num1 = 12, num2 = 5', '17', 'num1 is 12, num2 is 5, and their sum is 12 + 5 = 17, so 17 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4196', '1800', '2', 'num1 = -10, num2 = 4', '-6', 'num1 + num2 = -6, so -6 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4197', '1801', '1', 'root = [10,4,6]', 'true', 'The values of the root, its left child, and its right child are 10, 4, and 6, respectively.\n10 is equal to 4 + 6, so we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4198', '1801', '2', 'root = [5,3,1]', 'false', 'The values of the root, its left child, and its right child are 5, 3, and 1, respectively.\n5 is not equal to 3 + 1, so we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4199', '1802', '1', 'nums = [-4,-2,1,4,8]', '1', 'The distance from -4 to 0 is |-4| = 4.\nThe distance from -2 to 0 is |-2| = 2.\nThe distance from 1 to 0 is |1| = 1.\nThe distance from 4 to 0 is |4| = 4.\nThe distance from 8 to 0 is |8| = 8.\nThus, the closest number to 0 in the array is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4200', '1802', '2', 'nums = [2,-1,1]', '1', '1 and -1 are both the closest numbers to 0, so 1 being larger is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4201', '1803', '1', 'total = 20, cost1 = 10, cost2 = 5', '9', 'The price of a pen is 10 and the price of a pencil is 5.\n- If you buy 0 pens, you can buy 0, 1, 2, 3, or 4 pencils.\n- If you buy 1 pen, you can buy 0, 1, or 2 pencils.\n- If you buy 2 pens, you cannot buy any pencils.\nThe total number of ways to buy pens and pencils is 5 + 3 + 1 = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4202', '1803', '2', 'total = 5, cost1 = 10, cost2 = 10', '1', 'The price of both pens and pencils are 10, which cost more than total, so you cannot buy any writing utensils. Therefore, there is only 1 way: buy 0 pens and 0 pencils.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4203', '1804', '1', '[\"ATM\", \"deposit\", \"withdraw\", \"deposit\", \"withdraw\", \"withdraw\"]\n[[], [[0,0,1,2,1]], [600], [[0,1,0,1,1]], [600], [550]]', '[null, null, [0,0,1,0,1], null, [-1], [0,1,0,0,1]]', 'ATM atm = new ATM();\natm.deposit([0,0,1,2,1]); // Deposits 1 $100 banknote, 2 $200 banknotes,\n                          // and 1 $500 banknote.\natm.withdraw(600);        // Returns [0,0,1,0,1]. The machine uses 1 $100 banknote\n                          // and 1 $500 banknote. The banknotes left over in the\n                          // machine are [0,0,0,2,0].\natm.deposit([0,1,0,1,1]); // Deposits 1 $50, $200, and $500 banknote.\n                          // The banknotes in the machine are now [0,1,0,3,1].\natm.withdraw(600);        // Returns [-1]. The machine will try to use a $500 banknote\n                          // and then be unable to complete the remaining $100,\n                          // so the withdraw request will be rejected.\n                          // Since the request is rejected, the number of banknotes\n                          // in the machine is not modified.\natm.withdraw(550);        // Returns [0,1,0,0,1]. The machine uses 1 $50 banknote\n                          // and 1 $500 banknote.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4204', '1805', '1', 'scores = [5,2,9,8,4], edges = [[0,1],[1,2],[2,3],[0,2],[1,3],[2,4]]', '24', 'The figure above shows the graph and the chosen node sequence [0,1,2,3].\nThe score of the node sequence is 5 + 2 + 9 + 8 = 24.\nIt can be shown that no other node sequence has a score of more than 24.\nNote that the sequences [3,1,2,0] and [1,0,2,3] are also valid and have a score of 24.\nThe sequence [0,3,2,4] is not valid since no edge connects nodes 0 and 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4205', '1805', '2', 'scores = [9,20,6,4,11,12], edges = [[0,3],[5,3],[2,4],[1,3]]', '-1', 'The figure above shows the graph.\nThere are no valid node sequences of length 4, so we return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4206', '1806', '2', 's = \"00000000\", k = 3', '\"000\"', 'We divide s into \"000\", \"000\", and \"00\".\nThen we calculate the digit sum of each group: 0 + 0 + 0 = 0, 0 + 0 + 0 = 0, and 0 + 0 = 0. \ns becomes \"0\" + \"0\" + \"0\" = \"000\", whose length is equal to k, so we return \"000\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4207', '1807', '1', 'tasks = [2,2,3,3,2,4,4,4,4,4]', '4', 'To complete all the tasks, a possible plan is:\n- In the first round, you complete 3 tasks of difficulty level 2. \n- In the second round, you complete 2 tasks of difficulty level 3. \n- In the third round, you complete 3 tasks of difficulty level 4. \n- In the fourth round, you complete 2 tasks of difficulty level 4.  \nIt can be shown that all the tasks cannot be completed in fewer than 4 rounds, so the answer is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4208', '1807', '2', 'tasks = [2,3,3]', '-1', 'There is only 1 task of difficulty level 2, but in each round, you can only complete either 2 or 3 tasks of the same difficulty level. Hence, you cannot complete all the tasks, and the answer is -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4209', '1808', '1', 'grid = [[23,17,15,3,20],[8,1,20,27,11],[9,4,6,2,21],[40,9,1,10,6],[22,7,4,5,3]]', '3', 'The grid on the left shows a valid cornered path.\nIt has a product of 15 * 20 * 6 * 1 * 10 = 18000 which has 3 trailing zeros.\nIt can be shown that this is the maximum trailing zeros in the product of a cornered path.\n\nThe grid in the middle is not a cornered path as it has more than one turn.\nThe grid on the right is not a cornered path as it requires a return to a previously visited cell.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4210', '1808', '2', 'grid = [[4,3,2],[7,6,1],[8,8,8]]', '0', 'The grid is shown in the figure above.\nThere are no cornered paths in the grid that result in a product with a trailing zero.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4211', '1809', '1', 'parent = [-1,0,0,1,1,2], s = \"abacbe\"', '3', 'The longest path where each two adjacent nodes have different characters in the tree is the path: 0 -&gt; 1 -&gt; 3. The length of this path is 3, so 3 is returned.\nIt can be proven that there is no longer path that satisfies the conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4212', '1809', '2', 'parent = [-1,0,0,0], s = \"aabc\"', '3', 'The longest path where each two adjacent nodes have different characters is the path: 2 -&gt; 0 -&gt; 3. The length of this path is 3, so 3 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4213', '1810', '1', 'nums = [[<u><strong>3</strong></u>,1,2,<u><strong>4</strong></u>,5],[1,2,<u><strong>3</strong></u>,<u><strong>4</strong></u>],[<u><strong>3</strong></u>,<u><strong>4</strong></u>,5,6]]', '[3,4]', 'The only integers present in each of nums[0] = [<u><strong>3</strong></u>,1,2,<u><strong>4</strong></u>,5], nums[1] = [1,2,<u><strong>3</strong></u>,<u><strong>4</strong></u>], and nums[2] = [<u><strong>3</strong></u>,<u><strong>4</strong></u>,5,6] are 3 and 4, so we return [3,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4214', '1810', '2', 'nums = [[1,2,3],[4,5,6]]', '[]', 'There does not exist any integer present both in nums[0] and nums[1], so we return an empty list [].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4215', '1811', '1', 'circles = [[2,2,1]]', '5', 'The figure above shows the given circle.\nThe lattice points present inside the circle are (1, 2), (2, 1), (2, 2), (2, 3), and (3, 2) and are shown in green.\nOther points such as (1, 1) and (1, 3), which are shown in red, are not considered inside the circle.\nHence, the number of lattice points present inside at least one circle is 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4216', '1811', '2', 'circles = [[2,2,2],[3,4,1]]', '16', 'The figure above shows the given circles.\nThere are exactly 16 lattice points which are present inside at least one circle. \nSome of them are (0, 2), (2, 0), (2, 4), (3, 2), and (4, 4).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4217', '1813', '1', 'flowers = [[1,6],[3,7],[9,12],[4,13]], poeple = [2,3,7,11]', '[1,2,2,2]', 'The figure above shows the times when the flowers are in full bloom and when the people arrive.\nFor each person, we return the number of flowers in full bloom during their arrival.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4218', '1813', '2', 'flowers = [[1,10],[3,3]], poeple = [3,3,2]', '[2,2,1]', 'The figure above shows the times when the flowers are in full bloom and when the people arrive.\nFor each person, we return the number of flowers in full bloom during their arrival.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4219', '1814', '1', 'words = [\"a\",\"b\",\"c\",\"ab\",\"bc\",\"abc\"], s = \"abc\"', '3', 'The strings in words which are a prefix of s = \"abc\" are:\n\"a\", \"ab\", and \"abc\".\nThus the number of strings in words which are a prefix of s is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4220', '1814', '2', 'words = [\"a\",\"a\"], s = \"aa\"', '2\n<strong>', '</strong>Both of the strings are a prefix of s. \nNote that the same string can occur multiple times in words, and it should be counted each time.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4221', '1815', '1', 'nums = [2,5,3,9,5,3]', '3', '- The average difference of index 0 is: |2 / 1 - (5 + 3 + 9 + 5 + 3) / 5| = |2 / 1 - 25 / 5| = |2 - 5| = 3.\n- The average difference of index 1 is: |(2 + 5) / 2 - (3 + 9 + 5 + 3) / 4| = |7 / 2 - 20 / 4| = |3 - 5| = 2.\n- The average difference of index 2 is: |(2 + 5 + 3) / 3 - (9 + 5 + 3) / 3| = |10 / 3 - 17 / 3| = |3 - 5| = 2.\n- The average difference of index 3 is: |(2 + 5 + 3 + 9) / 4 - (5 + 3) / 2| = |19 / 4 - 8 / 2| = |4 - 4| = 0.\n- The average difference of index 4 is: |(2 + 5 + 3 + 9 + 5) / 5 - 3 / 1| = |24 / 5 - 3 / 1| = |4 - 3| = 1.\n- The average difference of index 5 is: |(2 + 5 + 3 + 9 + 5 + 3) / 6 - 0| = |27 / 6 - 0| = |4 - 0| = 4.\nThe average difference of index 3 is the minimum average difference so return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4222', '1815', '2', 'nums = [0]', '0', 'The only index is 0 so return 0.\nThe average difference of index 0 is: |0 / 1 - 0| = |0 - 0| = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4223', '1816', '1', 'm = 4, n = 6, guards = [[0,0],[1,1],[2,3]], walls = [[0,1],[2,2],[1,4]]', '7', 'The guarded and unguarded cells are shown in red and green respectively in the above diagram.\nThere are a total of 7 unguarded cells, so we return 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4224', '1816', '2', 'm = 3, n = 3, guards = [[1,1]], walls = [[0,1],[1,0],[2,1],[1,2]]', '4', 'The unguarded cells are shown in green in the above diagram.\nThere are a total of 4 unguarded cells, so we return 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4225', '1817', '1', 'grid = [[0,2,0,0,0,0,0],[0,0,0,2,2,1,0],[0,2,0,0,1,2,0],[0,0,2,2,2,0,2],[0,0,0,0,0,0,0]]', '3', 'The figure above shows the scenario where you stay in the initial position for 3 minutes.\nYou will still be able to safely reach the safehouse.\nStaying for more than 3 minutes will not allow you to safely reach the safehouse.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4226', '1817', '2', 'grid = [[0,0,0,0],[0,1,2,0],[0,2,0,0]]', '-1', 'The figure above shows the scenario where you immediately move towards the safehouse.\nFire will spread to any cell you move towards and it is impossible to safely reach the safehouse.\nThus, -1 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4227', '1817', '3', 'grid = [[0,0,0],[2,2,0],[1,2,0]]', '1000000000', 'The figure above shows the initial grid.\nNotice that the fire is contained by walls and you will always be able to safely reach the safehouse.\nThus, 10<sup>9</sup> is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4228', '1818', '1', 'number = \"123\", digit = \"3\"', '\"12\"', 'There is only one \'3\' in \"123\". After removing \'3\', the result is \"12\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4229', '1818', '2', 'number = \"1231\", digit = \"1\"', '\"231\"', 'We can remove the first \'1\' to get \"231\" or remove the second \'1\' to get \"123\".\nSince 231 &gt; 123, we return \"231\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4230', '1818', '3', 'number = \"551\", digit = \"5\"', '\"51\"', 'We can remove either the first or second \'5\' from \"551\".\nBoth result in the string \"51\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4231', '1819', '1', 'cards = [3,4,2,3,4,7]', '4', 'We can pick up the cards [3,4,2,3] which contain a matching pair of cards with value 3. Note that picking up the cards [4,2,3,4] is also optimal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4232', '1819', '2', 'cards = [1,0,5,3]', '-1', 'There is no way to pick up a set of consecutive cards that contain a pair of matching cards.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4233', '1820', '1', 'nums = [<u><strong>2</strong></u>,3,3,<u><strong>2</strong></u>,<u><strong>2</strong></u>], k = 2, p = 2', '11', 'The elements at indices 0, 3, and 4 are divisible by p = 2.\nThe 11 distinct subarrays which have at most k = 2 elements divisible by 2 are:\n[2], [2,3], [2,3,3], [2,3,3,2], [3], [3,3], [3,3,2], [3,3,2,2], [3,2], [3,2,2], and [2,2].\nNote that the subarrays [2] and [3] occur more than once in nums, but they should each be counted only once.\nThe subarray [2,3,3,2,2] should not be counted because it has 3 elements that are divisible by 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4234', '1820', '2', 'nums = [1,2,3,4], k = 4, p = 1', '10', 'All element of nums are divisible by p = 1.\nAlso, every subarray of nums will have at most 4 elements that are divisible by 1.\nSince all subarrays are distinct, the total number of subarrays satisfying all the constraints is 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4235', '1821', '1', 's = \"abbca\"', '28', 'The following are the substrings of \"abbca\":\n- Substrings of length 1: \"a\", \"b\", \"b\", \"c\", \"a\" have an appeal of 1, 1, 1, 1, and 1 respectively. The sum is 5.\n- Substrings of length 2: \"ab\", \"bb\", \"bc\", \"ca\" have an appeal of 2, 1, 2, and 2 respectively. The sum is 7.\n- Substrings of length 3: \"abb\", \"bbc\", \"bca\" have an appeal of 2, 2, and 3 respectively. The sum is 7.\n- Substrings of length 4: \"abbc\", \"bbca\" have an appeal of 3 and 3 respectively. The sum is 6.\n- Substrings of length 5: \"abbca\" has an appeal of 3. The sum is 3.\nThe total sum is 5 + 7 + 7 + 6 + 3 = 28.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4236', '1821', '2', 's = \"code\"', '20', 'The following are the substrings of \"code\":\n- Substrings of length 1: \"c\", \"o\", \"d\", \"e\" have an appeal of 1, 1, 1, and 1 respectively. The sum is 4.\n- Substrings of length 2: \"co\", \"od\", \"de\" have an appeal of 2, 2, and 2 respectively. The sum is 6.\n- Substrings of length 3: \"cod\", \"ode\" have an appeal of 3 and 3 respectively. The sum is 6.\n- Substrings of length 4: \"code\" has an appeal of 4. The sum is 4.\nThe total sum is 4 + 6 + 6 + 4 = 20.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4237', '1822', '1', 'num = \"6<strong><u>777</u></strong>133339\"', '\"777\"', 'There are two distinct good integers: \"777\" and \"333\".\n\"777\" is the largest, so we return \"777\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4238', '1822', '2', 'num = \"23<strong><u>000</u></strong>19\"', '\"000\"', '\"000\" is the only good integer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4239', '1822', '3', 'num = \"42352338\"', '\"\"', 'No substring of length 3 consists of only one unique digit. Therefore, there are no good integers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4240', '1823', '1', 'root = [4,8,5,0,1,null,6]', '5', 'For the node with value 4: The average of its subtree is (4 + 8 + 5 + 0 + 1 + 6) / 6 = 24 / 6 = 4.\nFor the node with value 5: The average of its subtree is (5 + 6) / 2 = 11 / 2 = 5.\nFor the node with value 0: The average of its subtree is 0 / 1 = 0.\nFor the node with value 1: The average of its subtree is 1 / 1 = 1.\nFor the node with value 6: The average of its subtree is 6 / 1 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4241', '1823', '2', 'root = [1]', '1', 'For the node with value 1: The average of its subtree is 1 / 1 = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4242', '1825', '1', 'grid = [[\"(\",\"(\",\"(\"],[\")\",\"(\",\")\"],[\"(\",\"(\",\")\"],[\"(\",\"(\",\")\"]]', 'true', 'The above diagram shows two possible paths that form valid parentheses strings.\nThe first path shown results in the valid parentheses string \"()(())\".\nThe second path shown results in the valid parentheses string \"((()))\".\nNote that there may be other valid parentheses string paths.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4243', '1825', '2', 'grid = [[\")\",\")\"],[\"(\",\"(\"]]', 'false', 'The two possible paths form the parentheses strings \"))(\" and \")((\". Since neither of them are valid parentheses strings, we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4244', '1826', '1', 'num = 240, k = 2', '2', 'The following are the substrings of num of length k:\n- \"24\" from \"<strong><u>24</u></strong>0\": 24 is a divisor of 240.\n- \"40\" from \"2<u><strong>40</strong></u>\": 40 is a divisor of 240.\nTherefore, the k-beauty is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4245', '1826', '2', 'num = 430043, k = 2', '2', 'The following are the substrings of num of length k:\n- \"43\" from \"<u><strong>43</strong></u>0043\": 43 is a divisor of 430043.\n- \"30\" from \"4<u><strong>30</strong></u>043\": 30 is not a divisor of 430043.\n- \"00\" from \"43<u><strong>00</strong></u>43\": 0 is not a divisor of 430043.\n- \"04\" from \"430<u><strong>04</strong></u>3\": 4 is not a divisor of 430043.\n- \"43\" from \"4300<u><strong>43</strong></u>\": 43 is a divisor of 430043.\nTherefore, the k-beauty is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4246', '1827', '1', 'nums = [10,4,-8,7]', '2', 'There are three ways of splitting nums into two non-empty parts:\n- Split nums at index 0. Then, the first part is [10], and its sum is 10. The second part is [4,-8,7], and its sum is 3. Since 10 &gt;= 3, i = 0 is a valid split.\n- Split nums at index 1. Then, the first part is [10,4], and its sum is 14. The second part is [-8,7], and its sum is -1. Since 14 &gt;= -1, i = 1 is a valid split.\n- Split nums at index 2. Then, the first part is [10,4,-8], and its sum is 6. The second part is [7], and its sum is 7. Since 6 &lt; 7, i = 2 is not a valid split.\nThus, the number of valid splits in nums is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4247', '1827', '2', 'nums = [2,3,1,0]', '2', 'There are two valid splits in nums:\n- Split nums at index 1. Then, the first part is [2,3], and its sum is 5. The second part is [1,0], and its sum is 1. Since 5 &gt;= 1, i = 1 is a valid split. \n- Split nums at index 2. Then, the first part is [2,3,1], and its sum is 6. The second part is [0], and its sum is 0. Since 6 &gt;= 0, i = 2 is a valid split.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4248', '1828', '1', 'tiles = [[1,5],[10,11],[12,18],[20,25],[30,32]], carpetLen = 10', '9', 'Place the carpet starting on tile 10. \nIt covers 9 white tiles, so we return 9.\nNote that there may be other places where the carpet covers 9 white tiles.\nIt can be shown that the carpet cannot cover more than 9 white tiles.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4249', '1828', '2', 'tiles = [[10,11],[1,1]], carpetLen = 2', '2', 'Place the carpet starting on tile 10. \nIt covers 2 white tiles, so we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4250', '1829', '1', 's = \"aababbb\"', '3', 'All possible variances along with their respective substrings are listed below:\n- Variance 0 for substrings \"a\", \"aa\", \"ab\", \"abab\", \"aababb\", \"ba\", \"b\", \"bb\", and \"bbb\".\n- Variance 1 for substrings \"aab\", \"aba\", \"abb\", \"aabab\", \"ababb\", \"aababbb\", and \"bab\".\n- Variance 2 for substrings \"aaba\", \"ababbb\", \"abbb\", and \"babb\".\n- Variance 3 for substring \"babbb\".\nSince the largest possible variance is 3, we return it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4251', '1829', '2', 's = \"abcde\"', '0', 'No letter occurs more than once in s, so the variance of every substring is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4252', '1830', '1', 'words = [\"abba\",\"baba\",\"bbaa\",\"cd\",\"cd\"]', '[\"abba\",\"cd\"]', 'One of the ways we can obtain the resultant array is by using the following operations:\n- Since words[2] = \"bbaa\" and words[1] = \"baba\" are anagrams, we choose index 2 and delete words[2].\n  Now words = [\"abba\",\"baba\",\"cd\",\"cd\"].\n- Since words[1] = \"baba\" and words[0] = \"abba\" are anagrams, we choose index 1 and delete words[1].\n  Now words = [\"abba\",\"cd\",\"cd\"].\n- Since words[2] = \"cd\" and words[1] = \"cd\" are anagrams, we choose index 2 and delete words[2].\n  Now words = [\"abba\",\"cd\"].\nWe can no longer perform any operations, so [\"abba\",\"cd\"] is the final answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4253', '1830', '2', 'words = [\"a\",\"b\",\"c\",\"d\",\"e\"]', '[\"a\",\"b\",\"c\",\"d\",\"e\"]', 'No two adjacent strings in words are anagrams of each other, so no operations are performed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4254', '1831', '1', 'bottom = 2, top = 9, special = [4,6]', '3', 'The following are the ranges (inclusive) of consecutive floors without a special floor:\n- (2, 3) with a total amount of 2 floors.\n- (5, 5) with a total amount of 1 floor.\n- (7, 9) with a total amount of 3 floors.\nTherefore, we return the maximum number which is 3 floors.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4255', '1831', '2', 'bottom = 6, top = 8, special = [7,6,8]', '0', 'Every floor rented is a special floor, so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4256', '1832', '1', 'candidates = [16,17,71,62,12,24,14]', '4', 'The combination [16,17,62,24] has a bitwise AND of 16 &amp; 17 &amp; 62 &amp; 24 = 16 &gt; 0.\nThe size of the combination is 4.\nIt can be shown that no combination with a size greater than 4 has a bitwise AND greater than 0.\nNote that more than one combination may have the largest size.\nFor example, the combination [62,12,24,14] has a bitwise AND of 62 &amp; 12 &amp; 24 &amp; 14 = 8 &gt; 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4257', '1832', '2', 'candidates = [8,8]', '2', 'The largest combination [8,8] has a bitwise AND of 8 &amp; 8 = 8 &gt; 0.\nThe size of the combination is 2, so we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4258', '1833', '1', '[\"CountIntervals\", \"add\", \"add\", \"count\", \"add\", \"count\"]\n[[], [2, 3], [7, 10], [], [5, 8], []]', '[null, null, null, 6, null, 8]', 'CountIntervals countIntervals = new CountIntervals(); // initialize the object with an empty set of intervals. \ncountIntervals.add(2, 3);  // add [2, 3] to the set of intervals.\ncountIntervals.add(7, 10); // add [7, 10] to the set of intervals.\ncountIntervals.count();    // return 6\n                           // the integers 2 and 3 are present in the interval [2, 3].\n                           // the integers 7, 8, 9, and 10 are present in the interval [7, 10].\ncountIntervals.add(5, 8);  // add [5, 8] to the set of intervals.\ncountIntervals.count();    // return 8\n                           // the integers 2 and 3 are present in the interval [2, 3].\n                           // the integers 5 and 6 are present in the interval [5, 8].\n                           // the integers 7 and 8 are present in the intervals [5, 8] and [7, 10].\n                           // the integers 9 and 10 are present in the interval [7, 10].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4259', '1834', '1', 's = \"foobar\", letter = \"o\"', '33', 'The percentage of characters in s that equal the letter \'o\' is 2 / 6 * 100% = 33% when rounded down, so we return 33.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4260', '1834', '2', 's = \"jjjj\", letter = \"k\"', '0', 'The percentage of characters in s that equal the letter \'k\' is 0%, so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4261', '1835', '1', 'capacity = [2,3,4,5], rocks = [1,2,4,4], additionalRocks = 2', '3', 'Place 1 rock in bag 0 and 1 rock in bag 1.\nThe number of rocks in each bag are now [2,3,4,4].\nBags 0, 1, and 2 have full capacity.\nThere are 3 bags at full capacity, so we return 3.\nIt can be shown that it is not possible to have more than 3 bags at full capacity.\nNote that there may be other ways of placing the rocks that result in an answer of 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4262', '1835', '2', 'capacity = [10,2,2], rocks = [2,2,0], additionalRocks = 100', '3', 'Place 8 rocks in bag 0 and 2 rocks in bag 2.\nThe number of rocks in each bag are now [10,2,2].\nBags 0, 1, and 2 have full capacity.\nThere are 3 bags at full capacity, so we return 3.\nIt can be shown that it is not possible to have more than 3 bags at full capacity.\nNote that we did not use all of the additional rocks.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4263', '1836', '1', 'stockPrices = [[1,7],[2,6],[3,5],[4,4],[5,4],[6,3],[7,2],[8,1]]', '3', 'The diagram above represents the input, with the X-axis representing the day and Y-axis representing the price.\nThe following 3 lines can be drawn to represent the line chart:\n- Line 1 (in red) from (1,7) to (4,4) passing through (1,7), (2,6), (3,5), and (4,4).\n- Line 2 (in blue) from (4,4) to (5,4).\n- Line 3 (in green) from (5,4) to (8,1) passing through (5,4), (6,3), (7,2), and (8,1).\nIt can be shown that it is not possible to represent the line chart using less than 3 lines.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4264', '1836', '2', 'stockPrices = [[3,4],[1,2],[7,8],[2,3]]', '1', 'As shown in the diagram above, the line chart can be represented with a single line.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4265', '1837', '1', 'strength = [1,3,1,2]', '44', 'The following are all the contiguous groups of wizards:\n- [1] from [<u><strong>1</strong></u>,3,1,2] has a total strength of min([1]) * sum([1]) = 1 * 1 = 1\n- [3] from [1,<u><strong>3</strong></u>,1,2] has a total strength of min([3]) * sum([3]) = 3 * 3 = 9\n- [1] from [1,3,<u><strong>1</strong></u>,2] has a total strength of min([1]) * sum([1]) = 1 * 1 = 1\n- [2] from [1,3,1,<u><strong>2</strong></u>] has a total strength of min([2]) * sum([2]) = 2 * 2 = 4\n- [1,3] from [<u><strong>1,3</strong></u>,1,2] has a total strength of min([1,3]) * sum([1,3]) = 1 * 4 = 4\n- [3,1] from [1,<u><strong>3,1</strong></u>,2] has a total strength of min([3,1]) * sum([3,1]) = 1 * 4 = 4\n- [1,2] from [1,3,<u><strong>1,2</strong></u>] has a total strength of min([1,2]) * sum([1,2]) = 1 * 3 = 3\n- [1,3,1] from [<u><strong>1,3,1</strong></u>,2] has a total strength of min([1,3,1]) * sum([1,3,1]) = 1 * 5 = 5\n- [3,1,2] from [1,<u><strong>3,1,2</strong></u>] has a total strength of min([3,1,2]) * sum([3,1,2]) = 1 * 6 = 6\n- [1,3,1,2] from [<u><strong>1,3,1,2</strong></u>] has a total strength of min([1,3,1,2]) * sum([1,3,1,2]) = 1 * 7 = 7\nThe sum of all the total strengths is 1 + 9 + 1 + 4 + 4 + 4 + 3 + 5 + 6 + 7 = 44.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4266', '1837', '2', 'strength = [5,4,6]', '213', 'The following are all the contiguous groups of wizards: \n- [5] from [<u><strong>5</strong></u>,4,6] has a total strength of min([5]) * sum([5]) = 5 * 5 = 25\n- [4] from [5,<u><strong>4</strong></u>,6] has a total strength of min([4]) * sum([4]) = 4 * 4 = 16\n- [6] from [5,4,<u><strong>6</strong></u>] has a total strength of min([6]) * sum([6]) = 6 * 6 = 36\n- [5,4] from [<u><strong>5,4</strong></u>,6] has a total strength of min([5,4]) * sum([5,4]) = 4 * 9 = 36\n- [4,6] from [5,<u><strong>4,6</strong></u>] has a total strength of min([4,6]) * sum([4,6]) = 4 * 10 = 40\n- [5,4,6] from [<u><strong>5,4,6</strong></u>] has a total strength of min([5,4,6]) * sum([5,4,6]) = 4 * 15 = 60\nThe sum of all the total strengths is 25 + 16 + 36 + 36 + 40 + 60 = 213.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4267', '1838', '1', 'num = \"1210\"', 'true', 'num[0] = \'1\'. The digit 0 occurs once in num.\nnum[1] = \'2\'. The digit 1 occurs twice in num.\nnum[2] = \'1\'. The digit 2 occurs once in num.\nnum[3] = \'0\'. The digit 3 occurs zero times in num.\nThe condition holds true for every index in \"1210\", so return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4268', '1838', '2', 'num = \"030\"', 'false', 'num[0] = \'0\'. The digit 0 should occur zero times, but actually occurs twice in num.\nnum[1] = \'3\'. The digit 1 should occur three times, but actually occurs zero times in num.\nnum[2] = \'0\'. The digit 2 occurs zero times in num.\nThe indices 0 and 1 both violate the condition, so return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4269', '1839', '1', 'messages = [\"Hello userTwooo\",\"Hi userThree\",\"Wonderful day Alice\",\"Nice day userThree\"], senders = [\"Alice\",\"userTwo\",\"userThree\",\"Alice\"]', '\"Alice\"', 'Alice sends a total of 2 + 3 = 5 words.\nuserTwo sends a total of 2 words.\nuserThree sends a total of 3 words.\nSince Alice has the largest word count, we return \"Alice\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4270', '1839', '2', 'messages = [\"How is leetcode for everyone\",\"Leetcode is useful for practice\"], senders = [\"Bob\",\"Charlie\"]', '\"Charlie\"', 'Bob sends a total of 5 words.\nCharlie sends a total of 5 words.\nSince there is a tie for the largest word count, we return the sender with the lexicographically larger name, Charlie.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4271', '1840', '1', 'n = 5, roads = [[0,1],[1,2],[2,3],[0,2],[1,3],[2,4]]', '43', 'The figure above shows the country and the assigned values of [2,4,5,3,1].\n- The road (0,1) has an importance of 2 + 4 = 6.\n- The road (1,2) has an importance of 4 + 5 = 9.\n- The road (2,3) has an importance of 5 + 3 = 8.\n- The road (0,2) has an importance of 2 + 5 = 7.\n- The road (1,3) has an importance of 4 + 3 = 7.\n- The road (2,4) has an importance of 5 + 1 = 6.\nThe total importance of all roads is 6 + 9 + 8 + 7 + 7 + 6 = 43.\nIt can be shown that we cannot obtain a greater total importance than 43.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4272', '1840', '2', 'n = 5, roads = [[0,3],[2,4],[1,3]]', '20', 'The figure above shows the country and the assigned values of [4,3,2,5,1].\n- The road (0,3) has an importance of 4 + 5 = 9.\n- The road (2,4) has an importance of 2 + 1 = 3.\n- The road (1,3) has an importance of 3 + 5 = 8.\nThe total importance of all roads is 9 + 3 + 8 = 20.\nIt can be shown that we cannot obtain a greater total importance than 20.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4273', '1841', '1', '[\"BookMyShow\", \"gather\", \"gather\", \"scatter\", \"scatter\"]\n[[2, 5], [4, 0], [2, 0], [5, 1], [5, 1]]', '[null, [0, 0], [], true, false]', 'BookMyShow bms = new BookMyShow(2, 5); // There are 2 rows with 5 seats each \nbms.gather(4, 0); // return [0, 0]\n                  // The group books seats [0, 3] of row 0. \nbms.gather(2, 0); // return []\n                  // There is only 1 seat left in row 0,\n                  // so it is not possible to book 2 consecutive seats. \nbms.scatter(5, 1); // return True\n                   // The group books seat 4 of row 0 and seats [0, 3] of row 1. \nbms.scatter(5, 1); // return False\n                   // There is only one seat left in the hall.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4274', '1842', '1', 's = \"ilovecodingonleetcode\", target = \"code\"', '2', 'For the first copy of \"code\", take the letters at indices 4, 5, 6, and 7.\nFor the second copy of \"code\", take the letters at indices 17, 18, 19, and 20.\nThe strings that are formed are \"ecod\" and \"code\" which can both be rearranged into \"code\".\nWe can make at most two copies of \"code\", so we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4275', '1842', '2', 's = \"abcba\", target = \"abc\"', '1', 'We can make one copy of \"abc\" by taking the letters at indices 0, 1, and 2.\nWe can make at most one copy of \"abc\", so we return 1.\nNote that while there is an extra \'a\' and \'b\' at indices 3 and 4, we cannot reuse the letter \'c\' at index 2, so we cannot make a second copy of \"abc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4276', '1842', '3', 's = \"abbaccaddaeea\", target = \"aaaaa\"', '1', 'We can make one copy of \"aaaaa\" by taking the letters at indices 0, 3, 6, 9, and 12.\nWe can make at most one copy of \"aaaaa\", so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4277', '1843', '1', 'sentence = \"there are $1 $2 and 5$ candies in the shop\", discount = 50', '\"there are $0.50 $1.00 and 5$ candies in the shop\"', 'The words which represent prices are \"$1\" and \"$2\". \n- A 50% discount on \"$1\" yields \"$0.50\", so \"$1\" is replaced by \"$0.50\".\n- A 50% discount on \"$2\" yields \"$1\". Since we need to have exactly 2 decimal places after a price, we replace \"$2\" with \"$1.00\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4278', '1843', '2', 'sentence = \"1 2 $3 4 $5 $6 7 8$ $9 $10$\", discount = 100', '\"1 2 $0.00 4 $0.00 $0.00 7 8$ $0.00 $10$\"', 'Applying a 100% discount on any price will result in 0.\nThe words representing prices are \"$3\", \"$5\", \"$6\", and \"$9\".\nEach of them is replaced by \"$0.00\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4279', '1844', '1', 'nums = [5,3,4,4,7,3,6,11,8,5,11]', '3', 'The following are the steps performed:\n- Step 1: [5,<strong><u>3</u></strong>,4,4,7,<u><strong>3</strong></u>,6,11,<u><strong>8</strong></u>,<u><strong>5</strong></u>,11] becomes [5,4,4,7,6,11,11]\n- Step 2: [5,<u><strong>4</strong></u>,4,7,<u><strong>6</strong></u>,11,11] becomes [5,4,7,11,11]\n- Step 3: [5,<u><strong>4</strong></u>,7,11,11] becomes [5,7,11,11]\n[5,7,11,11] is a non-decreasing array. Therefore, we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4280', '1844', '2', 'nums = [4,5,7,7,13]', '0', 'nums is already a non-decreasing array. Therefore, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4281', '1845', '1', 'grid = [[0,1,1],[1,1,0],[1,1,0]]', '2', 'We can remove the obstacles at (0, 1) and (0, 2) to create a path from (0, 0) to (2, 2).\nIt can be shown that we need to remove at least 2 obstacles, so we return 2.\nNote that there may be other ways to remove 2 obstacles to create a path.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4282', '1845', '2', 'grid = [[0,1,0,0,0],[0,1,0,1,0],[0,0,0,1,0]]', '0', 'We can move from (0, 0) to (2, 4) without removing any obstacles, so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4283', '1846', '1', 'nums = [1,3,5,2,4,8,2,2]', '1', 'The following arrays are the results of applying the algorithm repeatedly.\nFirst: nums = [1,5,4,2]\nSecond: nums = [1,4]\nThird: nums = [1]\n1 is the last remaining number, so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4284', '1846', '2', 'nums = [3]', '3', '3 is already the last remaining number, so we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4285', '1847', '1', 'nums = [3,6,1,2,5], k = 2', '2', 'We can partition nums into the two subsequences [3,1,2] and [6,5].\nThe difference between the maximum and minimum value in the first subsequence is 3 - 1 = 2.\nThe difference between the maximum and minimum value in the second subsequence is 6 - 5 = 1.\nSince two subsequences were created, we return 2. It can be shown that 2 is the minimum number of subsequences needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4286', '1847', '2', 'nums = [1,2,3], k = 1', '2', 'We can partition nums into the two subsequences [1,2] and [3].\nThe difference between the maximum and minimum value in the first subsequence is 2 - 1 = 1.\nThe difference between the maximum and minimum value in the second subsequence is 3 - 3 = 0.\nSince two subsequences were created, we return 2. Note that another optimal solution is to partition nums into the two subsequences [1] and [2,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4287', '1847', '3', 'nums = [2,2,4,5], k = 0', '3', 'We can partition nums into the three subsequences [2,2], [4], and [5].\nThe difference between the maximum and minimum value in the first subsequences is 2 - 2 = 0.\nThe difference between the maximum and minimum value in the second subsequences is 4 - 4 = 0.\nThe difference between the maximum and minimum value in the third subsequences is 5 - 5 = 0.\nSince three subsequences were created, we return 3. It can be shown that 3 is the minimum number of subsequences needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4288', '1848', '1', 'nums = [1,2,4,6], operations = [[1,3],[4,7],[6,1]]', '[3,2,7,1]', 'We perform the following operations on nums:\n- Replace the number 1 with 3. nums becomes [<u><strong>3</strong></u>,2,4,6].\n- Replace the number 4 with 7. nums becomes [3,2,<u><strong>7</strong></u>,6].\n- Replace the number 6 with 1. nums becomes [3,2,7,<u><strong>1</strong></u>].\nWe return the final array [3,2,7,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4289', '1848', '2', 'nums = [1,2], operations = [[1,3],[2,1],[3,2]]', '[2,1]', 'We perform the following operations to nums:\n- Replace the number 1 with 3. nums becomes [<u><strong>3</strong></u>,2].\n- Replace the number 2 with 1. nums becomes [3,<u><strong>1</strong></u>].\n- Replace the number 3 with 2. nums becomes [<u><strong>2</strong></u>,1].\nWe return the array [2,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4290', '1849', '1', '[\"TextEditor\", \"addText\", \"deleteText\", \"addText\", \"cursorRight\", \"cursorLeft\", \"deleteText\", \"cursorLeft\", \"cursorRight\"]\n[[], [\"leetcode\"], [4], [\"practice\"], [3], [8], [10], [2], [6]]', '[null, null, 4, null, \"etpractice\", \"leet\", 4, \"\", \"practi\"]', 'TextEditor textEditor = new TextEditor(); // The current text is \"|\". (The \'|\' character represents the cursor)\ntextEditor.addText(\"leetcode\"); // The current text is \"leetcode|\".\ntextEditor.deleteText(4); // return 4\n                          // The current text is \"leet|\". \n                          // 4 characters were deleted.\ntextEditor.addText(\"practice\"); // The current text is \"leetpractice|\". \ntextEditor.cursorRight(3); // return \"etpractice\"\n                           // The current text is \"leetpractice|\". \n                           // The cursor cannot be moved beyond the actual text and thus did not move.\n                           // \"etpractice\" is the last 10 characters to the left of the cursor.\ntextEditor.cursorLeft(8); // return \"leet\"\n                          // The current text is \"leet|practice\".\n                          // \"leet\" is the last min(10, 4) = 4 characters to the left of the cursor.\ntextEditor.deleteText(10); // return 4\n                           // The current text is \"|practice\".\n                           // Only 4 characters were deleted.\ntextEditor.cursorLeft(2); // return \"\"\n                          // The current text is \"|practice\".\n                          // The cursor cannot be moved beyond the actual text and thus did not move. \n                          // \"\" is the last min(10, 0) = 0 characters to the left of the cursor.\ntextEditor.cursorRight(6); // return \"practi\"\n                           // The current text is \"practi|ce\".\n                           // \"practi\" is the last min(10, 6) = 6 characters to the left of the cursor.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4291', '1850', '1', 'password = \"IloveLe3tcode!\"', 'true', 'The password meets all the requirements. Therefore, we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4292', '1850', '2', 'password = \"Me+You--IsMyDream\"', 'false', 'The password does not contain a digit and also contains 2 of the same character in adjacent positions. Therefore, we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4293', '1850', '3', 'password = \"1aB!\"', 'false', 'The password does not meet the length requirement. Therefore, we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4294', '1851', '1', 'spells = [5,1,3], potions = [1,2,3,4,5], success = 7', '[4,0,3]', '- 0<sup>th</sup> spell: 5 * [1,2,3,4,5] = [5,<u><strong>10</strong></u>,<u><strong>15</strong></u>,<u><strong>20</strong></u>,<u><strong>25</strong></u>]. 4 pairs are successful.\n- 1<sup>st</sup> spell: 1 * [1,2,3,4,5] = [1,2,3,4,5]. 0 pairs are successful.\n- 2<sup>nd</sup> spell: 3 * [1,2,3,4,5] = [3,6,<u><strong>9</strong></u>,<u><strong>12</strong></u>,<u><strong>15</strong></u>]. 3 pairs are successful.\nThus, [4,0,3] is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4295', '1851', '2', 'spells = [3,1,2], potions = [8,5,8], success = 16', '[2,0,2]', '- 0<sup>th</sup> spell: 3 * [8,5,8] = [<u><strong>24</strong></u>,15,<u><strong>24</strong></u>]. 2 pairs are successful.\n- 1<sup>st</sup> spell: 1 * [8,5,8] = [8,5,8]. 0 pairs are successful. \n- 2<sup>nd</sup> spell: 2 * [8,5,8] = [<strong><u>16</u></strong>,10,<u><strong>16</strong></u>]. 2 pairs are successful. \nThus, [2,0,2] is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4296', '1852', '1', 's = \"fool3e7bar\", sub = \"leet\", mappings = [[\"e\",\"3\"],[\"t\",\"7\"],[\"t\",\"8\"]]', 'true', 'Replace the first \'e\' in sub with \'3\' and \'t\' in sub with \'7\'.\nNow sub = \"l3e7\" is a substring of s, so we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4297', '1852', '2', 's = \"fooleetbar\", sub = \"f00l\", mappings = [[\"o\",\"0\"]]', 'false', 'The string \"f00l\" is not a substring of s and no replacements can be made.\nNote that we cannot replace \'0\' with \'o\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4298', '1852', '3', 's = \"Fool33tbaR\", sub = \"leetd\", mappings = [[\"e\",\"3\"],[\"t\",\"7\"],[\"t\",\"8\"],[\"d\",\"b\"],[\"p\",\"b\"]]', 'true', 'Replace the first and second \'e\' in sub with \'3\' and \'d\' in sub with \'b\'.\nNow sub = \"l33tb\" is a substring of s, so we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4299', '1853', '1', 'nums = [2,1,4,3,5], k = 10', '6', 'The 6 subarrays having scores less than 10 are:\n- [2] with score 2 * 1 = 2.\n- [1] with score 1 * 1 = 1.\n- [4] with score 4 * 1 = 4.\n- [3] with score 3 * 1 = 3. \n- [5] with score 5 * 1 = 5.\n- [2,1] with score (2 + 1) * 2 = 6.\nNote that subarrays such as [1,4] and [4,3,5] are not considered because their scores are 10 and 36 respectively, while we need scores strictly less than 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4300', '1853', '2', 'nums = [1,1,1], k = 5', '5', 'Every subarray except [1,1,1] has a score less than 5.\n[1,1,1] has a score (1 + 1 + 1) * 3 = 9, which is greater than 5.\nThus, there are 5 subarrays having scores less than 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4301', '1854', '1', 'brackets = [[3,50],[7,10],[12,25]], income = 10', '2.65000', 'Based on your income, you have 3 dollars in the 1<sup>st</sup> tax bracket, 4 dollars in the 2<sup>nd</sup> tax bracket, and 3 dollars in the 3<sup>rd</sup> tax bracket.\nThe tax rate for the three tax brackets is 50%, 10%, and 25%, respectively.\nIn total, you pay $3 * 50% + $4 * 10% + $3 * 25% = $2.65 in taxes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4302', '1854', '2', 'brackets = [[1,0],[4,25],[5,50]], income = 2', '0.25000', 'Based on your income, you have 1 dollar in the 1<sup>st</sup> tax bracket and 1 dollar in the 2<sup>nd</sup> tax bracket.\nThe tax rate for the two tax brackets is 0% and 25%, respectively.\nIn total, you pay $1 * 0% + $1 * 25% = $0.25 in taxes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4303', '1854', '3', 'brackets = [[2,50]], income = 0', '0.00000', 'You have no income to tax, so you have to pay a total of $0 in taxes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4304', '1855', '1', 'grid = [[5,3],[4,0],[2,1]], moveCost = [[9,8],[1,5],[10,12],[18,6],[2,4],[14,3]]', '17', 'The path with the minimum possible cost is the path 5 -&gt; 0 -&gt; 1.\n- The sum of the values of cells visited is 5 + 0 + 1 = 6.\n- The cost of moving from 5 to 0 is 3.\n- The cost of moving from 0 to 1 is 8.\nSo the total cost of the path is 6 + 3 + 8 = 17.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4305', '1855', '2', 'grid = [[5,1,2],[4,0,3]], moveCost = [[12,10,15],[20,23,8],[21,7,1],[8,1,13],[9,10,25],[5,3,2]]', '6', 'The path with the minimum possible cost is the path 2 -&gt; 3.\n- The sum of the values of cells visited is 2 + 3 = 5.\n- The cost of moving from 2 to 3 is 1.\nSo the total cost of this path is 5 + 1 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4306', '1856', '1', 'cookies = [8,15,10,20,8], k = 2', '31', 'One optimal distribution is [8,15,8] and [10,20]\n- The 1<sup>st</sup> child receives [8,15,8] which has a total of 8 + 15 + 8 = 31 cookies.\n- The 2<sup>nd</sup> child receives [10,20] which has a total of 10 + 20 = 30 cookies.\nThe unfairness of the distribution is max(31,30) = 31.\nIt can be shown that there is no distribution with an unfairness less than 31.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4307', '1856', '2', 'cookies = [6,1,3,2,2,4,1,2], k = 3', '7', 'One optimal distribution is [6,1], [3,2,2], and [4,1,2]\n- The 1<sup>st</sup> child receives [6,1] which has a total of 6 + 1 = 7 cookies.\n- The 2<sup>nd</sup> child receives [3,2,2] which has a total of 3 + 2 + 2 = 7 cookies.\n- The 3<sup>rd</sup> child receives [4,1,2] which has a total of 4 + 1 + 2 = 7 cookies.\nThe unfairness of the distribution is max(7,7,7) = 7.\nIt can be shown that there is no distribution with an unfairness less than 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4308', '1857', '1', 'ideas = [\"coffee\",\"donuts\",\"time\",\"toffee\"]', '6', 'The following selections are valid:\n- (\"coffee\", \"donuts\"): The company name created is \"doffee conuts\".\n- (\"donuts\", \"coffee\"): The company name created is \"conuts doffee\".\n- (\"donuts\", \"time\"): The company name created is \"tonuts dime\".\n- (\"donuts\", \"toffee\"): The company name created is \"tonuts doffee\".\n- (\"time\", \"donuts\"): The company name created is \"dime tonuts\".\n- (\"toffee\", \"donuts\"): The company name created is \"doffee tonuts\".\nTherefore, there are a total of 6 distinct company names.\n\nThe following are some examples of invalid selections:\n- (\"coffee\", \"time\"): The name \"toffee\" formed after swapping already exists in the original array.\n- (\"time\", \"toffee\"): Both names are still the same after swapping and exist in the original array.\n- (\"coffee\", \"toffee\"): Both names formed after swapping already exist in the original array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4309', '1857', '2', 'ideas = [\"lack\",\"back\"]', '0', 'There are no valid selections. Therefore, 0 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4310', '1858', '1', 's = \"l<strong><u>Ee</u></strong>TcOd<u><strong>E</strong></u>\"', '\"E\"', 'The letter \'E\' is the only letter to appear in both lower and upper case.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4311', '1858', '2', 's = \"a<strong><u>rR</u></strong>AzFif\"', '\"R\"', 'The letter \'R\' is the greatest letter to appear in both lower and upper case.\nNote that \'A\' and \'F\' also appear in both lower and upper case, but \'R\' is greater than \'F\' or \'A\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4312', '1858', '3', 's = \"AbCdEfGhIjK\"', '\"\"', 'There is no letter that appears in both lower and upper case.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4313', '1859', '1', 'num = 58, k = 9', '2', 'One valid set is [9,49], as the sum is 58 and each integer has a units digit of 9.\nAnother valid set is [19,39].\nIt can be shown that 2 is the minimum possible size of a valid set.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4314', '1859', '2', 'num = 37, k = 2', '-1', 'It is not possible to obtain a sum of 37 using only integers that have a units digit of 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4315', '1859', '3', 'num = 0, k = 7', '0', 'The sum of an empty set is considered 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4316', '1860', '1', 's = \"1001010\", k = 5', '5', 'The longest subsequence of s that makes up a binary number less than or equal to 5 is \"00010\", as this number is equal to 2 in decimal.\nNote that \"00100\" and \"00101\" are also possible, which are equal to 4 and 5 in decimal, respectively.\nThe length of this subsequence is 5, so 5 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4317', '1860', '2', 's = \"00101001\", k = 1', '6', '\"000001\" is the longest subsequence of s that makes up a binary number less than or equal to 1, as this number is equal to 1 in decimal.\nThe length of this subsequence is 6, so 6 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4318', '1861', '1', 'm = 3, n = 5, prices = [[1,4,2],[2,2,7],[2,1,3]]', '19', 'The diagram above shows a possible scenario. It consists of:\n- 2 pieces of wood shaped 2 x 2, selling for a price of 2 * 7 = 14.\n- 1 piece of wood shaped 2 x 1, selling for a price of 1 * 3 = 3.\n- 1 piece of wood shaped 1 x 4, selling for a price of 1 * 2 = 2.\nThis obtains a total of 14 + 3 + 2 = 19 money earned.\nIt can be shown that 19 is the maximum amount of money that can be earned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4319', '1861', '2', 'm = 4, n = 6, prices = [[3,2,10],[1,4,2],[4,1,3]]', '32', 'The diagram above shows a possible scenario. It consists of:\n- 3 pieces of wood shaped 3 x 2, selling for a price of 3 * 10 = 30.\n- 1 piece of wood shaped 1 x 4, selling for a price of 1 * 2 = 2.\nThis obtains a total of 30 + 2 = 32 money earned.\nIt can be shown that 32 is the maximum amount of money that can be earned.\nNotice that we cannot rotate the 1 x 4 piece of wood to obtain a 4 x 1 piece of wood.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4320', '1862', '1', 's = \"l|*e*et|c**o|*de|\"', '2', 'The considered characters are underlined: \"<u>l</u>|*e*et|<u>c**o</u>|*de|\".\nThe characters between the first and second \'|\' are excluded from the answer.\nAlso, the characters between the third and fourth \'|\' are excluded from the answer.\nThere are 2 asterisks considered. Therefore, we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4321', '1862', '2', 's = \"iamprogrammer\"', '0', 'In this example, there are no asterisks in s. Therefore, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4322', '1862', '3', 's = \"yo|uar|e**|b|e***au|tifu|l\"', '5', 'The considered characters are underlined: \"<u>yo</u>|uar|<u>e**</u>|b|<u>e***au</u>|tifu|<u>l</u>\". There are 5 asterisks considered. Therefore, we return 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4323', '1863', '1', 'n = 3, edges = [[0,1],[0,2],[1,2]]', '0', 'There are no pairs of nodes that are unreachable from each other. Therefore, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4324', '1863', '2', 'n = 7, edges = [[0,2],[0,5],[2,4],[1,6],[5,4]]', '14', 'There are 14 pairs of nodes that are unreachable from each other:\n[[0,1],[0,3],[0,6],[1,2],[1,3],[1,4],[1,5],[2,3],[2,6],[3,4],[3,5],[3,6],[4,6],[5,6]].\nTherefore, we return 14.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4325', '1864', '1', 'nums = [3,2,4,6]', '7', 'Apply the operation with x = 4 and i = 3, num[3] = 6 AND (6 XOR 4) = 6 AND 2 = 2.\nNow, nums = [3, 2, 4, 2] and the bitwise XOR of all the elements = 3 XOR 2 XOR 4 XOR 2 = 7.\nIt can be shown that 7 is the maximum possible bitwise XOR.\nNote that other operations may be used to achieve a bitwise XOR of 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4326', '1864', '2', 'nums = [1,2,3,9,2]', '11', 'Apply the operation zero times.\nThe bitwise XOR of all the elements = 1 XOR 2 XOR 3 XOR 9 XOR 2 = 11.\nIt can be shown that 11 is the maximum possible bitwise XOR.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4327', '1865', '1', 'n = 4', '184', 'Some of the possible sequences are (1, 2, 3, 4), (6, 1, 2, 3), (1, 2, 3, 1), etc.\nSome invalid sequences are (1, 2, 1, 3), (1, 2, 3, 6).\n(1, 2, 1, 3) is invalid since the first and third roll have an equal value and abs(1 - 3) = 2 (i and j are 1-indexed).\n(1, 2, 3, 6) is invalid since the greatest common divisor of 3 and 6 = 3.\nThere are a total of 184 distinct sequences possible, so we return 184.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4328', '1865', '2', 'n = 2', '22', 'Some of the possible sequences are (1, 2), (2, 1), (3, 2).\nSome invalid sequences are (3, 6), (2, 4) since the greatest common divisor is not equal to 1.\nThere are a total of 22 distinct sequences possible, so we return 22.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4329', '1866', '1', 'grid = [[2,0,0,1],[0,3,1,0],[0,5,2,0],[4,0,0,2]]', 'true', 'Refer to the diagram above. \nAn X-Matrix should have the green elements (diagonals) be non-zero and the red elements be 0.\nThus, grid is an X-Matrix.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4330', '1866', '2', 'grid = [[5,7,0],[0,3,1],[0,5,0]]', 'false', 'Refer to the diagram above.\nAn X-Matrix should have the green elements (diagonals) be non-zero and the red elements be 0.\nThus, grid is not an X-Matrix.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4331', '1867', '1', 'n = 1', '4', 'Possible arrangements:\n1. All plots are empty.\n2. A house is placed on one side of the street.\n3. A house is placed on the other side of the street.\n4. Two houses are placed, one on each side of the street.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4332', '1867', '2', 'n = 2', '9', 'The 9 possible arrangements are shown in the diagram above.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4333', '1868', '1', 'nums1 = [60,60,60], nums2 = [10,90,10]', '210', 'Choosing left = 1 and right = 1, we have nums1 = [60,<u><strong>90</strong></u>,60] and nums2 = [10,<u><strong>60</strong></u>,10].\nThe score is max(sum(nums1), sum(nums2)) = max(210, 80) = 210.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4334', '1868', '2', 'nums1 = [20,40,20,70,30], nums2 = [50,20,50,40,20]', '220', 'Choosing left = 3, right = 4, we have nums1 = [20,40,20,<u><strong>40,20</strong></u>] and nums2 = [50,20,50,<u><strong>70,30</strong></u>].\nThe score is max(sum(nums1), sum(nums2)) = max(140, 220) = 220.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4335', '1868', '3', 'nums1 = [7,11,13], nums2 = [1,1,1]', '31', 'We choose not to swap any subarray.\nThe score is max(sum(nums1), sum(nums2)) = max(31, 3) = 31.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4336', '1869', '1', 'nums = [1,5,5,4,11], edges = [[0,1],[1,2],[1,3],[3,4]]', '9', 'The diagram above shows a way to make a pair of removals.\n- The 1<sup>st</sup> component has nodes [1,3,4] with values [5,4,11]. Its XOR value is 5 ^ 4 ^ 11 = 10.\n- The 2<sup>nd</sup> component has node [0] with value [1]. Its XOR value is 1 = 1.\n- The 3<sup>rd</sup> component has node [2] with value [5]. Its XOR value is 5 = 5.\nThe score is the difference between the largest and smallest XOR value which is 10 - 1 = 9.\nIt can be shown that no other pair of removals will obtain a smaller score than 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4337', '1869', '2', 'nums = [5,5,2,4,4,2], edges = [[0,1],[1,2],[5,2],[4,3],[1,3]]', '0', 'The diagram above shows a way to make a pair of removals.\n- The 1<sup>st</sup> component has nodes [3,4] with values [4,4]. Its XOR value is 4 ^ 4 = 0.\n- The 2<sup>nd</sup> component has nodes [1,0] with values [5,5]. Its XOR value is 5 ^ 5 = 0.\n- The 3<sup>rd</sup> component has nodes [2,5] with values [2,2]. Its XOR value is 2 ^ 2 = 0.\nThe score is the difference between the largest and smallest XOR value which is 0 - 0 = 0.\nWe cannot obtain a smaller score than 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4338', '1870', '1', 'key = \"the quick brown fox jumps over the lazy dog\", message = \"vkbs bs t suepuv\"', '\"this is a secret\"', 'The diagram above shows the substitution table.\nIt is obtained by taking the first appearance of each letter in \"<u><strong>the</strong></u> <u><strong>quick</strong></u> <u><strong>brown</strong></u> <u><strong>f</strong></u>o<u><strong>x</strong></u> <u><strong>j</strong></u>u<u><strong>mps</strong></u> o<u><strong>v</strong></u>er the <u><strong>lazy</strong></u> <u><strong>d</strong></u>o<u><strong>g</strong></u>\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4339', '1870', '2', 'key = \"eljuxhpwnyrdgtqkviszcfmabo\", message = \"zwx hnfx lqantp mnoeius ycgk vcnjrdb\"', '\"the five boxing wizards jump quickly\"', 'The diagram above shows the substitution table.\nIt is obtained by taking the first appearance of each letter in \"<u><strong>eljuxhpwnyrdgtqkviszcfmabo</strong></u>\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4340', '1871', '1', 'm = 3, n = 5, head = [3,0,2,6,8,1,7,9,4,2,5,5,0]', '[[3,0,2,6,8],[5,0,-1,-1,1],[5,2,4,9,7]]', 'The diagram above shows how the values are printed in the matrix.\nNote that the remaining spaces in the matrix are filled with -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4341', '1871', '2', 'm = 1, n = 4, head = [0,1,2]', '[[0,1,2,-1]]', 'The diagram above shows how the values are printed from left to right in the matrix.\nThe last space in the matrix is set to -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4342', '1872', '1', 'n = 6, delay = 2, forget = 4', '5', 'Day 1: Suppose the first person is named A. (1 person)\nDay 2: A is the only person who knows the secret. (1 person)\nDay 3: A shares the secret with a new person, B. (2 people)\nDay 4: A shares the secret with a new person, C. (3 people)\nDay 5: A forgets the secret, and B shares the secret with a new person, D. (3 people)\nDay 6: B shares the secret with E, and C shares the secret with F. (5 people)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4343', '1872', '2', 'n = 4, delay = 1, forget = 3', '6', 'Day 1: The first person is named A. (1 person)\nDay 2: A shares the secret with B. (2 people)\nDay 3: A and B share the secret with 2 new people, C and D. (4 people)\nDay 4: A forgets the secret. B, C, and D share the secret with 3 new people. (6 people)');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4344', '1873', '1', 'grid = [[1,1],[3,4]]', '8', 'The strictly increasing paths are:\n- Paths with length 1: [1], [1], [3], [4].\n- Paths with length 2: [1 -&gt; 3], [1 -&gt; 4], [3 -&gt; 4].\n- Paths with length 3: [1 -&gt; 3 -&gt; 4].\nThe total number of paths is 4 + 3 + 1 = 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4345', '1873', '2', 'grid = [[1],[2]]', '3', 'The strictly increasing paths are:\n- Paths with length 1: [1], [2].\n- Paths with length 2: [1 -&gt; 2].\nThe total number of paths is 2 + 1 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4346', '1874', '1', 'root = [2,1,3,null,null,0,1]', 'true', 'The above diagram illustrates the evaluation process.\nThe AND node evaluates to False AND True = False.\nThe OR node evaluates to True OR False = True.\nThe root node evaluates to True, so we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4347', '1874', '2', 'root = [0]', 'false', 'The root node is a leaf node and it evaluates to false, so we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4348', '1875', '1', 'buses = [10,20], passengers = [2,17,18,19], capacity = 2', '16', 'Suppose you arrive at time 16.\nAt time 10, the first bus departs with the 0<sup>th</sup> passenger. \nAt time 20, the second bus departs with you and the 1<sup>st</sup> passenger.\nNote that you may not arrive at the same time as another passenger, which is why you must arrive before the 1<sup>st</sup> passenger to catch the bus.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4349', '1875', '2', 'buses = [20,30,10], passengers = [19,13,26,4,25,11,21], capacity = 2', '20', 'Suppose you arrive at time 20.\nAt time 10, the first bus departs with the 3<sup>rd</sup> passenger. \nAt time 20, the second bus departs with the 5<sup>th</sup> and 1<sup>st</sup> passengers.\nAt time 30, the third bus departs with the 0<sup>th</sup> passenger and you.\nNotice if you had arrived any later, then the 6<sup>th</sup> passenger would have taken your seat on the third bus.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4350', '1876', '1', 'nums1 = [1,2,3,4], nums2 = [2,10,20,19], k1 = 0, k2 = 0', '579', 'The elements in nums1 and nums2 cannot be modified because k1 = 0 and k2 = 0. \nThe sum of square difference will be: (1 - 2)<sup>2 </sup>+ (2 - 10)<sup>2 </sup>+ (3 - 20)<sup>2 </sup>+ (4 - 19)<sup>2</sup> = 579.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4351', '1876', '2', 'nums1 = [1,4,10,12], nums2 = [5,8,6,9], k1 = 1, k2 = 1', '43', 'One way to obtain the minimum sum of square difference is: \n- Increase nums1[0] once.\n- Increase nums2[2] once.\nThe minimum of the sum of square difference will be: \n(2 - 5)<sup>2 </sup>+ (4 - 8)<sup>2 </sup>+ (10 - 7)<sup>2 </sup>+ (12 - 9)<sup>2</sup> = 43.\nNote that, there are other ways to obtain the minimum of the sum of square difference, but there is no way to obtain a sum smaller than 43.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4352', '1877', '1', 'nums = [1,3,4,3,1], threshold = 6', '3', 'The subarray [3,4,3] has a size of 3, and every element is greater than 6 / 3 = 2.\nNote that this is the only valid subarray.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4353', '1877', '2', 'nums = [6,5,6,5,8], threshold = 7', '1', 'The subarray [8] has a size of 1, and 8 &gt; 7 / 1 = 7. So 1 is returned.\nNote that the subarray [6,5] has a size of 2, and every element is greater than 7 / 2 = 3.5. \nSimilarly, the subarrays [6,5,6], [6,5,6,5], [6,5,6,5,8] also satisfy the given conditions.\nTherefore, 2, 3, 4, or 5 may also be returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4354', '1878', '1', 'amount = [1,4,2]', '4', 'One way to fill up the cups is:\nSecond 1: Fill up a cold cup and a warm cup.\nSecond 2: Fill up a warm cup and a hot cup.\nSecond 3: Fill up a warm cup and a hot cup.\nSecond 4: Fill up a warm cup.\nIt can be proven that 4 is the minimum number of seconds needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4355', '1878', '2', 'amount = [5,4,4]', '7', 'One way to fill up the cups is:\nSecond 1: Fill up a cold cup, and a hot cup.\nSecond 2: Fill up a cold cup, and a warm cup.\nSecond 3: Fill up a cold cup, and a warm cup.\nSecond 4: Fill up a warm cup, and a hot cup.\nSecond 5: Fill up a cold cup, and a hot cup.\nSecond 6: Fill up a cold cup, and a warm cup.\nSecond 7: Fill up a hot cup.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4356', '1878', '3', 'amount = [5,0,0]', '5', 'Every second, we fill up a cold cup.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4357', '1879', '1', '[\"SmallestInfiniteSet\", \"addBack\", \"popSmallest\", \"popSmallest\", \"popSmallest\", \"addBack\", \"popSmallest\", \"popSmallest\", \"popSmallest\"]\n[[], [2], [], [], [], [1], [], [], []]', '[null, null, 1, 2, 3, null, 1, 4, 5]', 'SmallestInfiniteSet smallestInfiniteSet = new SmallestInfiniteSet();\nsmallestInfiniteSet.addBack(2);    // 2 is already in the set, so no change is made.\nsmallestInfiniteSet.popSmallest(); // return 1, since 1 is the smallest number, and remove it from the set.\nsmallestInfiniteSet.popSmallest(); // return 2, and remove it from the set.\nsmallestInfiniteSet.popSmallest(); // return 3, and remove it from the set.\nsmallestInfiniteSet.addBack(1);    // 1 is added back to the set.\nsmallestInfiniteSet.popSmallest(); // return 1, since 1 was added back to the set and\n                                   // is the smallest number, and remove it from the set.\nsmallestInfiniteSet.popSmallest(); // return 4, and remove it from the set.\nsmallestInfiniteSet.popSmallest(); // return 5, and remove it from the set.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4358', '1880', '1', 'start = \"_L__R__R_\", target = \"L______RR\"', 'true', 'We can obtain the string target from start by doing the following moves:\n- Move the first piece one step to the left, start becomes equal to \"<strong>L</strong>___R__R_\".\n- Move the last piece one step to the right, start becomes equal to \"L___R___<strong>R</strong>\".\n- Move the second piece three steps to the right, start becomes equal to \"L______<strong>R</strong>R\".\nSince it is possible to get the string target from start, we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4359', '1880', '2', 'start = \"R_L_\", target = \"__LR\"', 'false', 'The \'R\' piece in the string start can move one step to the right to obtain \"_<strong>R</strong>L_\".\nAfter that, no pieces can move anymore, so it is impossible to obtain the string target from start.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4360', '1880', '3', 'start = \"_R\", target = \"R_\"', 'false', 'The piece in the string start can move only to the right, so it is impossible to obtain the string target from start.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4361', '1881', '1', 'n = 2, maxValue = 5', '10', 'The following are the possible ideal arrays:\n- Arrays starting with the value 1 (5 arrays): [1,1], [1,2], [1,3], [1,4], [1,5]\n- Arrays starting with the value 2 (2 arrays): [2,2], [2,4]\n- Arrays starting with the value 3 (1 array): [3,3]\n- Arrays starting with the value 4 (1 array): [4,4]\n- Arrays starting with the value 5 (1 array): [5,5]\nThere are a total of 5 + 2 + 1 + 1 + 1 = 10 distinct ideal arrays.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4362', '1881', '2', 'n = 5, maxValue = 3', '11', 'The following are the possible ideal arrays:\n- Arrays starting with the value 1 (9 arrays): \n   - With no other distinct values (1 array): [1,1,1,1,1] \n   - With 2<sup>nd</sup> distinct value 2 (4 arrays): [1,1,1,1,2], [1,1,1,2,2], [1,1,2,2,2], [1,2,2,2,2]\n   - With 2<sup>nd</sup> distinct value 3 (4 arrays): [1,1,1,1,3], [1,1,1,3,3], [1,1,3,3,3], [1,3,3,3,3]\n- Arrays starting with the value 2 (1 array): [2,2,2,2,2]\n- Arrays starting with the value 3 (1 array): [3,3,3,3,3]\nThere are a total of 9 + 1 + 1 = 11 distinct ideal arrays.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4363', '1882', '1', 'nums = [1,3,2,1,3,2,2]', '[3,1]', 'Form a pair with nums[0] and nums[3] and remove them from nums. Now, nums = [3,2,3,2,2].\nForm a pair with nums[0] and nums[2] and remove them from nums. Now, nums = [2,2,2].\nForm a pair with nums[0] and nums[1] and remove them from nums. Now, nums = [2].\nNo more pairs can be formed. A total of 3 pairs have been formed, and there is 1 number leftover in nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4364', '1882', '2', 'nums = [1,1]', '[1,0]', 'Form a pair with nums[0] and nums[1] and remove them from nums. Now, nums = [].\nNo more pairs can be formed. A total of 1 pair has been formed, and there are 0 numbers leftover in nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4365', '1882', '3', 'nums = [0]', '[0,1]', 'No pairs can be formed, and there is 1 number leftover in nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4366', '1883', '1', 'nums = [18,43,36,13,7]', '54', 'The pairs (i, j) that satisfy the conditions are:\n- (0, 2), both numbers have a sum of digits equal to 9, and their sum is 18 + 36 = 54.\n- (1, 4), both numbers have a sum of digits equal to 7, and their sum is 43 + 7 = 50.\nSo the maximum sum that we can obtain is 54.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4367', '1883', '2', 'nums = [10,12,19,14]', '-1', 'There are no two numbers that satisfy the conditions, so we return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4368', '1884', '1', 'nums = [\"102\",\"473\",\"251\",\"814\"], queries = [[1,1],[2,3],[4,2],[1,2]]', '[2,2,1,0]', '1. After trimming to the last digit, nums = [\"2\",\"3\",\"1\",\"4\"]. The smallest number is 1 at index 2.\n2. Trimmed to the last 3 digits, nums is unchanged. The 2<sup>nd</sup> smallest number is 251 at index 2.\n3. Trimmed to the last 2 digits, nums = [\"02\",\"73\",\"51\",\"14\"]. The 4<sup>th</sup> smallest number is 73.\n4. Trimmed to the last 2 digits, the smallest number is 2 at index 0.\n   Note that the trimmed number \"02\" is evaluated as 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4369', '1884', '2', 'nums = [\"24\",\"37\",\"96\",\"04\"], queries = [[2,1],[2,2]]', '[3,0]', '1. Trimmed to the last digit, nums = [\"4\",\"7\",\"6\",\"4\"]. The 2<sup>nd</sup> smallest number is 4 at index 3.\n   There are two occurrences of 4, but the one at index 0 is considered smaller than the one at index 3.\n2. Trimmed to the last 2 digits, nums is unchanged. The 2<sup>nd</sup> smallest number is 24.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4370', '1885', '1', 'nums = [2,3,2,4,3], numsDivide = [9,6,9,3,15]', '2', 'The smallest element in [2,3,2,4,3] is 2, which does not divide all the elements of numsDivide.\nWe use 2 deletions to delete the elements in nums that are equal to 2 which makes nums = [3,4,3].\nThe smallest element in [3,4,3] is 3, which divides all the elements of numsDivide.\nIt can be shown that 2 is the minimum number of deletions needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4371', '1885', '2', 'nums = [4,3,6], numsDivide = [8,2,6,10]', '-1', 'We want the smallest element in nums to divide all the elements of numsDivide.\nThere is no way to delete elements from nums to allow this.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4372', '1886', '1', 'ranks = [13,2,3,1,9], suits = [\"a\",\"a\",\"a\",\"a\",\"a\"]', '\"Flush\"', 'The hand with all the cards consists of 5 cards with the same suit, so we have a \"Flush\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4373', '1886', '2', 'ranks = [4,4,2,4,4], suits = [\"d\",\"a\",\"a\",\"b\",\"c\"]', '\"Three of a Kind\"', 'The hand with the first, second, and fourth card consists of 3 cards with the same rank, so we have a \"Three of a Kind\".\nNote that we could also make a \"Pair\" hand but \"Three of a Kind\" is a better hand.\nAlso note that other cards could be used to make the \"Three of a Kind\" hand.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4374', '1886', '3', 'ranks = [10,10,2,12,9], suits = [\"a\",\"b\",\"c\",\"a\",\"d\"]', '\"Pair\"', 'The hand with the first and second card consists of 2 cards with the same rank, so we have a \"Pair\".\nNote that we cannot make a \"Flush\" or a \"Three of a Kind\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4375', '1887', '1', 'nums = [1,3,0,0,2,0,0,4]', '6', 'There are 4 occurrences of [0] as a subarray.\nThere are 2 occurrences of [0,0] as a subarray.\nThere is no occurrence of a subarray with a size more than 2 filled with 0. Therefore, we return 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4376', '1887', '2', 'nums = [0,0,0,2,0,0]', '9\n<strong>', '</strong>There are 5 occurrences of [0] as a subarray.\nThere are 3 occurrences of [0,0] as a subarray.\nThere is 1 occurrence of [0,0,0] as a subarray.\nThere is no occurrence of a subarray with a size more than 3 filled with 0. Therefore, we return 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4377', '1887', '3', 'nums = [2,10,2019]', '0', 'There is no subarray filled with 0. Therefore, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4378', '1888', '1', '[\"NumberContainers\", \"find\", \"change\", \"change\", \"change\", \"change\", \"find\", \"change\", \"find\"]\n[[], [10], [2, 10], [1, 10], [3, 10], [5, 10], [10], [1, 20], [10]]', '[null, -1, null, null, null, null, 1, null, 2]', 'NumberContainers nc = new NumberContainers();\nnc.find(10); // There is no index that is filled with number 10. Therefore, we return -1.\nnc.change(2, 10); // Your container at index 2 will be filled with number 10.\nnc.change(1, 10); // Your container at index 1 will be filled with number 10.\nnc.change(3, 10); // Your container at index 3 will be filled with number 10.\nnc.change(5, 10); // Your container at index 5 will be filled with number 10.\nnc.find(10); // Number 10 is at the indices 1, 2, 3, and 5. Since the smallest index that is filled with 10 is 1, we return 1.\nnc.change(1, 20); // Your container at index 1 will be filled with number 20. Note that index 1 was filled with 10 and then replaced with 20. \nnc.find(10); // Number 10 is at the indices 2, 3, and 5. The smallest index that is filled with 10 is 2. Therefore, we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4379', '1889', '1', 'rolls = [4,2,1,2,3,3,2,4,1], k = 4', '3', 'Every sequence of rolls of length 1, [1], [2], [3], [4], can be taken from rolls.\nEvery sequence of rolls of length 2, [1, 1], [1, 2], ..., [4, 4], can be taken from rolls.\nThe sequence [1, 4, 2] cannot be taken from rolls, so we return 3.\nNote that there are other sequences that cannot be taken from rolls.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4380', '1889', '2', 'rolls = [1,1,2,2], k = 2', '2', 'Every sequence of rolls of length 1, [1], [2], can be taken from rolls.\nThe sequence [2, 1] cannot be taken from rolls, so we return 2.\nNote that there are other sequences that cannot be taken from rolls but [2, 1] is the shortest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4381', '1889', '3', 'rolls = [1,1,3,2,2,2,3,3], k = 4', '1', 'The sequence [4] cannot be taken from rolls, so we return 1.\nNote that there are other sequences that cannot be taken from rolls but [4] is the shortest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4382', '1890', '1', 's = \"abccbaacz\"', '\"c\"', 'The letter \'a\' appears on the indexes 0, 5 and 6.\nThe letter \'b\' appears on the indexes 1 and 4.\nThe letter \'c\' appears on the indexes 2, 3 and 7.\nThe letter \'z\' appears on the index 8.\nThe letter \'c\' is the first letter to appear twice, because out of all the letters the index of its second occurrence is the smallest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4383', '1890', '2', 's = \"abcdd\"', '\"d\"', 'The only letter that appears twice is \'d\' so we return \'d\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4384', '1891', '1', 'grid = [[3,2,1],[1,7,6],[2,7,7]]', '1', 'There is 1 equal row and column pair:\n- (Row 2, Column 1): [2,7,7]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4385', '1891', '2', 'grid = [[3,1,2,2],[1,4,4,5],[2,4,2,2],[2,4,2,2]]', '3', 'There are 3 equal row and column pairs:\n- (Row 0, Column 0): [3,1,2,2]\n- (Row 2, Column 2): [2,4,2,2]\n- (Row 3, Column 2): [2,4,2,2]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4386', '1892', '1', '[\"FoodRatings\", \"highestRated\", \"highestRated\", \"changeRating\", \"highestRated\", \"changeRating\", \"highestRated\"]\n[[[\"kimchi\", \"miso\", \"sushi\", \"moussaka\", \"ramen\", \"bulgogi\"], [\"korean\", \"japanese\", \"japanese\", \"greek\", \"japanese\", \"korean\"], [9, 12, 8, 15, 14, 7]], [\"korean\"], [\"japanese\"], [\"sushi\", 16], [\"japanese\"], [\"ramen\", 16], [\"japanese\"]]', '[null, \"kimchi\", \"ramen\", null, \"sushi\", null, \"ramen\"]', 'FoodRatings foodRatings = new FoodRatings([\"kimchi\", \"miso\", \"sushi\", \"moussaka\", \"ramen\", \"bulgogi\"], [\"korean\", \"japanese\", \"japanese\", \"greek\", \"japanese\", \"korean\"], [9, 12, 8, 15, 14, 7]);\nfoodRatings.highestRated(\"korean\"); // return \"kimchi\"\n                                    // \"kimchi\" is the highest rated korean food with a rating of 9.\nfoodRatings.highestRated(\"japanese\"); // return \"ramen\"\n                                      // \"ramen\" is the highest rated japanese food with a rating of 14.\nfoodRatings.changeRating(\"sushi\", 16); // \"sushi\" now has a rating of 16.\nfoodRatings.highestRated(\"japanese\"); // return \"sushi\"\n                                      // \"sushi\" is the highest rated japanese food with a rating of 16.\nfoodRatings.changeRating(\"ramen\", 16); // \"ramen\" now has a rating of 16.\nfoodRatings.highestRated(\"japanese\"); // return \"ramen\"\n                                      // Both \"sushi\" and \"ramen\" have a rating of 16.\n                                      // However, \"ramen\" is lexicographically smaller than \"sushi\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4387', '1893', '1', 'nums = [1,2,3,1], k = 3', '5', 'The excellent pairs are the following:\n- (3, 3). (3 AND 3) and (3 OR 3) are both equal to (11) in binary. The total number of set bits is 2 + 2 = 4, which is greater than or equal to k = 3.\n- (2, 3) and (3, 2). (2 AND 3) is equal to (10) in binary, and (2 OR 3) is equal to (11) in binary. The total number of set bits is 1 + 2 = 3.\n- (1, 3) and (3, 1). (1 AND 3) is equal to (01) in binary, and (1 OR 3) is equal to (11) in binary. The total number of set bits is 1 + 2 = 3.\nSo the number of excellent pairs is 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4388', '1893', '2', 'nums = [5,1,1], k = 10', '0', 'There are no excellent pairs for this array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4389', '1894', '1', 'Teacher table:\n+------------+------------+---------+\n| teacher_id | subject_id | dept_id |\n+------------+------------+---------+\n| 1          | 2          | 3       |\n| 1          | 2          | 4       |\n| 1          | 3          | 3       |\n| 2          | 1          | 1       |\n| 2          | 2          | 1       |\n| 2          | 3          | 1       |\n| 2          | 4          | 1       |\n+------------+------------+---------+', '+------------+-----+\n| teacher_id | cnt |\n+------------+-----+\n| 1          | 2   |\n| 2          | 4   |\n+------------+-----+', 'Teacher 1:\n  - They teach subject 2 in departments 3 and 4.\n  - They teach subject 3 in department 3.\nTeacher 2:\n  - They teach subject 1 in department 1.\n  - They teach subject 2 in department 1.\n  - They teach subject 3 in department 1.\n  - They teach subject 4 in department 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4390', '1895', '1', 'nums = [1,5,0,3,5]', '3', 'In the first operation, choose x = 1. Now, nums = [0,4,0,2,4].\nIn the second operation, choose x = 2. Now, nums = [0,2,0,0,2].\nIn the third operation, choose x = 2. Now, nums = [0,0,0,0,0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4391', '1895', '2', 'nums = [0]', '0', 'Each element in nums is already 0 so no operations are needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4392', '1896', '1', 'grades = [10,6,12,7,3,5]', '3', 'The following is a possible way to form 3 groups of students:\n- 1<sup>st</sup> group has the students with grades = [12]. Sum of grades: 12. Student count: 1\n- 2<sup>nd</sup> group has the students with grades = [6,7]. Sum of grades: 6 + 7 = 13. Student count: 2\n- 3<sup>rd</sup> group has the students with grades = [10,3,5]. Sum of grades: 10 + 3 + 5 = 18. Student count: 3\nIt can be shown that it is not possible to form more than 3 groups.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4393', '1896', '2', 'grades = [8,8]', '1', 'We can only form 1 group, since forming 2 groups would lead to an equal number of students in both groups.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4394', '1897', '1', 'edges = [2,2,3,-1], node1 = 0, node2 = 1', '2', 'The distance from node 0 to node 2 is 1, and the distance from node 1 to node 2 is 1.\nThe maximum of those two distances is 1. It can be proven that we cannot get a node with a smaller maximum distance than 1, so we return node 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4395', '1897', '2', 'edges = [1,2,-1], node1 = 0, node2 = 2', '2', 'The distance from node 0 to node 2 is 2, and the distance from node 2 to itself is 0.\nThe maximum of those two distances is 2. It can be proven that we cannot get a node with a smaller maximum distance than 2, so we return node 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4396', '1898', '1', 'edges = [3,3,4,2,3]', '3', 'The longest cycle in the graph is the cycle: 2 -&gt; 4 -&gt; 3 -&gt; 2.\nThe length of this cycle is 3, so 3 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4397', '1898', '2', 'edges = [2,-1,3,1]', '-1', 'There are no cycles in this graph.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4398', '1899', '1', 'items1 = [[1,1],[4,5],[3,8]], items2 = [[3,1],[1,5]]', '[[1,6],[3,9],[4,5]]', 'The item with value = 1 occurs in items1 with weight = 1 and in items2 with weight = 5, total weight = 1 + 5 = 6.\nThe item with value = 3 occurs in items1 with weight = 8 and in items2 with weight = 1, total weight = 8 + 1 = 9.\nThe item with value = 4 occurs in items1 with weight = 5, total weight = 5.  \nTherefore, we return [[1,6],[3,9],[4,5]].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4399', '1899', '2', 'items1 = [[1,1],[3,2],[2,3]], items2 = [[2,1],[3,2],[1,3]]', '[[1,4],[2,4],[3,4]]', 'The item with value = 1 occurs in items1 with weight = 1 and in items2 with weight = 3, total weight = 1 + 3 = 4.\nThe item with value = 2 occurs in items1 with weight = 3 and in items2 with weight = 1, total weight = 3 + 1 = 4.\nThe item with value = 3 occurs in items1 with weight = 2 and in items2 with weight = 2, total weight = 2 + 2 = 4.\nTherefore, we return [[1,4],[2,4],[3,4]].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4400', '1899', '3', 'items1 = [[1,3],[2,2]], items2 = [[7,1],[2,2],[1,4]]', '[[1,7],[2,4],[7,1]]\n<strong>', '</strong>The item with value = 1 occurs in items1 with weight = 3 and in items2 with weight = 4, total weight = 3 + 4 = 7. \nThe item with value = 2 occurs in items1 with weight = 2 and in items2 with weight = 2, total weight = 2 + 2 = 4. \nThe item with value = 7 occurs in items2 with weight = 1, total weight = 1.\nTherefore, we return [[1,7],[2,4],[7,1]].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4401', '1900', '1', 'nums = [4,1,3,3]', '5', 'The pair (0, 1) is a bad pair since 1 - 0 != 1 - 4.\nThe pair (0, 2) is a bad pair since 2 - 0 != 3 - 4, 2 != -1.\nThe pair (0, 3) is a bad pair since 3 - 0 != 3 - 4, 3 != -1.\nThe pair (1, 2) is a bad pair since 2 - 1 != 3 - 1, 1 != 2.\nThe pair (2, 3) is a bad pair since 3 - 2 != 3 - 3, 1 != 0.\nThere are a total of 5 bad pairs, so we return 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4402', '1900', '2', 'nums = [1,2,3,4,5]', '0', 'There are no bad pairs.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4403', '1901', '1', 'tasks = [1,2,1,2,3,1], space = 3', '9', 'One way to complete all tasks in 9 days is as follows:\nDay 1: Complete the 0th task.\nDay 2: Complete the 1st task.\nDay 3: Take a break.\nDay 4: Take a break.\nDay 5: Complete the 2nd task.\nDay 6: Complete the 3rd task.\nDay 7: Take a break.\nDay 8: Complete the 4th task.\nDay 9: Complete the 5th task.\nIt can be shown that the tasks cannot be completed in less than 9 days.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4404', '1901', '2', 'tasks = [5,8,8,5], space = 2', '6', 'One way to complete all tasks in 6 days is as follows:\nDay 1: Complete the 0th task.\nDay 2: Complete the 1st task.\nDay 3: Take a break.\nDay 4: Take a break.\nDay 5: Complete the 2nd task.\nDay 6: Complete the 3rd task.\nIt can be shown that the tasks cannot be completed in less than 6 days.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4405', '1903', '1', 'nums = [0,1,4,6,7,10], diff = 3', '2', '(1, 2, 4) is an arithmetic triplet because both 7 - 4 == 3 and 4 - 1 == 3.\n(2, 4, 5) is an arithmetic triplet because both 10 - 7 == 3 and 7 - 4 == 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4406', '1903', '2', 'nums = [4,5,6,7,8,9], diff = 2', '2', '(0, 2, 4) is an arithmetic triplet because both 8 - 6 == 2 and 6 - 4 == 2.\n(1, 3, 5) is an arithmetic triplet because both 9 - 7 == 2 and 7 - 5 == 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4407', '1904', '1', 'n = 7, edges = [[0,1],[1,2],[3,1],[4,0],[0,5],[5,6]], restricted = [4,5]', '4', 'The diagram above shows the tree.\nWe have that [0,1,2,3] are the only nodes that can be reached from node 0 without visiting a restricted node.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4408', '1904', '2', 'n = 7, edges = [[0,1],[0,2],[0,5],[0,4],[3,2],[6,5]], restricted = [4,2,1]', '3', 'The diagram above shows the tree.\nWe have that [0,5,6] are the only nodes that can be reached from node 0 without visiting a restricted node.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4409', '1905', '1', 'nums = [4,4,4,5,6]', 'true', 'The array can be partitioned into the subarrays [4,4] and [4,5,6].\nThis partition is valid, so we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4410', '1905', '2', 'nums = [1,1,1,2]', 'false', 'There is no valid partition for this array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4411', '1906', '1', 's = \"acfgbd\", k = 2', '4', 'The longest ideal string is \"acbd\". The length of this string is 4, so 4 is returned.\nNote that \"acfgbd\" is not ideal because \'c\' and \'f\' have a difference of 3 in alphabet order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4412', '1906', '2', 's = \"abcd\", k = 3', '4', 'The longest ideal string is \"abcd\". The length of this string is 4, so 4 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4413', '1907', '1', 'grid = [[9,9,8,1],[5,6,2,6],[8,2,6,4],[6,2,2,2]]', '[[9,9],[8,6]]', 'The diagram above shows the original matrix and the generated matrix.\nNotice that each value in the generated matrix corresponds to the largest value of a contiguous 3 x 3 matrix in grid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4414', '1907', '2', 'grid = [[1,1,1,1,1],[1,1,1,1,1],[1,1,2,1,1],[1,1,1,1,1],[1,1,1,1,1]]', '[[2,2,2],[2,2,2],[2,2,2]]', 'Notice that the 2 is contained within every contiguous 3 x 3 matrix in grid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4415', '1908', '1', 'edges = [1,0,0,0,0,7,7,5]', '7', '- The nodes 1, 2, 3 and 4 have an edge pointing to node 0. The edge score of node 0 is 1 + 2 + 3 + 4 = 10.\n- The node 0 has an edge pointing to node 1. The edge score of node 1 is 0.\n- The node 7 has an edge pointing to node 5. The edge score of node 5 is 7.\n- The nodes 5 and 6 have an edge pointing to node 7. The edge score of node 7 is 5 + 6 = 11.\nNode 7 has the highest edge score so return 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4416', '1908', '2', 'edges = [2,0,0,2]', '0', '- The nodes 1 and 2 have an edge pointing to node 0. The edge score of node 0 is 1 + 2 = 3.\n- The nodes 0 and 3 have an edge pointing to node 2. The edge score of node 2 is 0 + 3 = 3.\nNodes 0 and 2 both have an edge score of 3. Since node 0 has a smaller index, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4417', '1909', '1', 'pattern = \"IIIDIDDD\"', '\"123549876\"\n<strong>', '</strong>At indices 0, 1, 2, and 4 we must have that num[i] &lt; num[i+1].\nAt indices 3, 5, 6, and 7 we must have that num[i] &gt; num[i+1].\nSome possible values of num are \"245639871\", \"135749862\", and \"123849765\".\nIt can be proven that \"123549876\" is the smallest possible num that meets the conditions.\nNote that \"123414321\" is not possible because the digit \'1\' is used more than once.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4418', '1909', '2', 'pattern = \"DDD\"', '\"4321\"', 'Some possible values of num are \"9876\", \"7321\", and \"8742\".\nIt can be proven that \"4321\" is the smallest possible num that meets the conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4419', '1910', '1', 'n = 20', '19', 'All the integers from 1 to 20, except 11, are special. Thus, there are 19 special integers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4420', '1910', '2', 'n = 5', '5', 'All the integers from 1 to 5 are special.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4421', '1910', '3', 'n = 135', '110', 'There are 110 integers from 1 to 135 that are special.\nSome of the integers that are not special are: 22, 114, and 131.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4422', '1911', '1', 'blocks = \"WBBWWBBWBW\", k = 7', '3', 'One way to achieve 7 consecutive black blocks is to recolor the 0th, 3rd, and 4th blocks\nso that blocks = \"BBBBBBBWBW\". \nIt can be shown that there is no way to achieve 7 consecutive black blocks in less than 3 operations.\nTherefore, we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4423', '1911', '2', 'blocks = \"WBWBBBW\", k = 2', '0', 'No changes need to be made, since 2 consecutive black blocks already exist.\nTherefore, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4424', '1912', '1', 's = \"0110101\"', '4', 'After one second, s becomes \"1011010\".\nAfter another second, s becomes \"1101100\".\nAfter the third second, s becomes \"1110100\".\nAfter the fourth second, s becomes \"1111000\".\nNo occurrence of \"01\" exists any longer, and the process needed 4 seconds to complete,\nso we return 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4425', '1912', '2', 's = \"11100\"', '0', 'No occurrence of \"01\" exists in s, and the processes needed 0 seconds to complete,\nso we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4426', '1913', '1', 's = \"abc\", shifts = [[0,1,0],[1,2,1],[0,2,1]]', '\"ace\"', 'Firstly, shift the characters from index 0 to index 1 backward. Now s = \"zac\".\nSecondly, shift the characters from index 1 to index 2 forward. Now s = \"zbd\".\nFinally, shift the characters from index 0 to index 2 forward. Now s = \"ace\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4427', '1913', '2', 's = \"dztz\", shifts = [[0,0,0],[1,1,1]]', '\"catz\"', 'Firstly, shift the characters from index 0 to index 0 backward. Now s = \"cztz\".\nFinally, shift the characters from index 1 to index 1 forward. Now s = \"catz\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4428', '1914', '1', 'nums = [1,2,5,6,1], removeQueries = [0,3,2,4,1]', '[14,7,2,2,0]', 'Using 0 to indicate a removed element, the answer is as follows:\nQuery 1: Remove the 0th element, nums becomes [0,2,5,6,1] and the maximum segment sum is 14 for segment [2,5,6,1].\nQuery 2: Remove the 3rd element, nums becomes [0,2,5,0,1] and the maximum segment sum is 7 for segment [2,5].\nQuery 3: Remove the 2nd element, nums becomes [0,2,0,0,1] and the maximum segment sum is 2 for segment [2]. \nQuery 4: Remove the 4th element, nums becomes [0,2,0,0,0] and the maximum segment sum is 2 for segment [2]. \nQuery 5: Remove the 1st element, nums becomes [0,0,0,0,0] and the maximum segment sum is 0, since there are no segments.\nFinally, we return [14,7,2,2,0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4429', '1914', '2', 'nums = [3,2,11,1], removeQueries = [3,2,1,0]', '[16,5,3,0]', 'Using 0 to indicate a removed element, the answer is as follows:\nQuery 1: Remove the 3rd element, nums becomes [3,2,11,0] and the maximum segment sum is 16 for segment [3,2,11].\nQuery 2: Remove the 2nd element, nums becomes [3,2,0,0] and the maximum segment sum is 5 for segment [3,2].\nQuery 3: Remove the 1st element, nums becomes [3,0,0,0] and the maximum segment sum is 3 for segment [3].\nQuery 4: Remove the 0th element, nums becomes [0,0,0,0] and the maximum segment sum is 0, since there are no segments.\nFinally, we return [16,5,3,0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4430', '1915', '1', 'initialEnergy = 5, initialExperience = 3, energy = [1,4,3,2], experience = [2,6,3,1]', '8', 'You can increase your energy to 11 after 6 hours of training, and your experience to 5 after 2 hours of training.\nYou face the opponents in the following order:\n- You have more energy and experience than the 0<sup>th</sup> opponent so you win.\n  Your energy becomes 11 - 1 = 10, and your experience becomes 5 + 2 = 7.\n- You have more energy and experience than the 1<sup>st</sup> opponent so you win.\n  Your energy becomes 10 - 4 = 6, and your experience becomes 7 + 6 = 13.\n- You have more energy and experience than the 2<sup>nd</sup> opponent so you win.\n  Your energy becomes 6 - 3 = 3, and your experience becomes 13 + 3 = 16.\n- You have more energy and experience than the 3<sup>rd</sup> opponent so you win.\n  Your energy becomes 3 - 2 = 1, and your experience becomes 16 + 1 = 17.\nYou did a total of 6 + 2 = 8 hours of training before the competition, so we return 8.\nIt can be proven that no smaller answer exists.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4431', '1915', '2', 'initialEnergy = 2, initialExperience = 4, energy = [1], experience = [3]', '0', 'You do not need any additional energy or experience to win the competition, so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4432', '1916', '1', 'num = \"444947137\"', '\"7449447\"', 'Use the digits \"4449477\" from \"<u><strong>44494</strong></u><u><strong>7</strong></u>13<u><strong>7</strong></u>\" to form the palindromic integer \"7449447\".\nIt can be shown that \"7449447\" is the largest palindromic integer that can be formed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4433', '1916', '2', 'num = \"00009\"', '\"9\"', 'It can be shown that \"9\" is the largest palindromic integer that can be formed.\nNote that the integer returned should not contain leading zeroes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4434', '1917', '1', 'root = [1,5,3,null,4,10,6,9,2], start = 3', '4', 'The following nodes are infected during:\n- Minute 0: Node 3\n- Minute 1: Nodes 1, 10 and 6\n- Minute 2: Node 5\n- Minute 3: Node 4\n- Minute 4: Nodes 9 and 2\nIt takes 4 minutes for the whole tree to be infected so we return 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4435', '1917', '2', 'root = [1], start = 1', '0', 'At minute 0, the only node in the tree is infected so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4436', '1611', '1', 'nums = [1,2,3,4]', '6', 'The good subsets are:\n- [1,2]: product is 2, which is the product of distinct prime 2.\n- [1,2,3]: product is 6, which is the product of distinct primes 2 and 3.\n- [1,3]: product is 3, which is the product of distinct prime 3.\n- [2]: product is 2, which is the product of distinct prime 2.\n- [2,3]: product is 6, which is the product of distinct primes 2 and 3.\n- [3]: product is 3, which is the product of distinct prime 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4437', '1611', '2', 'nums = [4,2,3,15]', '5', 'The good subsets are:\n- [2]: product is 2, which is the product of distinct prime 2.\n- [2,3]: product is 6, which is the product of distinct primes 2 and 3.\n- [2,15]: product is 30, which is the product of distinct primes 2, 3, and 5.\n- [3]: product is 3, which is the product of distinct prime 3.\n- [15]: product is 15, which is the product of distinct primes 3 and 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4438', '1623', '1', 'nums = [4,2,5,3]', '0', 'nums is already continuous.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4439', '1623', '2', 'nums = [1,2,3,5,6]', '1', 'One possible solution is to change the last element to 4.\nThe resulting array is [1,2,3,5,4], which is continuous.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4440', '1623', '3', 'nums = [1,10,100,1000]', '3', 'One possible solution is to:\n- Change the second element to 2.\n- Change the third element to 3.\n- Change the fourth element to 4.\nThe resulting array is [1,2,3,4], which is continuous.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4441', '1646', '1', 'edges = [[0,1],[1,2]], patience = [0,2,1]', '8', 'At (the beginning of) second 0,\n- Data server 1 sends its message (denoted 1A) to the master server.\n- Data server 2 sends its message (denoted 2A) to the master server.\n\nAt second 1,\n- Message 1A arrives at the master server. Master server processes message 1A instantly and sends a reply 1A back.\n- Server 1 has not received any reply. 1 second (1 &lt; patience[1] = 2) elapsed since this server has sent the message, therefore it does not resend the message.\n- Server 2 has not received any reply. 1 second (1 == patience[2] = 1) elapsed since this server has sent the message, therefore it resends the message (denoted 2B).\n\nAt second 2,\n- The reply 1A arrives at server 1. No more resending will occur from server 1.\n- Message 2A arrives at the master server. Master server processes message 2A instantly and sends a reply 2A back.\n- Server 2 resends the message (denoted 2C).\n...\nAt second 4,\n- The reply 2A arrives at server 2. No more resending will occur from server 2.\n...\nAt second 7, reply 2D arrives at server 2.\n\nStarting from the beginning of the second 8, there are no messages passing between servers or arriving at servers.\nThis is the time when the network becomes idle.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4442', '1646', '2', 'edges = [[0,1],[0,2],[1,2]], patience = [0,10,10]', '3', 'Data servers 1 and 2 receive a reply back at the beginning of second 2.\nFrom the beginning of the second 3, the network becomes idle.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4443', '1714', '1', 'mass = 10, asteroids = [3,9,19,5,21]', 'true', 'One way to order the asteroids is [9,19,5,3,21]:\n- The planet collides with the asteroid with a mass of 9. New planet mass: 10 + 9 = 19\n- The planet collides with the asteroid with a mass of 19. New planet mass: 19 + 19 = 38\n- The planet collides with the asteroid with a mass of 5. New planet mass: 38 + 5 = 43\n- The planet collides with the asteroid with a mass of 3. New planet mass: 43 + 3 = 46\n- The planet collides with the asteroid with a mass of 21. New planet mass: 46 + 21 = 67\nAll asteroids are destroyed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4444', '1714', '2', 'mass = 5, asteroids = [4,9,23,4]', 'false', 'The planet cannot ever gain enough mass to destroy the asteroid with a mass of 23.\nAfter the planet destroys the other asteroids, it will have a mass of 5 + 4 + 9 + 4 = 22.\nThis is less than 23, so a collision would not destroy the last asteroid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4445', '1759', '1', 'nums = [1,2,3,4,5], k = 2', '7', 'The 7 pairs of indices whose corresponding products are divisible by 2 are\n(0, 1), (0, 3), (1, 2), (1, 3), (1, 4), (2, 3), and (3, 4).\nTheir products are 2, 4, 6, 8, 10, 12, and 20 respectively.\nOther pairs such as (0, 2) and (2, 4) have products 3 and 15 respectively, which are not divisible by 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4446', '1759', '2', 'nums = [1,2,3,4], k = 5', '0', 'There does not exist any pair of indices whose corresponding product is divisible by 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4447', '1778', '1', 'nums = [5,19,8,1]', '3', 'The initial sum of nums is equal to 5 + 19 + 8 + 1 = 33.\nThe following is one of the ways to reduce the sum by at least half:\nPick the number 19 and reduce it to 9.5.\nPick the number 9.5 and reduce it to 4.75.\nPick the number 8 and reduce it to 4.\nThe final array is [5, 4.75, 4, 1] with a total sum of 5 + 4.75 + 4 + 1 = 14.75. \nThe sum of nums has been reduced by 33 - 14.75 = 18.25, which is at least half of the initial sum, 18.25 &gt;= 33/2 = 16.5.\nOverall, 3 operations were used so we return 3.\nIt can be shown that we cannot reduce the sum by at least half in less than 3 operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4448', '1778', '2', 'nums = [3,8,20]', '3', 'The initial sum of nums is equal to 3 + 8 + 20 = 31.\nThe following is one of the ways to reduce the sum by at least half:\nPick the number 20 and reduce it to 10.\nPick the number 10 and reduce it to 5.\nPick the number 3 and reduce it to 1.5.\nThe final array is [1.5, 8, 5] with a total sum of 1.5 + 8 + 5 = 14.5. \nThe sum of nums has been reduced by 31 - 14.5 = 16.5, which is at least half of the initial sum, 16.5 &gt;= 31/2 = 15.5.\nOverall, 3 operations were used so we return 3.\nIt can be shown that we cannot reduce the sum by at least half in less than 3 operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4449', '1812', '1', 'rectangles = [[1,2],[2,3],[2,5]], points = [[2,1],[1,4]]', '[2,1]', 'The first rectangle contains no points.\nThe second rectangle contains only the point (2, 1).\nThe third rectangle contains the points (2, 1) and (1, 4).\nThe number of rectangles that contain the point (2, 1) is 2.\nThe number of rectangles that contain the point (1, 4) is 1.\nTherefore, we return [2, 1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4450', '1812', '2', 'rectangles = [[1,1],[2,2],[3,3]], points = [[1,3],[1,1]]', '[1,3]\n<strong>', '</strong>The first rectangle contains only the point (1, 1).\nThe second rectangle contains only the point (1, 1).\nThe third rectangle contains the points (1, 3) and (1, 1).\nThe number of rectangles that contain the point (1, 3) is 1.\nThe number of rectangles that contain the point (1, 1) is 3.\nTherefore, we return [1, 3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4451', '1824', '1', 'pressedKeys = \"22233\"', '8', 'The possible text messages Alice could have sent are:\n\"aaadd\", \"abdd\", \"badd\", \"cdd\", \"aaae\", \"abe\", \"bae\", and \"ce\".\nSince there are 8 possible messages, we return 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4452', '1824', '2', 'pressedKeys = \"222222222222222222222222222222222222\"', '82876089', 'There are 2082876103 possible text messages Alice could have sent.\nSince we need to return the answer modulo 10<sup>9</sup> + 7, we return 2082876103 % (10<sup>9</sup> + 7) = 82876089.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4453', '1902', '1', 'nums = [3,9,3]', '2', 'Here are the steps to sort the array in non-decreasing order:\n- From [3,9,3], replace the 9 with 3 and 6 so the array becomes [3,3,6,3]\n- From [3,3,6,3], replace the 6 with 3 and 3 so the array becomes [3,3,3,3,3]\nThere are 2 steps to sort the array in non-decreasing order. Therefore, we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4454', '1902', '2', 'nums = [1,2,3,4,5]', '0', 'The array is already in non-decreasing order. Therefore, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4455', '1918', '1', 'nums = [2,4,-2], k = 5', '2', 'All the possible subsequence sums that we can obtain are the following sorted in decreasing order:\n- 6, 4, 4, 2, <u>2</u>, 0, 0, -2.\nThe 5-Sum of the array is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4456', '1918', '2', 'nums = [1,-2,3,4,-10,12], k = 16', '10', 'The 16-Sum of the array is 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4457', '1919', '1', 'nums = [4,5,2,1], queries = [3,10,21]', '[2,3,4]', 'We answer the queries as follows:\n- The subsequence [2,1] has a sum less than or equal to 3. It can be proven that 2 is the maximum size of such a subsequence, so answer[0] = 2.\n- The subsequence [4,5,1] has a sum less than or equal to 10. It can be proven that 3 is the maximum size of such a subsequence, so answer[1] = 3.\n- The subsequence [4,5,2,1] has a sum less than or equal to 21. It can be proven that 4 is the maximum size of such a subsequence, so answer[2] = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4458', '1919', '2', 'nums = [2,3,4,5], queries = [1]', '[0]', 'The empty subsequence is the only subsequence that has a sum less than or equal to 1, so answer[0] = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4459', '1920', '1', 's = \"leet**cod*e\"', '\"lecoe\"', 'Performing the removals from left to right:\n- The closest character to the 1<sup>st</sup> star is \'t\' in \"lee<strong><u>t</u></strong>**cod*e\". s becomes \"lee*cod*e\".\n- The closest character to the 2<sup>nd</sup> star is \'e\' in \"le<strong><u>e</u></strong>*cod*e\". s becomes \"lecod*e\".\n- The closest character to the 3<sup>rd</sup> star is \'d\' in \"leco<strong><u>d</u></strong>*e\". s becomes \"lecoe\".\nThere are no more stars, so we return \"lecoe\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4460', '1920', '2', 's = \"erase*****\"', '\"\"', 'The entire string is removed, so we return an empty string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4461', '1921', '1', 'garbage = [\"G\",\"P\",\"GP\",\"GG\"], travel = [2,4,3]', '21', 'The paper garbage truck:\n1. Travels from house 0 to house 1\n2. Collects the paper garbage at house 1\n3. Travels from house 1 to house 2\n4. Collects the paper garbage at house 2\nAltogether, it takes 8 minutes to pick up all the paper garbage.\nThe glass garbage truck:\n1. Collects the glass garbage at house 0\n2. Travels from house 0 to house 1\n3. Travels from house 1 to house 2\n4. Collects the glass garbage at house 2\n5. Travels from house 2 to house 3\n6. Collects the glass garbage at house 3\nAltogether, it takes 13 minutes to pick up all the glass garbage.\nSince there is no metal garbage, we do not need to consider the metal garbage truck.\nTherefore, it takes a total of 8 + 13 = 21 minutes to collect all the garbage.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4462', '1921', '2', 'garbage = [\"MMM\",\"PGM\",\"GP\"], travel = [3,10]', '37', 'The metal garbage truck takes 7 minutes to pick up all the metal garbage.\nThe paper garbage truck takes 15 minutes to pick up all the paper garbage.\nThe glass garbage truck takes 15 minutes to pick up all the glass garbage.\nIt takes a total of 7 + 15 + 15 = 37 minutes to collect all the garbage.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4463', '1922', '1', 'k = 3, rowConditions = [[1,2],[3,2]], colConditions = [[2,1],[3,2]]', '[[3,0,0],[0,0,1],[0,2,0]]', 'The diagram above shows a valid example of a matrix that satisfies all the conditions.\nThe row conditions are the following:\n- Number 1 is in row <u>1</u>, and number 2 is in row <u>2</u>, so 1 is above 2 in the matrix.\n- Number 3 is in row <u>0</u>, and number 2 is in row <u>2</u>, so 3 is above 2 in the matrix.\nThe column conditions are the following:\n- Number 2 is in column <u>1</u>, and number 1 is in column <u>2</u>, so 2 is left of 1 in the matrix.\n- Number 3 is in column <u>0</u>, and number 2 is in column <u>1</u>, so 3 is left of 2 in the matrix.\nNote that there may be multiple correct answers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4464', '1922', '2', 'k = 3, rowConditions = [[1,2],[2,3],[3,1],[2,3]], colConditions = [[2,1]]', '[]', 'From the first two conditions, 3 has to be below 1 but the third conditions needs 3 to be above 1 to be satisfied.\nNo matrix can satisfy all the conditions, so we return the empty matrix.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4465', '1923', '1', 'nums = [4,2,4]', 'true', 'The subarrays with elements [4,2] and [2,4] have the same sum of 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4466', '1923', '2', 'nums = [1,2,3,4,5]', 'false', 'No two subarrays of size 2 have the same sum.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4467', '1923', '3', 'nums = [0,0,0]', 'true', 'The subarrays [nums[0],nums[1]] and [nums[1],nums[2]] have the same sum of 0. \nNote that even though the subarrays have the same content, the two subarrays are considered different because they are in different positions in the original array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4468', '1926', '1', 'chargeTimes = [3,6,1,3,4], runningCosts = [2,1,3,4,5], budget = 25', '3', 'It is possible to run all individual and consecutive pairs of robots within budget.\nTo obtain answer 3, consider the first 3 robots. The total cost will be max(3,6,1) + 3 * sum(2,1,3) = 6 + 3 * 6 = 24 which is less than 25.\nIt can be shown that it is not possible to run more than 3 consecutive robots within budget, so we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4469', '1926', '2', 'chargeTimes = [11,12,19], runningCosts = [10,8,7], budget = 19', '0', 'No robot can be run that does not exceed the budget, so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4470', '1927', '1', 's = \"abaccb\", distance = [1,3,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]', 'true', '- \'a\' appears at indices 0 and 2 so it satisfies distance[0] = 1.\n- \'b\' appears at indices 1 and 5 so it satisfies distance[1] = 3.\n- \'c\' appears at indices 3 and 4 so it satisfies distance[2] = 0.\nNote that distance[3] = 5, but since \'d\' does not appear in s, it can be ignored.\nReturn true because s is a well-spaced string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4471', '1927', '2', 's = \"aa\", distance = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]', 'false', '- \'a\' appears at indices 0 and 1 so there are zero letters between them.\nBecause distance[0] = 1, s is not a well-spaced string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4472', '1928', '1', 'startPos = 1, endPos = 2, k = 3', '3', 'We can reach position 2 from 1 in exactly 3 steps in three ways:\n- 1 -&gt; 2 -&gt; 3 -&gt; 2.\n- 1 -&gt; 2 -&gt; 1 -&gt; 2.\n- 1 -&gt; 0 -&gt; 1 -&gt; 2.\nIt can be proven that no other way is possible, so we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4473', '1928', '2', 'startPos = 2, endPos = 5, k = 10', '0', 'It is impossible to reach position 5 from position 2 in exactly 10 steps.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4474', '1929', '1', 'nums = [1,3,8,48,10]', '3', 'The longest nice subarray is [3,8,48]. This subarray satisfies the conditions:\n- 3 AND 8 = 0.\n- 3 AND 48 = 0.\n- 8 AND 48 = 0.\nIt can be proven that no longer nice subarray can be obtained, so we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4475', '1929', '2', 'nums = [3,1,5,11,13]', '1', 'The length of the longest nice subarray is 1. Any subarray of length 1 can be chosen.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4476', '1930', '1', 'n = 2, meetings = [[0,10],[1,5],[2,7],[3,4]]', '0', '- At time 0, both rooms are not being used. The first meeting starts in room 0.\n- At time 1, only room 1 is not being used. The second meeting starts in room 1.\n- At time 2, both rooms are being used. The third meeting is delayed.\n- At time 3, both rooms are being used. The fourth meeting is delayed.\n- At time 5, the meeting in room 1 finishes. The third meeting starts in room 1 for the time period [5,10).\n- At time 10, the meetings in both rooms finish. The fourth meeting starts in room 0 for the time period [10,11).\nBoth rooms 0 and 1 held 2 meetings, so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4477', '1930', '2', 'n = 3, meetings = [[1,20],[2,10],[3,5],[4,9],[6,8]]', '1', '- At time 1, all three rooms are not being used. The first meeting starts in room 0.\n- At time 2, rooms 1 and 2 are not being used. The second meeting starts in room 1.\n- At time 3, only room 2 is not being used. The third meeting starts in room 2.\n- At time 4, all three rooms are being used. The fourth meeting is delayed.\n- At time 5, the meeting in room 2 finishes. The fourth meeting starts in room 2 for the time period [5,10).\n- At time 6, all three rooms are being used. The fifth meeting is delayed.\n- At time 10, the meetings in rooms 1 and 2 finish. The fifth meeting starts in room 1 for the time period [10,12).\nRoom 0 held 1 meeting while rooms 1 and 2 each held 2 meetings, so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4478', '1931', '1', 'nums = [0,1,2,2,4,4,1]', '2', 'The even elements are 0, 2, and 4. Of these, 2 and 4 appear the most.\nWe return the smallest one, which is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4479', '1931', '2', 'nums = [4,4,4,9,2,4]', '4', '4 is the even element appears the most.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4480', '1931', '3', 'nums = [29,47,21,41,13,37,25,7]', '-1', 'There is no even element.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4481', '1932', '1', 's = \"abacaba\"', '4', 'Two possible partitions are (\"a\",\"ba\",\"cab\",\"a\") and (\"ab\",\"a\",\"ca\",\"ba\").\nIt can be shown that 4 is the minimum number of substrings needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4482', '1932', '2', 's = \"ssssss\"', '6\n<strong>', '</strong>The only valid partition is (\"s\",\"s\",\"s\",\"s\",\"s\",\"s\").');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4483', '1933', '1', 'intervals = [[5,10],[6,8],[1,5],[2,3],[1,10]]', '3', 'We can divide the intervals into the following groups:\n- Group 1: [1, 5], [6, 8].\n- Group 2: [2, 3], [5, 10].\n- Group 3: [1, 10].\nIt can be proven that it is not possible to divide the intervals into fewer than 3 groups.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4484', '1933', '2', 'intervals = [[1,3],[5,6],[8,10],[11,13]]', '1', 'None of the intervals overlap, so we can put all of them in one group.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4485', '1934', '1', 'nums = [4,2,1,4,3,4,5,8,15], k = 3', '5', 'The longest subsequence that meets the requirements is [1,3,4,5,8].\nThe subsequence has a length of 5, so we return 5.\nNote that the subsequence [1,3,4,5,8,15] does not meet the requirements because 15 - 8 = 7 is larger than 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4486', '1934', '2', 'nums = [7,4,5,1,8,12,4,7], k = 5', '4', 'The longest subsequence that meets the requirements is [4,5,8,12].\nThe subsequence has a length of 4, so we return 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4487', '1934', '3', 'nums = [1,5], k = 1', '1', 'The longest subsequence that meets the requirements is [1].\nThe subsequence has a length of 1, so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4488', '1936', '1', 'players = [4,7,9], trainers = [8,2,5,8]', '2', 'One of the ways we can form two matchings is as follows:\n- players[0] can be matched with trainers[0] since 4 &lt;= 8.\n- players[1] can be matched with trainers[3] since 7 &lt;= 8.\nIt can be proven that 2 is the maximum number of matchings that can be formed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4489', '1936', '2', 'players = [1,1,1], trainers = [10]', '1', 'The trainer can be matched with any of the 3 players.\nEach player can only be matched with one trainer, so the maximum answer is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4490', '1937', '1', 'nums = [1,0,2,1,3]', '[3,3,2,2,1]', 'The maximum possible bitwise OR starting at any index is 3. \n- Starting at index 0, the shortest subarray that yields it is [1,0,2].\n- Starting at index 1, the shortest subarray that yields the maximum bitwise OR is [0,2,1].\n- Starting at index 2, the shortest subarray that yields the maximum bitwise OR is [2,1].\n- Starting at index 3, the shortest subarray that yields the maximum bitwise OR is [1,3].\n- Starting at index 4, the shortest subarray that yields the maximum bitwise OR is [3].\nTherefore, we return [3,3,2,2,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4491', '1937', '2', 'nums = [1,2]', '[2,1]\n<strong>', '</strong>Starting at index 0, the shortest subarray that yields the maximum bitwise OR is of length 2.\nStarting at index 1, the shortest subarray that yields the maximum bitwise OR is of length 1.\nTherefore, we return [2,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4492', '1938', '1', 'transactions = [[2,1],[5,0],[4,2]]', '10\n<strong>', '</strong>Starting with money = 10, the transactions can be performed in any order.\nIt can be shown that starting with money &lt; 10 will fail to complete all transactions in some order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4493', '1938', '2', 'transactions = [[3,0],[0,3]]', '3', '- If transactions are in the order [[3,0],[0,3]], the minimum money required to complete the transactions is 3.\n- If transactions are in the order [[0,3],[3,0]], the minimum money required to complete the transactions is 0.\nThus, starting with money = 3, the transactions can be performed in any order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4494', '1939', '1', 'n = 5', '10', 'The smallest multiple of both 5 and 2 is 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4495', '1939', '2', 'n = 6', '6', 'The smallest multiple of both 6 and 2 is 6. Note that a number is a multiple of itself.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4496', '1940', '1', 's = \"abacaba\"', '2', 'There are 4 distinct continuous substrings: \"a\", \"b\", \"c\" and \"ab\".\n\"ab\" is the longest continuous substring.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4497', '1940', '2', 's = \"abcde\"', '5', '\"abcde\" is the longest continuous substring.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4498', '1941', '1', 'root = [2,3,5,8,13,21,34]', '[2,5,3,8,13,21,34]', 'The tree has only one odd level.\nThe nodes at level 1 are 3, 5 respectively, which are reversed and become 5, 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4499', '1941', '2', 'root = [7,13,11]', '[7,11,13]', 'The nodes at level 1 are 13, 11, which are reversed and become 11, 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4500', '1941', '3', 'root = [0,1,2,0,0,0,0,1,1,1,1,2,2,2,2]', '[0,2,1,0,0,0,0,2,2,2,2,1,1,1,1]', 'The odd levels have non-zero values.\nThe nodes at level 1 were 1, 2, and are 2, 1 after the reversal.\nThe nodes at level 3 were 1, 1, 1, 1, 2, 2, 2, 2, and are 2, 2, 2, 2, 1, 1, 1, 1 after the reversal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4501', '1942', '1', 'words = [\"abc\",\"ab\",\"bc\",\"b\"]', '[5,4,3,2]', 'The answer for each string is the following:\n- \"abc\" has 3 prefixes: \"a\", \"ab\", and \"abc\".\n- There are 2 strings with the prefix \"a\", 2 strings with the prefix \"ab\", and 1 string with the prefix \"abc\".\nThe total is answer[0] = 2 + 2 + 1 = 5.\n- \"ab\" has 2 prefixes: \"a\" and \"ab\".\n- There are 2 strings with the prefix \"a\", and 2 strings with the prefix \"ab\".\nThe total is answer[1] = 2 + 2 = 4.\n- \"bc\" has 2 prefixes: \"b\" and \"bc\".\n- There are 2 strings with the prefix \"b\", and 1 string with the prefix \"bc\".\nThe total is answer[2] = 2 + 1 = 3.\n- \"b\" has 1 prefix: \"b\".\n- There are 2 strings with the prefix \"b\".\nThe total is answer[3] = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4502', '1942', '2', 'words = [\"abcd\"]', '[4]', '\"abcd\" has 4 prefixes: \"a\", \"ab\", \"abc\", and \"abcd\".\nEach prefix has a score of one, so the total is answer[0] = 1 + 1 + 1 + 1 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4503', '1943', '1', 'names = [\"Mary\",\"John\",\"Emma\"], heights = [180,165,170]', '[\"Mary\",\"Emma\",\"John\"]', 'Mary is the tallest, followed by Emma and John.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4504', '1943', '2', 'names = [\"Alice\",\"Bob\",\"Bob\"], heights = [155,185,150]', '[\"Bob\",\"Alice\",\"Bob\"]', 'The first Bob is the tallest, followed by Alice and the second Bob.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4505', '1944', '1', 'nums = [1,2,3,3,2,2]', '2', 'The maximum possible bitwise AND of a subarray is 3.\nThe longest subarray with that value is [3,3], so we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4506', '1944', '2', 'nums = [1,2,3,4]', '1', 'The maximum possible bitwise AND of a subarray is 4.\nThe longest subarray with that value is [4], so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4507', '1945', '1', 'nums = [2,1,1,1,3,4,1], k = 2', '[2,3]', 'There are two good indices in the array:\n- Index 2. The subarray [2,1] is in non-increasing order, and the subarray [1,3] is in non-decreasing order.\n- Index 3. The subarray [1,1] is in non-increasing order, and the subarray [3,4] is in non-decreasing order.\nNote that the index 4 is not good because [4,1] is not non-decreasing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4508', '1945', '2', 'nums = [2,1,1,2], k = 2', '[]', 'There are no good indices in this array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4509', '1946', '1', 'vals = [1,3,2,1,3], edges = [[0,1],[0,2],[2,3],[2,4]]', '6', 'There are 5 good paths consisting of a single node.\nThere is 1 additional good path: 1 -&gt; 0 -&gt; 2 -&gt; 4.\n(The reverse path 4 -&gt; 2 -&gt; 0 -&gt; 1 is treated as the same as 1 -&gt; 0 -&gt; 2 -&gt; 4.)\nNote that 0 -&gt; 2 -&gt; 3 is not a good path because vals[2] &gt; vals[0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4510', '1946', '2', 'vals = [1,1,2,2,3], edges = [[0,1],[1,2],[2,3],[2,4]]', '7', 'There are 5 good paths consisting of a single node.\nThere are 2 additional good paths: 0 -&gt; 1 and 2 -&gt; 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4511', '1946', '3', 'vals = [1], edges = []', '1', 'The tree consists of only one node, so there is one good path.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4512', '1947', '1', 'word = \"abcc\"', 'true', 'Select index 3 and delete it: word becomes \"abc\" and each character has a frequency of 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4513', '1947', '2', 'word = \"aazz\"', 'false', 'We must delete a character, so either the frequency of \"a\" is 1 and the frequency of \"z\" is 2, or vice versa. It is impossible to make all present letters have equal frequency.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4514', '1948', '1', '[\"LUPrefix\", \"upload\", \"longest\", \"upload\", \"longest\", \"upload\", \"longest\"]\n[[4], [3], [], [1], [], [2], []]', '[null, null, 0, null, 1, null, 3]', 'LUPrefix server = new LUPrefix(4);   // Initialize a stream of 4 videos.\nserver.upload(3);                    // Upload video 3.\nserver.longest();                    // Since video 1 has not been uploaded yet, there is no prefix.\n                                     // So, we return 0.\nserver.upload(1);                    // Upload video 1.\nserver.longest();                    // The prefix [1] is the longest uploaded prefix, so we return 1.\nserver.upload(2);                    // Upload video 2.\nserver.longest();                    // The prefix [1,2,3] is the longest uploaded prefix, so we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4515', '1949', '1', 'nums1 = [2,1,3], nums2 = [10,2,5,0]', '13', 'A possible nums3 array is [8,0,7,2,11,3,4,1,9,1,6,3].\nThe bitwise XOR of all these numbers is 13, so we return 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4516', '1949', '2', 'nums1 = [1,2], nums2 = [3,4]', '0', 'All possible pairs of bitwise XORs are nums1[0] ^ nums2[0], nums1[0] ^ nums2[1], nums1[1] ^ nums2[0],\nand nums1[1] ^ nums2[1].\nThus, one possible nums3 array is [2,5,1,6].\n2 ^ 5 ^ 1 ^ 6 = 0, so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4517', '1950', '1', 'nums1 = [3,2,5], nums2 = [2,2,1], diff = 1', '3', 'There are 3 pairs that satisfy the conditions:\n1. i = 0, j = 1: 3 - 2 &lt;= 2 - 2 + 1. Since i &lt; j and 1 &lt;= 1, this pair satisfies the conditions.\n2. i = 0, j = 2: 3 - 5 &lt;= 2 - 1 + 1. Since i &lt; j and -2 &lt;= 2, this pair satisfies the conditions.\n3. i = 1, j = 2: 2 - 5 &lt;= 2 - 1 + 1. Since i &lt; j and -3 &lt;= 2, this pair satisfies the conditions.\nTherefore, we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4518', '1950', '2', 'nums1 = [3,-1], nums2 = [-2,2], diff = -1', '0', 'Since there does not exist any pair that satisfies the conditions, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4519', '1951', '1', 'a = 12, b = 6', '4', 'The common factors of 12 and 6 are 1, 2, 3, 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4520', '1951', '2', 'a = 25, b = 30', '2', 'The common factors of 25 and 30 are 1, 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4521', '1952', '1', 'grid = [[6,2,1,3],[4,2,1,5],[9,2,8,7],[4,1,2,9]]', '30', 'The cells shown above represent the hourglass with the maximum sum: 6 + 2 + 1 + 2 + 9 + 2 + 8 = 30.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4522', '1952', '2', 'grid = [[1,2,3],[4,5,6],[7,8,9]]', '35', 'There is only one hourglass in the matrix, with the sum: 1 + 2 + 3 + 5 + 7 + 8 + 9 = 35.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4523', '1953', '1', 'num1 = 3, num2 = 5', '3', 'The binary representations of num1 and num2 are 0011 and 0101, respectively.\nThe integer <strong>3</strong> has the same number of set bits as num2, and the value <code>3 XOR 3 = 0</code> is minimal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4524', '1953', '2', 'num1 = 1, num2 = 12', '3', 'The binary representations of num1 and num2 are 0001 and 1100, respectively.\nThe integer <strong>3</strong> has the same number of set bits as num2, and the value <code>3 XOR 1 = 2</code> is minimal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4525', '1954', '1', 's = \"abcabcdabc\"', '2', '- Delete the first 3 letters (\"abc\") since the next 3 letters are equal. Now, s = \"abcdabc\".\n- Delete all the letters.\nWe used 2 operations so return 2. It can be proven that 2 is the maximum number of operations needed.\nNote that in the second operation we cannot delete \"abc\" again because the next occurrence of \"abc\" does not happen in the next 3 letters.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4526', '1954', '2', 's = \"aaabaab\"', '4', '- Delete the first letter (\"a\") since the next letter is equal. Now, s = \"aabaab\".\n- Delete the first 3 letters (\"aab\") since the next 3 letters are equal. Now, s = \"aab\".\n- Delete the first letter (\"a\") since the next letter is equal. Now, s = \"ab\".\n- Delete all the letters.\nWe used 4 operations so return 4. It can be proven that 4 is the maximum number of operations needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4527', '1954', '3', 's = \"aaaaa\"', '5', 'In each operation, we can delete the first letter of s.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4528', '1955', '1', 'n = 10, logs = [[0,3],[2,5],[0,9],[1,15]]', '1', 'Task 0 started at 0 and ended at 3 with 3 units of times.\nTask 1 started at 3 and ended at 5 with 2 units of times.\nTask 2 started at 5 and ended at 9 with 4 units of times.\nTask 3 started at 9 and ended at 15 with 6 units of times.\nThe task with the longest time is task 3 and the employee with id 1 is the one that worked on it, so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4529', '1955', '2', 'n = 26, logs = [[1,1],[3,7],[2,12],[7,17]]', '3', 'Task 0 started at 0 and ended at 1 with 1 unit of times.\nTask 1 started at 1 and ended at 7 with 6 units of times.\nTask 2 started at 7 and ended at 12 with 5 units of times.\nTask 3 started at 12 and ended at 17 with 5 units of times.\nThe tasks with the longest time is task 1. The employee that worked on it is 3, so we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4530', '1955', '3', 'n = 2, logs = [[0,10],[1,20]]', '0', 'Task 0 started at 0 and ended at 10 with 10 units of times.\nTask 1 started at 10 and ended at 20 with 10 units of times.\nThe tasks with the longest time are tasks 0 and 1. The employees that worked on them are 0 and 1, so we return the smallest id 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4531', '1956', '1', 'pref = [5,2,0,3,1]', '[5,7,2,3,2]', 'From the array [5,7,2,3,2] we have the following:\n- pref[0] = 5.\n- pref[1] = 5 ^ 7 = 2.\n- pref[2] = 5 ^ 7 ^ 2 = 0.\n- pref[3] = 5 ^ 7 ^ 2 ^ 3 = 3.\n- pref[4] = 5 ^ 7 ^ 2 ^ 3 ^ 2 = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4532', '1956', '2', 'pref = [13]', '[13]', 'We have pref[0] = arr[0] = 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4533', '1957', '1', 's = \"zza\"', '\"azz\"', 'Let p denote the written string.\nInitially p=\"\", s=\"zza\", t=\"\".\nPerform first operation three times p=\"\", s=\"\", t=\"zza\".\nPerform second operation three times p=\"azz\", s=\"\", t=\"\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4534', '1957', '2', 's = \"bac\"', '\"abc\"', 'Let p denote the written string.\nPerform first operation twice p=\"\", s=\"c\", t=\"ba\". \nPerform second operation twice p=\"ab\", s=\"c\", t=\"\". \nPerform first operation p=\"ab\", s=\"\", t=\"c\". \nPerform second operation p=\"abc\", s=\"\", t=\"\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4535', '1957', '3', 's = \"bdda\"', '\"addb\"', 'Let p denote the written string.\nInitially p=\"\", s=\"bdda\", t=\"\".\nPerform first operation four times p=\"\", s=\"\", t=\"bdda\".\nPerform second operation four times p=\"addb\", s=\"\", t=\"\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4536', '1959', '1', 'time = \"?5:00\"', '2', 'We can replace the ? with either a 0 or 1, producing \"05:00\" or \"15:00\". Note that we cannot replace it with a 2, since the time \"25:00\" is invalid. In total, we have two choices.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4537', '1959', '2', 'time = \"0?:0?\"', '100', 'Each ? can be replaced by any digit from 0 to 9, so we have 100 total choices.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4538', '1959', '3', 'time = \"??:??\"', '1440', 'There are 24 possible choices for the hours, and 60 possible choices for the minutes. In total, we have 24 * 60 = 1440 choices.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4539', '1960', '1', 'n = 15, queries = [[0,1],[2,2],[0,3]]', '[2,4,64]', 'For n = 15, powers = [1,2,4,8]. It can be shown that powers cannot be a smaller size.\nAnswer to 1st query: powers[0] * powers[1] = 1 * 2 = 2.\nAnswer to 2nd query: powers[2] = 4.\nAnswer to 3rd query: powers[0] * powers[1] * powers[2] * powers[3] = 1 * 2 * 4 * 8 = 64.\nEach answer modulo 10<sup>9</sup> + 7 yields the same answer, so [2,4,64] is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4540', '1960', '2', 'n = 2, queries = [[0,0]]', '[2]', 'For n = 2, powers = [2].\nThe answer to the only query is powers[0] = 2. The answer modulo 10<sup>9</sup> + 7 is the same, so [2] is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4541', '1961', '1', 'nums = [3,7,1,6]', '5', 'One set of optimal operations is as follows:\n1. Choose i = 1, and nums becomes [4,6,1,6].\n2. Choose i = 3, and nums becomes [4,6,2,5].\n3. Choose i = 1, and nums becomes [5,5,2,5].\nThe maximum integer of nums is 5. It can be shown that the maximum number cannot be less than 5.\nTherefore, we return 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4542', '1961', '2', 'nums = [10,1]', '10', 'It is optimal to leave nums as is, and since 10 is the maximum value, we return 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4543', '1962', '1', 'nums = [6,2,2,2,6], edges = [[0,1],[1,2],[1,3],[3,4]]', '2', 'The above figure shows how we can delete the edges [0,1] and [3,4]. The created components are nodes [0], [1,2,3] and [4]. The sum of the values in each component equals 6. It can be proven that no better deletion exists, so the answer is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4544', '1962', '2', 'nums = [2], edges = []', '0', 'There are no edges to be deleted.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4545', '1963', '1', 'nums = [-1,2,-3,3]', '3', '3 is the only valid k we can find in the array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4546', '1963', '2', 'nums = [-1,10,6,7,-7,1]', '7', 'Both 1 and 7 have their corresponding negative values in the array. 7 has a larger value.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4547', '1963', '3', 'nums = [-10,8,6,7,-2,-3]', '-1', 'There is no a single valid k, we return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4548', '1964', '1', 'nums = [1,13,10,12,31]', '6', 'After including the reverse of each number, the resulting array is [1,13,10,12,31,<u>1,31,1,21,13</u>].\nThe reversed integers that were added to the end of the array are underlined. Note that for the integer 10, after reversing it, it becomes 01 which is just 1.\nThe number of distinct integers in this array is 6 (The numbers 1, 10, 12, 13, 21, and 31).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4549', '1964', '2', 'nums = [2,2,2]', '1', 'After including the reverse of each number, the resulting array is [2,2,2,<u>2,2,2</u>].\nThe number of distinct integers in this array is 1 (The number 2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4550', '1965', '1', 'num = 443', 'true', '172 + 271 = 443 so we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4551', '1965', '2', 'num = 63', 'false', '63 cannot be expressed as the sum of a non-negative integer and its reverse so we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4552', '1965', '3', 'num = 181', 'true', '140 + 041 = 181 so we return true. Note that when a number is reversed, there may be leading zeros.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4553', '1966', '1', 'nums = [1,3,5,2,7,5], minK = 1, maxK = 5', '2', 'The fixed-bound subarrays are [1,3,5] and [1,3,5,2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4554', '1966', '2', 'nums = [1,1,1,1], minK = 1, maxK = 1', '10', 'Every subarray of nums is a fixed-bound subarray. There are 10 possible subarrays.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4555', '1967', '1', 'event1 = [\"01:15\",\"02:00\"], event2 = [\"02:00\",\"03:00\"]', 'true', 'The two events intersect at time 2:00.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4556', '1967', '2', 'event1 = [\"01:00\",\"02:00\"], event2 = [\"01:20\",\"03:00\"]', 'true', 'The two events intersect starting from 01:20 to 02:00.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4557', '1967', '3', 'event1 = [\"10:00\",\"11:00\"], event2 = [\"14:00\",\"15:00\"]', 'false', 'The two events do not intersect.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4558', '1766', '1', 'n = 8, edgeList = [[0,3],[0,4],[1,3],[2,4],[2,7],[3,5],[3,6],[3,7],[4,6]]', '[[],[],[],[0,1],[0,2],[0,1,3],[0,1,2,3,4],[0,1,2,3]]', 'The above diagram represents the input graph.\n- Nodes 0, 1, and 2 do not have any ancestors.\n- Node 3 has two ancestors 0 and 1.\n- Node 4 has two ancestors 0 and 2.\n- Node 5 has three ancestors 0, 1, and 3.\n- Node 6 has five ancestors 0, 1, 2, 3, and 4.\n- Node 7 has four ancestors 0, 1, 2, and 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4559', '1766', '2', 'n = 5, edgeList = [[0,1],[0,2],[0,3],[0,4],[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]]', '[[],[0],[0,1],[0,1,2],[0,1,2,3]]', 'The above diagram represents the input graph.\n- Node 0 does not have any ancestor.\n- Node 1 has one ancestor 0.\n- Node 2 has two ancestors 0 and 1.\n- Node 3 has three ancestors 0, 1, and 2.\n- Node 4 has four ancestors 0, 1, 2, and 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4560', '1924', '1', 'n = 9', 'false', 'In base 2: 9 = 1001 (base 2), which is palindromic.\nIn base 3: 9 = 100 (base 3), which is not palindromic.\nTherefore, 9 is not strictly palindromic so we return false.\nNote that in bases 4, 5, 6, and 7, n = 9 is also not palindromic.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4561', '1924', '2', 'n = 4', 'false', 'We only consider base 2: 4 = 100 (base 2), which is not palindromic.\nTherefore, we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4562', '1925', '1', 'matrix = [[0,0,0],[1,0,1],[0,1,1],[0,0,1]], numSelect = 2', '3', 'One possible way to cover 3 rows is shown in the diagram above.\nWe choose s = {0, 2}.\n- Row 0 is covered because it has no occurrences of 1.\n- Row 1 is covered because the columns with value 1, i.e. 0 and 2 are present in s.\n- Row 2 is not covered because matrix[2][1] == 1 but 1 is not present in s.\n- Row 3 is covered because matrix[2][2] == 1 and 2 is present in s.\nThus, we can cover three rows.\nNote that s = {1, 2} will also cover 3 rows, but it can be shown that no more than three rows can be covered.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4563', '1925', '2', 'matrix = [[1],[0]], numSelect = 1', '2', 'Selecting the only column will result in both rows being covered since the entire matrix is selected.\nTherefore, we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4564', '1935', '1', 'arriveAlice = \"08-15\", leaveAlice = \"08-18\", arriveBob = \"08-16\", leaveBob = \"08-19\"', '3', 'Alice will be in Rome from August 15 to August 18. Bob will be in Rome from August 16 to August 19. They are both in Rome together on August 16th, 17th, and 18th, so the answer is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4565', '1935', '2', 'arriveAlice = \"10-01\", leaveAlice = \"10-31\", arriveBob = \"11-01\", leaveBob = \"12-31\"', '0', 'There is no day when Alice and Bob are in Rome together, so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4566', '1958', '1', 'grid = [[5,2,4],[3,0,5],[0,7,2]], k = 3', '2', 'There are two paths where the sum of the elements on the path is divisible by k.\nThe first path highlighted in red has a sum of 5 + 2 + 4 + 5 + 2 = 18 which is divisible by 3.\nThe second path highlighted in blue has a sum of 5 + 3 + 0 + 5 + 2 = 15 which is divisible by 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4567', '1958', '2', 'grid = [[0,0]], k = 5', '1', 'The path highlighted in red has a sum of 0 + 0 = 0 which is divisible by 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4568', '1958', '3', 'grid = [[7,3,4,9],[2,3,6,2],[2,3,7,0]], k = 1', '10', 'Every integer is divisible by 1 so the sum of the elements on every possible path is divisible by k.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4569', '1968', '1', 'nums = [9,3,1,2,6,3], k = 3', '4', 'The subarrays of nums where 3 is the greatest common divisor of all the subarray\'s elements are:\n- [9,<u><strong>3</strong></u>,1,2,6,3]\n- [9,3,1,2,6,<u><strong>3</strong></u>]\n- [<u><strong>9,3</strong></u>,1,2,6,3]\n- [9,3,1,2,<u><strong>6,3</strong></u>]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4570', '1968', '2', 'nums = [4], k = 7', '0', 'There are no subarrays of nums where 7 is the greatest common divisor of all the subarray\'s elements.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4571', '1969', '1', 'nums = [1,3,5,2], cost = [2,3,1,14]', '8', 'We can make all the elements equal to 2 in the following way:\n- Increase the 0<sup>th</sup> element one time. The cost is 2.\n- Decrease the 1<sup><span style=\"font-size:10.8333px\">st</span></sup> element one time. The cost is 3.\n- Decrease the 2<sup>nd</sup> element three times. The cost is 1 + 1 + 1 = 3.\nThe total cost is 2 + 3 + 3 = 8.\nIt can be shown that we cannot make the array equal with a smaller cost.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4572', '1969', '2', 'nums = [2,2,2,2,2], cost = [4,2,8,1,3]', '0', 'All the elements are already equal, so no operations are needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4573', '1970', '1', 'nums = [8,12,6], target = [2,14,10]', '2', 'It is possible to make nums similar to target in two operations:\n- Choose i = 0 and j = 2, nums = [10,12,4].\n- Choose i = 1 and j = 2, nums = [10,14,2].\nIt can be shown that 2 is the minimum number of operations needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4574', '1970', '2', 'nums = [1,2,5], target = [4,1,3]', '1', 'We can make nums similar to target in one operation:\n- Choose i = 1 and j = 2, nums = [1,4,3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4575', '1970', '3', 'nums = [1,1,1,1,1], target = [1,1,1,1,1]', '0', 'The array nums is already similiar to target.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4576', '1971', '1', 'words = [\"adc\",\"wzy\",\"abc\"]', '\"abc\"', '- The difference integer array of \"adc\" is [3 - 0, 2 - 3] = [3, -1].\n- The difference integer array of \"wzy\" is [25 - 22, 24 - 25]= [3, -1].\n- The difference integer array of \"abc\" is [1 - 0, 2 - 1] = [1, 1]. \nThe odd array out is [1, 1], so we return the corresponding string, \"abc\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4577', '1971', '2', 'words = [\"aaa\",\"bob\",\"ccc\",\"ddd\"]', '\"bob\"', 'All the integer arrays are [0, 0] except for \"bob\", which corresponds to [13, -13].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4578', '1972', '1', 'queries = [\"word\",\"note\",\"ants\",\"wood\"], dictionary = [\"wood\",\"joke\",\"moat\"]', '[\"word\",\"note\",\"wood\"]', '- Changing the \'r\' in \"word\" to \'o\' allows it to equal the dictionary word \"wood\".\n- Changing the \'n\' to \'j\' and the \'t\' to \'k\' in \"note\" changes it to \"joke\".\n- It would take more than 2 edits for \"ants\" to equal a dictionary word.\n- \"wood\" can remain unchanged (0 edits) and match the corresponding dictionary word.\nThus, we return [\"word\",\"note\",\"wood\"].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4579', '1972', '2', 'queries = [\"yes\"], dictionary = [\"not\"]', '[]', 'Applying any two edits to \"yes\" cannot make it equal to \"not\". Thus, we return an empty array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4580', '1973', '1', 'nums = [3,7,8,1,1,5], space = 2', '1', 'If we seed the machine with nums[3], then we destroy all targets equal to 1,3,5,7,9,... \nIn this case, we would destroy 5 total targets (all except for nums[2]). \nIt is impossible to destroy more than 5 targets, so we return nums[3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4581', '1973', '2', 'nums = [1,3,5,2,4,6], space = 2', '1', 'Seeding the machine with nums[0], or nums[3] destroys 3 targets. \nIt is not possible to destroy more than 3 targets.\nSince nums[0] is the minimal integer that can destroy 3 targets, we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4582', '1973', '3', 'nums = [6,2,5], space = 100', '2', 'Whatever initial seed we select, we can only destroy 1 target. The minimal seed is nums[1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4583', '1975', '1', 'nums = [1,3,6,10,12,15]', '9', '6 and 12 are even numbers that are divisible by 3. (6 + 12) / 2 = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4584', '1975', '2', 'nums = [1,2,4,7,10]', '0', 'There is no single number that satisfies the requirement, so return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4585', '1976', '1', 'creators = [\"alice\",\"bob\",\"alice\",\"chris\"], ids = [\"one\",\"two\",\"three\",\"four\"], views = [5,10,5,4]', '[[\"alice\",\"one\"],[\"bob\",\"two\"]]', 'The popularity of alice is 5 + 5 = 10.\nThe popularity of bob is 10.\nThe popularity of chris is 4.\nalice and bob are the most popular creators.\nFor bob, the video with the highest view count is \"two\".\nFor alice, the videos with the highest view count are \"one\" and \"three\". Since \"one\" is lexicographically smaller than \"three\", it is included in the answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4586', '1976', '2', 'creators = [\"alice\",\"alice\",\"alice\"], ids = [\"a\",\"b\",\"c\"], views = [1,2,2]', '[[\"alice\",\"b\"]]', 'The videos with id \"b\" and \"c\" have the highest view count.\nSince \"b\" is lexicographically smaller than \"c\", it is included in the answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4587', '1977', '1', 'n = 16, target = 6', '4', 'Initially n is 16 and its digit sum is 1 + 6 = 7. After adding 4, n becomes 20 and digit sum becomes 2 + 0 = 2. It can be shown that we can not make n beautiful with adding non-negative integer less than 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4588', '1977', '2', 'n = 467, target = 6', '33', 'Initially n is 467 and its digit sum is 4 + 6 + 7 = 17. After adding 33, n becomes 500 and digit sum becomes 5 + 0 + 0 = 5. It can be shown that we can not make n beautiful with adding non-negative integer less than 33.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4589', '1977', '3', 'n = 1, target = 1', '0', 'Initially n is 1 and its digit sum is 1, which is already smaller than or equal to target.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4590', '1978', '1', 'root = [1,3,4,2,null,6,5,null,null,null,null,null,7], queries = [4]', '[2]', 'The diagram above shows the tree after removing the subtree rooted at node with value 4.\nThe height of the tree is 2 (The path 1 -&gt; 3 -&gt; 2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4591', '1978', '2', 'root = [5,8,9,2,1,3,7,4,6], queries = [3,2,4,8]', '[3,2,3,2]', 'We have the following queries:\n- Removing the subtree rooted at node with value 3. The height of the tree becomes 3 (The path 5 -&gt; 8 -&gt; 2 -&gt; 4).\n- Removing the subtree rooted at node with value 2. The height of the tree becomes 2 (The path 5 -&gt; 8 -&gt; 1).\n- Removing the subtree rooted at node with value 4. The height of the tree becomes 3 (The path 5 -&gt; 8 -&gt; 2 -&gt; 6).\n- Removing the subtree rooted at node with value 8. The height of the tree becomes 2 (The path 5 -&gt; 9 -&gt; 3).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4592', '1979', '1', 'nums = [1,2,2,1,1,0]', '[1,4,2,0,0,0]', 'We do the following operations:\n- i = 0: nums[0] and nums[1] are not equal, so we skip this operation.\n- i = 1: nums[1] and nums[2] are equal, we multiply nums[1] by 2 and change nums[2] to 0. The array becomes [1,<strong><u>4</u></strong>,<strong><u>0</u></strong>,1,1,0].\n- i = 2: nums[2] and nums[3] are not equal, so we skip this operation.\n- i = 3: nums[3] and nums[4] are equal, we multiply nums[3] by 2 and change nums[4] to 0. The array becomes [1,4,0,<strong><u>2</u></strong>,<strong><u>0</u></strong>,0].\n- i = 4: nums[4] and nums[5] are equal, we multiply nums[4] by 2 and change nums[5] to 0. The array becomes [1,4,0,2,<strong><u>0</u></strong>,<strong><u>0</u></strong>].\nAfter that, we shift the 0\'s to the end, which gives the array [1,4,2,0,0,0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4593', '1979', '2', 'nums = [0,1]', '[1,0]', 'No operation can be applied, we just shift the 0 to the end.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4594', '1980', '1', 'nums = [1,5,4,2,9,9,9], k = 3', '15', 'The subarrays of nums with length 3 are:\n- [1,5,4] which meets the requirements and has a sum of 10.\n- [5,4,2] which meets the requirements and has a sum of 11.\n- [4,2,9] which meets the requirements and has a sum of 15.\n- [2,9,9] which does not meet the requirements because the element 9 is repeated.\n- [9,9,9] which does not meet the requirements because the element 9 is repeated.\nWe return 15 because it is the maximum subarray sum of all the subarrays that meet the conditions');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4595', '1980', '2', 'nums = [4,4,4], k = 3', '0', 'The subarrays of nums with length 3 are:\n- [4,4,4] which does not meet the requirements because the element 4 is repeated.\nWe return 0 because no subarrays meet the conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4596', '1981', '1', 'costs = [17,12,10,2,7,2,11,20,8], k = 3, candidates = 4', '11', 'We hire 3 workers in total. The total cost is initially 0.\n- In the first hiring round we choose the worker from [<u>17,12,10,2</u>,7,<u>2,11,20,8</u>]. The lowest cost is 2, and we break the tie by the smallest index, which is 3. The total cost = 0 + 2 = 2.\n- In the second hiring round we choose the worker from [<u>17,12,10,7</u>,<u>2,11,20,8</u>]. The lowest cost is 2 (index 4). The total cost = 2 + 2 = 4.\n- In the third hiring round we choose the worker from [<u>17,12,10,7,11,20,8</u>]. The lowest cost is 7 (index 3). The total cost = 4 + 7 = 11. Notice that the worker with index 3 was common in the first and last four workers.\nThe total hiring cost is 11.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4597', '1981', '2', 'costs = [1,2,4,1], k = 3, candidates = 3', '4', 'We hire 3 workers in total. The total cost is initially 0.\n- In the first hiring round we choose the worker from [<u>1,2,4,1</u>]. The lowest cost is 1, and we break the tie by the smallest index, which is 0. The total cost = 0 + 1 = 1. Notice that workers with index 1 and 2 are common in the first and last 3 workers.\n- In the second hiring round we choose the worker from [<u>2,4,1</u>]. The lowest cost is 1 (index 2). The total cost = 1 + 1 = 2.\n- In the third hiring round there are less than three candidates. We choose the worker from the remaining workers [<u>2,4</u>]. The lowest cost is 2 (index 0). The total cost = 2 + 2 = 4.\nThe total hiring cost is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4598', '1982', '1', 'robot = [0,4,6], factory = [[2,2],[6,2]]', '4', 'As shown in the figure:\n- The first robot at position 0 moves in the positive direction. It will be repaired at the first factory.\n- The second robot at position 4 moves in the negative direction. It will be repaired at the first factory.\n- The third robot at position 6 will be repaired at the second factory. It does not need to move.\nThe limit of the first factory is 2, and it fixed 2 robots.\nThe limit of the second factory is 2, and it fixed 1 robot.\nThe total distance is |2 - 0| + |2 - 4| + |6 - 6| = 4. It can be shown that we cannot achieve a better total distance than 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4599', '1982', '2', 'robot = [1,-1], factory = [[-2,1],[2,1]]', '2', 'As shown in the figure:\n- The first robot at position 1 moves in the positive direction. It will be repaired at the second factory.\n- The second robot at position -1 moves in the negative direction. It will be repaired at the first factory.\nThe limit of the first factory is 1, and it fixed 1 robot.\nThe limit of the second factory is 1, and it fixed 1 robot.\nThe total distance is |2 - 1| + |(-2) - (-1)| = 2. It can be shown that we cannot achieve a better total distance than 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4600', '1983', '1', 'nums = [4,1,4,0,3,5]', '2', '1. Remove 0 and 5, and the average is (0 + 5) / 2 = 2.5. Now, nums = [4,1,4,3].\n2. Remove 1 and 4. The average is (1 + 4) / 2 = 2.5, and nums = [4,3].\n3. Remove 3 and 4, and the average is (3 + 4) / 2 = 3.5.\nSince there are 2 distinct numbers among 2.5, 2.5, and 3.5, we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4601', '1983', '2', 'nums = [1,100]', '1', 'There is only one average to be calculated after removing 1 and 100, so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4602', '1984', '1', 'low = 3, high = 3, zero = 1, one = 1', '8', 'One possible valid good string is \"011\". \nIt can be constructed as follows: \"\" -&gt; \"0\" -&gt; \"01\" -&gt; \"011\". \nAll binary strings from \"000\" to \"111\" are good strings in this example.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4603', '1984', '2', 'low = 2, high = 3, zero = 1, one = 2', '5', 'The good strings are \"00\", \"11\", \"000\", \"110\", and \"011\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4604', '1985', '1', 'edges = [[0,1],[1,2],[1,3],[3,4]], bob = 3, amount = [-2,4,2,-4,6]', '6', 'The above diagram represents the given tree. The game goes as follows:\n- Alice is initially on node 0, Bob on node 3. They open the gates of their respective nodes.\n  Alice\'s net income is now -2.\n- Both Alice and Bob move to node 1. \n  Since they reach here simultaneously, they open the gate together and share the reward.\n  Alice\'s net income becomes -2 + (4 / 2) = 0.\n- Alice moves on to node 3. Since Bob already opened its gate, Alice\'s income remains unchanged.\n  Bob moves on to node 0, and stops moving.\n- Alice moves on to node 4 and opens the gate there. Her net income becomes 0 + 6 = 6.\nNow, neither Alice nor Bob can make any further moves, and the game ends.\nIt is not possible for Alice to get a higher net income.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4605', '1985', '2', 'edges = [[0,1]], bob = 1, amount = [-7280,2350]', '-7280', 'Alice follows the path 0-&gt;1 whereas Bob follows the path 1-&gt;0.\nThus, Alice opens the gate at node 0 only. Hence, her net income is -7280.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4606', '1986', '1', 'message = \"this is really a very awesome message\", limit = 9', '[\"thi&lt;1/14&gt;\",\"s i&lt;2/14&gt;\",\"s r&lt;3/14&gt;\",\"eal&lt;4/14&gt;\",\"ly &lt;5/14&gt;\",\"a v&lt;6/14&gt;\",\"ery&lt;7/14&gt;\",\" aw&lt;8/14&gt;\",\"eso&lt;9/14&gt;\",\"me&lt;10/14&gt;\",\" m&lt;11/14&gt;\",\"es&lt;12/14&gt;\",\"sa&lt;13/14&gt;\",\"ge&lt;14/14&gt;\"]', 'The first 9 parts take 3 characters each from the beginning of message.\nThe next 5 parts take 2 characters each to finish splitting message. \nIn this example, each part, including the last, has length 9. \nIt can be shown it is not possible to split message into less than 14 parts.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4607', '1986', '2', 'message = \"short message\", limit = 15', '[\"short mess&lt;1/2&gt;\",\"age&lt;2/2&gt;\"]', 'Under the given constraints, the string can be split into two parts: \n- The first part comprises of the first 10 characters, and has a length 15.\n- The next part comprises of the last 3 characters, and has a length 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4608', '1987', '1', 'celsius = 36.50', '[309.65000,97.70000]', 'Temperature at 36.50 Celsius converted in Kelvin is 309.65 and converted in Fahrenheit is 97.70.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4609', '1987', '2', 'celsius = 122.11', '[395.26000,251.79800]', 'Temperature at 122.11 Celsius converted in Kelvin is 395.26 and converted in Fahrenheit is 251.798.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4610', '1988', '1', 'nums = [3,6,2,7,1], k = 6', '4', 'The subarrays of nums where 6 is the least common multiple of all the subarray\'s elements are:\n- [<u><strong>3</strong></u>,<u><strong>6</strong></u>,2,7,1]\n- [<u><strong>3</strong></u>,<u><strong>6</strong></u>,<u><strong>2</strong></u>,7,1]\n- [3,<u><strong>6</strong></u>,2,7,1]\n- [3,<u><strong>6</strong></u>,<u><strong>2</strong></u>,7,1]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4611', '1988', '2', 'nums = [3], k = 2', '0', 'There are no subarrays of nums where 2 is the least common multiple of all the subarray\'s elements.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4612', '1989', '1', 'root = [1,4,3,7,6,8,5,null,null,null,null,9,null,10]', '3', '- Swap 4 and 3. The 2<sup>nd</sup> level becomes [3,4].\n- Swap 7 and 5. The 3<sup>rd</sup> level becomes [5,6,8,7].\n- Swap 8 and 7. The 3<sup>rd</sup> level becomes [5,6,7,8].\nWe used 3 operations so return 3.\nIt can be proven that 3 is the minimum number of operations needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4613', '1989', '2', 'root = [1,3,2,7,6,5,4]', '3', '- Swap 3 and 2. The 2<sup>nd</sup> level becomes [2,3].\n- Swap 7 and 4. The 3<sup>rd</sup> level becomes [4,6,5,7].\n- Swap 6 and 5. The 3<sup>rd</sup> level becomes [4,5,6,7].\nWe used 3 operations so return 3.\nIt can be proven that 3 is the minimum number of operations needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4614', '1989', '3', 'root = [1,2,3,4,5,6]', '0', 'Each level is already sorted in increasing order so return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4615', '1990', '1', 's = \"abaccdbbd\", k = 3', '2', 'We can select the substrings underlined in s = \"<u><strong>aba</strong></u>cc<u><strong>dbbd</strong></u>\". Both \"aba\" and \"dbbd\" are palindromes and have a length of at least k = 3.\nIt can be shown that we cannot find a selection with more than two valid substrings.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4616', '1990', '2', 's = \"adbcda\", k = 2', '0', 'There is no palindrome substring of length at least 2 in the string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4617', '1991', '1', 'nums = [4,4,2,4,3]', '3', 'The following triplets meet the conditions:\n- (0, 2, 4) because 4 != 2 != 3\n- (1, 2, 4) because 4 != 2 != 3\n- (2, 3, 4) because 2 != 4 != 3\nSince there are 3 triplets, we return 3.\nNote that (2, 0, 4) is not a valid triplet because 2 &gt; 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4618', '1991', '2', 'nums = [1,1,1,1,1]', '0', 'No triplets meet the conditions so we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4619', '1992', '1', 'root = [6,2,13,1,4,9,15,null,null,null,null,null,null,14], queries = [2,5,16]', '[[2,2],[4,6],[15,-1]]', 'We answer the queries in the following way:\n- The largest number that is smaller or equal than 2 in the tree is 2, and the smallest number that is greater or equal than 2 is still 2. So the answer for the first query is [2,2].\n- The largest number that is smaller or equal than 5 in the tree is 4, and the smallest number that is greater or equal than 5 is 6. So the answer for the second query is [4,6].\n- The largest number that is smaller or equal than 16 in the tree is 15, and the smallest number that is greater or equal than 16 does not exist. So the answer for the third query is [15,-1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4620', '1992', '2', 'root = [4,null,9], queries = [3]', '[[-1,4]]', 'The largest number that is smaller or equal to 3 in the tree does not exist, and the smallest number that is greater or equal to 3 is 4. So the answer for the query is [-1,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4621', '1993', '1', 'roads = [[0,1],[0,2],[0,3]], seats = 5', '3', '- Representative<sub>1</sub> goes directly to the capital with 1 liter of fuel.\n- Representative<sub>2</sub> goes directly to the capital with 1 liter of fuel.\n- Representative<sub>3</sub> goes directly to the capital with 1 liter of fuel.\nIt costs 3 liters of fuel at minimum. \nIt can be proven that 3 is the minimum number of liters of fuel needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4622', '1993', '2', 'roads = [[3,1],[3,2],[1,0],[0,4],[0,5],[4,6]], seats = 2', '7', '- Representative<sub>2</sub> goes directly to city 3 with 1 liter of fuel.\n- Representative<sub>2</sub> and representative<sub>3</sub> go together to city 1 with 1 liter of fuel.\n- Representative<sub>2</sub> and representative<sub>3</sub> go together to the capital with 1 liter of fuel.\n- Representative<sub>1</sub> goes directly to the capital with 1 liter of fuel.\n- Representative<sub>5</sub> goes directly to the capital with 1 liter of fuel.\n- Representative<sub>6</sub> goes directly to city 4 with 1 liter of fuel.\n- Representative<sub>4</sub> and representative<sub>6</sub> go together to the capital with 1 liter of fuel.\nIt costs 7 liters of fuel at minimum. \nIt can be proven that 7 is the minimum number of liters of fuel needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4623', '1993', '3', 'roads = [], seats = 1', '0', 'No representatives need to travel to the capital city.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4624', '1994', '1', 's = \"23542185131\", k = 3, minLength = 2', '3', 'There exists three ways to create a beautiful partition:\n\"2354 | 218 | 5131\"\n\"2354 | 21851 | 31\"\n\"2354218 | 51 | 31\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4625', '1994', '2', 's = \"23542185131\", k = 3, minLength = 3', '1', 'There exists one way to create a beautiful partition: \"2354 | 218 | 5131\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4626', '1994', '3', 's = \"3312958\", k = 3, minLength = 1', '1', 'There exists one way to create a beautiful partition: \"331 | 29 | 58\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4627', '1995', '1', 'n = 4', '2', 'The above figure shows how cutting the circle twice through the middle divides it into 4 equal slices.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4628', '1995', '2', 'n = 3', '3', 'At least 3 cuts are needed to divide the circle into 3 equal slices. \nIt can be shown that less than 3 cuts cannot result in 3 slices of equal size and shape.\nAlso note that the first cut will not divide the circle into distinct parts.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4629', '1996', '1', 'grid = [[0,1,1],[1,0,1],[0,0,1]]', '[[0,0,4],[0,0,4],[-2,-2,2]]', '- diff[0][0] = <code>onesRow<sub>0</sub> + onesCol<sub>0</sub> - zerosRow<sub>0</sub> - zerosCol<sub>0</sub></code> = 2 + 1 - 1 - 2 = 0 \n- diff[0][1] = <code>onesRow<sub>0</sub> + onesCol<sub>1</sub> - zerosRow<sub>0</sub> - zerosCol<sub>1</sub></code> = 2 + 1 - 1 - 2 = 0 \n- diff[0][2] = <code>onesRow<sub>0</sub> + onesCol<sub>2</sub> - zerosRow<sub>0</sub> - zerosCol<sub>2</sub></code> = 2 + 3 - 1 - 0 = 4 \n- diff[1][0] = <code>onesRow<sub>1</sub> + onesCol<sub>0</sub> - zerosRow<sub>1</sub> - zerosCol<sub>0</sub></code> = 2 + 1 - 1 - 2 = 0 \n- diff[1][1] = <code>onesRow<sub>1</sub> + onesCol<sub>1</sub> - zerosRow<sub>1</sub> - zerosCol<sub>1</sub></code> = 2 + 1 - 1 - 2 = 0 \n- diff[1][2] = <code>onesRow<sub>1</sub> + onesCol<sub>2</sub> - zerosRow<sub>1</sub> - zerosCol<sub>2</sub></code> = 2 + 3 - 1 - 0 = 4 \n- diff[2][0] = <code>onesRow<sub>2</sub> + onesCol<sub>0</sub> - zerosRow<sub>2</sub> - zerosCol<sub>0</sub></code> = 1 + 1 - 2 - 2 = -2\n- diff[2][1] = <code>onesRow<sub>2</sub> + onesCol<sub>1</sub> - zerosRow<sub>2</sub> - zerosCol<sub>1</sub></code> = 1 + 1 - 2 - 2 = -2\n- diff[2][2] = <code>onesRow<sub>2</sub> + onesCol<sub>2</sub> - zerosRow<sub>2</sub> - zerosCol<sub>2</sub></code> = 1 + 3 - 2 - 0 = 2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4630', '1996', '2', 'grid = [[1,1,1],[1,1,1]]', '[[5,5,5],[5,5,5]]', '- diff[0][0] = onesRow<sub>0</sub> + onesCol<sub>0</sub> - zerosRow<sub>0</sub> - zerosCol<sub>0</sub> = 3 + 2 - 0 - 0 = 5\n- diff[0][1] = onesRow<sub>0</sub> + onesCol<sub>1</sub> - zerosRow<sub>0</sub> - zerosCol<sub>1</sub> = 3 + 2 - 0 - 0 = 5\n- diff[0][2] = onesRow<sub>0</sub> + onesCol<sub>2</sub> - zerosRow<sub>0</sub> - zerosCol<sub>2</sub> = 3 + 2 - 0 - 0 = 5\n- diff[1][0] = onesRow<sub>1</sub> + onesCol<sub>0</sub> - zerosRow<sub>1</sub> - zerosCol<sub>0</sub> = 3 + 2 - 0 - 0 = 5\n- diff[1][1] = onesRow<sub>1</sub> + onesCol<sub>1</sub> - zerosRow<sub>1</sub> - zerosCol<sub>1</sub> = 3 + 2 - 0 - 0 = 5\n- diff[1][2] = onesRow<sub>1</sub> + onesCol<sub>2</sub> - zerosRow<sub>1</sub> - zerosCol<sub>2</sub> = 3 + 2 - 0 - 0 = 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4631', '1997', '1', 'customers = \"YYNY\"', '2', '- Closing the shop at the 0<sup>th</sup> hour incurs in 1+1+0+1 = 3 penalty.\n- Closing the shop at the 1<sup>st</sup> hour incurs in 0+1+0+1 = 2 penalty.\n- Closing the shop at the 2<sup>nd</sup> hour incurs in 0+0+0+1 = 1 penalty.\n- Closing the shop at the 3<sup>rd</sup> hour incurs in 0+0+1+1 = 2 penalty.\n- Closing the shop at the 4<sup>th</sup> hour incurs in 0+0+1+0 = 1 penalty.\nClosing the shop at 2<sup>nd</sup> or 4<sup>th</sup> hour gives a minimum penalty. Since 2 is earlier, the optimal closing time is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4632', '1997', '2', 'customers = \"NNNNN\"', '0', 'It is best to close the shop at the 0<sup>th</sup> hour as no customers arrive.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4633', '1997', '3', 'customers = \"YYYY\"', '4', 'It is best to close the shop at the 4<sup>th</sup> hour as customers arrive at each hour.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4634', '1998', '1', 's = \"103301\"', '2', 'There are 6 possible subsequences of length 5: \"10330\",\"10331\",\"10301\",\"10301\",\"13301\",\"03301\". \nTwo of them (both equal to \"10301\") are palindromic.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4635', '1998', '2', 's = \"0000000\"', '21', 'All 21 subsequences are \"00000\", which is palindromic.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4636', '1998', '3', 's = \"9999900000\"', '2', 'The only two palindromic subsequences are \"99999\" and \"00000\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4637', '1999', '1', 'n = 8', '6', '6 is the pivot integer since: 1 + 2 + 3 + 4 + 5 + 6 = 6 + 7 + 8 = 21.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4638', '1999', '2', 'n = 1', '1', '1 is the pivot integer since: 1 = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4639', '1999', '3', 'n = 4', '-1', 'It can be proved that no such integer exist.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4640', '2000', '1', 's = \"coaching\", t = \"coding\"', '4', 'Append the characters \"ding\" to the end of s so that s = \"coachingding\".\nNow, t is a subsequence of s (\"<u><strong>co</strong></u>aching<u><strong>ding</strong></u>\").\nIt can be shown that appending any 3 characters to the end of s will never make t a subsequence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4641', '2000', '2', 's = \"abcde\", t = \"a\"', '0', 't is already a subsequence of s (\"<u><strong>a</strong></u>bcde\").');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4642', '2000', '3', 's = \"z\", t = \"abcde\"', '5', 'Append the characters \"abcde\" to the end of s so that s = \"zabcde\".\nNow, t is a subsequence of s (\"z<u><strong>abcde</strong></u>\").\nIt can be shown that appending any 4 characters to the end of s will never make t a subsequence.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4643', '2001', '1', 'head = [5,2,13,3,8]', '[13,8]', 'The nodes that should be removed are 5, 2 and 3.\n- Node 13 is to the right of node 5.\n- Node 13 is to the right of node 2.\n- Node 8 is to the right of node 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4644', '2001', '2', 'head = [1,1,1,1]', '[1,1,1,1]', 'Every node has value 1, so no nodes are removed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4645', '2002', '1', 'nums = [3,2,1,4,5], k = 4', '3', 'The subarrays that have a median equal to 4 are: [4], [4,5] and [1,4,5].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4646', '2002', '2', 'nums = [2,3,1], k = 3', '1', '[3] is the only subarray that has a median equal to 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4647', '2003', '1', 'sentence = \"leetcode exercises sound delightful\"', 'true', 'The words in sentence are [\"leetcode\", \"exercises\", \"sound\", \"delightful\"].\n- leetcod<u>e</u>\'s last character is equal to <u>e</u>xercises\'s first character.\n- exercise<u>s</u>\'s last character is equal to <u>s</u>ound\'s first character.\n- soun<u>d</u>\'s last character is equal to <u>d</u>elightful\'s first character.\n- delightfu<u>l</u>\'s last character is equal to <u>l</u>eetcode\'s first character.\nThe sentence is circular.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4648', '2003', '2', 'sentence = \"eetcode\"', 'true', 'The words in sentence are [\"eetcode\"].\n- eetcod<u>e</u>\'s last character is equal to <u>e</u>etcode\'s first character.\nThe sentence is circular.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4649', '2003', '3', 'sentence = \"Leetcode is cool\"', 'false', 'The words in sentence are [\"Leetcode\", \"is\", \"cool\"].\n- Leetcod<u>e</u>\'s last character is <strong>not</strong> equal to <u>i</u>s\'s first character.\nThe sentence is <strong>not</strong> circular.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4650', '2004', '1', 'skill = [3,2,5,1,3,4]', '22', 'Divide the players into the following teams: (1, 5), (2, 4), (3, 3), where each team has a total skill of 6.\nThe sum of the chemistry of all the teams is: 1 * 5 + 2 * 4 + 3 * 3 = 5 + 8 + 9 = 22.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4651', '2004', '2', 'skill = [3,4]', '12', 'The two players form a team with a total skill of 7.\nThe chemistry of the team is 3 * 4 = 12.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4652', '2004', '3', 'skill = [1,1,2,3]', '-1', 'There is no way to divide the players into teams such that the total skill of each team is equal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4653', '2005', '1', 'n = 4, roads = [[1,2,9],[2,3,6],[2,4,5],[1,4,7]]', '5', 'The path from city 1 to 4 with the minimum score is: 1 -&gt; 2 -&gt; 4. The score of this path is min(9,5) = 5.\nIt can be shown that no other path has less score.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4654', '2005', '2', 'n = 4, roads = [[1,2,2],[1,3,4],[3,4,7]]', '2', 'The path from city 1 to 4 with the minimum score is: 1 -&gt; 2 -&gt; 1 -&gt; 3 -&gt; 4. The score of this path is min(2,2,4,7) = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4655', '2006', '1', 'n = 6, edges = [[1,2],[1,4],[1,5],[2,6],[2,3],[4,6]]', '4', 'As shown in the image we:\n- Add node 5 to the first group.\n- Add node 1 to the second group.\n- Add nodes 2 and 4 to the third group.\n- Add nodes 3 and 6 to the fourth group.\nWe can see that every edge is satisfied.\nIt can be shown that that if we create a fifth group and move any node from the third or fourth group to it, at least on of the edges will not be satisfied.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4656', '2006', '2', 'n = 3, edges = [[1,2],[2,3],[3,1]]', '-1', 'If we add node 1 to the first group, node 2 to the second group, and node 3 to the third group to satisfy the first two edges, we can see that the third edge will not be satisfied.\nIt can be shown that no grouping is possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4657', '2008', '1', 'vals = [1,2,3,4,10,-10,-20], edges = [[0,1],[1,2],[1,3],[3,4],[3,5],[3,6]], k = 2', '16', 'The above diagram represents the input graph.\nThe star graph with the maximum star sum is denoted by blue. It is centered at 3 and includes its neighbors 1 and 4.\nIt can be shown it is not possible to get a star graph with a sum greater than 16.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4658', '2008', '2', 'vals = [-5], edges = [], k = 0', '-5', 'There is only one possible star graph, which is node 0 itself.\nHence, we return -5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4659', '2009', '1', 'stones = [0,2,5,6,7]', '5', 'The above figure represents one of the optimal paths the frog can take.\nThe cost of this path is 5, which is the maximum length of a jump.\nSince it is not possible to achieve a cost of less than 5, we return it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4660', '2009', '2', 'stones = [0,3,9]', '9', 'The frog can jump directly to the last stone and come back to the first stone. \nIn this case, the length of each jump will be 9. The cost for the path will be max(9, 9) = 9.\nIt can be shown that this is the minimum achievable cost.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4661', '2010', '1', 'nums1 = [1,2,3,4,5], nums2 = [1,2,3,4,5]', '10', 'One of the ways we can perform the operations is:\n- Swap values at indices 0 and 3, incurring cost = 0 + 3 = 3. Now, nums1 = [4,2,3,1,5]\n- Swap values at indices 1 and 2, incurring cost = 1 + 2 = 3. Now, nums1 = [4,3,2,1,5].\n- Swap values at indices 0 and 4, incurring cost = 0 + 4 = 4. Now, nums1 =[5,3,2,1,4].\nWe can see that for each index i, nums1[i] != nums2[i]. The cost required here is 10.\nNote that there are other ways to swap values, but it can be proven that it is not possible to obtain a cost less than 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4662', '2010', '2', 'nums1 = [2,2,2,1,3], nums2 = [1,2,2,3,3]', '10', 'One of the ways we can perform the operations is:\n- Swap values at indices 2 and 3, incurring cost = 2 + 3 = 5. Now, nums1 = [2,2,1,2,3].\n- Swap values at indices 1 and 4, incurring cost = 1 + 4 = 5. Now, nums1 = [2,3,1,2,2].\nThe total cost needed here is 10, which is the minimum possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4663', '2010', '3', 'nums1 = [1,2,2], nums2 = [1,2,2]', '-1', 'It can be shown that it is not possible to satisfy the given conditions irrespective of the number of operations we perform.\nHence, we return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4664', '2011', '1', 'grid = [[1,2,4],[3,3,1]]', '8', 'The diagram above shows the removed values in each step.\n- In the first operation, we remove 4 from the first row and 3 from the second row (notice that, there are two cells with value 3 and we can remove any of them). We add 4 to the answer.\n- In the second operation, we remove 2 from the first row and 3 from the second row. We add 3 to the answer.\n- In the third operation, we remove 1 from the first row and 1 from the second row. We add 1 to the answer.\nThe final answer = 4 + 3 + 1 = 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4665', '2011', '2', 'grid = [[10]]', '10', 'The diagram above shows the removed values in each step.\n- In the first operation, we remove 10 from the first row. We add 10 to the answer.\nThe final answer = 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4666', '2012', '1', 'nums = [4,3,6,16,8,2]', '3', 'Choose the subsequence [4,16,2]. After sorting it, it becomes [2,4,16].\n- 4 = 2 * 2.\n- 16 = 4 * 4.\nTherefore, [4,16,2] is a square streak.\nIt can be shown that every subsequence of length 4 is not a square streak.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4667', '2012', '2', 'nums = [2,3,5,6,7]', '-1', 'There is no square streak in nums so return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4668', '2013', '1', '[\"Allocator\", \"allocate\", \"allocate\", \"allocate\", \"free\", \"allocate\", \"allocate\", \"allocate\", \"free\", \"allocate\", \"free\"]\n[[10], [1, 1], [1, 2], [1, 3], [2], [3, 4], [1, 1], [1, 1], [1], [10, 2], [7]]', '[null, 0, 1, 2, 1, 3, 1, 6, 3, -1, 0]', 'Allocator loc = new Allocator(10); // Initialize a memory array of size 10. All memory units are initially free.\nloc.allocate(1, 1); // The leftmost block\'s first index is 0. The memory array becomes [<strong>1</strong>,_,_,_,_,_,_,_,_,_]. We return 0.\nloc.allocate(1, 2); // The leftmost block\'s first index is 1. The memory array becomes [1,<strong>2</strong>,_,_,_,_,_,_,_,_]. We return 1.\nloc.allocate(1, 3); // The leftmost block\'s first index is 2. The memory array becomes [1,2,<strong>3</strong>,_,_,_,_,_,_,_]. We return 2.\nloc.free(2); // Free all memory units with mID 2. The memory array becomes [1,_, 3,_,_,_,_,_,_,_]. We return 1 since there is only 1 unit with mID 2.\nloc.allocate(3, 4); // The leftmost block\'s first index is 3. The memory array becomes [1,_,3,<strong>4</strong>,<strong>4</strong>,<strong>4</strong>,_,_,_,_]. We return 3.\nloc.allocate(1, 1); // The leftmost block\'s first index is 1. The memory array becomes [1,<strong>1</strong>,3,4,4,4,_,_,_,_]. We return 1.\nloc.allocate(1, 1); // The leftmost block\'s first index is 6. The memory array becomes [1,1,3,4,4,4,<strong>1</strong>,_,_,_]. We return 6.\nloc.free(1); // Free all memory units with mID 1. The memory array becomes [_,_,3,4,4,4,_,_,_,_]. We return 3 since there are 3 units with mID 1.\nloc.allocate(10, 2); // We can not find any free block with 10 consecutive free memory units, so we return -1.\nloc.free(7); // Free all memory units with mID 7. The memory array remains the same since there is no memory unit with mID 7. We return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4669', '2014', '1', 'grid = [[1,2,3],[2,5,7],[3,5,1]], queries = [5,6,2]', '[5,8,1]', 'The diagrams above show which cells we visit to get points for each query.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4670', '2014', '2', 'grid = [[5,2,1],[1,1,2]], queries = [3]', '[0]', 'We can not get any points because the value of the top left cell is already greater than or equal to 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4671', '2015', '1', 'words = [\"aba\",\"aabb\",\"abcd\",\"bac\",\"aabc\"]', '2', 'There are 2 pairs that satisfy the conditions:\n- i = 0 and j = 1 : both words[0] and words[1] only consist of characters \'a\' and \'b\'. \n- i = 3 and j = 4 : both words[3] and words[4] only consist of characters \'a\', \'b\', and \'c\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4672', '2015', '2', 'words = [\"aabb\",\"ab\",\"ba\"]', '3', 'There are 3 pairs that satisfy the conditions:\n- i = 0 and j = 1 : both words[0] and words[1] only consist of characters \'a\' and \'b\'. \n- i = 0 and j = 2 : both words[0] and words[2] only consist of characters \'a\' and \'b\'.\n- i = 1 and j = 2 : both words[1] and words[2] only consist of characters \'a\' and \'b\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4673', '2015', '3', 'words = [\"nba\",\"cba\",\"dba\"]', '0', 'Since there does not exist any pair that satisfies the conditions, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4674', '2016', '1', 'n = 15', '5', 'Initially, n = 15.\n15 = 3 * 5, so replace n with 3 + 5 = 8.\n8 = 2 * 2 * 2, so replace n with 2 + 2 + 2 = 6.\n6 = 2 * 3, so replace n with 2 + 3 = 5.\n5 is the smallest value n will take on.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4675', '2016', '2', 'n = 3', '3', 'Initially, n = 3.\n3 is the smallest value n will take on.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4676', '2018', '1', 'n = 3, queries = [[5,3],[4,7],[2,3]]', '[4,5,3]', 'The diagrams above show the tree of 2<sup>3</sup> - 1 nodes. Nodes colored in red describe the nodes in the cycle after adding the edge.\n- After adding the edge between nodes 3 and 5, the graph contains a cycle of nodes [5,2,1,3]. Thus answer to the first query is 4. We delete the added edge and process the next query.\n- After adding the edge between nodes 4 and 7, the graph contains a cycle of nodes [4,2,1,3,7]. Thus answer to the second query is 5. We delete the added edge and process the next query.\n- After adding the edge between nodes 2 and 3, the graph contains a cycle of nodes [2,1,3]. Thus answer to the third query is 3. We delete the added edge.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4677', '2018', '2', 'n = 2, queries = [[1,2]]', '[2]', 'The diagram above shows the tree of 2<sup>2</sup> - 1 nodes. Nodes colored in red describe the nodes in the cycle after adding the edge.\n- After adding the edge between nodes 1 and 2, the graph contains a cycle of nodes [2,1]. Thus answer for the first query is 2. We delete the added edge.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4678', '2019', '1', 'forts = [1,0,0,-1,0,0,0,0,1]', '4', '- Moving the army from position 0 to position 3 captures 2 enemy forts, at 1 and 2.\n- Moving the army from position 8 to position 3 captures 4 enemy forts.\nSince 4 is the maximum number of enemy forts that can be captured, we return 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4679', '2019', '2', 'forts = [0,0,1,-1]', '0', 'Since no enemy fort can be captured, 0 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4680', '2020', '1', 'positive_feedback = [\"smart\",\"brilliant\",\"studious\"], negative_feedback = [\"not\"], report = [\"this student is studious\",\"the student is smart\"], student_id = [1,2], k = 2', '[1,2]', 'Both the students have 1 positive feedback and 3 points but since student 1 has a lower ID he ranks higher.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4681', '2020', '2', 'positive_feedback = [\"smart\",\"brilliant\",\"studious\"], negative_feedback = [\"not\"], report = [\"this student is not studious\",\"the student is smart\"], student_id = [1,2], k = 2', '[2,1]', '- The student with ID 1 has 1 positive feedback and 1 negative feedback, so he has 3-1=2 points. \n- The student with ID 2 has 1 positive feedback, so he has 3 points. \nSince student 2 has more points, [2,1] is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4682', '2021', '1', 'divisor1 = 2, divisor2 = 7, uniqueCnt1 = 1, uniqueCnt2 = 3', '4', 'We can distribute the first 4 natural numbers into arr1 and arr2.\narr1 = [1] and arr2 = [2,3,4].\nWe can see that both arrays satisfy all the conditions.\nSince the maximum value is 4, we return it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4683', '2021', '2', 'divisor1 = 3, divisor2 = 5, uniqueCnt1 = 2, uniqueCnt2 = 1', '3', 'Here arr1 = [1,2], and arr2 = [3] satisfy all conditions.\nSince the maximum value is 3, we return it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4684', '2021', '3', 'divisor1 = 2, divisor2 = 4, uniqueCnt1 = 8, uniqueCnt2 = 2', '15', 'Here, the final possible arrays can be arr1 = [1,3,5,7,9,11,13,15], and arr2 = [2,6].\nIt can be shown that it is not possible to obtain a lower maximum satisfying all conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4685', '2022', '1', 's = \"too hot\"', '18', 'Some of the anagrams of the given string are \"too hot\", \"oot hot\", \"oto toh\", \"too toh\", and \"too oht\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4686', '2022', '2', 's = \"aa\"', '1', 'There is only one anagram possible for the given string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4687', '2023', '1', 'words = [\"hello\",\"i\",\"am\",\"leetcode\",\"hello\"], target = \"hello\", startIndex = 1', '1', 'We start from index 1 and can reach \"hello\" by\n- moving 3 units to the right to reach index 4.\n- moving 2 units to the left to reach index 4.\n- moving 4 units to the right to reach index 0.\n- moving 1 unit to the left to reach index 0.\nThe shortest distance to reach \"hello\" is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4688', '2023', '2', 'words = [\"a\",\"b\",\"leetcode\"], target = \"leetcode\", startIndex = 0', '1', 'We start from index 0 and can reach \"leetcode\" by\n- moving 2 units to the right to reach index 3.\n- moving 1 unit to the left to reach index 3.\nThe shortest distance to reach \"leetcode\" is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4689', '2023', '3', 'words = [\"i\",\"eat\",\"leetcode\"], target = \"ate\", startIndex = 0', '-1', 'Since \"ate\" does not exist in <code>words</code>, we return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4690', '2024', '1', 's = \"aabaaaacaabc\", k = 2', '8', 'Take three characters from the left of s. You now have two \'a\' characters, and one \'b\' character.\nTake five characters from the right of s. You now have four \'a\' characters, two \'b\' characters, and two \'c\' characters.\nA total of 3 + 5 = 8 minutes is needed.\nIt can be proven that 8 is the minimum number of minutes needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4691', '2024', '2', 's = \"a\", k = 1', '-1', 'It is not possible to take one \'b\' or \'c\' so return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4692', '2026', '1', 'nums = [1,2,3,4], k = 4', '6', 'The great partitions are: ([1,2,3], [4]), ([1,3], [2,4]), ([1,4], [2,3]), ([2,3], [1,4]), ([2,4], [1,3]) and ([4], [1,2,3]).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4693', '2026', '2', 'nums = [3,3,3], k = 4', '0', 'There are no great partitions for this array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4694', '2026', '3', 'nums = [6,6], k = 2', '2', 'We can either put nums[0] in the first partition or in the second partition.\nThe great partitions will be ([6], [6]) and ([6], [6]).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4695', '2028', '1', 'nums = [2,4,3,7,10,6]', '4', 'The product of all the elements in nums is: 2 * 4 * 3 * 7 * 10 * 6 = 10080 = 2<sup>5</sup> * 3<sup>2</sup> * 5 * 7.\nThere are 4 distinct prime factors so we return 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4696', '2028', '2', 'nums = [2,4,8,16]', '1', 'The product of all the elements in nums is: 2 * 4 * 8 * 16 = 1024 = 2<sup>10</sup>.\nThere is 1 distinct prime factor so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4697', '2029', '1', 's = \"165462\", k = 60', '4', 'We can partition the string into substrings \"16\", \"54\", \"6\", and \"2\". Each substring has a value less than or equal to k = 60.\nIt can be shown that we cannot partition the string into less than 4 substrings.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4698', '2029', '2', 's = \"238182\", k = 5', '-1', 'There is no good partition for this string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4699', '2030', '1', 'left = 10, right = 19', '[11,13]', 'The prime numbers between 10 and 19 are 11, 13, 17, and 19.\nThe closest gap between any pair is 2, which can be achieved by [11,13] or [17,19].\nSince 11 is smaller than 17, we return the first pair.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4700', '2030', '2', 'left = 4, right = 6', '[-1,-1]', 'There exists only one prime number in the given range, so the conditions cannot be satisfied.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4701', '2031', '1', 'length = 1000, width = 35, height = 700, mass = 300', '\"Heavy\"', 'None of the dimensions of the box is greater or equal to 10<sup>4</sup>. \nIts volume = 24500000 &lt;= 10<sup>9</sup>. So it cannot be categorized as \"Bulky\".\nHowever mass &gt;= 100, so the box is \"Heavy\".\nSince the box is not \"Bulky\" but \"Heavy\", we return \"Heavy\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4702', '2031', '2', 'length = 200, width = 50, height = 800, mass = 50', '\"Neither\"', 'None of the dimensions of the box is greater or equal to 10<sup>4</sup>.\nIts volume = 8 * 10<sup>6</sup> &lt;= 10<sup>9</sup>. So it cannot be categorized as \"Bulky\".\nIts mass is also less than 100, so it cannot be categorized as \"Heavy\" either. \nSince its neither of the two above categories, we return \"Neither\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4703', '2032', '1', '[\"DataStream\", \"consec\", \"consec\", \"consec\", \"consec\"]\n[[4, 3], [4], [4], [4], [3]]', '[null, false, false, true, false]', 'DataStream dataStream = new DataStream(4, 3); //value = 4, k = 3 \ndataStream.consec(4); // Only 1 integer is parsed, so returns False. \ndataStream.consec(4); // Only 2 integers are parsed.\n                      // Since 2 is less than k, returns False. \ndataStream.consec(4); // The 3 integers parsed are all equal to value, so returns True. \ndataStream.consec(3); // The last k integers parsed in the stream are [4,4,3].\n                      // Since 3 is not equal to value, it returns False.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4704', '2033', '1', 'nums = [1,4]', '5', 'The triplets and their corresponding effective values are listed below:\n- (0,0,0) with effective value ((1 | 1) &amp; 1) = 1\n- (0,0,1) with effective value ((1 | 1) &amp; 4) = 0\n- (0,1,0) with effective value ((1 | 4) &amp; 1) = 1\n- (0,1,1) with effective value ((1 | 4) &amp; 4) = 4\n- (1,0,0) with effective value ((4 | 1) &amp; 1) = 1\n- (1,0,1) with effective value ((4 | 1) &amp; 4) = 4\n- (1,1,0) with effective value ((4 | 4) &amp; 1) = 0\n- (1,1,1) with effective value ((4 | 4) &amp; 4) = 4 \nXor-beauty of array will be bitwise XOR of all beauties = 1 ^ 0 ^ 1 ^ 4 ^ 1 ^ 4 ^ 0 ^ 4 = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4705', '2033', '2', 'nums = [15,45,20,2,34,35,5,44,32,30]', '34', '<code>The xor-beauty of the given array is 34.</code>');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4706', '2034', '1', 'stations = [1,2,4,5,0], r = 1, k = 2', '5', 'One of the optimal ways is to install both the power stations at city 1. \nSo stations will become [1,4,4,5,0].\n- City 0 is provided by 1 + 4 = 5 power stations.\n- City 1 is provided by 1 + 4 + 4 = 9 power stations.\n- City 2 is provided by 4 + 4 + 5 = 13 power stations.\n- City 3 is provided by 5 + 4 = 9 power stations.\n- City 4 is provided by 5 + 0 = 5 power stations.\nSo the minimum power of a city is 5.\nSince it is not possible to obtain a larger power, we return 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4707', '2034', '2', 'stations = [4,4,4,4], r = 0, k = 3', '4', 'It can be proved that we cannot make the minimum power of a city greater than 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4708', '2035', '1', 'nums = [-2,-1,-1,1,2,3]', '3', 'There are 3 positive integers and 3 negative integers. The maximum count among them is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4709', '2035', '2', 'nums = [-3,-2,-1,0,0,1,2]', '3', 'There are 2 positive integers and 3 negative integers. The maximum count among them is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4710', '2035', '3', 'nums = [5,20,66,1314]', '4', 'There are 4 positive integers and 0 negative integers. The maximum count among them is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4711', '2037', '1', 'word1 = \"ac\", word2 = \"b\"', 'false', 'Any pair of swaps would yield two distinct characters in the first string, and one in the second string.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4712', '2037', '2', 'word1 = \"abcc\", word2 = \"aab\"', 'true', 'We swap index 2 of the first string with index 0 of the second string. The resulting strings are word1 = \"abac\" and word2 = \"cab\", which both have 3 distinct characters.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4713', '2037', '3', 'word1 = \"abcde\", word2 = \"fghij\"', 'true', 'Both resulting strings will have 5 distinct characters, regardless of which indices we swap.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4714', '2038', '1', 'n = 1, k = 3, time = [[1,1,2,1],[1,1,3,1],[1,1,4,1]]', '6', 'From 0 to 1: worker 2 crosses the bridge from the left bank to the right bank.\nFrom 1 to 2: worker 2 picks up a box from the old warehouse.\nFrom 2 to 6: worker 2 crosses the bridge from the right bank to the left bank.\nFrom 6 to 7: worker 2 puts a box at the new warehouse.\nThe whole process ends after 7 minutes. We return 6 because the problem asks for the instance of time at which the last worker reaches the left bank.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4715', '2038', '2', 'n = 3, k = 2, time = [[1,9,1,8],[10,10,10,10]]', '50', 'From 0  to 10: worker 1 crosses the bridge from the left bank to the right bank.\nFrom 10 to 20: worker 1 picks up a box from the old warehouse.\nFrom 10 to 11: worker 0 crosses the bridge from the left bank to the right bank.\nFrom 11 to 20: worker 0 picks up a box from the old warehouse.\nFrom 20 to 30: worker 1 crosses the bridge from the right bank to the left bank.\nFrom 30 to 40: worker 1 puts a box at the new warehouse.\nFrom 30 to 31: worker 0 crosses the bridge from the right bank to the left bank.\nFrom 31 to 39: worker 0 puts a box at the new warehouse.\nFrom 39 to 40: worker 0 crosses the bridge from the left bank to the right bank.\nFrom 40 to 49: worker 0 picks up a box from the old warehouse.\nFrom 49 to 50: worker 0 crosses the bridge from the right bank to the left bank.\nFrom 50 to 58: worker 0 puts a box at the new warehouse.\nThe whole process ends after 58 minutes. We return 50 because the problem asks for the instance of time at which the last worker reaches the left bank.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4716', '2039', '1', 'nums = [1,15,6,3]', '9', 'The element sum of nums is 1 + 15 + 6 + 3 = 25.\nThe digit sum of nums is 1 + 1 + 5 + 6 + 3 = 16.\nThe absolute difference between the element sum and digit sum is |25 - 16| = 9.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4717', '2039', '2', 'nums = [1,2,3,4]', '0', 'The element sum of nums is 1 + 2 + 3 + 4 = 10.\nThe digit sum of nums is 1 + 2 + 3 + 4 = 10.\nThe absolute difference between the element sum and digit sum is |10 - 10| = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4718', '2040', '1', 'n = 3, queries = [[1,1,2,2],[0,0,1,1]]', '[[1,1,0],[1,2,1],[0,1,1]]', 'The diagram above shows the initial matrix, the matrix after the first query, and the matrix after the second query.\n- In the first query, we add 1 to every element in the submatrix with the top left corner (1, 1) and bottom right corner (2, 2).\n- In the second query, we add 1 to every element in the submatrix with the top left corner (0, 0) and bottom right corner (1, 1).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4719', '2040', '2', 'n = 2, queries = [[0,0,1,1]]', '[[1,1],[1,1]]', 'The diagram above shows the initial matrix and the matrix after the first query.\n- In the first query we add 1 to every element in the matrix.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4720', '2041', '1', 'nums = [1,1,1,1,1], k = 10', '1', 'The only good subarray is the array nums itself.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4721', '2041', '2', 'nums = [3,1,4,3,2,2,4], k = 2', '4', 'There are 4 different good subarrays:\n- [3,1,4,3,2,2] that has 2 pairs.\n- [3,1,4,3,2,2,4] that has 3 pairs.\n- [1,4,3,2,2,4] that has 2 pairs.\n- [4,3,2,2,4] that has 2 pairs.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4722', '2043', '1', 'nums1 = [1,2,3], nums2 = [2,4]', '2', 'The smallest element common to both arrays is 2, so we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4723', '2043', '2', 'nums1 = [1,2,3,6], nums2 = [2,3,4,5]', '2', 'There are two common elements in the array 2 and 3 out of which 2 is the smallest, so 2 is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4724', '2045', '1', 'nums1 = [1,3,3,2], nums2 = [2,1,3,4], k = 3', '12', 'The four possible subsequence scores are:\n- We choose the indices 0, 1, and 2 with score = (1+3+3) * min(2,1,3) = 7.\n- We choose the indices 0, 1, and 3 with score = (1+3+2) * min(2,1,4) = 6. \n- We choose the indices 0, 2, and 3 with score = (1+3+2) * min(2,3,4) = 12. \n- We choose the indices 1, 2, and 3 with score = (3+3+2) * min(1,3,4) = 8.\nTherefore, we return the max score, which is 12.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4725', '2045', '2', 'nums1 = [4,2,3,1,1], nums2 = [7,5,10,9,6], k = 1', '30', 'Choosing index 2 is optimal: nums1[2] * nums2[2] = 3 * 10 = 30 is the maximum possible score.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4726', '2046', '1', 'targetX = 6, targetY = 9', 'false', 'It is impossible to reach (6,9) from (1,1) using any sequence of moves, so false is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4727', '2046', '2', 'targetX = 4, targetY = 7', 'true', 'You can follow the path (1,1) -&gt; (1,2) -&gt; (1,4) -&gt; (1,8) -&gt; (1,7) -&gt; (2,7) -&gt; (4,7).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4728', '2047', '1', 'n = 521', '4', '(+5) + (-2) + (+1) = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4729', '2047', '2', 'n = 111', '1', '(+1) + (-1) + (+1) = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4730', '2047', '3', 'n = 886996', '0', '(+8) + (-8) + (+6) + (-9) + (+9) + (-6) = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4731', '2048', '1', 'score = [[10,6,9,1],[7,5,11,2],[4,8,3,15]], k = 2', '[[7,5,11,2],[10,6,9,1],[4,8,3,15]]', 'In the above diagram, S denotes the student, while E denotes the exam.\n- The student with index 1 scored 11 in exam 2, which is the highest score, so they got first place.\n- The student with index 0 scored 9 in exam 2, which is the second highest score, so they got second place.\n- The student with index 2 scored 3 in exam 2, which is the lowest score, so they got third place.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4732', '2048', '2', 'score = [[3,4],[5,6]], k = 0', '[[5,6],[3,4]]', 'In the above diagram, S denotes the student, while E denotes the exam.\n- The student with index 1 scored 5 in exam 0, which is the highest score, so they got first place.\n- The student with index 0 scored 3 in exam 0, which is the lowest score, so they got second place.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4733', '2049', '1', 's = \"1010\", target = \"0110\"', 'true', 'We can do the following operations:\n- Choose i = 2 and j = 0. We have now s = \"<strong><u>0</u></strong>0<strong><u>1</u></strong>0\".\n- Choose i = 2 and j = 1. We have now s = \"0<strong><u>11</u></strong>0\".\nSince we can make s equal to target, we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4734', '2049', '2', 's = \"11\", target = \"00\"', 'false', 'It is not possible to make s equal to target with any number of operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4735', '2050', '1', 'nums = [1,2,1,2,1,3,3], k = 2', '8', 'We split nums to have two subarrays: [1,2], [1,2,1,3,3].\nThe importance value of [1,2] is 2 + (0) = 2.\nThe importance value of [1,2,1,3,3] is 2 + (2 + 2) = 6.\nThe cost of the split is 2 + 6 = 8. It can be shown that this is the minimum possible cost among all the possible splits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4736', '2050', '2', 'nums = [1,2,1,2,1], k = 2', '6', 'We split nums to have two subarrays: [1,2], [1,2,1].\nThe importance value of [1,2] is 2 + (0) = 2.\nThe importance value of [1,2,1] is 2 + (2) = 4.\nThe cost of the split is 2 + 4 = 6. It can be shown that this is the minimum possible cost among all the possible splits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4737', '2050', '3', 'nums = [1,2,1,2,1], k = 5', '10', 'We split nums to have one subarray: [1,2,1,2,1].\nThe importance value of [1,2,1,2,1] is 5 + (3 + 2) = 10.\nThe cost of the split is 10. It can be shown that this is the minimum possible cost among all the possible splits.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4738', '2051', '1', 'n = 5', '4', 'Initially, 5 is present on the board. \nThe next day, 2 and 4 will be added since 5 % 2 == 1 and 5 % 4 == 1. \nAfter that day, 3 will be added to the board because 4 % 3 == 1. \nAt the end of a billion days, the distinct numbers on the board will be 2, 3, 4, and 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4739', '2051', '2', 'n = 3', '2', 'Since 3 % 2 == 1, 2 will be added to the board. \nAfter a billion days, the only two distinct numbers on the board are 2 and 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4740', '2052', '1', 'n = 3', '6', 'There are 8 total possible movements.\nTwo ways such that they collide at some point are:\n- Monkey 1 moves in a clockwise direction; monkey 2 moves in an anticlockwise direction; monkey 3 moves in a clockwise direction. Monkeys 1 and 2 collide.\n- Monkey 1 moves in an anticlockwise direction; monkey 2 moves in an anticlockwise direction; monkey 3 moves in a clockwise direction. Monkeys 1 and 3 collide.\nIt can be shown 6 total movements result in a collision.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4741', '2052', '2', 'n = 4', '14', 'It can be shown that there are 14 ways for the monkeys to collide.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4742', '2053', '1', 'weights = [1,3,5,1], k = 2', '4', 'The distribution [1],[3,5,1] results in the minimal score of (1+1) + (3+1) = 6. \nThe distribution [1,3],[5,1], results in the maximal score of (1+3) + (5+1) = 10. \nThus, we return their difference 10 - 6 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4743', '2053', '2', 'weights = [1, 3], k = 2', '0', 'The only distribution possible is [1],[3]. \nSince both the maximal and minimal score are the same, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4744', '2054', '1', 'nums = [1,3,2,4,5]', '2', '- When i = 0, j = 1, k = 2, and l = 3, nums[i] &lt; nums[k] &lt; nums[j] &lt; nums[l].\n- When i = 0, j = 1, k = 2, and l = 4, nums[i] &lt; nums[k] &lt; nums[j] &lt; nums[l]. \nThere are no other quadruplets, so we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4745', '2054', '2', 'nums = [1,2,3,4]', '0', 'There exists only one quadruplet with i = 0, j = 1, k = 2, l = 3, but since nums[j] &lt; nums[k], we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4746', '2055', '1', 'nums = [13,25,83,77]', '[1,3,2,5,8,3,7,7]', '- The separation of 13 is [1,3].\n- The separation of 25 is [2,5].\n- The separation of 83 is [8,3].\n- The separation of 77 is [7,7].\nanswer = [1,3,2,5,8,3,7,7]. Note that answer contains the separations in the same order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4747', '2055', '2', 'nums = [7,1,3,9]', '[7,1,3,9]', 'The separation of each integer in nums is itself.\nanswer = [7,1,3,9].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4748', '2056', '1', 'banned = [1,6,5], n = 5, maxSum = 6', '2', 'You can choose the integers 2 and 4.\n2 and 4 are from the range [1, 5], both did not appear in banned, and their sum is 6, which did not exceed maxSum.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4749', '2056', '2', 'banned = [1,2,3,4,5,6,7], n = 8, maxSum = 1', '0', 'You cannot choose any integer while following the mentioned conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4750', '2056', '3', 'banned = [11], n = 7, maxSum = 50', '7', 'You can choose the integers 1, 2, 3, 4, 5, 6, and 7.\nThey are from the range [1, 7], all did not appear in banned, and their sum is 28, which did not exceed maxSum.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4751', '2057', '1', 'prizePositions = [1,1,2,2,3,3,5], k = 2', '7', 'In this example, you can win all 7 prizes by selecting two segments [1, 3] and [3, 5].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4752', '2057', '2', 'prizePositions = [1,2,3,4], k = 0', '2', 'For this example, <strong>one choice</strong> for the segments is <code>[3, 3]</code> and <code>[4, 4],</code> and you will be able to get <code>2</code> prizes.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4753', '2058', '1', 'grid = [[1,1,1],[1,0,0],[1,1,1]]', 'true', 'We can change the cell shown in the diagram above. There is no path from (0, 0) to (2, 2) in the resulting grid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4754', '2058', '2', 'grid = [[1,1,1],[1,0,1],[1,1,1]]', 'false', 'It is not possible to change at most one cell such that there is not path from (0, 0) to (2, 2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4755', '2059', '1', 'gifts = [25,64,9,4,100], k = 4', '29', 'The gifts are taken in the following way:\n- In the first second, the last pile is chosen and 10 gifts are left behind.\n- Then the second pile is chosen and 8 gifts are left behind.\n- After that the first pile is chosen and 5 gifts are left behind.\n- Finally, the last pile is chosen again and 3 gifts are left behind.\nThe final remaining gifts are [5,8,9,4,3], so the total number of gifts remaining is 29.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4756', '2059', '2', 'gifts = [1,1,1,1], k = 4', '4', 'In this case, regardless which pile you choose, you have to leave behind 1 gift in each pile. \nThat is, you can\'t take any pile with you. \nSo, the total gifts remaining are 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4757', '2060', '1', 'words = [\"aba\",\"bcb\",\"ece\",\"aa\",\"e\"], queries = [[0,2],[1,4],[1,1]]', '[2,3,0]', 'The strings starting and ending with a vowel are \"aba\", \"ece\", \"aa\" and \"e\".\nThe answer to the query [0,2] is 2 (strings \"aba\" and \"ece\").\nto query [1,4] is 3 (strings \"ece\", \"aa\", \"e\").\nto query [1,1] is 0.\nWe return [2,3,0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4758', '2060', '2', 'words = [\"a\",\"e\",\"i\"], queries = [[0,2],[0,1],[2,2]]', '[3,2,1]', 'Every string satisfies the conditions, so we return [3,2,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4759', '2061', '1', 'nums = [2,3,5,9], k = 2', '5', 'There are three ways to rob at least 2 houses:\n- Rob the houses at indices 0 and 2. Capability is max(nums[0], nums[2]) = 5.\n- Rob the houses at indices 0 and 3. Capability is max(nums[0], nums[3]) = 9.\n- Rob the houses at indices 1 and 3. Capability is max(nums[1], nums[3]) = 9.\nTherefore, we return min(5, 9, 9) = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4760', '2061', '2', 'nums = [2,7,9,3,1], k = 2', '2', 'There are 7 ways to rob the houses. The way which leads to minimum capability is to rob the house at index 0 and 4. Return max(nums[0], nums[4]) = 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4761', '2062', '1', 'basket1 = [4,2,2,2], basket2 = [1,4,1,2]', '1', 'Swap index 1 of basket1 with index 0 of basket2, which has cost 1. Now basket1 = [4,1,2,2] and basket2 = [2,4,1,2]. Rearranging both the arrays makes them equal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4762', '2062', '2', 'basket1 = [2,3,4,1], basket2 = [3,2,5,1]', '-1', 'It can be shown that it is impossible to make both the baskets equal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4763', '2063', '1', 'nums = [7,52,2,4]', '596', 'Before performing any operation, nums is [7,52,2,4] and concatenation value is 0.\n - In the first operation:\nWe pick the first element, 7, and the last element, 4.\nTheir concatenation is 74, and we add it to the concatenation value, so it becomes equal to 74.\nThen we delete them from nums, so nums becomes equal to [52,2].\n - In the second operation:\nWe pick the first element, 52, and the last element, 2.\nTheir concatenation is 522, and we add it to the concatenation value, so it becomes equal to 596.\nThen we delete them from the nums, so nums becomes empty.\nSince the concatenation value is 596 so the answer is 596.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4764', '2063', '2', 'nums = [5,14,13,8,12]', '673', 'Before performing any operation, nums is [5,14,13,8,12] and concatenation value is 0.\n - In the first operation:\nWe pick the first element, 5, and the last element, 12.\nTheir concatenation is 512, and we add it to the concatenation value, so it becomes equal to 512.\nThen we delete them from the nums, so nums becomes equal to [14,13,8].\n - In the second operation:\nWe pick the first element, 14, and the last element, 8.\nTheir concatenation is 148, and we add it to the concatenation value, so it becomes equal to 660.\nThen we delete them from the nums, so nums becomes equal to [13].\n - In the third operation:\nnums has only one element, so we pick 13 and add it to the concatenation value, so it becomes equal to 673.\nThen we delete it from nums, so nums become empty.\nSince the concatenation value is 673 so the answer is 673.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4765', '2064', '1', 'nums = [0,1,7,4,4,5], lower = 3, upper = 6', '6', 'There are 6 fair pairs: (0,3), (0,4), (0,5), (1,3), (1,4), and (1,5).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4766', '2064', '2', 'nums = [1,7,9,2,5], lower = 11, upper = 11', '1', 'There is a single fair pair: (2,3).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4767', '2065', '1', 's = \"101101\", queries = [[0,5],[1,2]]', '[[0,2],[2,3]]', 'For the first query the substring in range <code>[0,2]</code> is <strong>\"101\"</strong> which has a decimal value of <strong><code>5</code></strong>, and <strong><code>5 ^ 0 = 5</code></strong>, hence the answer to the first query is <code>[0,2]</code>. In the second query, the substring in range <code>[2,3]</code> is <strong>\"11\",</strong> and has a decimal value of <strong>3</strong>, and <strong>3<code> ^ 1 = 2</code></strong>. So, <code>[2,3]</code> is returned for the second query.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4768', '2065', '2', 's = \"0101\", queries = [[12,8]]', '[[-1,-1]]', 'In this example there is no substring that answers the query, hence <code>[-1,-1] is returned</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4769', '2065', '3', 's = \"1\", queries = [[4,5]]', '[[0,0]]', 'For this example, the substring in range <code>[0,0]</code> has a decimal value of <strong><code>1</code></strong>, and <strong><code>1 ^ 4 = 5</code></strong>. So, the answer is <code>[0,0]</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4770', '2066', '1', 's = \"abacaba\", t = \"bzaa\"', '1', 'In this example, we remove the character \"z\" at index 1 (0-indexed).\nThe string t becomes \"baa\" which is a subsequence of the string \"abacaba\" and the score is 1 - 1 + 1 = 1.\nIt can be proven that 1 is the minimum score that we can achieve.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4771', '2066', '2', 's = \"cde\", t = \"xyz\"', '3', 'In this example, we remove characters \"x\", \"y\" and \"z\" at indices 0, 1, and 2 (0-indexed).\nThe string t becomes \"\" which is a subsequence of the string \"cde\" and the score is 2 - 0 + 1 = 3.\nIt can be proven that 3 is the minimum score that we can achieve.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4772', '2068', '1', 'nums = [1,4,3]', '0', 'Change value of nums[1] and nums[2] to 1 so that nums becomes [1,1,1]. Now, the value of <code>|nums[i] - nums[j]|</code> is always equal to 0, so we return 0 + 0 = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4773', '2068', '2', 'nums = [1,4,7,8,5]', '3', 'Change nums[0] and nums[1] to be 6. Now nums becomes [6,6,7,8,5].\nOur low score is achieved when i = 0 and j = 1, in which case |<code>nums[i] - nums[j]</code>| = |6 - 6| = 0.\nOur high score is achieved when i = 3 and j = 4, in which case |<code>nums[i] - nums[j]</code>| = |8 - 5| = 3.\nThe sum of our high and low score is 3, which we can prove to be minimal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4774', '2069', '1', 'nums = [2,1]', '4', '1 and 2 are already present in the array. We know that 3 is expressible, since nums[0] | nums[1] = 2 | 1 = 3. Since 4 is not expressible, we return 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4775', '2069', '2', 'nums = [5,3,2]', '1', 'We can show that 1 is the smallest number that is not expressible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4776', '2070', '1', 'nums1 = [1,0,1], nums2 = [0,0,0], queries = [[1,1,1],[2,1,0],[3,0,0]]', '[3]', 'After the first query nums1 becomes [1,1,1]. After the second query, nums2 becomes [1,1,1], so the answer to the third query is 3. Thus, [3] is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4777', '2070', '2', 'nums1 = [1], nums2 = [5], queries = [[2,0,0],[3,0,0]]', '[5]', 'After the first query, nums2 remains [5], so the answer to the second query is 5. Thus, [5] is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4778', '2071', '1', 'nums1 = [[1,2],[2,3],[4,5]], nums2 = [[1,4],[3,2],[4,1]]', '[[1,6],[2,3],[3,2],[4,6]]', 'The resulting array contains the following:\n- id = 1, the value of this id is 2 + 4 = 6.\n- id = 2, the value of this id is 3.\n- id = 3, the value of this id is 2.\n- id = 4, the value of this id is 5 + 1 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4779', '2071', '2', 'nums1 = [[2,4],[3,6],[5,5]], nums2 = [[1,3],[4,3]]', '[[1,3],[2,4],[3,6],[4,3],[5,5]]', 'There are no common ids, so we just include each id with its value in the resulting list.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4780', '2072', '1', 'n = 39', '3', 'We can do the following operations:\n- Add 2<sup>0</sup> = 1 to n, so now n = 40.\n- Subtract 2<sup>3</sup> = 8 from n, so now n = 32.\n- Subtract 2<sup>5</sup> = 32 from n, so now n = 0.\nIt can be shown that 3 is the minimum number of operations we need to make n equal to 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4781', '2072', '2', 'n = 54', '3', 'We can do the following operations:\n- Add 2<sup>1</sup> = 2 to n, so now n = 56.\n- Add 2<sup>3</sup> = 8 to n, so now n = 64.\n- Subtract 2<sup>6</sup> = 64 from n, so now n = 0.\nSo the minimum number of operations is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4782', '2073', '1', 'nums = [3,4,4,5]', '3', 'There are 3 square-free subsets in this example:\n- The subset consisting of the 0<sup>th</sup> element [3]. The product of its elements is 3, which is a square-free integer.\n- The subset consisting of the 3<sup>rd</sup> element [5]. The product of its elements is 5, which is a square-free integer.\n- The subset consisting of 0<sup>th</sup> and 3<sup>rd</sup> elements [3,5]. The product of its elements is 15, which is a square-free integer.\nIt can be proven that there are no more than 3 square-free subsets in the given array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4783', '2073', '2', 'nums = [1]', '1', 'There is 1 square-free subset in this example:\n- The subset consisting of the 0<sup>th</sup> element [1]. The product of its elements is 1, which is a square-free integer.\nIt can be proven that there is no more than 1 square-free subset in the given array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4784', '2074', '1', 'lcp = [[4,0,2,0],[0,3,0,1],[2,0,2,0],[0,1,0,1]]', '\"abab\"', 'lcp corresponds to any 4 letter string with two alternating letters. The lexicographically smallest of them is \"abab\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4785', '2074', '2', 'lcp = [[4,3,2,1],[3,3,2,1],[2,2,2,1],[1,1,1,1]]', '\"aaaa\"', 'lcp corresponds to any 4 letter string with a single distinct letter. The lexicographically smallest of them is \"aaaa\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4786', '2074', '3', 'lcp = [[4,3,2,1],[3,3,2,1],[2,2,2,1],[1,1,1,3]]', '\"\"', 'lcp[3][3] cannot be equal to 3 since word[3,...,3] consists of only a single letter; Thus, no answer exists.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4787', '2075', '1', 'nums = [10,4,8,3]', '[15,1,11,22]', 'The array leftSum is [0,10,14,22] and the array rightSum is [15,11,3,0].\nThe array answer is [|0 - 15|,|10 - 11|,|14 - 3|,|22 - 0|] = [15,1,11,22].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4788', '2075', '2', 'nums = [1]', '[0]', 'The array leftSum is [0] and the array rightSum is [0].\nThe array answer is [|0 - 0|] = [0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4789', '2076', '1', 'word = \"998244353\", m = 3', '[1,1,0,0,0,1,1,0,0]', 'There are only 4 prefixes that are divisible by 3: \"9\", \"99\", \"998244\", and \"9982443\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4790', '2076', '2', 'word = \"1010\", m = 10', '[0,1,0,1]', 'There are only 2 prefixes that are divisible by 10: \"10\", and \"1010\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4791', '2077', '1', 'nums = [3,5,2,4]', '2', 'In the first operation: pick i = 2 and j = 1, the operation is allowed because 2 * nums[2] &lt;= nums[1]. Then mark index 2 and 1.\nIt can be shown that there\'s no other valid operation so the answer is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4792', '2077', '2', 'nums = [9,2,5,4]', '4', 'In the first operation: pick i = 3 and j = 0, the operation is allowed because 2 * nums[3] &lt;= nums[0]. Then mark index 3 and 0.\nIn the second operation: pick i = 1 and j = 2, the operation is allowed because 2 * nums[1] &lt;= nums[2]. Then mark index 1 and 2.\nSince there is no other operation, the answer is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4793', '2077', '3', 'nums = [7,6,8]', '0', 'There is no valid operation to do, so the answer is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4794', '2078', '1', 'grid = [[0,1,3,2],[5,1,2,5],[4,3,8,6]]', '7', 'One of the paths that we can take is the following:\n- at t = 0, we are on the cell (0,0).\n- at t = 1, we move to the cell (0,1). It is possible because grid[0][1] &lt;= 1.\n- at t = 2, we move to the cell (1,1). It is possible because grid[1][1] &lt;= 2.\n- at t = 3, we move to the cell (1,2). It is possible because grid[1][2] &lt;= 3.\n- at t = 4, we move to the cell (1,1). It is possible because grid[1][1] &lt;= 4.\n- at t = 5, we move to the cell (1,2). It is possible because grid[1][2] &lt;= 5.\n- at t = 6, we move to the cell (1,3). It is possible because grid[1][3] &lt;= 6.\n- at t = 7, we move to the cell (2,3). It is possible because grid[2][3] &lt;= 7.\nThe final time is 7. It can be shown that it is the minimum time possible.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4795', '2078', '2', 'grid = [[0,2,4],[3,2,1],[1,0,4]]', '-1', 'There is no path from the top left to the bottom-right cell.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4796', '2079', '1', 'num = 4325', '59', 'We can split 4325 so that <code>num1 </code>is 24 and num2<code> is </code>35, giving a sum of 59. We can prove that 59 is indeed the minimal possible sum.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4797', '2079', '2', 'num = 687', '75', 'We can split 687 so that <code>num1</code> is 68 and <code>num2 </code>is 7, which would give an optimal sum of 75.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4798', '2080', '1', 'n = 1', '1', 'After 1 minute, there is only 1 blue cell, so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4799', '2080', '2', 'n = 2', '5', 'After 2 minutes, there are 4 colored cells on the boundary and 1 in the center, so we return 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4800', '2081', '1', 'ranges = [[6,10],[5,15]]', '2', 'The two ranges are overlapping, so they must be in the same group.\nThus, there are two possible ways:\n- Put both the ranges together in group 1.\n- Put both the ranges together in group 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4801', '2081', '2', 'ranges = [[1,3],[10,20],[2,5],[4,8]]', '4', 'Ranges [1,3], and [2,5] are overlapping. So, they must be in the same group.\nAgain, ranges [2,5] and [4,8] are also overlapping. So, they must also be in the same group. \nThus, there are four possible ways to group them:\n- All the ranges in group 1.\n- All the ranges in group 2.\n- Ranges [1,3], [2,5], and [4,8] in group 1 and [10,20] in group 2.\n- Ranges [1,3], [2,5], and [4,8] in group 2 and [10,20] in group 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4802', '2082', '1', 'edges = [[0,1],[1,2],[1,3],[4,2]], guesses = [[1,3],[0,1],[1,0],[2,4]], k = 3', '3', 'Root = 0, correct guesses = [1,3], [0,1], [2,4]\nRoot = 1, correct guesses = [1,3], [1,0], [2,4]\nRoot = 2, correct guesses = [1,3], [1,0], [2,4]\nRoot = 3, correct guesses = [1,0], [2,4]\nRoot = 4, correct guesses = [1,3], [1,0]\nConsidering 0, 1, or 2 as root node leads to 3 correct guesses.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4803', '2082', '2', 'edges = [[0,1],[1,2],[2,3],[3,4]], guesses = [[1,0],[3,4],[2,1],[3,2]], k = 1', '5', 'Root = 0, correct guesses = [3,4]\nRoot = 1, correct guesses = [1,0], [3,4]\nRoot = 2, correct guesses = [1,0], [2,1], [3,4]\nRoot = 3, correct guesses = [1,0], [2,1], [3,2], [3,4]\nRoot = 4, correct guesses = [1,0], [2,1], [3,2]\nConsidering any node as root will give at least 1 correct guess.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4804', '2083', '1', 'n = 4, time = 5', '2', 'People pass the pillow in the following way: 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 3 -&gt; 2.\nAfer five seconds, the pillow is given to the 2<sup>nd</sup> person.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4805', '2083', '2', 'n = 3, time = 2', '3', 'People pass the pillow in the following way: 1 -&gt; 2 -&gt; 3.\nAfer two seconds, the pillow is given to the 3<sup>r</sup><sup>d</sup> person.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4806', '2084', '1', 'root = [5,8,9,2,1,3,7,4,6], k = 2', '13', 'The level sums are the following:\n- Level 1: 5.\n- Level 2: 8 + 9 = 17.\n- Level 3: 2 + 1 + 3 + 7 = 13.\n- Level 4: 4 + 6 = 10.\nThe 2<sup>nd</sup> largest level sum is 13.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4807', '2084', '2', 'root = [1,2,null,3], k = 1', '3', 'The largest level sum is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4808', '2086', '1', 'target = 6, types = [[6,1],[3,2],[2,3]]', '7', 'You can earn 6 points in one of the seven ways:\n- Solve 6 questions of the 0<sup>th</sup> type: 1 + 1 + 1 + 1 + 1 + 1 = 6\n- Solve 4 questions of the 0<sup>th</sup> type and 1 question of the 1<sup>st</sup> type: 1 + 1 + 1 + 1 + 2 = 6\n- Solve 2 questions of the 0<sup>th</sup> type and 2 questions of the 1<sup>st</sup> type: 1 + 1 + 2 + 2 = 6\n- Solve 3 questions of the 0<sup>th</sup> type and 1 question of the 2<sup>nd</sup> type: 1 + 1 + 1 + 3 = 6\n- Solve 1 question of the 0<sup>th</sup> type, 1 question of the 1<sup>st</sup> type and 1 question of the 2<sup>nd</sup> type: 1 + 2 + 3 = 6\n- Solve 3 questions of the 1<sup>st</sup> type: 2 + 2 + 2 = 6\n- Solve 2 questions of the 2<sup>nd</sup> type: 3 + 3 = 6');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4809', '2086', '2', 'target = 5, types = [[50,1],[50,2],[50,5]]', '4', 'You can earn 5 points in one of the four ways:\n- Solve 5 questions of the 0<sup>th</sup> type: 1 + 1 + 1 + 1 + 1 = 5\n- Solve 3 questions of the 0<sup>th</sup> type and 1 question of the 1<sup>st</sup> type: 1 + 1 + 1 + 2 = 5\n- Solve 1 questions of the 0<sup>th</sup> type and 2 questions of the 1<sup>st</sup> type: 1 + 2 + 2 = 5\n- Solve 1 question of the 2<sup>nd</sup> type: 5');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4810', '2086', '3', 'target = 18, types = [[6,1],[3,2],[2,3]]', '1', 'You can only earn 18 points by answering all questions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4811', '2087', '1', 'words = [\"are\",\"amy\",\"u\"], left = 0, right = 2', '2', '- \"are\" is a vowel string because it starts with \'a\' and ends with \'e\'.\n- \"amy\" is not a vowel string because it does not end with a vowel.\n- \"u\" is a vowel string because it starts with \'u\' and ends with \'u\'.\nThe number of vowel strings in the mentioned range is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4812', '2087', '2', 'words = [\"hey\",\"aeo\",\"mu\",\"ooo\",\"artro\"], left = 1, right = 4', '3', '- \"aeo\" is a vowel string because it starts with \'a\' and ends with \'o\'.\n- \"mu\" is not a vowel string because it does not start with a vowel.\n- \"ooo\" is a vowel string because it starts with \'o\' and ends with \'o\'.\n- \"artro\" is a vowel string because it starts with \'a\' and ends with \'o\'.\nThe number of vowel strings in the mentioned range is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4813', '2088', '1', 'nums = [2,-1,0,1,-3,3,-3]', '6', 'We can rearrange the array into nums = [2,3,1,-1,-3,0,-3].\nprefix = [2,5,6,5,2,2,-1], so the score is 6.\nIt can be shown that 6 is the maximum score we can obtain.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4814', '2088', '2', 'nums = [-2,-3,0]', '0', 'Any rearrangement of the array will result in a score of 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4815', '2089', '1', 'nums = [4,3,1,2,4]', '2', 'There are 2 beautiful subarrays in nums: [4,<u>3,1,2</u>,4] and [<u>4,3,1,2,4</u>].\n- We can make all elements in the subarray [3,1,2] equal to 0 in the following way:\n  - Choose [<u>3</u>, 1, <u>2</u>] and k = 1. Subtract 2<sup>1</sup> from both numbers. The subarray becomes [1, 1, 0].\n  - Choose [<u>1</u>, <u>1</u>, 0] and k = 0. Subtract 2<sup>0</sup> from both numbers. The subarray becomes [0, 0, 0].\n- We can make all elements in the subarray [4,3,1,2,4] equal to 0 in the following way:\n  - Choose [<u>4</u>, 3, 1, 2, <u>4</u>] and k = 2. Subtract 2<sup>2</sup> from both numbers. The subarray becomes [0, 3, 1, 2, 0].\n  - Choose [0, <u>3</u>, <u>1</u>, 2, 0] and k = 0. Subtract 2<sup>0</sup> from both numbers. The subarray becomes [0, 2, 0, 2, 0].\n  - Choose [0, <u>2</u>, 0, <u>2</u>, 0] and k = 1. Subtract 2<sup>1</sup> from both numbers. The subarray becomes [0, 0, 0, 0, 0].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4816', '2089', '2', 'nums = [1,10,4]', '0', 'There are no beautiful subarrays in nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4817', '2090', '1', 'tasks = [[2,3,1],[4,5,1],[1,5,2]]', '2', '- The first task can be run in the inclusive time range [2, 2].\n- The second task can be run in the inclusive time range [5, 5].\n- The third task can be run in the two inclusive time ranges [2, 2] and [5, 5].\nThe computer will be on for a total of 2 seconds.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4818', '2090', '2', 'tasks = [[1,3,2],[2,5,3],[5,6,2]]', '4', '- The first task can be run in the inclusive time range [2, 3].\n- The second task can be run in the inclusive time ranges [2, 3] and [5, 5].\n- The third task can be run in the two inclusive time range [5, 6].\nThe computer will be on for a total of 4 seconds.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4819', '2091', '1', 'money = 20, children = 3', '1', 'The maximum number of children with 8 dollars will be 1. One of the ways to distribute the money is:\n- 8 dollars to the first child.\n- 9 dollars to the second child. \n- 3 dollars to the third child.\nIt can be proven that no distribution exists such that number of children getting 8 dollars is greater than 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4820', '2091', '2', 'money = 16, children = 2', '2', 'Each child can be given 8 dollars.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4821', '2092', '1', 'nums = [1,3,5,2,1,3,1]', '4', 'One of the optimal rearrangements is perm = [2,5,1,3,3,1,1].\nAt indices = 0, 1, 3, and 4, perm[i] &gt; nums[i]. Hence, we return 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4822', '2092', '2', 'nums = [1,2,3,4]', '3', 'We can prove the optimal perm is [2,3,4,1].\nAt indices = 0, 1, and 2, perm[i] &gt; nums[i]. Hence, we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4823', '2093', '1', 'nums = [2,1,3,4,5,2]', '7', 'We mark the elements as follows:\n- 1 is the smallest unmarked element, so we mark it and its two adjacent elements: [<u>2</u>,<u>1</u>,<u>3</u>,4,5,2].\n- 2 is the smallest unmarked element, so we mark it and its left adjacent element: [<u>2</u>,<u>1</u>,<u>3</u>,4,<u>5</u>,<u>2</u>].\n- 4 is the only remaining unmarked element, so we mark it: [<u>2</u>,<u>1</u>,<u>3</u>,<u>4</u>,<u>5</u>,<u>2</u>].\nOur score is 1 + 2 + 4 = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4824', '2093', '2', 'nums = [2,3,5,1,3,2]', '5', 'We mark the elements as follows:\n- 1 is the smallest unmarked element, so we mark it and its two adjacent elements: [2,3,<u>5</u>,<u>1</u>,<u>3</u>,2].\n- 2 is the smallest unmarked element, since there are two of them, we choose the left-most one, so we mark the one at index 0 and its right adjacent element: [<u>2</u>,<u>3</u>,<u>5</u>,<u>1</u>,<u>3</u>,2].\n- 2 is the only remaining unmarked element, so we mark it: [<u>2</u>,<u>3</u>,<u>5</u>,<u>1</u>,<u>3</u>,<u>2</u>].\nOur score is 1 + 2 + 2 = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4825', '2095', '1', 'n = 17', '[2,0]', 'The binary representation of 17 is 10001. \nIt contains 1 on the 0<sup>th</sup> and 4<sup>th</sup> indices. \nThere are 2 even and 0 odd indices.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4826', '2095', '2', 'n = 2', '[0,1]', 'The binary representation of 2 is 10.\nIt contains 1 on the 1<sup>st</sup> index. \nThere are 0 even and 1 odd indices.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4827', '2096', '1', 'grid = [[0,11,16,5,20],[17,4,19,10,15],[12,1,8,21,6],[3,18,23,14,9],[24,13,2,7,22]]', 'true', 'The above diagram represents the grid. It can be shown that it is a valid configuration.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4828', '2096', '2', 'grid = [[0,3,6],[5,8,1],[2,7,4]]', 'false', 'The above diagram represents the grid. The 8<sup>th</sup> move of the knight is not valid considering its position after the 7<sup>th</sup> move.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4829', '2097', '1', 'nums = [2,4,6], k = 2', '4', 'The beautiful subsets of the array nums are: [2], [4], [6], [2, 6].\nIt can be proved that there are only 4 beautiful subsets in the array [2,4,6].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4830', '2097', '2', 'nums = [1], k = 1', '1', 'The beautiful subset of the array nums is [1].\nIt can be proved that there is only 1 beautiful subset in the array [1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4831', '2098', '1', 'nums = [1,-10,7,13,6,8], value = 5', '4', 'One can achieve this result by applying the following operations:\n- Add value to nums[1] twice to make nums = [1,<strong><u>0</u></strong>,7,13,6,8]\n- Subtract value from nums[2] once to make nums = [1,0,<strong><u>2</u></strong>,13,6,8]\n- Subtract value from nums[3] twice to make nums = [1,0,2,<strong><u>3</u></strong>,6,8]\nThe MEX of nums is 4. It can be shown that 4 is the maximum MEX we can achieve.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4832', '2098', '2', 'nums = [1,-10,7,13,6,8], value = 7', '2', 'One can achieve this result by applying the following operation:\n- subtract value from nums[2] once to make nums = [1,-10,<u><strong>0</strong></u>,13,6,8]\nThe MEX of nums is 2. It can be shown that 2 is the maximum MEX we can achieve.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4833', '2099', '1', 'numOnes = 3, numZeros = 2, numNegOnes = 0, k = 2', '2', 'We have a bag of items with numbers written on them {1, 1, 1, 0, 0}. We take 2 items with 1 written on them and get a sum in a total of 2.\nIt can be proven that 2 is the maximum possible sum.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4834', '2099', '2', 'numOnes = 3, numZeros = 2, numNegOnes = 0, k = 4', '3', 'We have a bag of items with numbers written on them {1, 1, 1, 0, 0}. We take 3 items with 1 written on them, and 1 item with 0 written on it, and get a sum in a total of 3.\nIt can be proven that 3 is the maximum possible sum.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4835', '2100', '1', 'nums = [4,9,6,10]', 'true', 'In the first operation: Pick i = 0 and p = 3, and then subtract 3 from nums[0], so that nums becomes [1,9,6,10].\nIn the second operation: i = 1, p = 7, subtract 7 from nums[1], so nums becomes equal to [1,2,6,10].\nAfter the second operation, nums is sorted in strictly increasing order, so the answer is true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4836', '2100', '2', 'nums = [6,8,11,12]', 'true', 'Initially nums is sorted in strictly increasing order, so we don\'t need to make any operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4837', '2100', '3', 'nums = [5,8,3]', 'false', 'It can be proven that there is no way to perform operations to make nums sorted in strictly increasing order, so the answer is false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4838', '2101', '1', 'nums = [3,1,6,8], queries = [1,5]', '[14,10]', 'For the first query we can do the following operations:\n- Decrease nums[0] 2 times, so that nums = [1,1,6,8].\n- Decrease nums[2] 5 times, so that nums = [1,1,1,8].\n- Decrease nums[3] 7 times, so that nums = [1,1,1,1].\nSo the total number of operations for the first query is 2 + 5 + 7 = 14.\nFor the second query we can do the following operations:\n- Increase nums[0] 2 times, so that nums = [5,1,6,8].\n- Increase nums[1] 4 times, so that nums = [5,5,6,8].\n- Decrease nums[2] 1 time, so that nums = [5,5,5,8].\n- Decrease nums[3] 3 times, so that nums = [5,5,5,5].\nSo the total number of operations for the second query is 2 + 4 + 1 + 3 = 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4839', '2101', '2', 'nums = [2,9,6,3], queries = [10]', '[20]', 'We can increase each value in the array to 10. The total number of operations will be 8 + 1 + 4 + 7 = 20.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4840', '2102', '1', 'coins = [1,0,0,0,0,1], edges = [[0,1],[1,2],[2,3],[3,4],[4,5]]', '2', 'Start at vertex 2, collect the coin at vertex 0, move to vertex 3, collect the coin at vertex 5 then move back to vertex 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4841', '2102', '2', 'coins = [0,0,0,1,1,0,0,1], edges = [[0,1],[0,2],[1,3],[1,4],[2,5],[5,6],[5,7]]', '2', 'Start at vertex 0, collect the coins at vertices 4 and 3, move to vertex 2,  collect the coin at vertex 7, then move back to vertex 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4842', '2103', '1', 'nums1 = [4,1,3], nums2 = [5,7]', '15', 'The number 15 contains the digit 1 from nums1 and the digit 5 from nums2. It can be proven that 15 is the smallest number we can have.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4843', '2103', '2', 'nums1 = [3,5,2,6], nums2 = [3,1,7]', '3', 'The number 3 contains the digit 3 which exists in both arrays.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4844', '2104', '1', 's = \"adaa\", chars = \"d\", vals = [-1000]', '2', 'The value of the characters \"a\" and \"d\" is 1 and -1000 respectively.\nThe substring with the maximum cost is \"aa\" and its cost is 1 + 1 = 2.\nIt can be proven that 2 is the maximum cost.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4845', '2104', '2', 's = \"abc\", chars = \"abc\", vals = [-1,-1,-1]', '0', 'The value of the characters \"a\", \"b\" and \"c\" is -1, -1, and -1 respectively.\nThe substring with the maximum cost is the empty substring \"\" and its cost is 0.\nIt can be proven that 0 is the maximum cost.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4846', '2105', '1', 'arr = [1,4,1,3], k = 2', '1', 'we can do one operation on index 1 to make its value equal to 3.\nThe array after the operation is [1,3,1,3]\n- Subarray starts at index 0 is [1, 3], and its sum is 4 \n- Subarray starts at index 1 is [3, 1], and its sum is 4 \n- Subarray starts at index 2 is [1, 3], and its sum is 4 \n- Subarray starts at index 3 is [3, 1], and its sum is 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4847', '2105', '2', 'arr = [2,5,5,7], k = 3', '5', 'we can do three operations on index 0 to make its value equal to 5 and two operations on index 3 to make its value equal to 5.\nThe array after the operations is [5,5,5,5]\n- Subarray starts at index 0 is [5, 5, 5], and its sum is 15\n- Subarray starts at index 1 is [5, 5, 5], and its sum is 15\n- Subarray starts at index 2 is [5, 5, 5], and its sum is 15\n- Subarray starts at index 3 is [5, 5, 5], and its sum is 15');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4848', '2106', '1', 'n = 7, edges = [[0,1],[1,2],[2,0],[3,4],[4,5],[5,6],[6,3]]', '3', 'The cycle with the smallest length is : 0 -&gt; 1 -&gt; 2 -&gt; 0');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4849', '2106', '2', 'n = 4, edges = [[0,1],[0,2]]', '-1', 'There are no cycles in this graph.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4850', '2107', '1', 's = \"01000111\"', '6', 'The longest balanced substring is \"000111\", which has length 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4851', '2107', '2', 's = \"00111\"', '4', 'The longest balanced substring is \"0011\", which has length 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4852', '2107', '3', 's = \"111\"', '0', 'There is no balanced substring except the empty substring, so the answer is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4853', '2108', '1', 'nums = [1,3,4,1,2,3,1]', '[[1,3,4,2],[1,3],[1]]', 'We can create a 2D array that contains the following rows:\n- 1,3,4,2\n- 1,3\n- 1\nAll elements of nums were used, and each row of the 2D array contains distinct integers, so it is a valid answer.\nIt can be shown that we cannot have less than 3 rows in a valid array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4854', '2108', '2', 'nums = [1,2,3,4]', '[[4,3,2,1]]', 'All elements of the array are distinct, so we can keep all of them in the first row of the 2D array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4855', '2109', '1', 'reward1 = [1,1,3,4], reward2 = [4,4,1,1], k = 2', '15', 'In this example, the first mouse eats the 2<sup>nd</sup> (0-indexed) and the 3<sup>rd</sup> types of cheese, and the second mouse eats the 0<sup>th</sup> and the 1<sup>st</sup> types of cheese.\nThe total points are 4 + 4 + 3 + 4 = 15.\nIt can be proven that 15 is the maximum total points that the mice can achieve.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4856', '2109', '2', 'reward1 = [1,1], reward2 = [1,1], k = 2', '2', 'In this example, the first mouse eats the 0<sup>th</sup> (0-indexed) and 1<sup>st</sup> types of cheese, and the second mouse does not eat any cheese.\nThe total points are 1 + 1 = 2.\nIt can be proven that 2 is the maximum total points that the mice can achieve.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4857', '2111', '1', 'nums = [[1,2,3],[5,6,7],[9,10,11]]', '11', 'The numbers 1, 3, 6, 9, and 11 are the only numbers present on at least one of the diagonals. Since 11 is the largest prime, we return 11.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4858', '2111', '2', 'nums = [[1,2,3],[5,17,7],[9,11,10]]', '17', 'The numbers 1, 3, 9, 10, and 17 are all present on at least one of the diagonals. 17 is the largest prime, so we return 17.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4859', '2112', '1', 'nums = [1,3,1,1,2]', '[5,0,3,4,0]', 'When i = 0, nums[0] == nums[2] and nums[0] == nums[3]. Therefore, arr[0] = |0 - 2| + |0 - 3| = 5. \nWhen i = 1, arr[1] = 0 because there is no other index with value 3.\nWhen i = 2, nums[2] == nums[0] and nums[2] == nums[3]. Therefore, arr[2] = |2 - 0| + |2 - 3| = 3. \nWhen i = 3, nums[3] == nums[0] and nums[3] == nums[2]. Therefore, arr[3] = |3 - 0| + |3 - 2| = 4. \nWhen i = 4, arr[4] = 0 because there is no other index with value 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4860', '2112', '2', 'nums = [0,5,3]', '[0,0,0]', 'Since each element in nums is distinct, arr[i] = 0 for all i.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4861', '2113', '1', 'nums = [10,1,2,7,1,3], p = 2', '1', 'The first pair is formed from the indices 1 and 4, and the second pair is formed from the indices 2 and 5. \nThe maximum difference is max(|nums[1] - nums[4]|, |nums[2] - nums[5]|) = max(0, 1) = 1. Therefore, we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4862', '2113', '2', 'nums = [4,2,1,2], p = 1', '0', 'Let the indices 1 and 3 form a pair. The difference of that pair is |2 - 2| = 0, which is the minimum we can attain.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4863', '2114', '1', 'grid = [[3,4,2,1],[4,2,3,1],[2,1,0,0],[2,4,0,0]]', '4', 'The image above shows one of the paths that visits exactly 4 cells.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4864', '2114', '2', 'grid = [[3,4,2,1],[4,2,1,1],[2,1,1,0],[3,4,1,0]]', '3', 'The image above shows one of the paths that visits exactly 3 cells.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4865', '2114', '3', 'grid = [[2,1,0],[1,0,0]]', '-1', 'It can be proven that no path exists.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4866', '2115', '1', 'func = () =&gt; checkIfInstanceOf(new Date(), Date)', 'true', 'The object returned by the Date constructor is, by definition, an instance of Date.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4867', '2115', '2', 'func = () =&gt; { class Animal {}; class Dog extends Animal {}; return checkIfInstanceOf(new Dog(), Animal); }', 'true', 'class Animal {};\nclass Dog extends Animal {};\ncheckIfInstanceOf(new Dog(), Animal); // true\n\nDog is a subclass of Animal. Therefore, a Dog object is an instance of both Dog and Animal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4868', '2115', '3', 'func = () =&gt; checkIfInstanceOf(Date, Date)', 'false', 'A date constructor cannot logically be an instance of itself.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4869', '2115', '4', 'func = () =&gt; checkIfInstanceOf(5, Number)', 'true', '5 is a Number. Note that the \"instanceof\" keyword would return false. However, it is still considered an instance of Number because it accesses the Number methods. For example \"toFixed()\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4870', '2116', '1', 'nums = [null, {}, 3]', '3', 'Calling nums.last() should return the last element: 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4871', '2116', '2', 'nums = []', '-1', 'Because there are no elements, return -1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4872', '2117', '1', 'n = 10 \n[\"call\",\"call\",\"call\"]', '[10,11,12]\n<strong>', '</strong>counter() = 10 // The first time counter() is called, it returns n.\ncounter() = 11 // Returns 1 more than the previous time.\ncounter() = 12 // Returns 1 more than the previous time.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4873', '2117', '2', 'n = -2\n[\"call\",\"call\",\"call\",\"call\",\"call\"]', '[-2,-1,0,1,2]', 'counter() initially returns -2. Then increases after each sebsequent call.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4874', '2118', '1', 'millis = 100', '100', 'It should return a promise that resolves after 100ms.\nlet t = Date.now();\nsleep(100).then(() =&gt; {\n  console.log(Date.now() - t); // 100\n});');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4875', '2118', '2', 'millis = 200', '200', 'It should return a promise that resolves after 200ms.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4876', '2119', '1', '[\"TimeLimitedCache\", \"set\", \"get\", \"count\", \"get\"]\n[[], [1, 42, 100], [1], [], [1]]\n[0, 0, 50, 50, 150]', '[null, false, 42, 1, -1]', 'At t=0, the cache is constructed.\nAt t=0, a key-value pair (1: 42) is added with a time limit of 100ms. The value doesn\'t exist so false is returned.\nAt t=50, key=1 is requested and the value of 42 is returned.\nAt t=50, count() is called and there is one active key in the cache.\nAt t=100, key=1 expires.\nAt t=150, get(1) is called but -1 is returned because the cache is empty.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4877', '2119', '2', '[\"TimeLimitedCache\", \"set\", \"set\", \"get\", \"get\", \"get\", \"count\"]\n[[], [1, 42, 50], [1, 50, 100], [1], [1], [1], []]\n[0, 0, 40, 50, 120, 200, 250]', '[null, false, true, 50, 50, -1]', 'At t=0, the cache is constructed.\nAt t=0, a key-value pair (1: 42) is added with a time limit of 50ms. The value doesn\'t exist so false is returned.\nAt t=40, a key-value pair (1: 50) is added with a time limit of 100ms. A non-expired value already existed so true is returned and the old value was overwritten.\nAt t=50, get(1) is called which returned 50.\nAt t=120, get(1) is called which returned 50.\nAt t=140, key=1 expires.\nAt t=200, get(1) is called but the cache is empty so -1 is returned.\nAt t=250, count() returns 0 because the cache is empty.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4878', '2120', '1', '\"sum\"\n[\"call\",\"call\",\"getCallCount\",\"call\",\"getCallCount\"]\n[[2,2],[2,2],[],[1,2],[]]', '[4,4,1,3,2]', 'const sum = (a, b) =&gt; a + b;\nconst memoizedSum = memoize(sum);\nmemoizedSum(2, 2); // Returns 4. sum() was called as (2, 2) was not seen before.\nmemoizedSum(2, 2); // Returns 4. However sum() was not called because the same inputs were seen before.\n// Total call count: 1\nmemoizedSum(1, 2); // Returns 3. sum() was called as (1, 2) was not seen before.\n// Total call count: 2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4879', '2120', '2', 'ta-track-load=\"description_content\"><p>Given a function <code>fn</code>, return a <strong>memoized</strong> version of that function.</p>\n<p>A <strong>memoized </strong>function is a function that will never be called twice with the same inputs. Instead it will return a cached value.</p>\n<p>You can assume there are <strong>3 </strong>possible input functions: <code>sum</code><strong>, </strong><code>fib</code><strong>, </strong>and <code>factorial</code><strong>.</strong></p>\n<ul>\n<li><code>sum</code><strong> </strong>accepts two integers <code>a</code> and <code>b</code> and returns <code>a + b</code>.</li>\n<li><code>fib</code><strong> </strong>accepts a single integer <code>n</code> and returns <code>1</code> if <font face=\"monospace\"><code>n &lt;= 1</code> </font>or<font face=\"monospace\"> <code>fib(n - 1) + fib(n - 2)</code> </font>otherwise.</li>\n<li><code>factorial</code> accepts a single integer <code>n</code> and returns <code>1</code> if <code>n &lt;= 1</code> or <code>factorial(n - 1) * n</code> otherwise.</li>\n</ul>\n<p> </p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong>\n\"sum\"\n[\"call\",\"call\",\"getCallCount\",\"call\",\"getCallCount\"]\n[[2,2],[2,2],[],[1,2],[]]\n<strong>Output:</strong>\n[4,4,1,3,2]\n\n<strong>Explanation:</strong>\nconst sum = (a, b) =&gt; a + b;\nconst memoizedSum = memoize(sum);\nmemoizedSum(2, 2); // Returns 4. sum() was called as (2, 2) was not seen before.\nmemoizedSum(2, 2); // Returns 4. However sum() was not called because the same inputs were seen before.\n// Total call count: 1\nmemoizedSum(1, 2); // Returns 3. sum() was called as (1, 2) was not seen before.\n// Total call count: 2\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input\n</strong>\"factorial\"\n[\"call\",\"call\",\"call\",\"getCallCount\",\"call\",\"getCallCount\"]\n[[2],[3],[2],[],[3],[]]\n<strong>Output:</strong>\n[2,6,2,2,6,2]\n\n<strong>Explanation:</strong>\nconst factorial = (n) =&gt; (n &lt;= 1) ? 1 : (n * factorial(n - 1));\nconst memoFactorial = memoize(factorial);\nmemoFactorial(2); // Returns 2.\nmemoFactorial(3); // Returns 6.\nmemoFactorial(2); // Returns 2. However factorial was not called because 2 was seen before.\n// Total call count: 2\nmemoFactorial(3); // Returns 6. However factorial was not called because 3 was seen before.\n// Total call count: 2\n</pre>\n<p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input\n</strong>\"fib\"\n[\"call\",\"getCallCount\"]\n[[5],[]]\n<strong>Output:</strong>\n[8,1]\n\n<strong>Explanation\n</strong>fib(5) = 8\n// Total call count: 1\n\n</pre>\n<p> </p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>0 &lt;= a, b &lt;= 10<sup>5</sup></code></li>\n<li><code>1 &lt;= n &lt;= 10</code></li>\n<li><code>at most 10<sup>5</sup> function calls</code></li>\n<li><code>at most 10<sup>5</sup> attempts to access callCount</code></li>\n<li><code>input function is sum, fib, or factorial</code></li>\n</ul>\n</div', '[4,4,1,3,2]\n\n<strong>', '</strong>\nconst sum = (a, b) =&gt; a + b;\nconst memoizedSum = memoize(sum);\nmemoizedSum(2, 2); // Returns 4. sum() was called as (2, 2) was not seen before.\nmemoizedSum(2, 2); // Returns 4. However sum() was not called because the same inputs were seen before.\n// Total call count: 1\nmemoizedSum(1, 2); // Returns 3. sum() was called as (1, 2) was not seen before.\n// Total call count: 2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4880', '2120', '3', '\"sum\"\n[\"call\",\"call\",\"getCallCount\",\"call\",\"getCallCount\"]\n[[2,2],[2,2],[],[1,2],[]]', '[4,4,1,3,2]', 'const sum = (a, b) =&gt; a + b;\nconst memoizedSum = memoize(sum);\nmemoizedSum(2, 2); // Returns 4. sum() was called as (2, 2) was not seen before.\nmemoizedSum(2, 2); // Returns 4. However sum() was not called because the same inputs were seen before.\n// Total call count: 1\nmemoizedSum(1, 2); // Returns 3. sum() was called as (1, 2) was not seen before.\n// Total call count: 2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4881', '2121', '1', 'nums = [19, 10, 3, 7, 9, 8, 5, 2, 1, 17, 16, 14, 12, 18, 6, 13, 11, 20, 4, 15]\nrowsCount = 5\ncolsCount = 4', '[\n [19,17,16,15],\n [10,1,14,4],\n [3,2,12,20],\n [7,5,18,11],\n [9,8,6,13]\n]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4882', '2121', '2', 'nums = [1,2,3,4]\nrowsCount = 1\ncolsCount = 4', '[[1, 2, 3, 4]]', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4883', '2121', '3', 'nums = [1,3]\nrowsCount = 2\ncolsCount = 2', '[]', '2 multiplied by 2 is 4, and the original array [1,3] has a length of 2; therefore, the input is invalid.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4884', '2122', '1', 'arr = [1, 2, 3, [4, 5, 6], [7, 8, [9, 10, 11], 12], [13, 14, 15]]\nn = 0', '[1, 2, 3, [4, 5, 6], [7, 8, [9, 10, 11], 12], [13, 14, 15]]', 'Passing a depth of n=0 will always result in the original array. This is because the smallest possible depth of a subarray (0) is not less than n=0. Thus, no subarray should be flattened.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4885', '2122', '2', 'arr = [1, 2, 3, [4, 5, 6], [7, 8, [9, 10, 11], 12], [13, 14, 15]]\nn = 1', '[1, 2, 3, 4, 5, 6, 7, 8, [9, 10, 11], 12, 13, 14, 15]', 'The subarrays starting with 4, 7, and 13 are all flattened. This is because their depth of 0 is less than 1. However [9, 10, 11] remains unflattened because its depth is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4886', '2122', '3', 'arr = [[1, 2, 3], [4, 5, 6], [7, 8, [9, 10, 11], 12], [13, 14, 15]]\nn = 2', '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]', 'The maximum depth of any subarray is 1. Thus, all of them are flattened.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4887', '2123', '1', 'nums = [1,2,3,4]\nfn = function sum(accum, curr) { return accum + curr; }\ninit = 0', '10', 'initially, the value is init=0.\n(0) + nums[0] = 1\n(1) + nums[1] = 3\n(3) + nums[2] = 6\n(6) + nums[3] = 10\nThe final answer is 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4888', '2123', '2', 'nums = [1,2,3,4]\nfn = function sum(accum, curr) { return accum + curr * curr; }\ninit = 100', '130', 'initially, the value is init=100.\n(100) + nums[0]^2 = 101\n(101) + nums[1]^2 = 105\n(105) + nums[2]^2 = 114\n(114) + nums[3]^2 = 130\nThe final answer is 130.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4889', '2123', '3', 'nums = []\nfn = function sum(accum, curr) { return 0; }\ninit = 25', '25', 'For empty arrays, the answer is always init.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4890', '2124', '1', 't = 50\ncalls = [\n  {\"t\": 50, inputs: [1]},\n  {\"t\": 75, inputs: [2]}\n]', '[{\"t\": 125, inputs: [2]}]', 'let start = Date.now();\nfunction log(...inputs) { \n  console.log([Date.now() - start, inputs ])\n}\nconst dlog = debounce(log, 50);\nsetTimeout(() =&gt; dlog(1), 50);\nsetTimeout(() =&gt; dlog(2), 75);\n\nThe 1st call is cancelled by the 2nd call because the 2nd call occurred before 100ms\nThe 2nd call is delayed by 50ms and executed at 125ms. The inputs were (2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4891', '2124', '2', 't = 20\ncalls = [\n  {\"t\": 50, inputs: [1]},\n  {\"t\": 100, inputs: [2]}\n]', '[{\"t\": 70, inputs: [1]}, {\"t\": 120, inputs: [2]}]', 'The 1st call is delayed until 70ms. The inputs were (1).\nThe 2nd call is delayed until 120ms. The inputs were (2).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4892', '2124', '3', 't = 150\ncalls = [\n  {\"t\": 50, inputs: [1, 2]},\n  {\"t\": 300, inputs: [3, 4]},\n  {\"t\": 300, inputs: [5, 6]}\n]', '[{\"t\": 200, inputs: [1,2]}, {\"t\": 450, inputs: [5, 6]}]', 'The 1st call is delayed by 150ms and ran at 200ms. The inputs were (1, 2).\nThe 2nd call is cancelled by the 3rd call\nThe 3rd call is delayed by 150ms and ran at 450ms. The inputs were (5, 6).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4893', '2125', '1', 'functions = [x =&gt; x + 1, x =&gt; x * x, x =&gt; 2 * x], x = 4', '65', 'Evaluating from right to left ...\nStarting with x = 4.\n2 * (4) = 8\n(8) * (8) = 64\n(64) + 1 = 65');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4894', '2125', '2', 'functions = [x =&gt; 10 * x, x =&gt; 10 * x, x =&gt; 10 * x], x = 1', '1000', 'Evaluating from right to left ...\n10 * (1) = 10\n10 * (10) = 100\n10 * (100) = 1000');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4895', '2125', '3', 'functions = [], x = 42', '42', 'The composition of zero functions is the identity function');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4896', '2127', '1', 'array = [\n  {\"id\":\"1\"},\n  {\"id\":\"1\"},\n  {\"id\":\"2\"}\n], \nfn = function (item) { \n  return item.id; \n}', '{ \n  \"1\": [{\"id\": \"1\"}, {\"id\": \"1\"}],   \n  \"2\": [{\"id\": \"2\"}] \n}', 'Output is from array.groupBy(fn).\nThe selector function gets the \"id\" out of each item in the array.\nThere are two objects with an \"id\" of 1. Both of those objects are put in the first array.\nThere is one object with an \"id\" of 2. That object is put in the second array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4897', '2127', '2', 'array = [\n  [1, 2, 3],\n  [1, 3, 5],\n  [1, 5, 9]\n]\nfn = function (list) { \n  return String(list[0]); \n}', '{ \n  \"1\": [[1, 2, 3], [1, 3, 5], [1, 5, 9]] \n}', 'The array can be of any type. In this case, the selector function defines the key as being the first element in the array. \nAll the arrays have 1 as their first element so they are grouped together.\n{\n  \"1\": [[1, 2, 3], [1, 3, 5], [1, 5, 9]]\n}');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4898', '2127', '3', 'array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nfn = function (n) { \n  return String(n &gt; 5);\n}', '{\n  \"true\": [6, 7, 8, 9, 10],\n  \"false\": [1, 2, 3, 4, 5]\n}', 'The selector function splits the array by whether each number is greater than 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4899', '2128', '1', 'arr = [0,10,20,30], fn = function greaterThan10(n) { return n &gt; 10; }', '[20,30]', 'const newArray = filter(arr, fn); // [20, 30]\nThe function filters out values that are not greater than 10');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4900', '2128', '2', 'arr = [1,2,3], fn = function firstIndex(n, i) { return i === 0; }', '[1]', 'fn can also accept the index of each element\nIn this case, the function removes elements not at index 0');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4901', '2128', '3', 'arr = [-2,-1,0,1,2], fn = function plusOne(n) { return n + 1 }', '[-2,0,1,2]', 'Falsey values such as 0 should be filtered out');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4902', '2129', '1', 'arr = [1,2,3], fn = function plusone(n) { return n + 1; }', '[2,3,4]', 'const newArray = map(arr, plusone); // [2,3,4]\nThe function increases each value in the array by one.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4903', '2129', '2', 'arr = [1,2,3], fn = function plusI(n, i) { return n + i; }', '[1,3,5]', 'The function increases each value by the index it resides in.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4904', '2129', '3', 'arr = [10,20,30], fn = function constant() { return 42; }', '[42,42,42]', 'The function always returns 42.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4905', '2131', '1', 'grid = [[1],[22],[333]]', '[3]', 'In the 0<sup>th</sup> column, 333 is of length 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4906', '2131', '2', 'grid = [[-15,1,3],[15,7,12],[5,6,-2]]', '[3,1,2]', 'In the 0<sup>th</sup> column, only -15 is of length 3.\nIn the 1<sup>st</sup> column, all integers are of length 1. \nIn the 2<sup>nd</sup> column, both 12 and -2 are of length 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4907', '2132', '1', 'nums = [2,3,7,5,10]', '[4,10,24,36,56]', 'For the prefix [2], the conversion array is [4] hence the score is 4\nFor the prefix [2, 3], the conversion array is [4, 6] hence the score is 10\nFor the prefix [2, 3, 7], the conversion array is [4, 6, 14] hence the score is 24\nFor the prefix [2, 3, 7, 5], the conversion array is [4, 6, 14, 12] hence the score is 36\nFor the prefix [2, 3, 7, 5, 10], the conversion array is [4, 6, 14, 12, 20] hence the score is 56');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4908', '2132', '2', 'nums = [1,1,2,4,8,16]', '[2,4,8,16,32,64]', 'For the prefix [1], the conversion array is [2] hence the score is 2\nFor the prefix [1, 1], the conversion array is [2, 2] hence the score is 4\nFor the prefix [1, 1, 2], the conversion array is [2, 2, 4] hence the score is 8\nFor the prefix [1, 1, 2, 4], the conversion array is [2, 2, 4, 8] hence the score is 16\nFor the prefix [1, 1, 2, 4, 8], the conversion array is [2, 2, 4, 8, 16] hence the score is 32\nFor the prefix [1, 1, 2, 4, 8, 16], the conversion array is [2, 2, 4, 8, 16, 32] hence the score is 64');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4909', '2133', '1', 'root = [5,4,9,1,10,null,7]', '[0,0,0,7,7,null,11]', 'The diagram above shows the initial binary tree and the binary tree after changing the value of each node.\n- Node with value 5 does not have any cousins so its sum is 0.\n- Node with value 4 does not have any cousins so its sum is 0.\n- Node with value 9 does not have any cousins so its sum is 0.\n- Node with value 1 has a cousin with value 7 so its sum is 7.\n- Node with value 10 has a cousin with value 7 so its sum is 7.\n- Node with value 7 has cousins with values 1 and 10 so its sum is 11.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4910', '2133', '2', 'root = [3,1,2]', '[0,0,0]', 'The diagram above shows the initial binary tree and the binary tree after changing the value of each node.\n- Node with value 3 does not have any cousins so its sum is 0.\n- Node with value 1 does not have any cousins so its sum is 0.\n- Node with value 2 does not have any cousins so its sum is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4911', '2134', '1', '[\"Graph\", \"shortestPath\", \"shortestPath\", \"addEdge\", \"shortestPath\"]\n[[4, [[0, 2, 5], [0, 1, 2], [1, 2, 1], [3, 0, 3]]], [3, 2], [0, 3], [[1, 3, 4]], [0, 3]]', '[null, 6, -1, null, 6]', 'Graph g = new Graph(4, [[0, 2, 5], [0, 1, 2], [1, 2, 1], [3, 0, 3]]);\ng.shortestPath(3, 2); // return 6. The shortest path from 3 to 2 in the first diagram above is 3 -&gt; 0 -&gt; 1 -&gt; 2 with a total cost of 3 + 2 + 1 = 6.\ng.shortestPath(0, 3); // return -1. There is no path from 0 to 3.\ng.addEdge([1, 3, 4]); // We add an edge from node 1 to node 3, and we get the second diagram above.\ng.shortestPath(0, 3); // return 6. The shortest path from 0 to 3 now is 0 -&gt; 1 -&gt; 3 with a total cost of 2 + 4 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4912', '2135', '1', 'mat = [[0,1],[1,0]]', '[0,1]', 'Both rows have the same number of 1\'s. So we return the index of the smaller row, 0, and the maximum count of ones (1<code>)</code>. So, the answer is [0,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4913', '2135', '2', 'mat = [[0,0,0],[0,1,1]]', '[1,2]', 'The row indexed 1 has the maximum count of ones <code>(2)</code>. So we return its index, <code>1</code>, and the count. So, the answer is [1,2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4914', '2135', '3', 'mat = [[0,0],[1,1],[0,0]]', '[1,2]', 'The row indexed 1 has the maximum count of ones (2). So the answer is [1,2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4915', '2136', '1', 'nums = [4,7,9,3,9], divisors = [5,2,3]', '3', 'The divisibility score for every element in divisors is:\nThe divisibility score of divisors[0] is 0 since no number in nums is divisible by 5.\nThe divisibility score of divisors[1] is 1 since nums[0] is divisible by 2.\nThe divisibility score of divisors[2] is 3 since nums[2], nums[3], and nums[4] are divisible by 3.\nSince divisors[2] has the maximum divisibility score, we return it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4916', '2136', '2', 'nums = [20,14,21,10], divisors = [5,7,5]', '5', 'The divisibility score for every element in divisors is:\nThe divisibility score of divisors[0] is 2 since nums[0] and nums[3] are divisible by 5.\nThe divisibility score of divisors[1] is 2 since nums[1] and nums[2] are divisible by 7.\nThe divisibility score of divisors[2] is 2 since nums[0] and nums[3] are divisible by 5.\nSince divisors[0], divisors[1], and divisors[2] all have the maximum divisibility score, we return the minimum of them (i.e., divisors[2]).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4917', '2136', '3', 'nums = [12], divisors = [10,16]', '10', 'The divisibility score for every element in divisors is:\nThe divisibility score of divisors[0] is 0 since no number in nums is divisible by 10.\nThe divisibility score of divisors[1] is 0 since no number in nums is divisible by 16.\nSince divisors[0] and divisors[1] both have the maximum divisibility score, we return the minimum of them (i.e., divisors[0]).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4918', '2137', '1', 'word = \"b\"', '2', 'Insert the letter \"a\" right before \"b\", and the letter \"c\" right next to \"a\" to obtain the valid string \"<strong>a</strong>b<strong>c</strong>\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4919', '2137', '2', 'word = \"aaa\"', '6', 'Insert letters \"b\" and \"c\" next to each \"a\" to obtain the valid string \"a<strong>bc</strong>a<strong>bc</strong>a<strong>bc</strong>\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4920', '2137', '3', 'word = \"abc\"', '0', 'word is already valid. No modifications are needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4921', '2139', '1', 'callCount = 5', '[0,1,1,2,3]', 'const gen = fibGenerator();\ngen.next().value; // 0\ngen.next().value; // 1\ngen.next().value; // 1\ngen.next().value; // 2\ngen.next().value; // 3');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4922', '2139', '2', 'callCount = 0', '[]', 'gen.next() is never called so nothing is outputted');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4923', '2140', '1', 'arr = [[[6]],[1,3],[]]', '[6,1,3]', 'const generator = inorderTraversal(arr);\ngenerator.next().value; // 6\ngenerator.next().value; // 1\ngenerator.next().value; // 3\ngenerator.next().done; // true');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4924', '2140', '2', 'arr = []', '[]', 'There are no integers so the generator doesn\'t yield anything.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4925', '2141', '1', 'generatorFunction = function*() { \n  return 42; \n}\ncancelledAt = 100', '{\"resolved\": 42}', 'const generator = generatorFunction();\nconst [cancel, promise] = cancellable(generator);\nsetTimeout(cancel, 100);\npromise.then(console.log); // resolves 42 at t=0ms\n\nThe generator immediately yields 42 and finishes. Because of that, the returned promise immediately resolves 42. Note that cancelling a finished generator does nothing.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4926', '2141', '2', 'generatorFunction = function*() { \n  const msg = yield new Promise(res =&gt; res(\"Hello\")); \n  throw `Error: ${msg}`; \n}\ncancelledAt = null', '{\"rejected\": \"Error: Hello\"}', 'A promise is yielded. The function handles this by waiting for it to resolve and then passes the resolved value back to the generator. Then an error is thrown which has the effect of causing the promise to reject with the same thrown error.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4927', '2141', '3', 'generatorFunction = function*() { \n  yield new Promise(res =&gt; setTimeout(res, 200)); \n  return \"Success\"; \n}\ncancelledAt = 100', '{\"rejected\": \"Cancelled\"}', 'While the function is waiting for the yielded promise to resolve, cancel() is called. This causes an error message to be sent back to the generator. Since this error is uncaught, the returned promise rejected with this error.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4928', '2141', '4', 'generatorFunction = function*() { \n  let result = 0; \n  yield new Promise(res =&gt; setTimeout(res, 100));\n  result += yield new Promise(res =&gt; res(1)); \n  yield new Promise(res =&gt; setTimeout(res, 100)); \n  result += yield new Promise(res =&gt; res(1)); \n  return result;\n}\ncancelledAt = null', '{\"resolved\": 2}', '4 promises are yielded. Two of those promises have their values added to the result. After 200ms, the generator finishes with a value of 2, and that value is resolved by the returned promise.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4929', '2141', '5', 'generatorFunction = function*() { \n  let result = 0; \n  try { \n    yield new Promise(res =&gt; setTimeout(res, 100)); \n    result += yield new Promise(res =&gt; res(1)); \n    yield new Promise(res =&gt; setTimeout(res, 100)); \n    result += yield new Promise(res =&gt; res(1)); \n  } catch(e) { \n    return result; \n  } \n  return result; \n}\ncancelledAt = 150', '{\"resolved\": 1}', 'The first two yielded promises resolve and cause the result to increment. However, at t=150ms, the generator is cancelled. The error sent to the generator is caught and the result is returned and finally resolved by the returned promise.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4930', '2141', '6', 'generatorFunction = function*() { \n  try { \n    yield new Promise((resolve, reject) =&gt; reject(\"Promise Rejected\")); \n  } catch(e) { \n    let a = yield new Promise(resolve =&gt; resolve(2));\n    let b = yield new Promise(resolve =&gt; resolve(2)); \n    return a + b; \n  }; \n}\ncancelledAt = null', '{\"resolved\": 4}', 'The first yielded promise immediately rejects. This error is caught. Because the generator hasn\'t been cancelled, execution continues as usual. It ends up resolving 2 + 2 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4931', '2142', '1', 'arrivalTime = 15, delayedTime = 5', '20', 'Arrival time of the train was 15:00 hours. It is delayed by 5 hours. Now it will reach at 15+5 = 20 (20:00 hours).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4932', '2142', '2', 'arrivalTime = 13, delayedTime = 11', '0', 'Arrival time of the train was 13:00 hours. It is delayed by 11 hours. Now it will reach at 13+11=24 (Which is denoted by 00:00 in 24 hours format so return 0).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4933', '2143', '1', 'n = 7', '21', 'Numbers in the range <code>[1, 7]</code> that are divisible by <code>3</code>, <code>5,</code> or <code>7 </code>are <code>3, 5, 6, 7</code>. The sum of these numbers is <code>21</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4934', '2143', '2', 'n = 10', '40', 'Numbers in the range <code>[1, 10] that are</code> divisible by <code>3</code>, <code>5,</code> or <code>7</code> are <code>3, 5, 6, 7, 9, 10</code>. The sum of these numbers is 40.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4935', '2143', '3', 'n = 9', '30', 'Numbers in the range <code>[1, 9]</code> that are divisible by <code>3</code>, <code>5</code>, or <code>7</code> are <code>3, 5, 6, 7, 9</code>. The sum of these numbers is <code>30</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4936', '2144', '1', 'nums = [1,-1,-3,-2,3], k = 3, x = 2', '[-1,-2,-2]', 'There are 3 subarrays with size k = 3. \nThe first subarray is <code>[1, -1, -3]</code> and the 2<sup>nd</sup> smallest negative integer is -1. \nThe second subarray is <code>[-1, -3, -2]</code> and the 2<sup>nd</sup> smallest negative integer is -2. \nThe third subarray is <code>[-3, -2, 3] </code>and the 2<sup>nd</sup> smallest negative integer is -2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4937', '2144', '2', 'nums = [-1,-2,-3,-4,-5], k = 2, x = 2', '[-1,-2,-3,-4]', 'There are 4 subarrays with size k = 2.\nFor <code>[-1, -2]</code>, the 2<sup>nd</sup> smallest negative integer is -1.\nFor <code>[-2, -3]</code>, the 2<sup>nd</sup> smallest negative integer is -2.\nFor <code>[-3, -4]</code>, the 2<sup>nd</sup> smallest negative integer is -3.\nFor <code>[-4, -5]</code>, the 2<sup>nd</sup> smallest negative integer is -4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4938', '2144', '3', 'nums = [-3,1,2,-3,0,-3], k = 2, x = 1', '[-3,0,-3,-3,-3]', 'There are 5 subarrays with size k = 2<strong>.</strong>\nFor <code>[-3, 1]</code>, the 1<sup>st</sup> smallest negative integer is -3.\nFor <code>[1, 2]</code>, there is no negative integer so the beauty is 0.\nFor <code>[2, -3]</code>, the 1<sup>st</sup> smallest negative integer is -3.\nFor <code>[-3, 0]</code>, the 1<sup>st</sup> smallest negative integer is -3.\nFor <code>[0, -3]</code>, the 1<sup>st</sup> smallest negative integer is -3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4939', '2145', '1', 'nums = [2,6,3,4]', '4', 'We can do the following operations:\n- Choose index i = 2 and replace nums[2] with gcd(3,4) = 1. Now we have nums = [2,6,1,4].\n- Choose index i = 1 and replace nums[1] with gcd(6,1) = 1. Now we have nums = [2,1,1,4].\n- Choose index i = 0 and replace nums[0] with gcd(2,1) = 1. Now we have nums = [1,1,1,4].\n- Choose index i = 2 and replace nums[3] with gcd(1,4) = 1. Now we have nums = [1,1,1,1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4940', '2145', '2', 'nums = [2,10,6,14]', '-1', 'It can be shown that it is impossible to make all the elements equal to 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4941', '2146', '1', 'nums = [1,2,3,4,5], k = 3', '18', 'We need to choose exactly 3 elements from nums to maximize the sum.\nFor the first iteration, we choose 5. Then sum is 5 and nums = [1,2,3,4,6]\nFor the second iteration, we choose 6. Then sum is 5 + 6 and nums = [1,2,3,4,7]\nFor the third iteration, we choose 7. Then sum is 5 + 6 + 7 = 18 and nums = [1,2,3,4,8]\nSo, we will return 18.\nIt can be proven, that 18 is the maximum answer that we can achieve.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4942', '2146', '2', 'nums = [5,5,5], k = 2', '11', 'We need to choose exactly 2 elements from nums to maximize the sum.\nFor the first iteration, we choose 5. Then sum is 5 and nums = [5,5,6]\nFor the second iteration, we choose 6. Then sum is 5 + 6 = 11 and nums = [5,5,7]\nSo, we will return 11.\nIt can be proven, that 11 is the maximum answer that we can achieve.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4943', '2147', '1', 'A = [1,3,2,4], B = [3,1,2,4]', '[0,2,3,4]', 'At i = 0: no number is common, so C[0] = 0.\nAt i = 1: 1 and 3 are common in A and B, so C[1] = 2.\nAt i = 2: 1, 2, and 3 are common in A and B, so C[2] = 3.\nAt i = 3: 1, 2, 3, and 4 are common in A and B, so C[3] = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4944', '2147', '2', 'A = [2,3,1], B = [3,1,2]', '[0,1,3]', 'At i = 0: no number is common, so C[0] = 0.\nAt i = 1: only 3 is common in A and B, so C[1] = 1.\nAt i = 2: 1, 2, and 3 are common in A and B, so C[2] = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4945', '2148', '1', 'grid = [[0,2,1,0],[4,0,0,3],[1,0,0,4],[0,3,2,0]]', '7', 'The fisher can start at cell <code>(1,3)</code> and collect 3 fish, then move to cell <code>(2,3)</code> and collect 4 fish.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4946', '2148', '2', 'grid = [[1,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,1]]', '1', 'The fisher can start at cells (0,0) or (3,3) and collect a single fish.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4947', '2149', '1', 'nums = [3,4,-1]', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4948', '2149', '2', 'nums = [1,2,4,3]', '5', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4949', '2149', '3', 'nums = [1,2,3]', '3', '');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4950', '2150', '1', 'player1 = [4,10,7,9], player2 = [6,5,2,3]', '1', 'The score of player1 is 4 + 10 + 2*7 + 2*9 = 46.\nThe score of player2 is 6 + 5 + 2 + 3 = 16.\nScore of player1 is more than the score of player2, so, player1 is the winner, and the answer is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4951', '2150', '2', 'player1 = [3,5,7,6], player2 = [8,10,10,2]', '2', 'The score of player1 is 3 + 5 + 7 + 6 = 21.\nThe score of player2 is 8 + 10 + 2*10 + 2*2 = 42.\nScore of player2 is more than the score of player1, so, player2 is the winner, and the answer is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4952', '2150', '3', 'player1 = [2,3], player2 = [4,1]', '0', 'The score of player1 is 2 + 3 = 5\nThe score of player2 is 4 + 1 = 5\nThe score of player1 equals to the score of player2, so, there is a draw, and the answer is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4953', '2151', '1', 'arr = [1,3,4,2], mat = [[1,4],[2,3]]', '2', 'The moves are shown in order, and both the first row and second column of the matrix become fully painted at arr[2].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4954', '2151', '2', 'arr = [2,8,7,4,1,3,5,6,9], mat = [[3,2,5],[1,4,6],[8,7,9]]', '3', 'The second column becomes fully painted at arr[3].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4955', '2152', '1', 'start = [1,1], target = [4,5], specialRoads = [[1,2,3,3,2],[3,4,4,5,1]]', '5', 'The optimal path from (1,1) to (4,5) is the following:\n- (1,1) -&gt; (1,2). This move has a cost of |1 - 1| + |2 - 1| = 1.\n- (1,2) -&gt; (3,3). This move uses the first special edge, the cost is 2.\n- (3,3) -&gt; (3,4). This move has a cost of |3 - 3| + |4 - 3| = 1.\n- (3,4) -&gt; (4,5). This move uses the second special edge, the cost is 1.\nSo the total cost is 1 + 2 + 1 + 1 = 5.\nIt can be shown that we cannot achieve a smaller total cost than 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4956', '2152', '2', 'start = [3,2], target = [5,7], specialRoads = [[3,2,3,4,4],[3,3,5,5,5],[3,4,5,6,6]]', '7', 'It is optimal to not use any special edges and go directly from the starting to the ending position with a cost |5 - 3| + |7 - 2| = 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4957', '2153', '1', 's = \"abcz\", k = 26', '\"abda\"', 'The string \"abda\" is beautiful and lexicographically larger than the string \"abcz\".\nIt can be proven that there is no string that is lexicographically larger than the string \"abcz\", beautiful, and lexicographically smaller than the string \"abda\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4958', '2153', '2', 's = \"dc\", k = 4', '\"\"', 'It can be proven that there is no string that is lexicographically larger than the string \"dc\" and is beautiful.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4959', '2154', '1', 'init = 5, calls = [\"increment\",\"reset\",\"decrement\"]', '[6,5,4]', 'const counter = createCounter(5);\ncounter.increment(); // 6\ncounter.reset(); // 5\ncounter.decrement(); // 4');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4960', '2154', '2', 'init = 0, calls = [\"increment\",\"increment\",\"decrement\",\"reset\",\"reset\"]', '[1,2,1,0,0]', 'const counter = createCounter(0);\ncounter.increment(); // 1\ncounter.increment(); // 2\ncounter.decrement(); // 1\ncounter.reset(); // 0\ncounter.reset(); // 0');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4961', '2155', '1', 'fn = (a,b,c) =&gt; (a + b + c), calls = [[1,2,3],[2,3,6]]', '[{\"calls\":1,\"value\":6}]', 'const onceFn = once(fn);\nonceFn(1, 2, 3); // 6\nonceFn(2, 3, 6); // undefined, fn was not called');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4962', '2155', '2', 'fn = (a,b,c) =&gt; (a * b * c), calls = [[5,7,4],[2,3,6],[4,6,8]]', '[{\"calls\":1,\"value\":140}]', 'const onceFn = once(fn);\nonceFn(5, 7, 4); // 140\nonceFn(2, 3, 6); // undefined, fn was not called\nonceFn(4, 6, 8); // undefined, fn was not called');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4963', '2156', '1', 'args = []', '\"Hello World\"', 'const f = createHelloWorld();\nf(); // \"Hello World\"\n\nThe function returned by createHelloWorld should always return \"Hello World\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4964', '2156', '2', 'args = [{},null,42]', '\"Hello World\"', 'const f = createHelloWorld();\nf({}, null, 42); // \"Hello World\"\n\nAny arguments could be passed to the function but it should still always return \"Hello World\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4965', '2157', '1', 'nums = [1,2,3,4,5]', '[-3,-1,1,3,5]', 'For index i = 0, there is 1 element in the prefix and 4 distinct elements in the suffix. Thus, diff[0] = 1 - 4 = -3.\nFor index i = 1, there are 2 distinct elements in the prefix and 3 distinct elements in the suffix. Thus, diff[1] = 2 - 3 = -1.\nFor index i = 2, there are 3 distinct elements in the prefix and 2 distinct elements in the suffix. Thus, diff[2] = 3 - 2 = 1.\nFor index i = 3, there are 4 distinct elements in the prefix and 1 distinct element in the suffix. Thus, diff[3] = 4 - 1 = 3.\nFor index i = 4, there are 5 distinct elements in the prefix and no elements in the suffix. Thus, diff[4] = 5 - 0 = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4966', '2157', '2', 'nums = [3,2,3,4,2]', '[-2,-1,0,2,3]', 'For index i = 0, there is 1 element in the prefix and 3 distinct elements in the suffix. Thus, diff[0] = 1 - 3 = -2.\nFor index i = 1, there are 2 distinct elements in the prefix and 3 distinct elements in the suffix. Thus, diff[1] = 2 - 3 = -1.\nFor index i = 2, there are 2 distinct elements in the prefix and 2 distinct elements in the suffix. Thus, diff[2] = 2 - 2 = 0.\nFor index i = 3, there are 3 distinct elements in the prefix and 1 distinct element in the suffix. Thus, diff[3] = 3 - 1 = 2.\nFor index i = 4, there are 3 distinct elements in the prefix and no elements in the suffix. Thus, diff[4] = 3 - 0 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4967', '2158', '1', '[\"FrequencyTracker\", \"add\", \"add\", \"hasFrequency\"]\n[[], [3], [3], [2]]', '[null, null, null, true]', 'FrequencyTracker frequencyTracker = new FrequencyTracker();\nfrequencyTracker.add(3); // The data structure now contains [3]\nfrequencyTracker.add(3); // The data structure now contains [3, 3]\nfrequencyTracker.hasFrequency(2); // Returns true, because 3 occurs twice');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4968', '2158', '2', '[\"FrequencyTracker\", \"add\", \"deleteOne\", \"hasFrequency\"]\n[[], [1], [1], [1]]', '[null, null, null, false]', 'FrequencyTracker frequencyTracker = new FrequencyTracker();\nfrequencyTracker.add(1); // The data structure now contains [1]\nfrequencyTracker.deleteOne(1); // The data structure becomes empty []\nfrequencyTracker.hasFrequency(1); // Returns false, because the data structure is empty');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4969', '2158', '3', '[\"FrequencyTracker\", \"hasFrequency\", \"add\", \"hasFrequency\"]\n[[], [2], [3], [1]]', '[null, false, null, true]', 'FrequencyTracker frequencyTracker = new FrequencyTracker();\nfrequencyTracker.hasFrequency(2); // Returns false, because the data structure is empty\nfrequencyTracker.add(3); // The data structure now contains [3]\nfrequencyTracker.hasFrequency(1); // Returns true, because 3 occurs once');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4970', '2159', '1', 'n = 4, queries = [[0,2],[1,2],[3,1],[1,1],[2,1]]', '[0,1,1,0,2]', 'Initially array nums = [0,0,0,0], where 0 denotes uncolored elements of the array.\n- After the 1<sup>st</sup> query nums = [2,0,0,0]. The count of adjacent elements with the same color is 0.\n- After the 2<sup>nd</sup> query nums = [2,2,0,0]. The count of adjacent elements with the same color is 1.\n- After the 3<sup>rd</sup> query nums = [2,2,0,1]. The count of adjacent elements with the same color is 1.\n- After the 4<sup>th</sup> query nums = [2,1,0,1]. The count of adjacent elements with the same color is 0.\n- After the 5<sup>th</sup> query nums = [2,1,1,1]. The count of adjacent elements with the same color is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4971', '2159', '2', 'n = 1, queries = [[0,100000]]', '[0]', 'Initially array nums = [0], where 0 denotes uncolored elements of the array.\n- After the 1<sup>st</sup> query nums = [100000]. The count of adjacent elements with the same color is 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4972', '2160', '1', 'n = 7, cost = [1,5,2,2,3,3,1]', '6', 'We can do the following increments:\n- Increase the cost of node 4 one time.\n- Increase the cost of node 3 three times.\n- Increase the cost of node 7 two times.\nEach path from the root to a leaf will have a total cost of 9.\nThe total increments we did is 1 + 3 + 2 = 6.\nIt can be shown that this is the minimum answer we can achieve.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4973', '2160', '2', 'n = 3, cost = [5,3,3]', '0', 'The two paths already have equal total costs, so no increments are needed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4974', '2161', '1', 'arr = [1,2,3,4,5], size = 1', '[[1],[2],[3],[4],[5]]', 'The arr has been split into subarrays each with 1 element.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4975', '2161', '2', 'arr = [1,9,6,3,2], size = 3', '[[1,9,6],[3,2]]', 'The arr has been split into subarrays with 3 elements. However, only two elements are left for the 2nd subarray.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4976', '2161', '3', 'arr = [8,5,3,2,6], size = 6', '[[8,5,3,2,6]]', 'Size is greater than arr.length thus all elements are in the first subarray.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4977', '2161', '4', 'arr = [], size = 1', '[]', 'There are no elements to be chunked so an empty array is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4978', '2162', '1', 'details = [\"7868190130M7522\",\"5303914400F9211\",\"9273338290F4010\"]', '2', 'The passengers at indices 0, 1, and 2 have ages 75, 92, and 40. Thus, there are 2 people who are over 60 years old.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4979', '2162', '2', 'details = [\"1313579440F2036\",\"2921522980M5644\"]', '0', 'None of the passengers are older than 60.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4980', '2164', '1', 'nums = [12,9], k = 1', '30', 'If we apply the operation to index 1, our new array nums will be equal to [12,18]. Thus, we return the bitwise or of 12 and 18, which is 30.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4981', '2164', '2', 'nums = [8,1,2], k = 2', '35', 'If we apply the operation twice on index 0, we yield a new array of [32,1,2]. Thus, we return 32|1|2 = 35.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4982', '2165', '2', 'nums = [1,1,1]', '7', 'A total of 7 groups are possible, and the power of each group will be 1. Therefore, the sum of the powers of all groups is 7.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4983', '2166', '1', 'n = 5, k = 2', '[4,5]', 'The game goes as follows:\n1) Start at 1<sup>st</sup> friend and pass the ball to the friend who is 2 steps away from them - 3<sup>rd</sup> friend.\n2) 3<sup>rd</sup> friend passes the ball to the friend who is 4 steps away from them - 2<sup>nd</sup> friend.\n3) 2<sup>nd</sup> friend passes the ball to the friend who is 6 steps away from them  - 3<sup>rd</sup> friend.\n4) The game ends as 3<sup>rd</sup> friend receives the ball for the second time.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4984', '2166', '2', 'n = 4, k = 4', '[2,3,4]', 'The game goes as follows:\n1) Start at the 1<sup>st</sup> friend and pass the ball to the friend who is 4 steps away from them - 1<sup>st</sup> friend.\n2) The game ends as 1<sup>st</sup> friend receives the ball for the second time.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4985', '2167', '3', 'derived = [1,0]', 'false', 'There is no valid original array that gives derived.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4986', '2168', '1', 'grid = [[2,4,3,5],[5,4,9,3],[3,4,2,11],[10,9,13,15]]', '3', 'We can start at the cell (0, 0) and make the following moves:\n- (0, 0) -&gt; (0, 1).\n- (0, 1) -&gt; (1, 2).\n- (1, 2) -&gt; (2, 3).\nIt can be shown that it is the maximum number of moves that can be made.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4987', '2168', '2', 'grid = [[3,2,4],[2,1,9],[1,1,7]]', '0', 'Starting from any cell in the first column we cannot perform any moves.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4988', '2169', '1', 'n = 6, edges = [[0,1],[0,2],[1,2],[3,4]]', '3', 'From the picture above, one can see that all of the components of this graph are complete.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4989', '2169', '2', 'n = 6, edges = [[0,1],[0,2],[1,2],[3,4],[3,5]]', '1', 'The component containing vertices 0, 1, and 2 is complete since there is an edge between every pair of two vertices. On the other hand, the component containing vertices 3, 4, and 5 is not complete since there is no edge between vertices 4 and 5. Thus, the number of complete components in this graph is 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4990', '2170', '1', 'fn = function add(b) {\n  return this.a + b;\n}\nargs = [{\"a\": 5}, 7]', '12', 'fn.callPolyfill({\"a\": 5}, 7); // 12\ncallPolyfill sets the \"this\" context to {\"a\": 5}. 7 is passed as an argument.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4991', '2170', '2', 'fn = function tax(price, taxRate) { \n return `The cost of the ${this.item} is ${price * taxRate}`; \n}\nargs = [{\"item\": \"burger\"}, 10, 1.1]', '\"The cost of the burger is 11\"', 'callPolyfill sets the \"this\" context to {\"item\": \"burger\"}. 10 and 1.1 are passed as additional arguments.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4992', '2171', '1', 'actions = [\"EventEmitter\", \"emit\", \"subscribe\", \"subscribe\", \"emit\"], values = [[], [\"firstEvent\", \"function cb1() { return 5; }\"],  [\"firstEvent\", \"function cb1() { return 5; }\"], [\"firstEvent\"]]', '[[],[\"emitted\",[]],[\"subscribed\"],[\"subscribed\"],[\"emitted\",[5,6]]]', 'const emitter = new EventEmitter();\nemitter.emit(\"firstEvent\"); // [], no callback are subscribed yet\nemitter.subscribe(\"firstEvent\", function cb1() { return 5; });\nemitter.subscribe(\"firstEvent\", function cb2() { return 6; });\nemitter.emit(\"firstEvent\"); // [5, 6], returns the output of cb1 and cb2');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4993', '2171', '2', 'actions = [\"EventEmitter\", \"subscribe\", \"emit\", \"emit\"], values = [[], [\"firstEvent\", \"function cb1(...args) { return args.join(\',\'); }\"], [\"firstEvent\", [1,2,3]], [\"firstEvent\", [3,4,6]]]', '[[],[\"subscribed\"],[\"emitted\",[\"1,2,3\"]],[\"emitted\",[\"3,4,6\"]]]', 'Note that the emit method should be able to accept an OPTIONAL array of arguments.\n\nconst emitter = new EventEmitter();\nemitter.subscribe(\"firstEvent, function cb1(...args) { return args.join(\',\'); });\nemitter.emit(\"firstEvent\", [1, 2, 3]); // [\"1,2,3\"]\nemitter.emit(\"firstEvent\", [3, 4, 6]); // [\"3,4,6\"]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4994', '2171', '3', 'actions = [\"EventEmitter\", \"subscribe\", \"emit\", \"unsubscribe\", \"emit\"], values = [[], [\"firstEvent\", \"(...args) =&gt; args.join(\',\')\"], [\"firstEvent\", [1,2,3]], [0], [\"firstEvent\", [4,5,6]]]', '[[],[\"subscribed\"],[\"emitted\",[\"1,2,3\"]],[\"unsubscribed\",0],[\"emitted\",[]]]', 'const emitter = new EventEmitter();\nconst sub = emitter.subscribe(\"firstEvent\", (...args) =&gt; args.join(\',\'));\nemitter.emit(\"firstEvent\", [1, 2, 3]); // [\"1,2,3\"]\nsub.unsubscribe(); // undefined\nemitter.emit(\"firstEvent\", [4, 5, 6]); // [], there are no subscriptions');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4995', '2171', '4', 'actions = [\"EventEmitter\", \"subscribe\", \"subscribe\", \"unsubscribe\", \"emit\"], values = [[], [\"firstEvent\", \"x =&gt; x + 1\"], [\"firstEvent\", \"x =&gt; x + 2\"], [0], [\"firstEvent\", [5]]]', '[[],[\"subscribed\"],[\"emitted\",[\"1,2,3\"]],[\"unsubscribed\",0],[\"emitted\",[7]]]', 'const emitter = new EventEmitter();\nconst sub1 = emitter.subscribe(\"firstEvent\", x =&gt; x + 1);\nconst sub2 = emitter.subscribe(\"firstEvent\", x =&gt; x + 2);\nsub1.unsubscribe(); // undefined\nemitter.emit(\"firstEvent\", [5]); // [7]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4996', '2172', '1', 'nums = [[1,2],[3,4]], operation = \"Add\"', '10', 'const obj1 = new ArrayWrapper([1,2]);\nconst obj2 = new ArrayWrapper([3,4]);\nobj1 + obj2; // 10');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4997', '2172', '2', 'nums = [[23,98,42,70]], operation = \"String\"', '\"[23,98,42,70]\"', 'const obj = new ArrayWrapper([23,98,42,70]);\nString(obj); // \"[23,98,42,70]\"');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4998', '2172', '3', 'nums = [[],[]], operation = \"Add\"', '0', 'const obj1 = new ArrayWrapper([]);\nconst obj2 = new ArrayWrapper([]);\nobj1 + obj2; // 0');
INSERT INTO `question_master_detail_coding_temp` VALUES ('4999', '2173', '1', 's = \"ABFCACDB\"', '2', 'We can do the following operations:\n- Remove the substring \"<u>AB</u>FCACDB\", so s = \"FCACDB\".\n- Remove the substring \"FCA<u>CD</u>B\", so s = \"FCAB\".\n- Remove the substring \"FC<u>AB</u>\", so s = \"FC\".\nSo the resulting length of the string is 2.\nIt can be shown that it is the minimum length that we can obtain.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5000', '2173', '2', 's = \"ACBBD\"', '5', 'We cannot do any operations on the string so the length remains the same.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5001', '2174', '1', 's = \"egcfe\"', '\"efcfe\"', 'The minimum number of operations to make \"egcfe\" a palindrome is 1, and the lexicographically smallest palindrome string we can get by modifying one character is \"efcfe\", by changing \'g\'.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5002', '2174', '2', 's = \"abcd\"', '\"abba\"', 'The minimum number of operations to make \"abcd\" a palindrome is 2, and the lexicographically smallest palindrome string we can get by modifying two characters is \"abba\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5003', '2174', '3', 's = \"seven\"', '\"neven\"', 'The minimum number of operations to make \"seven\" a palindrome is 1, and the lexicographically smallest palindrome string we can get by modifying one character is \"neven\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5004', '2176', '1', 'n = 5, edges = [[4,1,-1],[2,0,-1],[0,3,-1],[4,3,-1]], source = 0, destination = 1, target = 5', '[[4,1,1],[2,0,1],[0,3,3],[4,3,1]]', 'The graph above shows a possible modification to the edges, making the distance from 0 to 1 equal to 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5005', '2176', '2', 'n = 3, edges = [[0,1,-1],[0,2,5]], source = 0, destination = 2, target = 6', '[]', 'The graph above contains the initial edges. It is not possible to make the distance from 0 to 2 equal to 6 by modifying the edge with weight -1. So, an empty array is returned.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5006', '2176', '3', 'n = 4, edges = [[1,0,4],[1,2,3],[2,3,5],[0,3,-1]], source = 0, destination = 2, target = 6', '[[1,0,4],[1,2,3],[2,3,5],[0,3,1]]', 'The graph above shows a modified graph having the shortest distance from 0 to 2 as 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5007', '2177', '1', 'argsArr = [5]', '1', 'argumentsLength(5); // 1\n\nOne value was passed to the function so it should return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5008', '2177', '2', 'argsArr = [{}, null, \"3\"]', '3', 'argumentsLength({}, null, \"3\"); // 3\n\nThree values were passed to the function so it should return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5009', '2178', '1', 'func = () =&gt; expect(5).toBe(5)', '{\"value\": true}', '5 === 5 so this expression returns true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5010', '2178', '2', 'func = () =&gt; expect(5).toBe(null)', '{\"error\": \"Not Equal\"}', '5 !== null so this expression throw the error \"Not Equal\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5011', '2178', '3', 'func = () =&gt; expect(5).notToBe(null)', '{\"value\": true}', '5 !== null so this expression returns true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5012', '2179', '1', 'obj = [null, 0, false, 1]', '[1]', 'All falsy values have been removed from the array.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5013', '2179', '2', 'obj = {\"a\": null, \"b\": [false, 1]}', '{\"b\": [1]}', 'obj[\"a\"] and obj[\"b\"][0] had falsy values and were removed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5014', '2179', '3', 'obj = [null, 0, 5, [0], [false, 16]]', '[5, [], [16]]', 'obj[0], obj[1], obj[3][0], and obj[4][0] were falsy and removed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5015', '2180', '1', 'prices = [1,2,2], money = 3', '0', 'Purchase the chocolates priced at 1 and 2 units respectively. You will have 3 - 3 = 0 units of money afterwards. Thus, we return 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5016', '2180', '2', 'prices = [3,2,3], money = 3', '3', 'You cannot buy 2 chocolates without going in debt, so we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5017', '2181', '1', 's = \"leetscode\", dictionary = [\"leet\",\"code\",\"leetcode\"]', '1', 'We can break s in two substrings: \"leet\" from index 0 to 3 and \"code\" from index 5 to 8. There is only 1 unused character (at index 4), so we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5018', '2181', '2', 's = \"sayhelloworld\", dictionary = [\"hello\",\"world\"]', '3', 'We can break s in two substrings: \"hello\" from index 3 to 7 and \"world\" from index 8 to 12. The characters at indices 0, 1, 2 are not used in any substring and thus are considered as extra characters. Hence, we return 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5019', '2182', '1', 'nums = [3,-1,-5,2,5,-9]', '1350', 'One way to form a group of maximal strength is to group the students at indices [0,2,3,4,5]. Their strength is 3 * (-5) * 2 * 5 * (-9) = 1350, which we can show is optimal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5020', '2182', '2', 'nums = [-4,-5,-4]', '20', 'Group the students at indices [0, 1] . Then, we’ll have a resulting strength of 20. We cannot achieve greater strength.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5021', '2183', '1', 'nums = [2,3,6]', 'true', 'In this example, there are 3 possible pairs of indices: (0, 1), (0, 2), and (1, 2).\nTo go from index 0 to index 1, we can use the sequence of traversals 0 -&gt; 2 -&gt; 1, where we move from index 0 to index 2 because gcd(nums[0], nums[2]) = gcd(2, 6) = 2 &gt; 1, and then move from index 2 to index 1 because gcd(nums[2], nums[1]) = gcd(6, 3) = 3 &gt; 1.\nTo go from index 0 to index 2, we can just go directly because gcd(nums[0], nums[2]) = gcd(2, 6) = 2 &gt; 1. Likewise, to go from index 1 to index 2, we can just go directly because gcd(nums[1], nums[2]) = gcd(3, 6) = 3 &gt; 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5022', '2183', '2', 'nums = [3,9,5]', 'false', 'No sequence of traversals can take us from index 0 to index 2 in this example. So, we return false.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5023', '2183', '3', 'nums = [4,3,12,8]', 'true', 'There are 6 possible pairs of indices to traverse between: (0, 1), (0, 2), (0, 3), (1, 2), (1, 3), and (2, 3). A valid sequence of traversals exists for each pair, so we return true.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5024', '2184', '1', 'num = \"51230100\"', '\"512301\"', 'Integer \"51230100\" has 2 trailing zeros, we remove them and return integer \"512301\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5025', '2184', '2', 'num = \"123\"', '\"123\"', 'Integer \"123\" has no trailing zeros, we return integer \"123\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5026', '2185', '1', 'grid = [[1]]', '[[0]]', '- The cell (0,0) contains [] on its bottom-right diagonal and [] on its top-left diagonal. The answer is |0 - 0| = 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5027', '2185', '2', 'ta-track-load=\"description_content\"><p>Given a <strong>0-indexed</strong> 2D <code>grid</code> of size <code>m x n</code>, you should find the matrix <code>answer</code> of size <code>m x n</code>.</p>\n<p>The value of each cell <code>(r, c)</code> of the matrix <code>answer</code> is calculated in the following way:</p>\n<ul>\n<li>Let <code>topLeft[r][c]</code> be the number of <strong>distinct</strong> values in the top-left diagonal of the cell <code>(r, c)</code> in the matrix <code>grid</code>.</li>\n<li>Let <code>bottomRight[r][c]</code> be the number of <strong>distinct</strong> values in the bottom-right diagonal of the cell <code>(r, c)</code> in the matrix <code>grid</code>.</li>\n</ul>\n<p>Then <code>answer[r][c] = |topLeft[r][c] - bottomRight[r][c]|</code>.</p>\n<p>Return <em>the matrix</em> <code>answer</code>.</p>\n<p>A <strong>matrix diagonal</strong> is a diagonal line of cells starting from some cell in either the topmost row or leftmost column and going in the bottom-right direction until reaching the matrix\'s end.</p>\n<p>A cell <code>(r<sub>1</sub>, c<sub>1</sub>)</code> belongs to the top-left diagonal of the cell <code>(r, c)</code>, if both belong to the same diagonal and <code>r<sub>1</sub> &lt; r</code>. Similarly is defined bottom-right diagonal.</p>\n<p> </p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2023/04/19/ex2.png\" style=\"width:786px;height:121px\"/>\n<pre><strong>\nInput:</strong> grid = [[1,2,3],[3,1,5],[3,2,1]]\n<strong>Output:</strong> [[1,1,0],[1,0,1],[0,1,1]]\n<strong>Explanation:</strong> The 1<sup>st</sup> diagram denotes the initial grid. \nThe 2<sup>nd</sup> diagram denotes a grid for cell (0,0), where blue-colored cells are cells on its bottom-right diagonal.\nThe 3<sup>rd</sup> diagram denotes a grid for cell (1,2), where red-colored cells are cells on its top-left diagonal.\nThe 4<sup>th</sup> diagram denotes a grid for cell (1,1), where blue-colored cells are cells on its bottom-right diagonal and red-colored cells are cells on its top-left diagonal.\n- The cell (0,0) contains [1,1] on its bottom-right diagonal and [] on its top-left diagonal. The answer is |1 - 0| = 1.\n- The cell (1,2) contains [] on its bottom-right diagonal and [2] on its top-left diagonal. The answer is |0 - 1| = 1.\n- The cell (1,1) contains [1] on its bottom-right diagonal and [1] on its top-left diagonal. The answer is |1 - 1| = 0.\nThe answers of other cells are similarly calculated.\n</pre>\n<p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> grid = [[1]]\n<strong>Output:</strong> [[0]]\n<strong>Explanation:</strong> - The cell (0,0) contains [] on its bottom-right diagonal and [] on its top-left diagonal. The answer is |0 - 0| = 0.\n</pre>\n<p> </p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li><code>m == grid.length</code></li>\n<li><code>n == grid[i].length</code></li>\n<li><code>1 &lt;= m, n, grid[i][j] &lt;= 50</code></li>\n</ul>\n</div', '[[1,1,0],[1,0,1],[0,1,1]]\n<strong>', '</strong> The 1<sup>st</sup> diagram denotes the initial grid. \nThe 2<sup>nd</sup> diagram denotes a grid for cell (0,0), where blue-colored cells are cells on its bottom-right diagonal.\nThe 3<sup>rd</sup> diagram denotes a grid for cell (1,2), where red-colored cells are cells on its top-left diagonal.\nThe 4<sup>th</sup> diagram denotes a grid for cell (1,1), where blue-colored cells are cells on its bottom-right diagonal and red-colored cells are cells on its top-left diagonal.\n- The cell (0,0) contains [1,1] on its bottom-right diagonal and [] on its top-left diagonal. The answer is |1 - 0| = 1.\n- The cell (1,2) contains [] on its bottom-right diagonal and [2] on its top-left diagonal. The answer is |0 - 1| = 1.\n- The cell (1,1) contains [1] on its bottom-right diagonal and [1] on its top-left diagonal. The answer is |1 - 1| = 0.\nThe answers of other cells are similarly calculated.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5028', '2186', '1', 's = \"0011\"', '2', 'Apply the second operation with <code>i = 2</code> to obtain <code>s = \"0000\" for a cost of 2</code>. It can be shown that 2 is the minimum cost to make all characters equal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5029', '2186', '2', 's = \"010101\"', '9', 'Apply the first operation with i = 2 to obtain s = \"101101\" for a cost of 3.\nApply the first operation with i = 1 to obtain s = \"011101\" for a cost of 2. \nApply the first operation with i = 0 to obtain s = \"111101\" for a cost of 1. \nApply the second operation with i = 4 to obtain s = \"111110\" for a cost of 2.\nApply the second operation with i = 5 to obtain s = \"111111\" for a cost of 1. \nThe total cost to make all characters equal is 9. It can be shown that 9 is the minimum cost to make all characters equal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5030', '2187', '1', 'mat = [[3,1],[3,4]]', '2', 'The image shows how we can visit 2 cells starting from row 1, column 2. It can be shown that we cannot visit more than 2 cells no matter where we start from, so the answer is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5031', '2187', '2', 'mat = [[1,1],[1,1]]', '1', 'Since the cells must be strictly increasing, we can only visit one cell in this example.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5032', '2187', '3', 'mat = [[3,1,6],[-9,5,7]]', '4', 'The image above shows how we can visit 4 cells starting from row 2, column 1. It can be shown that we cannot visit more than 4 cells no matter where we start from, so the answer is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5033', '2188', '1', 'fn = (x) =&gt; x * 5, args = [2], t = 20, cancelTime = 50', '[{\"time\": 20, \"returned\": 10}]', 'const cancel = cancellable(fn, [2], 20); // fn(2) called at t=20ms\nsetTimeout(cancel, 50);\n\nthe cancelTime (50ms) is after the delay time (20ms), so fn(2) should be called at t=20ms. The value returned from fn is 10.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5034', '2188', '2', 'fn = (x) =&gt; x**2, args = [2], t = 100, cancelTime = 50', '[]', 'fn(2) was never called because cancelTime (50ms) is before the delay time (100ms).');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5035', '2188', '3', 'fn = (x1, x2) =&gt; x1 * x2, args = [2,4], t = 30, cancelTime = 100', '[{\"time\": 30, \"returned\": 8}]', 'fn(2, 4) was called at t=30ms because cancelTime &gt; t.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5036', '2189', '1', 's = \"aaabc\"', '3', 'In this example, s is \"aaabc\". We can start by selecting the character \'a\' at index 1. We then remove the closest \'a\' to the left of index 1, which is at index 0, and the closest \'a\' to the right of index 1, which is at index 2. After this operation, the string becomes \"abc\". Any further operation we perform on the string will leave it unchanged. Therefore, the length of the minimized string is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5037', '2189', '2', 's = \"cbbd\"', '3', 'For this we can start with character \'b\' at index 1. There is no occurrence of \'b\' to the left of index 1, but there is one to the right at index 2, so we delete the \'b\' at index 2. The string becomes \"cbd\" and further operations will leave it unchanged. Hence, the minimized length is 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5038', '2189', '3', 's = \"dddaaa\"', '2', 'For this, we can start with the character \'d\' at index 1. The closest occurrence of a \'d\' to its left is at index 0, and the closest occurrence of a \'d\' to its right is at index 2. We delete both index 0 and 2, so the string becomes \"daaa\". In the new string, we can select the character \'a\' at index 2. The closest occurrence of an \'a\' to its left is at index 1, and the closest occurrence of an \'a\' to its right is at index 3. We delete both of them, and the string becomes \"da\". We cannot minimize this further, so the minimized length is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5039', '2190', '1', 'nums = [2,1,4,3]', '2', 'We can make the permutation semi-ordered using these sequence of operations: \n1 - swap i = 0 and j = 1. The permutation becomes [1,2,4,3].\n2 - swap i = 2 and j = 3. The permutation becomes [1,2,3,4].\nIt can be proved that there is no sequence of less than two operations that make nums a semi-ordered permutation.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5040', '2190', '2', 'nums = [2,4,1,3]', '3', 'We can make the permutation semi-ordered using these sequence of operations:\n1 - swap i = 1 and j = 2. The permutation becomes [2,1,4,3].\n2 - swap i = 0 and j = 1. The permutation becomes [1,2,4,3].\n3 - swap i = 2 and j = 3. The permutation becomes [1,2,3,4].\nIt can be proved that there is no sequence of less than three operations that make nums a semi-ordered permutation.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5041', '2190', '3', 'nums = [1,3,4,2,5]', '0', 'The permutation is already a semi-ordered permutation.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5042', '2191', '1', 'n = 3, queries = [[0,0,1],[1,2,2],[0,2,3],[1,0,4]]', '23', 'The image above describes the matrix after each query. The sum of the matrix after all queries are applied is 23.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5043', '2191', '2', 'n = 3, queries = [[0,0,4],[0,1,2],[1,0,1],[0,2,3],[1,2,1]]', '17', 'The image above describes the matrix after each query. The sum of the matrix after all queries are applied is 17.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5044', '2192', '1', 'num1 = \"1\", num2 = \"12\", <code>min_sum</code> = 1, max_sum = 8', '11', 'There are 11 integers whose sum of digits lies between 1 and 8 are 1,2,3,4,5,6,7,8,10,11, and 12. Thus, we return 11.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5045', '2192', '2', 'num1 = \"1\", num2 = \"5\", <code>min_sum</code> = 1, max_sum = 5', '5', 'The 5 integers whose sum of digits lies between 1 and 5 are 1,2,3,4, and 5. Thus, we return 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5046', '2193', '1', 'functions = [\n  () =&gt; new Promise(resolve =&gt; setTimeout(() =&gt; resolve(5), 200))\n]', '{\"t\": 200, \"resolved\": [5]}', 'promiseAll(functions).then(console.log); // [5]\n\nThe single function was resolved at 200ms with a value of 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5047', '2193', '2', 'functions = [\n    () =&gt; new Promise(resolve =&gt; setTimeout(() =&gt; resolve(1), 200)), \n    () =&gt; new Promise((resolve, reject) =&gt; setTimeout(() =&gt; reject(\"Error\"), 100))\n]', '{\"t\": 100, \"rejected\": \"Error\"}', 'Since one of the promises rejected, the returned promise also rejected with the same error at the same time.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5048', '2193', '3', 'functions = [\n    () =&gt; new Promise(resolve =&gt; setTimeout(() =&gt; resolve(4), 50)), \n    () =&gt; new Promise(resolve =&gt; setTimeout(() =&gt; resolve(10), 150)), \n    () =&gt; new Promise(resolve =&gt; setTimeout(() =&gt; resolve(16), 100))\n]', '{\"t\": 150, \"resolved\": [4, 10, 16]}', 'All the promises resolved with a value. The returned promise resolved when the last promise resolved.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5049', '2194', '1', 'arr1 = [\n    {\"id\": 1, \"x\": 1},\n    {\"id\": 2, \"x\": 9}\n], \narr2 = [\n    {\"id\": 3, \"x\": 5}\n]', '[\n    {\"id\": 1, \"x\": 1},\n    {\"id\": 2, \"x\": 9},\n    {\"id\": 3, \"x\": 5}\n]', 'There are no duplicate ids so arr1 is simply concatenated with arr2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5050', '2194', '2', 'arr1 = [\n    {\"id\": 1, \"x\": 2, \"y\": 3},\n    {\"id\": 2, \"x\": 3, \"y\": 6}\n], \narr2 = [\n    {\"id\": 2, \"x\": 10, \"y\": 20},\n    {\"id\": 3, \"x\": 0, \"y\": 0}\n]', '[\n    {\"id\": 1, \"x\": 2, \"y\": 3},\n    {\"id\": 2, \"x\": 10, \"y\": 20},\n    {\"id\": 3, \"x\": 0, \"y\": 0}\n]', 'The two objects with id=1 and id=3 are included in the result array without modifiction. The two objects with id=2 are merged together. The keys from arr2 override the values in arr1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5051', '2194', '3', 'arr1 = [\n    {\"id\": 1, \"b\": {\"b\": 94},\"v\": [4, 3], \"y\": 48}\n]\narr2 = [\n    {\"id\": 1, \"b\": {\"c\": 84}, \"v\": [1, 3]}\n]', '[\n    {\"id\": 1, \"b\": {\"c\": 84}, \"v\": [1, 3], \"y\": 48}\n]', 'The two objects with id=1 are merged together. For the keys \"b\" and \"v\" the values from arr2 are used. Since the key \"y\" only exists in arr1, that value is taken form arr1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5052', '2195', '1', 'promise1 = new Promise(resolve =&gt; setTimeout(() =&gt; resolve(2), 20)), \npromise2 = new Promise(resolve =&gt; setTimeout(() =&gt; resolve(5), 60))', '7', 'The two input promises resolve with the values of 2 and 5 respectively. The returned promise should resolve with a value of 2 + 5 = 7. The time the returned promise resolves is not judged for this problem.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5053', '2195', '2', 'promise1 = new Promise(resolve =&gt; setTimeout(() =&gt; resolve(10), 50)), \npromise2 = new Promise(resolve =&gt; setTimeout(() =&gt; resolve(-12), 30))', '-2', 'The two input promises resolve with the values of 10 and -12 respectively. The returned promise should resolve with a value of 10 + -12 = -2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5054', '2196', '1', 'arr = [5, 4, 1, 2, 3], fn = (x) =&gt; x', '[1, 2, 3, 4, 5]', 'fn simply returns the number passed to it so the array is sorted in ascending order.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5055', '2196', '2', 'arr = [{\"x\": 1}, {\"x\": 0}, {\"x\": -1}], fn = (d) =&gt; d.x', '[{\"x\": -1}, {\"x\": 0}, {\"x\": 1}]', 'fn returns the value for the \"x\" key. So the array is sorted based on that value.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5056', '2196', '3', 'arr = [[3, 4], [5, 2], [10, 1]], fn = (x) =&gt; x[1]', '[[10, 1], [5, 2], [3, 4]]', 'arr is sorted in ascending order by number at index=1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5057', '2197', '1', 'fn = (x) =&gt; x * 2, args = [4], t = 20, cancelT = 110', '[\n   {\"time\": 0, \"returned\": 8},\n   {\"time\": 20, \"returned\": 8},\n   {\"time\": 40, \"returned\": 8},\n   {\"time\": 60, \"returned\": 8},\n   {\"time\": 80, \"returned\": 8},\n   {\"time\": 100, \"returned\": 8}\n]', 'Every 20ms, fn(4) is called. Until t=110ms, then it is cancelled.\n\nconst cancel = cancellable(x =&gt; x * 2, [4], 20);\nsetTimeout(cancel, 110);\n\n1st fn call is at 0ms. fn(4) returns 8.\n2nd fn call is at 20ms. fn(4) returns 8.\n3rd fn call is at 40ms. fn(4) returns 8.\n4th fn call is at 60ms. fn(4) returns 8.\n5th fn call is at 80ms. fn(4) returns 8.\n6th fn call is at 100ms. fn(4) returns 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5058', '2197', '2', 'fn = (x1, x2) =&gt; (x1 * x2), args = [2, 5], t = 25, cancelT = 140', '[\n   {\"time\": 0, \"returned\": 10},\n   {\"time\": 25, \"returned\": 10},\n   {\"time\": 50, \"returned\": 10},\n   {\"time\": 75, \"returned\": 10},\n   {\"time\": 100, \"returned\": 10},\n   {\"time\": 125, \"returned\": 10}\n]', 'Every 25ms, fn(2, 5) is called. Until t=140ms, then it is cancelled.\n1st fn call is at 0ms \n2nd fn call is at 25ms \n3rd fn call is at 50ms \n4th fn call is at 75ms \n5th fn call is at 100ms \n6th fn call is at 125ms\nCancelled at 140ms');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5059', '2197', '3', 'fn = (x1, x2, x3) =&gt; (x1 + x2 + x3), args = [5, 1, 3], t = 50, cancelT = 180', '[\n   {\"time\": 0, \"returned\": 9},\n   {\"time\": 50, \"returned\": 9},\n   {\"time\": 100, \"returned\": 9},\n   {\"time\": 150, \"returned\": 9}\n]', 'Every 50ms, fn(5, 1, 3) is called. Until t=180ms, then it is cancelled. \n1st fn call is at 0ms\n2nd fn call is at 50ms\n3rd fn call is at 100ms\n4th fn call is at 150ms\nCancelled at 180ms');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5060', '2198', '1', 'actions = [\"Calculator\", \"add\", \"subtract\", \"getResult\"], values = [10, 5, 7]', '8', 'new Calculator(10).add(5).subtract(7).getResult() // 10 + 5 - 7 = 8');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5061', '2198', '2', 'actions = [\"Calculator\", \"multiply\", \"power\", \"getResult\"], values = [2, 5, 2]', '100', 'new Calculator(2).multiply(5).power(2).getResult() // (2 * 5) ^ 2 = 100');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5062', '2198', '3', 'actions = [\"Calculator\", \"divide\", \"getResult\"], values = [20, 0]', '\"Division by zero is not allowed\"', 'new Calculator(20).divide(0).getResult() // 20 / 0 \n\nThe error should be thrown because we cannot divide by zero.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5063', '2199', '1', 'obj = {\"x\": 5, \"y\": 42}', 'false', 'The object has 2 key-value pairs so it is not empty.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5064', '2199', '2', 'obj = {}', 'true', 'The object doesn\'t have any key-value pairs so it is empty.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5065', '2199', '3', 'obj = [null, false, 0]', 'false', 'The array has 3 elements so it is not empty.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5066', '2200', '1', 'n = 192', 'true', 'We concatenate the numbers n = 192 and 2 * n = 384 and 3 * n = 576. The resulting number is 192384576. This number contains all the digits from 1 to 9 exactly once.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5067', '2200', '2', 'n = 100', 'false', 'We concatenate the numbers n = 100 and 2 * n = 200 and 3 * n = 300. The resulting number is 100200300. This number does not satisfy any of the conditions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5068', '2201', '1', 's = \"52233\"', '4', 'The longest semi-repetitive substring is \"5223\", which starts at i = 0 and ends at j = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5069', '2201', '2', 's = \"5494\"', '4', 's is a semi-reptitive string, so the answer is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5070', '2201', '3', 's = \"1111111\"', '2', 'The longest semi-repetitive substring is \"11\", which starts at i = 0 and ends at j = 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5071', '2202', '1', 'nums = [-2,0,2], s = \"RLL\", d = 3', '8', 'After 1 second, the positions are [-1,-1,1]. Now, the robot at index 0 will move left, and the robot at index 1 will move right.\nAfter 2 seconds, the positions are [-2,0,0]. Now, the robot at index 1 will move left, and the robot at index 2 will move right.\nAfter 3 seconds, the positions are [-3,-1,1].\nThe distance between the robot at index 0 and 1 is abs(-3 - (-1)) = 2.\nThe distance between the robot at index 0 and 2 is abs(-3 - 1) = 4.\nThe distance between the robot at index 1 and 2 is abs(-1 - 1) = 2.\nThe sum of the pairs of all distances = 2 + 4 + 2 = 8.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5072', '2202', '2', 'nums = [1,0], s = \"RL\", d = 2', '5', 'After 1 second, the positions are [2,-1].\nAfter 2 seconds, the positions are [3,-2].\nThe distance between the two robots is abs(-2 - 3) = 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5073', '2203', '1', 'grid = [[0,1,1,0],[0,0,0,1],[1,1,1,1]]', '[0,1]', 'We can choose the 0<sup>th</sup> and 1<sup>st</sup> rows to create a good subset of rows.\nThe length of the chosen subset is 2.\n- The sum of the 0<sup>th</sup> column is 0 + 0 = 0, which is at most half of the length of the subset.\n- The sum of the 1<sup>st</sup> column is 1 + 0 = 1, which is at most half of the length of the subset.\n- The sum of the 2<sup>nd</sup> column is 1 + 0 = 1, which is at most half of the length of the subset.\n- The sum of the 3<sup>rd</sup> column is 0 + 1 = 1, which is at most half of the length of the subset.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5074', '2203', '2', 'grid = [[0]]', '[0]', 'We can choose the 0<sup>th</sup> row to create a good subset of rows.\nThe length of the chosen subset is 1.\n- The sum of the 0<sup>th</sup> column is 0, which is at most half of the length of the subset.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5075', '2203', '3', 'grid = [[1,1,1],[1,1,1]]', '[]', 'It is impossible to choose any subset of rows to create a good subset.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5076', '2204', '1', 'nums = [3,2,1,4]', '2', 'In this example, the minimum value is 1 and the maximum value is 4. Therefore, either 2 or 3 can be valid answers.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5077', '2204', '2', 'nums = [1,2]', '-1', 'Since there is no number in nums that is neither the maximum nor the minimum, we cannot select a number that satisfies the given condition. Therefore, there is no answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5078', '2204', '3', 'nums = [2,1,3]', '2', 'Since 2 is neither the maximum nor the minimum value in nums, it is the only valid answer.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5079', '2206', '1', 'nums = [20,1,15], x = 5', '13', 'Initially, the chocolate types are [0,1,2]. We will buy the 1<sup>st</sup> type of chocolate at a cost of 1.\nNow, we will perform the operation at a cost of 5, and the types of chocolates will become [1,2,0]. We will buy the 2<sup>nd</sup><sup> </sup>type of chocolate at a cost of 1.\nNow, we will again perform the operation at a cost of 5, and the chocolate types will become [2,0,1]. We will buy the 0<sup>th </sup>type of chocolate at a cost of 1. \nThus, the total cost will become (1 + 5 + 1 + 5 + 1) = 13. We can prove that this is optimal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5080', '2206', '2', 'nums = [1,2,3], x = 4', '6', 'We will collect all three types of chocolates at their own price without performing any operations. Therefore, the total cost is 1 + 2 + 3 = 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5081', '2207', '1', 'nums1 = [4,3,1,2], nums2 = [2,4,9,5], queries = [[4,1],[1,3],[2,5]]', '[6,10,7]', 'For the 1st query <code node=\"[object Object]\">x<sub>i</sub> = 4</code> and <code node=\"[object Object]\">y<sub>i</sub> = 1</code>, we can select index <code node=\"[object Object]\">j = 0</code> since <code node=\"[object Object]\">nums1[j] &gt;= 4</code> and <code node=\"[object Object]\">nums2[j] &gt;= 1</code>. The sum <code node=\"[object Object]\">nums1[j] + nums2[j]</code> is 6, and we can show that 6 is the maximum we can obtain.\n\nFor the 2nd query <code node=\"[object Object]\">x<sub>i</sub> = 1</code> and <code node=\"[object Object]\">y<sub>i</sub> = 3</code>, we can select index <code node=\"[object Object]\">j = 2</code> since <code node=\"[object Object]\">nums1[j] &gt;= 1</code> and <code node=\"[object Object]\">nums2[j] &gt;= 3</code>. The sum <code node=\"[object Object]\">nums1[j] + nums2[j]</code> is 10, and we can show that 10 is the maximum we can obtain. \n\nFor the 3rd query <code node=\"[object Object]\">x<sub>i</sub> = 2</code> and <code node=\"[object Object]\">y<sub>i</sub> = 5</code>, we can select index <code node=\"[object Object]\">j = 3</code> since <code node=\"[object Object]\">nums1[j] &gt;= 2</code> and <code node=\"[object Object]\">nums2[j] &gt;= 5</code>. The sum <code node=\"[object Object]\">nums1[j] + nums2[j]</code> is 7, and we can show that 7 is the maximum we can obtain.\n\nTherefore, we return <code node=\"[object Object]\">[6,10,7]</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5082', '2207', '2', 'nums1 = [3,2,5], nums2 = [2,3,4], queries = [[4,4],[3,2],[1,1]]', '[9,9,9]', 'For this example, we can use index <code node=\"[object Object]\">j = 2</code> for all the queries since it satisfies the constraints for each query.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5083', '2207', '3', 'nums1 = [2,1], nums2 = [2,3], queries = [[3,3]]', '[-1]', 'There is one query in this example with <code node=\"[object Object]\">x<sub>i</sub></code> = 3 and <code node=\"[object Object]\">y<sub>i</sub></code> = 3. For every index, j, either nums1[j] &lt; <code node=\"[object Object]\">x<sub>i</sub></code> or nums2[j] &lt; <code node=\"[object Object]\">y<sub>i</sub></code>. Hence, there is no solution.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5084', '2208', '1', 'mainTank = 5, additionalTank = 10', '60', 'After spending 5 litre of fuel, fuel remaining is (5 - 5 + 1) = 1 litre and distance traveled is 50km.\nAfter spending another 1 litre of fuel, no fuel gets injected in the main tank and the main tank becomes empty.\nTotal distance traveled is 60km.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5085', '2208', '2', 'mainTank = 1, additionalTank = 2', '10', 'After spending 1 litre of fuel, the main tank becomes empty.\nTotal distance traveled is 10km.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5086', '2209', '1', 'nums = [1,3,2,4]', '1', 'We can partition the array nums into nums1 = [1,2] and nums2 = [3,4].\n- The maximum element of the array nums1 is equal to 2.\n- The minimum element of the array nums2 is equal to 3.\nThe value of the partition is |2 - 3| = 1. \nIt can be proven that 1 is the minimum value out of all partitions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5087', '2209', '2', 'nums = [100,1,10]', '9', 'We can partition the array nums into nums1 = [10] and nums2 = [100,1].\n- The maximum element of the array nums1 is equal to 10.\n- The minimum element of the array nums2 is equal to 1.\nThe value of the partition is |10 - 1| = 9.\nIt can be proven that 9 is the minimum value out of all partitions.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5088', '2210', '1', 'nums = [2,3,6]', '2', '[3,6,2] and [2,6,3] are the two special permutations of nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5089', '2210', '2', 'nums = [1,4,3]', '2', '[3,1,4] and [4,1,3] are the two special permutations of nums.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5090', '2211', '1', 'cost = [1,2,3,2], time = [1,2,3,2]', '3', 'The walls at index 0 and 1 will be painted by the paid painter, and it will take 3 units of time; meanwhile, the free painter will paint the walls at index 2 and 3, free of cost in 2 units of time. Thus, the total cost is 1 + 2 = 3.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5091', '2211', '2', 'cost = [2,3,4,2], time = [1,1,1,1]', '4', 'The walls at index 0 and 3 will be painted by the paid painter, and it will take 2 units of time; meanwhile, the free painter will paint the walls at index 1 and 2, free of cost in 2 units of time. Thus, the total cost is 2 + 2 = 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5092', '2212', '1', 'words = [\"cd\",\"ac\",\"dc\",\"ca\",\"zz\"]', '2', 'In this example, we can form 2 pair of strings in the following way:\n- We pair the 0<sup>th</sup> string with the 2<sup>nd</sup> string, as the reversed string of word[0] is \"dc\" and is equal to words[2].\n- We pair the 1<sup>st</sup> string with the 3<sup>rd</sup> string, as the reversed string of word[1] is \"ca\" and is equal to words[3].\nIt can be proven that 2 is the maximum number of pairs that can be formed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5093', '2212', '2', 'words = [\"ab\",\"ba\",\"cc\"]', '1', 'In this example, we can form 1 pair of strings in the following way:\n- We pair the 0<sup>th</sup> string with the 1<sup>st</sup> string, as the reversed string of words[1] is \"ab\" and is equal to words[0].\nIt can be proven that 1 is the maximum number of pairs that can be formed.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5094', '2212', '3', 'words = [\"aa\",\"ab\"]', '0', 'In this example, we are unable to form any pair of strings.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5095', '2213', '1', 'x = 2, y = 5, z = 1', '12', 'We can concactenate the strings \"BB\", \"AA\", \"BB\", \"AA\", \"BB\", and \"AB\" in that order. Then, our new string is \"BBAABBAABBAB\". \nThat string has length 12, and we can show that it is impossible to construct a string of longer length.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5096', '2213', '2', 'x = 3, y = 2, z = 2', '14', 'We can concactenate the strings \"AB\", \"AB\", \"AA\", \"BB\", \"AA\", \"BB\", and \"AA\" in that order. Then, our new string is \"ABABAABBAABBAA\". \nThat string has length 14, and we can show that it is impossible to construct a string of longer length.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5097', '2214', '1', 'words = [\"aa\",\"ab\",\"bc\"]', '4', 'In this example, we can perform join operations in the following order to minimize the length of str<sub>2</sub>: \nstr<sub>0</sub> = \"aa\"\nstr<sub>1</sub> = join(str<sub>0</sub>, \"ab\") = \"aab\"\nstr<sub>2</sub> = join(str<sub>1</sub>, \"bc\") = \"aabc\" \nIt can be shown that the minimum possible length of str<sub>2</sub> is 4.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5098', '2214', '2', 'words = [\"ab\",\"b\"]', '2', 'In this example, str<sub>0</sub> = \"ab\", there are two ways to get str<sub>1</sub>: \njoin(str<sub>0</sub>, \"b\") = \"ab\" or join(\"b\", str<sub>0</sub>) = \"bab\". \nThe first string, \"ab\", has the minimum length. Hence, the answer is 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5099', '2214', '3', 'words = [\"aaa\",\"c\",\"aba\"]', '6', 'In this example, we can perform join operations in the following order to minimize the length of str<sub>2</sub>: \nstr<sub>0</sub> = \"aaa\"\nstr<sub>1</sub> = join(str<sub>0</sub>, \"c\") = \"aaac\"\nstr<sub>2</sub> = join(\"aba\", str<sub>1</sub>) = \"abaaac\"\nIt can be shown that the minimum possible length of str<sub>2</sub> is 6.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5100', '2215', '1', 'n = 3, logs = [[1,3],[2,6],[1,5]], x = 5, queries = [10,11]', '[1,2]', 'For queries[0]: The servers with ids 1 and 2 get requests in the duration of [5, 10]. Hence, only server 3 gets zero requests.\nFor queries[1]: Only the server with id 2 gets a request in duration of [6,11]. Hence, the servers with ids 1 and 3 are the only servers that do not receive any requests during that time period.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5101', '2215', '2', 'n = 3, logs = [[2,4],[2,1],[1,2],[3,1]], x = 2, queries = [3,4]', '[0,1]', 'For queries[0]: All servers get at least one request in the duration of [1, 3].\nFor queries[1]: Only server with id 3 gets no request in the duration [2,4].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5102', '2216', '1', 'nums = [2,5,1,4]', '5', 'There are 5 beautiful pairs in nums:\nWhen i = 0 and j = 1: the first digit of nums[0] is 2, and the last digit of nums[1] is 5. We can confirm that 2 and 5 are coprime, since gcd(2,5) == 1.\nWhen i = 0 and j = 2: the first digit of nums[0] is 2, and the last digit of nums[2] is 1. Indeed, gcd(2,1) == 1.\nWhen i = 1 and j = 2: the first digit of nums[1] is 5, and the last digit of nums[2] is 1. Indeed, gcd(5,1) == 1.\nWhen i = 1 and j = 3: the first digit of nums[1] is 5, and the last digit of nums[3] is 4. Indeed, gcd(5,4) == 1.\nWhen i = 2 and j = 3: the first digit of nums[2] is 1, and the last digit of nums[3] is 4. Indeed, gcd(1,4) == 1.\nThus, we return 5.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5103', '2216', '2', 'nums = [11,21,12]', '2', 'There are 2 beautiful pairs:\nWhen i = 0 and j = 1: the first digit of nums[0] is 1, and the last digit of nums[1] is 1. Indeed, gcd(1,1) == 1.\nWhen i = 0 and j = 2: the first digit of nums[0] is 1, and the last digit of nums[2] is 2. Indeed, gcd(1,2) == 1.\nThus, we return 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5104', '2217', '1', 'num1 = 3, num2 = -2', '3', 'We can make 3 equal to 0 with the following operations:\n- We choose i = 2 and substract 2<sup>2</sup> + (-2) from 3, 3 - (4 + (-2)) = 1.\n- We choose i = 2 and substract 2<sup>2</sup> + (-2) from 1, 1 - (4 + (-2)) = -1.\n- We choose i = 0 and substract 2<sup>0</sup> + (-2) from -1, (-1) - (1 + (-2)) = 0.\nIt can be proven, that 3 is the minimum number of operations that we need to perform.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5105', '2217', '2', 'num1 = 5, num2 = 7', '-1', 'It can be proven, that it is impossible to make 5 equal to 0 with the given operation.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5106', '2218', '1', 'nums = [0,1,0,0,1]', '3', 'There are 3 ways to split nums into good subarrays:\n- [0,1] [0,0,1]\n- [0,1,0] [0,1]\n- [0,1,0,0] [1]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5107', '2218', '2', 'nums = [0,1,0]', '1', 'There is 1 way to split nums into good subarrays:\n- [0,1,0]');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5108', '2219', '1', 'positions = [5,4,3,2,1], healths = [2,17,9,15,10], directions = \"RRRRR\"', '[2,17,9,15,10]', 'No collision occurs in this example, since all robots are moving in the same direction. So, the health of the robots in order from the first robot is returned, [2, 17, 9, 15, 10].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5109', '2219', '2', 'positions = [3,5,2,6], healths = [10,10,15,12], directions = \"RLRL\"', '[14]', 'There are 2 collisions in this example. Firstly, robot 1 and robot 2 will collide, and since both have the same health, they will be removed from the line. Next, robot 3 and robot 4 will collide and since robot 4\'s health is smaller, it gets removed, and robot 3\'s health becomes 15 - 1 = 14. Only robot 3 remains, so we return [14].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5110', '2219', '3', 'positions = [1,2,5,6], healths = [10,10,11,11], directions = \"RLRL\"', '[]', 'Robot 1 and robot 2 will collide and since both have the same health, they are both removed. Robot 3 and 4 will collide and since both have the same health, they are both removed. So, we return an empty array, [].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5111', '2007', '1', 'strs = [\"alic3\",\"bob\",\"3\",\"4\",\"00000\"]', '5', '- \"alic3\" consists of both letters and digits, so its value is its length, i.e. 5.\n- \"bob\" consists only of letters, so its value is also its length, i.e. 3.\n- \"3\" consists only of digits, so its value is its numeric equivalent, i.e. 3.\n- \"4\" also consists only of digits, so its value is 4.\n- \"00000\" consists only of digits, so its value is 0.\nHence, the maximum value is 5, of \"alic3\".');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5112', '2007', '2', 'strs = [\"1\",\"01\",\"001\",\"0001\"]', '1', 'Each string in the array has value 1. Hence, we return 1.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5113', '2025', '1', 'price = [13,5,1,8,21,2], k = 3', '8', 'Choose the candies with the prices [13,5,21].\nThe tastiness of the candy basket is: min(|13 - 5|, |13 - 21|, |5 - 21|) = min(8, 8, 16) = 8.\nIt can be proven that 8 is the maximum tastiness that can be achieved.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5114', '2025', '2', 'price = [1,3,1], k = 2', '2', 'Choose the candies with the prices [1,3].\nThe tastiness of the candy basket is: min(|1 - 3|) = min(2) = 2.\nIt can be proven that 2 is the maximum tastiness that can be achieved.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5115', '2025', '3', 'price = [7,7,7,7], k = 2', '0', 'Choosing any two distinct candies from the candies we have will result in a tastiness of 0.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5116', '2044', '1', 'nums1 = [4,3,1,4], nums2 = [1,3,7,1], k = 3', '2', 'In 2 operations, we can transform nums1 to nums2.\n1<sup>st</sup> operation: i = 2, j = 0. After applying the operation, nums1 = [1,3,4,4].\n2<sup>nd</sup> operation: i = 2, j = 3. After applying the operation, nums1 = [1,3,7,1].\nOne can prove that it is impossible to make arrays equal in fewer operations.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5117', '2044', '2', 'nums1 = [3,8,5,2], nums2 = [2,4,1,6], k = 1', '-1', 'It can be proved that it is impossible to make the two arrays equal.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5118', '2110', '1', 'n = 4, p = 0, banned = [1,2], k = 4', '[0,-1,-1,1]', 'In this case <code>k = 4</code> so there is only one possible reverse operation we can perform, which is reversing the whole array. Initially, 1<strong> </strong>is placed at position 0 so the amount of operations we need for position 0 is <code>0</code>. We can never place a 1 on the banned positions, so the answer for positions 1 and 2 is <code>-1</code>. Finally, with one reverse operation we can bring the 1 to index 3, so the answer for position 3 is <code>1</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5119', '2110', '2', 'n = 5, p = 0, banned = [2,4], k = 3', '[0,-1,-1,-1,-1]', 'In this case the 1 is initially at position 0, so the answer for that position is <code>0</code>. We can perform reverse operations of size 3. The 1 is currently located at position 0, so we need to reverse the subarray <code>[0, 2]</code> for it to leave that position, but reversing that subarray makes position 2 have a 1, which shouldn\'t happen. So, we can\'t move the 1 from position 0, making the result for all the other positions <code>-1</code>.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5120', '2110', '3', 'n = 4, p = 2, banned = [0,1,3], k = 1', '[-1,-1,0,-1]', 'In this case we can only perform reverse operations of size 1.<strong> </strong>So the 1 never changes its position.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5121', '2126', '1', 'getInputs = () =&gt; [[2,2],[2,2],[1,2]]\nfn = function (a, b) { return a + b; }', '[{\"val\":4,\"calls\":1},{\"val\":4,\"calls\":1},{\"val\":3,\"calls\":2}]', 'const inputs = getInputs();\nconst memoized = memoize(fn);\nfor (const arr of inputs) {\n  memoized(...arr);\n}\n\nFor the inputs of (2, 2): 2 + 2 = 4, and it required a call to fn().\nFor the inputs of (2, 2): 2 + 2 = 4, but those inputs were seen before so no call to fn() was required.\nFor the inputs of (1, 2): 1 + 2 = 3, and it required another call to fn() for a total of 2.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5122', '2126', '2', 'getInputs = () =&gt; [[{},{}],[{},{}],[{},{}]] \nfn = function (a, b) { return ({...a, ...b}); }', '[{\"val\":{},\"calls\":1},{\"val\":{},\"calls\":2},{\"val\":{},\"calls\":3}]', 'Merging two empty objects will always result in an empty object. It may seem like there should only be 1 call to fn() because of cache-hits, however none of those objects are === to each other.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5123', '2126', '3', 'getInputs = () =&gt; { const o = {}; return [[o,o],[o,o],[o,o]]; }\nfn = function (a, b) { return ({...a, ...b}); }', '[{\"val\":{},\"calls\":1},{\"val\":{},\"calls\":1},{\"val\":{},\"calls\":1}]', 'Merging two empty objects will always result in an empty object. The 2nd and 3rd third function calls result in a cache-hit. This is because every object passed in is identical.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5124', '2130', '1', 'fn = async (n) =&gt; { \n  await new Promise(res =&gt; setTimeout(res, 100)); \n  return n * n; \n}\ninputs = [5]\nt = 50', '{\"rejected\":\"Time Limit Exceeded\",\"time\":50}', 'const limited = timeLimit(fn, t)\nconst start = performance.now()\nlet result;\ntry {\n   const res = await limited(...inputs)\n   result = {\"resolved\": res, \"time\": Math.floor(performance.now() - start)};\n} catch (err) {\n   result = {\"rejected\": err, \"time\": Math.floor(performance.now() - start)};\n}\nconsole.log(result) // Output\n\nThe provided function is set to resolve after 100ms. However, the time limit is set to 50ms. It rejects at t=50ms because the time limit was reached.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5125', '2130', '2', 'fn = async (n) =&gt; { \n  await new Promise(res =&gt; setTimeout(res, 100)); \n  return n * n; \n}\ninputs = [5]\nt = 150', '{\"resolved\":25,\"time\":100}', 'The function resolved 5 * 5 = 25 at t=100ms. The time limit is never reached.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5126', '2130', '4', 'fn = async () =&gt; { \n  throw \"Error\";\n}\ninputs = []\nt = 1000', '{\"rejected\":\"Error\",\"time\":0}', 'The function immediately throws an error.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5127', '2138', '1', 'n = 4, edges = [[0,1],[1,2],[1,3]], price = [2,2,10,6], trips = [[0,3],[2,1],[2,3]]', '23', 'The diagram above denotes the tree after rooting it at node 2. The first part shows the initial tree and the second part shows the tree after choosing nodes 0, 2, and 3, and making their price half.\nFor the 1<sup>st</sup> trip, we choose path [0,1,3]. The price sum of that path is 1 + 2 + 3 = 6.\nFor the 2<sup>nd</sup> trip, we choose path [2,1]. The price sum of that path is 2 + 5 = 7.\nFor the 3<sup>rd</sup> trip, we choose path [2,1,3]. The price sum of that path is 5 + 2 + 3 = 10.\nThe total price sum of all trips is 6 + 7 + 10 = 23.\nIt can be proven, that 23 is the minimum answer that we can achieve.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5128', '2138', '2', 'n = 2, edges = [[0,1]], price = [2,2], trips = [[0,0]]', '1', 'The diagram above denotes the tree after rooting it at node 0. The first part shows the initial tree and the second part shows the tree after choosing node 0, and making its price half.\nFor the 1<sup>st</sup> trip, we choose path [0]. The price sum of that path is 1.\nThe total price sum of all trips is 1. It can be proven, that 1 is the minimum answer that we can achieve.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5129', '2175', '1', 'n = 10', '182', 'There are exactly 3 integers i that satisfy the conditions in the statement:\n- 1 since 1 * 1 = 1\n- 9 since 9 * 9 = 81 and 81 can be partitioned into 8 + 1.\n- 10 since 10 * 10 = 100 and 100 can be partitioned into 10 + 0.\nHence, the punishment number of 10 is 1 + 81 + 100 = 182');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5130', '2175', '2', 'n = 37', '1478', 'There are exactly 4 integers i that satisfy the conditions in the statement:\n- 1 since 1 * 1 = 1. \n- 9 since 9 * 9 = 81 and 81 can be partitioned into 8 + 1. \n- 10 since 10 * 10 = 100 and 100 can be partitioned into 10 + 0. \n- 36 since 36 * 36 = 1296 and 1296 can be partitioned into 1 + 29 + 6.\nHence, the punishment number of 37 is 1 + 81 + 100 + 1296 = 1478');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5131', '2205', '1', 's = \"cbabc\"', '\"baabc\"', 'We apply the operation on the substring starting at index 0, and ending at index 1 inclusive. \nIt can be proven that the resulting string is the lexicographically smallest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5132', '2205', '2', 's = \"acbbc\"', '\"abaab\"', 'We apply the operation on the substring starting at index 1, and ending at index 4 inclusive. \nIt can be proven that the resulting string is the lexicographically smallest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5133', '2205', '3', 's = \"leetcode\"', '\"kddsbncd\"', 'We apply the operation on the entire string. \nIt can be proven that the resulting string is the lexicographically smallest.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5134', '1974', '1', 'nums = [2,4,0,9,6]', '[9,6,6,-1,-1]', '0th index: 4 is the first integer greater than 2, and 9 is the second integer greater than 2, to the right of 2.\n1st index: 9 is the first, and 6 is the second integer greater than 4, to the right of 4.\n2nd index: 9 is the first, and 6 is the second integer greater than 0, to the right of 0.\n3rd index: There is no integer greater than 9 to its right, so the second greater integer is considered to be -1.\n4th index: There is no integer greater than 6 to its right, so the second greater integer is considered to be -1.\nThus, we return [9,6,6,-1,-1].');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5135', '1974', '2', 'nums = [3,3]', '[-1,-1]', 'We return [-1,-1] since neither integer has any integer greater than it.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5136', '2042', '1', 'n = 6, edges = [[0,1],[1,2],[1,3],[3,4],[3,5]], price = [9,8,7,6,10,5]', '24', 'The diagram above denotes the tree after rooting it at node 2. The first part (colored in red) shows the path with the maximum price sum. The second part (colored in blue) shows the path with the minimum price sum.\n- The first path contains nodes [2,1,3,4]: the prices are [7,8,6,10], and the sum of the prices is 31.\n- The second path contains the node [2] with the price [7].\nThe difference between the maximum and minimum price sum is 24. It can be proved that 24 is the maximum cost.');
INSERT INTO `question_master_detail_coding_temp` VALUES ('5137', '2042', '2', 'n = 3, edges = [[0,1],[1,2]], price = [1,1,1]', '2', 'The diagram above denotes the tree after rooting it at node 0. The first part (colored in red) shows the path with the maximum price sum. The second part (colored in blue) shows the path with the minimum price sum.\n- The first path contains nodes [0,1,2]: the prices are [1,1,1], and the sum of the prices is 3.\n- The second path contains node [0] with a price [1].\nThe difference between the maximum and minimum price sum is 2. It can be proved that 2 is the maximum cost.');
